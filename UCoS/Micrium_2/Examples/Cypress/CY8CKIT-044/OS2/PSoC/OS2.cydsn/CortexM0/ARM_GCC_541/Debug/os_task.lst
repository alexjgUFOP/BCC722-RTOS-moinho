ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"os_task.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.OSTaskChangePrio,"ax",%progbits
  20              		.align	2
  21              		.global	OSTaskChangePrio
  22              		.code	16
  23              		.thumb_func
  24              		.type	OSTaskChangePrio, %function
  25              	OSTaskChangePrio:
  26              	.LFB1:
  27              		.file 1 "..\\..\\..\\..\\..\\..\\Software\\uCOS-II\\Source\\os_task.c"
   1:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** /*
   2:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** ***************************************************************************************************
   3:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                                                uC/OS-II
   4:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                                          The Real-Time Kernel
   5:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                                            TASK MANAGEMENT
   6:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
   7:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                              (c) Copyright 1992-2013, Micrium, Weston, FL
   8:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                                           All Rights Reserved
   9:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
  10:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * File    : OS_TASK.C
  11:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * By      : Jean J. Labrosse
  12:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Version : V2.92.11
  13:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
  14:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * LICENSING TERMS:
  15:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * ---------------
  16:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *   uC/OS-II is provided in source form for FREE evaluation, for educational use or for peaceful re
  17:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * If you plan on using  uC/OS-II  in a commercial product you need to contact Micrium to properly l
  18:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * its use in your product. We provide ALL the source code for your convenience and to help you expe
  19:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * uC/OS-II.   The fact that the  source is provided does  NOT  mean that you can use it without  pa
  20:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * licensing fee.
  21:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** ***************************************************************************************************
  22:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** */
  23:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
  24:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #define  MICRIUM_SOURCE
  25:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
  26:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #ifndef  OS_MASTER_FILE
  27:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #include <ucos_ii.h>
  28:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
  29:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
  30:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** /*$PAGE*/
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 2


  31:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** /*
  32:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** ***************************************************************************************************
  33:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                                      CHANGE PRIORITY OF A TASK
  34:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
  35:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Description: This function allows you to change the priority of a task dynamically.  Note that th
  36:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              priority MUST be available.
  37:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
  38:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Arguments  : oldp     is the old priority
  39:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
  40:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              newp     is the new priority
  41:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
  42:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Returns    : OS_ERR_NONE            is the call was successful
  43:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              OS_ERR_PRIO_INVALID    if the priority you specify is higher that the maximum allowe
  44:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                                     (i.e. >= OS_LOWEST_PRIO)
  45:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              OS_ERR_PRIO_EXIST      if the new priority already exist.
  46:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              OS_ERR_PRIO            there is no task with the specified OLD priority (i.e. the OL
  47:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                                     not exist.
  48:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              OS_ERR_TASK_NOT_EXIST  if the task is assigned to a Mutex PIP.
  49:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** ***************************************************************************************************
  50:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** */
  51:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
  52:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if OS_TASK_CHANGE_PRIO_EN > 0u
  53:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** INT8U  OSTaskChangePrio (INT8U  oldprio,
  54:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****                          INT8U  newprio)
  55:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** {
  28              		.loc 1 55 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 88B0     		sub	sp, sp, #32
  37              		.cfi_def_cfa_offset 40
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40 0006 0200     		movs	r2, r0
  41 0008 FB1D     		adds	r3, r7, #7
  42 000a 1A70     		strb	r2, [r3]
  43 000c BB1D     		adds	r3, r7, #6
  44 000e 0A1C     		adds	r2, r1, #0
  45 0010 1A70     		strb	r2, [r3]
  56:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if (OS_EVENT_EN)
  57:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_EVENT  *pevent;
  58:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if (OS_EVENT_MULTI_EN > 0u)
  59:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_EVENT **pevents;
  60:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
  61:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
  62:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_TCB    *ptcb;
  63:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     INT8U      y_new;
  64:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     INT8U      x_new;
  65:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     INT8U      y_old;
  66:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_PRIO    bity_new;
  67:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_PRIO    bitx_new;
  68:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_PRIO    bity_old;
  69:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_PRIO    bitx_old;
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 3


  70:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if OS_CRITICAL_METHOD == 3u
  71:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_CPU_SR  cpu_sr = 0u;                                 /* Storage for CPU status register     
  46              		.loc 1 71 0
  47 0012 0023     		movs	r3, #0
  48 0014 FB61     		str	r3, [r7, #28]
  72:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
  73:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
  74:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
  75:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** /*$PAGE*/
  76:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if OS_ARG_CHK_EN > 0u
  77:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (oldprio >= OS_LOWEST_PRIO) {
  49              		.loc 1 77 0
  50 0016 FB1D     		adds	r3, r7, #7
  51 0018 1B78     		ldrb	r3, [r3]
  52 001a 1E2B     		cmp	r3, #30
  53 001c 05D9     		bls	.L2
  78:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         if (oldprio != OS_PRIO_SELF) {
  54              		.loc 1 78 0
  55 001e FB1D     		adds	r3, r7, #7
  56 0020 1B78     		ldrb	r3, [r3]
  57 0022 FF2B     		cmp	r3, #255
  58 0024 01D0     		beq	.L2
  79:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****             return (OS_ERR_PRIO_INVALID);
  59              		.loc 1 79 0
  60 0026 2A23     		movs	r3, #42
  61 0028 2AE1     		b	.L3
  62              	.L2:
  80:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         }
  81:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
  82:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (newprio >= OS_LOWEST_PRIO) {
  63              		.loc 1 82 0
  64 002a BB1D     		adds	r3, r7, #6
  65 002c 1B78     		ldrb	r3, [r3]
  66 002e 1E2B     		cmp	r3, #30
  67 0030 01D9     		bls	.L4
  83:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         return (OS_ERR_PRIO_INVALID);
  68              		.loc 1 83 0
  69 0032 2A23     		movs	r3, #42
  70 0034 24E1     		b	.L3
  71              	.L4:
  84:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
  85:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
  86:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_ENTER_CRITICAL();
  72              		.loc 1 86 0
  73 0036 FFF7FEFF 		bl	OS_CPU_SR_Save
  74 003a 0300     		movs	r3, r0
  75 003c FB61     		str	r3, [r7, #28]
  87:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (OSTCBPrioTbl[newprio] != (OS_TCB *)0) {             /* New priority must not already exist 
  76              		.loc 1 87 0
  77 003e BB1D     		adds	r3, r7, #6
  78 0040 1A78     		ldrb	r2, [r3]
  79 0042 914B     		ldr	r3, .L14
  80 0044 9200     		lsls	r2, r2, #2
  81 0046 D358     		ldr	r3, [r2, r3]
  82 0048 002B     		cmp	r3, #0
  83 004a 05D0     		beq	.L5
  88:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         OS_EXIT_CRITICAL();
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 4


  84              		.loc 1 88 0
  85 004c FB69     		ldr	r3, [r7, #28]
  86 004e 1800     		movs	r0, r3
  87 0050 FFF7FEFF 		bl	OS_CPU_SR_Restore
  89:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         return (OS_ERR_PRIO_EXIST);
  88              		.loc 1 89 0
  89 0054 2823     		movs	r3, #40
  90 0056 13E1     		b	.L3
  91              	.L5:
  90:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
  91:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (oldprio == OS_PRIO_SELF) {                          /* See if changing self                
  92              		.loc 1 91 0
  93 0058 FB1D     		adds	r3, r7, #7
  94 005a 1B78     		ldrb	r3, [r3]
  95 005c FF2B     		cmp	r3, #255
  96 005e 05D1     		bne	.L6
  92:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         oldprio = OSTCBCur->OSTCBPrio;                      /* Yes, get priority                   
  97              		.loc 1 92 0
  98 0060 8A4B     		ldr	r3, .L14+4
  99 0062 1A68     		ldr	r2, [r3]
 100 0064 FB1D     		adds	r3, r7, #7
 101 0066 2621     		movs	r1, #38
 102 0068 525C     		ldrb	r2, [r2, r1]
 103 006a 1A70     		strb	r2, [r3]
 104              	.L6:
  93:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
  94:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     ptcb = OSTCBPrioTbl[oldprio];
 105              		.loc 1 94 0
 106 006c FB1D     		adds	r3, r7, #7
 107 006e 1A78     		ldrb	r2, [r3]
 108 0070 854B     		ldr	r3, .L14
 109 0072 9200     		lsls	r2, r2, #2
 110 0074 D358     		ldr	r3, [r2, r3]
 111 0076 BB61     		str	r3, [r7, #24]
  95:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (ptcb == (OS_TCB *)0) {                              /* Does task to change exist?          
 112              		.loc 1 95 0
 113 0078 BB69     		ldr	r3, [r7, #24]
 114 007a 002B     		cmp	r3, #0
 115 007c 05D1     		bne	.L7
  96:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         OS_EXIT_CRITICAL();                                 /* No, can't change its priority!      
 116              		.loc 1 96 0
 117 007e FB69     		ldr	r3, [r7, #28]
 118 0080 1800     		movs	r0, r3
 119 0082 FFF7FEFF 		bl	OS_CPU_SR_Restore
  97:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         return (OS_ERR_PRIO);
 120              		.loc 1 97 0
 121 0086 2923     		movs	r3, #41
 122 0088 FAE0     		b	.L3
 123              	.L7:
  98:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
  99:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (ptcb == OS_TCB_RESERVED) {                          /* Is task assigned to Mutex           
 124              		.loc 1 99 0
 125 008a BB69     		ldr	r3, [r7, #24]
 126 008c 012B     		cmp	r3, #1
 127 008e 05D1     		bne	.L8
 100:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         OS_EXIT_CRITICAL();                                 /* No, can't change its priority!      
 128              		.loc 1 100 0
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 5


 129 0090 FB69     		ldr	r3, [r7, #28]
 130 0092 1800     		movs	r0, r3
 131 0094 FFF7FEFF 		bl	OS_CPU_SR_Restore
 101:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         return (OS_ERR_TASK_NOT_EXIST);
 132              		.loc 1 101 0
 133 0098 4323     		movs	r3, #67
 134 009a F1E0     		b	.L3
 135              	.L8:
 102:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 103:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if OS_LOWEST_PRIO <= 63u
 104:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     y_new                 = (INT8U)(newprio >> 3u);         /* Yes, compute new TCB fields         
 136              		.loc 1 104 0
 137 009c 1723     		movs	r3, #23
 138 009e FB18     		adds	r3, r7, r3
 139 00a0 BA1D     		adds	r2, r7, #6
 140 00a2 1278     		ldrb	r2, [r2]
 141 00a4 D208     		lsrs	r2, r2, #3
 142 00a6 1A70     		strb	r2, [r3]
 105:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     x_new                 = (INT8U)(newprio & 0x07u);
 143              		.loc 1 105 0
 144 00a8 1623     		movs	r3, #22
 145 00aa FB18     		adds	r3, r7, r3
 146 00ac BA1D     		adds	r2, r7, #6
 147 00ae 1278     		ldrb	r2, [r2]
 148 00b0 0721     		movs	r1, #7
 149 00b2 0A40     		ands	r2, r1
 150 00b4 1A70     		strb	r2, [r3]
 106:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #else
 107:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     y_new                 = (INT8U)((INT8U)(newprio >> 4u) & 0x0Fu);
 108:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     x_new                 = (INT8U)(newprio & 0x0Fu);
 109:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
 110:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     bity_new              = (OS_PRIO)(1uL << y_new);
 151              		.loc 1 110 0
 152 00b6 1723     		movs	r3, #23
 153 00b8 FB18     		adds	r3, r7, r3
 154 00ba 1B78     		ldrb	r3, [r3]
 155 00bc 0122     		movs	r2, #1
 156 00be 9A40     		lsls	r2, r2, r3
 157 00c0 1523     		movs	r3, #21
 158 00c2 FB18     		adds	r3, r7, r3
 159 00c4 1A70     		strb	r2, [r3]
 111:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     bitx_new              = (OS_PRIO)(1uL << x_new);
 160              		.loc 1 111 0
 161 00c6 1623     		movs	r3, #22
 162 00c8 FB18     		adds	r3, r7, r3
 163 00ca 1B78     		ldrb	r3, [r3]
 164 00cc 0122     		movs	r2, #1
 165 00ce 9A40     		lsls	r2, r2, r3
 166 00d0 1423     		movs	r3, #20
 167 00d2 FB18     		adds	r3, r7, r3
 168 00d4 1A70     		strb	r2, [r3]
 112:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
 113:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OSTCBPrioTbl[oldprio] = (OS_TCB *)0;                    /* Remove TCB from old priority        
 169              		.loc 1 113 0
 170 00d6 FB1D     		adds	r3, r7, #7
 171 00d8 1A78     		ldrb	r2, [r3]
 172 00da 6B4B     		ldr	r3, .L14
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 6


 173 00dc 9200     		lsls	r2, r2, #2
 174 00de 0021     		movs	r1, #0
 175 00e0 D150     		str	r1, [r2, r3]
 114:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OSTCBPrioTbl[newprio] =  ptcb;                          /* Place pointer to TCB @ new priority 
 176              		.loc 1 114 0
 177 00e2 BB1D     		adds	r3, r7, #6
 178 00e4 1A78     		ldrb	r2, [r3]
 179 00e6 684B     		ldr	r3, .L14
 180 00e8 9200     		lsls	r2, r2, #2
 181 00ea B969     		ldr	r1, [r7, #24]
 182 00ec D150     		str	r1, [r2, r3]
 115:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     y_old                 =  ptcb->OSTCBY;
 183              		.loc 1 115 0
 184 00ee 1323     		movs	r3, #19
 185 00f0 FB18     		adds	r3, r7, r3
 186 00f2 BA69     		ldr	r2, [r7, #24]
 187 00f4 2821     		movs	r1, #40
 188 00f6 525C     		ldrb	r2, [r2, r1]
 189 00f8 1A70     		strb	r2, [r3]
 116:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     bity_old              =  ptcb->OSTCBBitY;
 190              		.loc 1 116 0
 191 00fa 1223     		movs	r3, #18
 192 00fc FB18     		adds	r3, r7, r3
 193 00fe BA69     		ldr	r2, [r7, #24]
 194 0100 2A21     		movs	r1, #42
 195 0102 525C     		ldrb	r2, [r2, r1]
 196 0104 1A70     		strb	r2, [r3]
 117:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     bitx_old              =  ptcb->OSTCBBitX;
 197              		.loc 1 117 0
 198 0106 1123     		movs	r3, #17
 199 0108 FB18     		adds	r3, r7, r3
 200 010a BA69     		ldr	r2, [r7, #24]
 201 010c 2921     		movs	r1, #41
 202 010e 525C     		ldrb	r2, [r2, r1]
 203 0110 1A70     		strb	r2, [r3]
 118:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if ((OSRdyTbl[y_old] &   bitx_old) != 0u) {             /* If task is ready make it not        
 204              		.loc 1 118 0
 205 0112 1323     		movs	r3, #19
 206 0114 FB18     		adds	r3, r7, r3
 207 0116 1B78     		ldrb	r3, [r3]
 208 0118 5D4A     		ldr	r2, .L14+8
 209 011a D35C     		ldrb	r3, [r2, r3]
 210 011c 1122     		movs	r2, #17
 211 011e BA18     		adds	r2, r7, r2
 212 0120 1278     		ldrb	r2, [r2]
 213 0122 1340     		ands	r3, r2
 214 0124 DBB2     		uxtb	r3, r3
 215 0126 002B     		cmp	r3, #0
 216 0128 3AD0     		beq	.L9
 119:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****          OSRdyTbl[y_old] &= (OS_PRIO)~bitx_old;
 217              		.loc 1 119 0
 218 012a 1323     		movs	r3, #19
 219 012c FB18     		adds	r3, r7, r3
 220 012e 1B78     		ldrb	r3, [r3]
 221 0130 1322     		movs	r2, #19
 222 0132 BA18     		adds	r2, r7, r2
 223 0134 1278     		ldrb	r2, [r2]
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 7


 224 0136 5649     		ldr	r1, .L14+8
 225 0138 8A5C     		ldrb	r2, [r1, r2]
 226 013a 1121     		movs	r1, #17
 227 013c 7918     		adds	r1, r7, r1
 228 013e 0978     		ldrb	r1, [r1]
 229 0140 C943     		mvns	r1, r1
 230 0142 C9B2     		uxtb	r1, r1
 231 0144 0A40     		ands	r2, r1
 232 0146 D1B2     		uxtb	r1, r2
 233 0148 514A     		ldr	r2, .L14+8
 234 014a D154     		strb	r1, [r2, r3]
 120:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****          if (OSRdyTbl[y_old] == 0u) {
 235              		.loc 1 120 0
 236 014c 1323     		movs	r3, #19
 237 014e FB18     		adds	r3, r7, r3
 238 0150 1B78     		ldrb	r3, [r3]
 239 0152 4F4A     		ldr	r2, .L14+8
 240 0154 D35C     		ldrb	r3, [r2, r3]
 241 0156 002B     		cmp	r3, #0
 242 0158 0AD1     		bne	.L10
 121:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****              OSRdyGrp &= (OS_PRIO)~bity_old;
 243              		.loc 1 121 0
 244 015a 1223     		movs	r3, #18
 245 015c FB18     		adds	r3, r7, r3
 246 015e 1B78     		ldrb	r3, [r3]
 247 0160 DB43     		mvns	r3, r3
 248 0162 DBB2     		uxtb	r3, r3
 249 0164 4B4A     		ldr	r2, .L14+12
 250 0166 1278     		ldrb	r2, [r2]
 251 0168 1340     		ands	r3, r2
 252 016a DAB2     		uxtb	r2, r3
 253 016c 494B     		ldr	r3, .L14+12
 254 016e 1A70     		strb	r2, [r3]
 255              	.L10:
 122:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****          }
 123:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****          OSRdyGrp        |= bity_new;                       /* Make new priority ready to run      
 256              		.loc 1 123 0
 257 0170 484B     		ldr	r3, .L14+12
 258 0172 1A78     		ldrb	r2, [r3]
 259 0174 1523     		movs	r3, #21
 260 0176 FB18     		adds	r3, r7, r3
 261 0178 1B78     		ldrb	r3, [r3]
 262 017a 1343     		orrs	r3, r2
 263 017c DAB2     		uxtb	r2, r3
 264 017e 454B     		ldr	r3, .L14+12
 265 0180 1A70     		strb	r2, [r3]
 124:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****          OSRdyTbl[y_new] |= bitx_new;
 266              		.loc 1 124 0
 267 0182 1723     		movs	r3, #23
 268 0184 FB18     		adds	r3, r7, r3
 269 0186 1B78     		ldrb	r3, [r3]
 270 0188 1722     		movs	r2, #23
 271 018a BA18     		adds	r2, r7, r2
 272 018c 1278     		ldrb	r2, [r2]
 273 018e 4049     		ldr	r1, .L14+8
 274 0190 895C     		ldrb	r1, [r1, r2]
 275 0192 1422     		movs	r2, #20
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 8


 276 0194 BA18     		adds	r2, r7, r2
 277 0196 1278     		ldrb	r2, [r2]
 278 0198 0A43     		orrs	r2, r1
 279 019a D1B2     		uxtb	r1, r2
 280 019c 3C4A     		ldr	r2, .L14+8
 281 019e D154     		strb	r1, [r2, r3]
 282              	.L9:
 125:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 126:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
 127:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if (OS_EVENT_EN)
 128:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     pevent = ptcb->OSTCBEventPtr;
 283              		.loc 1 128 0
 284 01a0 BB69     		ldr	r3, [r7, #24]
 285 01a2 DB69     		ldr	r3, [r3, #28]
 286 01a4 FB60     		str	r3, [r7, #12]
 129:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (pevent != (OS_EVENT *)0) {
 287              		.loc 1 129 0
 288 01a6 FB68     		ldr	r3, [r7, #12]
 289 01a8 002B     		cmp	r3, #0
 290 01aa 41D0     		beq	.L11
 130:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         pevent->OSEventTbl[y_old] &= (OS_PRIO)~bitx_old;    /* Remove old task prio from wait list 
 291              		.loc 1 130 0
 292 01ac 1323     		movs	r3, #19
 293 01ae FB18     		adds	r3, r7, r3
 294 01b0 1B78     		ldrb	r3, [r3]
 295 01b2 1322     		movs	r2, #19
 296 01b4 BA18     		adds	r2, r7, r2
 297 01b6 1278     		ldrb	r2, [r2]
 298 01b8 F968     		ldr	r1, [r7, #12]
 299 01ba 8A18     		adds	r2, r1, r2
 300 01bc D27A     		ldrb	r2, [r2, #11]
 301 01be 1121     		movs	r1, #17
 302 01c0 7918     		adds	r1, r7, r1
 303 01c2 0978     		ldrb	r1, [r1]
 304 01c4 C943     		mvns	r1, r1
 305 01c6 C9B2     		uxtb	r1, r1
 306 01c8 0A40     		ands	r2, r1
 307 01ca D1B2     		uxtb	r1, r2
 308 01cc FA68     		ldr	r2, [r7, #12]
 309 01ce D318     		adds	r3, r2, r3
 310 01d0 0A1C     		adds	r2, r1, #0
 311 01d2 DA72     		strb	r2, [r3, #11]
 131:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         if (pevent->OSEventTbl[y_old] == 0u) {
 312              		.loc 1 131 0
 313 01d4 1323     		movs	r3, #19
 314 01d6 FB18     		adds	r3, r7, r3
 315 01d8 1B78     		ldrb	r3, [r3]
 316 01da FA68     		ldr	r2, [r7, #12]
 317 01dc D318     		adds	r3, r2, r3
 318 01de DB7A     		ldrb	r3, [r3, #11]
 319 01e0 002B     		cmp	r3, #0
 320 01e2 0AD1     		bne	.L12
 132:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****             pevent->OSEventGrp    &= (OS_PRIO)~bity_old;
 321              		.loc 1 132 0
 322 01e4 FB68     		ldr	r3, [r7, #12]
 323 01e6 9B7A     		ldrb	r3, [r3, #10]
 324 01e8 1222     		movs	r2, #18
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 9


 325 01ea BA18     		adds	r2, r7, r2
 326 01ec 1278     		ldrb	r2, [r2]
 327 01ee D243     		mvns	r2, r2
 328 01f0 D2B2     		uxtb	r2, r2
 329 01f2 1340     		ands	r3, r2
 330 01f4 DAB2     		uxtb	r2, r3
 331 01f6 FB68     		ldr	r3, [r7, #12]
 332 01f8 9A72     		strb	r2, [r3, #10]
 333              	.L12:
 133:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         }
 134:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         pevent->OSEventGrp        |= bity_new;              /* Add    new task prio to   wait list 
 334              		.loc 1 134 0
 335 01fa FB68     		ldr	r3, [r7, #12]
 336 01fc 9A7A     		ldrb	r2, [r3, #10]
 337 01fe 1523     		movs	r3, #21
 338 0200 FB18     		adds	r3, r7, r3
 339 0202 1B78     		ldrb	r3, [r3]
 340 0204 1343     		orrs	r3, r2
 341 0206 DAB2     		uxtb	r2, r3
 342 0208 FB68     		ldr	r3, [r7, #12]
 343 020a 9A72     		strb	r2, [r3, #10]
 135:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         pevent->OSEventTbl[y_new] |= bitx_new;
 344              		.loc 1 135 0
 345 020c 1723     		movs	r3, #23
 346 020e FB18     		adds	r3, r7, r3
 347 0210 1B78     		ldrb	r3, [r3]
 348 0212 1722     		movs	r2, #23
 349 0214 BA18     		adds	r2, r7, r2
 350 0216 1278     		ldrb	r2, [r2]
 351 0218 F968     		ldr	r1, [r7, #12]
 352 021a 8A18     		adds	r2, r1, r2
 353 021c D17A     		ldrb	r1, [r2, #11]
 354 021e 1422     		movs	r2, #20
 355 0220 BA18     		adds	r2, r7, r2
 356 0222 1278     		ldrb	r2, [r2]
 357 0224 0A43     		orrs	r2, r1
 358 0226 D1B2     		uxtb	r1, r2
 359 0228 FA68     		ldr	r2, [r7, #12]
 360 022a D318     		adds	r3, r2, r3
 361 022c 0A1C     		adds	r2, r1, #0
 362 022e DA72     		strb	r2, [r3, #11]
 363              	.L11:
 136:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 137:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if (OS_EVENT_MULTI_EN > 0u)
 138:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (ptcb->OSTCBEventMultiPtr != (OS_EVENT **)0) {
 139:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         pevents =  ptcb->OSTCBEventMultiPtr;
 140:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         pevent  = *pevents;
 141:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         while (pevent != (OS_EVENT *)0) {
 142:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****             pevent->OSEventTbl[y_old] &= (OS_PRIO)~bitx_old;   /* Remove old task prio from wait li
 143:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****             if (pevent->OSEventTbl[y_old] == 0u) {
 144:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****                 pevent->OSEventGrp    &= (OS_PRIO)~bity_old;
 145:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****             }
 146:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****             pevent->OSEventGrp        |= bity_new;          /* Add    new task prio to   wait lists
 147:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****             pevent->OSEventTbl[y_new] |= bitx_new;
 148:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****             pevents++;
 149:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****             pevent                     = *pevents;
 150:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         }
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 10


 151:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 152:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
 153:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
 154:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
 155:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     ptcb->OSTCBPrio = newprio;                              /* Set new task priority               
 364              		.loc 1 155 0
 365 0230 BB69     		ldr	r3, [r7, #24]
 366 0232 BA1D     		adds	r2, r7, #6
 367 0234 2621     		movs	r1, #38
 368 0236 1278     		ldrb	r2, [r2]
 369 0238 5A54     		strb	r2, [r3, r1]
 156:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     ptcb->OSTCBY    = y_new;
 370              		.loc 1 156 0
 371 023a BB69     		ldr	r3, [r7, #24]
 372 023c 1722     		movs	r2, #23
 373 023e BA18     		adds	r2, r7, r2
 374 0240 2821     		movs	r1, #40
 375 0242 1278     		ldrb	r2, [r2]
 376 0244 5A54     		strb	r2, [r3, r1]
 157:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     ptcb->OSTCBX    = x_new;
 377              		.loc 1 157 0
 378 0246 BB69     		ldr	r3, [r7, #24]
 379 0248 1622     		movs	r2, #22
 380 024a BA18     		adds	r2, r7, r2
 381 024c 2721     		movs	r1, #39
 382 024e 1278     		ldrb	r2, [r2]
 383 0250 5A54     		strb	r2, [r3, r1]
 158:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     ptcb->OSTCBBitY = bity_new;
 384              		.loc 1 158 0
 385 0252 BB69     		ldr	r3, [r7, #24]
 386 0254 1522     		movs	r2, #21
 387 0256 BA18     		adds	r2, r7, r2
 388 0258 2A21     		movs	r1, #42
 389 025a 1278     		ldrb	r2, [r2]
 390 025c 5A54     		strb	r2, [r3, r1]
 159:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     ptcb->OSTCBBitX = bitx_new;
 391              		.loc 1 159 0
 392 025e BB69     		ldr	r3, [r7, #24]
 393 0260 1422     		movs	r2, #20
 394 0262 BA18     		adds	r2, r7, r2
 395 0264 2921     		movs	r1, #41
 396 0266 1278     		ldrb	r2, [r2]
 397 0268 5A54     		strb	r2, [r3, r1]
 160:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_EXIT_CRITICAL();
 398              		.loc 1 160 0
 399 026a FB69     		ldr	r3, [r7, #28]
 400 026c 1800     		movs	r0, r3
 401 026e FFF7FEFF 		bl	OS_CPU_SR_Restore
 161:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (OSRunning == OS_TRUE) {
 402              		.loc 1 161 0
 403 0272 094B     		ldr	r3, .L14+16
 404 0274 1B78     		ldrb	r3, [r3]
 405 0276 012B     		cmp	r3, #1
 406 0278 01D1     		bne	.L13
 162:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         OS_Sched();                                         /* Find new highest priority task      
 407              		.loc 1 162 0
 408 027a FFF7FEFF 		bl	OS_Sched
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 11


 409              	.L13:
 163:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 164:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     return (OS_ERR_NONE);
 410              		.loc 1 164 0
 411 027e 0023     		movs	r3, #0
 412              	.L3:
 165:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** }
 413              		.loc 1 165 0
 414 0280 1800     		movs	r0, r3
 415 0282 BD46     		mov	sp, r7
 416 0284 08B0     		add	sp, sp, #32
 417              		@ sp needed
 418 0286 80BD     		pop	{r7, pc}
 419              	.L15:
 420              		.align	2
 421              	.L14:
 422 0288 00000000 		.word	OSTCBPrioTbl
 423 028c 00000000 		.word	OSTCBCur
 424 0290 00000000 		.word	OSRdyTbl
 425 0294 00000000 		.word	OSRdyGrp
 426 0298 00000000 		.word	OSRunning
 427              		.cfi_endproc
 428              	.LFE1:
 429              		.size	OSTaskChangePrio, .-OSTaskChangePrio
 430              		.section	.text.OSTaskCreate,"ax",%progbits
 431              		.align	2
 432              		.global	OSTaskCreate
 433              		.code	16
 434              		.thumb_func
 435              		.type	OSTaskCreate, %function
 436              	OSTaskCreate:
 437              	.LFB2:
 166:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
 167:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** /*$PAGE*/
 168:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** /*
 169:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** ***************************************************************************************************
 170:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                                            CREATE A TASK
 171:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
 172:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Description: This function is used to have uC/OS-II manage the execution of a task.  Tasks can ei
 173:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              be created prior to the start of multitasking or by a running task.  A task cannot b
 174:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              created by an ISR.
 175:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
 176:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Arguments  : task     is a pointer to the task's code
 177:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
 178:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              p_arg    is a pointer to an optional data area which can be used to pass parameters 
 179:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                       the task when the task first executes.  Where the task is concerned it thin
 180:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                       it was invoked and passed the argument 'p_arg' as follows:
 181:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
 182:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                           void Task (void *p_arg)
 183:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                           {
 184:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                               for (;;) {
 185:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                                   Task code;
 186:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                               }
 187:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                           }
 188:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
 189:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              ptos     is a pointer to the task's top of stack.  If the configuration constant
 190:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                       OS_STK_GROWTH is set to 1, the stack is assumed to grow downward (i.e. from
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 12


 191:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                       memory to low memory).  'pstk' will thus point to the highest (valid) memor
 192:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                       location of the stack.  If OS_STK_GROWTH is set to 0, 'pstk' will point to 
 193:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                       lowest memory location of the stack and the stack will grow with increasing
 194:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                       memory locations.
 195:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
 196:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              prio     is the task's priority.  A unique priority MUST be assigned to each task an
 197:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                       lower the number, the higher the priority.
 198:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
 199:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Returns    : OS_ERR_NONE                      if the function was successful.
 200:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              OS_ERR_PRIO_EXIST                if the task priority already exist
 201:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                                               (each task MUST have a unique priority).
 202:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              OS_ERR_PRIO_INVALID              if the priority you specify is higher that the maxi
 203:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                                               allowed (i.e. >= OS_LOWEST_PRIO)
 204:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              OS_ERR_TASK_CREATE_ISR           if you tried to create a task from an ISR.
 205:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              OS_ERR_ILLEGAL_CREATE_RUN_TIME   if you tried to create a task after safety critical
 206:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                                               operation started.
 207:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** ***************************************************************************************************
 208:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** */
 209:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
 210:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if OS_TASK_CREATE_EN > 0u
 211:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** INT8U  OSTaskCreate (void   (*task)(void *p_arg),
 212:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****                      void    *p_arg,
 213:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****                      OS_STK  *ptos,
 214:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****                      INT8U    prio)
 215:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** {
 438              		.loc 1 215 0
 439              		.cfi_startproc
 440              		@ args = 0, pretend = 0, frame = 32
 441              		@ frame_needed = 1, uses_anonymous_args = 0
 442 0000 90B5     		push	{r4, r7, lr}
 443              		.cfi_def_cfa_offset 12
 444              		.cfi_offset 4, -12
 445              		.cfi_offset 7, -8
 446              		.cfi_offset 14, -4
 447 0002 8DB0     		sub	sp, sp, #52
 448              		.cfi_def_cfa_offset 64
 449 0004 04AF     		add	r7, sp, #16
 450              		.cfi_def_cfa 7, 48
 451 0006 F860     		str	r0, [r7, #12]
 452 0008 B960     		str	r1, [r7, #8]
 453 000a 7A60     		str	r2, [r7, #4]
 454 000c 1A00     		movs	r2, r3
 455 000e FB1C     		adds	r3, r7, #3
 456 0010 1A70     		strb	r2, [r3]
 216:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_STK     *psp;
 217:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     INT8U       err;
 218:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if OS_CRITICAL_METHOD == 3u                 /* Allocate storage for CPU status register           
 219:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_CPU_SR   cpu_sr = 0u;
 457              		.loc 1 219 0
 458 0012 0023     		movs	r3, #0
 459 0014 FB61     		str	r3, [r7, #28]
 220:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
 221:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
 222:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
 223:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
 224:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #ifdef OS_SAFETY_CRITICAL_IEC61508
 225:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (OSSafetyCriticalStartFlag == OS_TRUE) {
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 13


 226:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 227:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         return (OS_ERR_ILLEGAL_CREATE_RUN_TIME);
 228:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 229:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
 230:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
 231:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if OS_ARG_CHK_EN > 0u
 232:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (prio > OS_LOWEST_PRIO) {             /* Make sure priority is within allowable range       
 460              		.loc 1 232 0
 461 0016 FB1C     		adds	r3, r7, #3
 462 0018 1B78     		ldrb	r3, [r3]
 463 001a 1F2B     		cmp	r3, #31
 464 001c 01D9     		bls	.L17
 233:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         return (OS_ERR_PRIO_INVALID);
 465              		.loc 1 233 0
 466 001e 2A23     		movs	r3, #42
 467 0020 5AE0     		b	.L18
 468              	.L17:
 234:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 235:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
 236:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_ENTER_CRITICAL();
 469              		.loc 1 236 0
 470 0022 FFF7FEFF 		bl	OS_CPU_SR_Save
 471 0026 0300     		movs	r3, r0
 472 0028 FB61     		str	r3, [r7, #28]
 237:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (OSIntNesting > 0u) {                 /* Make sure we don't create the task from within an I
 473              		.loc 1 237 0
 474 002a 2D4B     		ldr	r3, .L24
 475 002c 1B78     		ldrb	r3, [r3]
 476 002e 002B     		cmp	r3, #0
 477 0030 05D0     		beq	.L19
 238:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         OS_EXIT_CRITICAL();
 478              		.loc 1 238 0
 479 0032 FB69     		ldr	r3, [r7, #28]
 480 0034 1800     		movs	r0, r3
 481 0036 FFF7FEFF 		bl	OS_CPU_SR_Restore
 239:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         return (OS_ERR_TASK_CREATE_ISR);
 482              		.loc 1 239 0
 483 003a 3C23     		movs	r3, #60
 484 003c 4CE0     		b	.L18
 485              	.L19:
 240:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 241:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (OSTCBPrioTbl[prio] == (OS_TCB *)0) { /* Make sure task doesn't already exist at this priori
 486              		.loc 1 241 0
 487 003e FB1C     		adds	r3, r7, #3
 488 0040 1A78     		ldrb	r2, [r3]
 489 0042 284B     		ldr	r3, .L24+4
 490 0044 9200     		lsls	r2, r2, #2
 491 0046 D358     		ldr	r3, [r2, r3]
 492 0048 002B     		cmp	r3, #0
 493 004a 40D1     		bne	.L20
 242:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         OSTCBPrioTbl[prio] = OS_TCB_RESERVED;/* Reserve the priority to prevent others from doing .
 494              		.loc 1 242 0
 495 004c FB1C     		adds	r3, r7, #3
 496 004e 1A78     		ldrb	r2, [r3]
 497 0050 244B     		ldr	r3, .L24+4
 498 0052 9200     		lsls	r2, r2, #2
 499 0054 0121     		movs	r1, #1
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 14


 500 0056 D150     		str	r1, [r2, r3]
 243:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****                                              /* ... the same thing until task is created.          
 244:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         OS_EXIT_CRITICAL();
 501              		.loc 1 244 0
 502 0058 FB69     		ldr	r3, [r7, #28]
 503 005a 1800     		movs	r0, r3
 504 005c FFF7FEFF 		bl	OS_CPU_SR_Restore
 245:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         psp = OSTaskStkInit(task, p_arg, ptos, 0u);             /* Initialize the task's stack     
 505              		.loc 1 245 0
 506 0060 7A68     		ldr	r2, [r7, #4]
 507 0062 B968     		ldr	r1, [r7, #8]
 508 0064 F868     		ldr	r0, [r7, #12]
 509 0066 0023     		movs	r3, #0
 510 0068 FFF7FEFF 		bl	OSTaskStkInit
 511 006c 0300     		movs	r3, r0
 512 006e BB61     		str	r3, [r7, #24]
 246:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         err = OS_TCBInit(prio, psp, (OS_STK *)0, 0u, 0u, (void *)0, 0u);
 513              		.loc 1 246 0
 514 0070 1723     		movs	r3, #23
 515 0072 FC18     		adds	r4, r7, r3
 516 0074 B969     		ldr	r1, [r7, #24]
 517 0076 FB1C     		adds	r3, r7, #3
 518 0078 1878     		ldrb	r0, [r3]
 519 007a 0023     		movs	r3, #0
 520 007c 0293     		str	r3, [sp, #8]
 521 007e 0023     		movs	r3, #0
 522 0080 0193     		str	r3, [sp, #4]
 523 0082 0023     		movs	r3, #0
 524 0084 0093     		str	r3, [sp]
 525 0086 0023     		movs	r3, #0
 526 0088 0022     		movs	r2, #0
 527 008a FFF7FEFF 		bl	OS_TCBInit
 528 008e 0300     		movs	r3, r0
 529 0090 2370     		strb	r3, [r4]
 247:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         if (err == OS_ERR_NONE) {
 530              		.loc 1 247 0
 531 0092 1723     		movs	r3, #23
 532 0094 FB18     		adds	r3, r7, r3
 533 0096 1B78     		ldrb	r3, [r3]
 534 0098 002B     		cmp	r3, #0
 535 009a 06D1     		bne	.L21
 248:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****             if (OSRunning == OS_TRUE) {      /* Find highest priority task if multitasking has star
 536              		.loc 1 248 0
 537 009c 124B     		ldr	r3, .L24+8
 538 009e 1B78     		ldrb	r3, [r3]
 539 00a0 012B     		cmp	r3, #1
 540 00a2 10D1     		bne	.L23
 249:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****                 OS_Sched();
 541              		.loc 1 249 0
 542 00a4 FFF7FEFF 		bl	OS_Sched
 543 00a8 0DE0     		b	.L23
 544              	.L21:
 250:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****             }
 251:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         } else {
 252:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****             OS_ENTER_CRITICAL();
 545              		.loc 1 252 0
 546 00aa FFF7FEFF 		bl	OS_CPU_SR_Save
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 15


 547 00ae 0300     		movs	r3, r0
 548 00b0 FB61     		str	r3, [r7, #28]
 253:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****             OSTCBPrioTbl[prio] = (OS_TCB *)0;/* Make this priority available to others             
 549              		.loc 1 253 0
 550 00b2 FB1C     		adds	r3, r7, #3
 551 00b4 1A78     		ldrb	r2, [r3]
 552 00b6 0B4B     		ldr	r3, .L24+4
 553 00b8 9200     		lsls	r2, r2, #2
 554 00ba 0021     		movs	r1, #0
 555 00bc D150     		str	r1, [r2, r3]
 254:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****             OS_EXIT_CRITICAL();
 556              		.loc 1 254 0
 557 00be FB69     		ldr	r3, [r7, #28]
 558 00c0 1800     		movs	r0, r3
 559 00c2 FFF7FEFF 		bl	OS_CPU_SR_Restore
 560              	.L23:
 255:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         }
 256:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         return (err);
 561              		.loc 1 256 0
 562 00c6 1723     		movs	r3, #23
 563 00c8 FB18     		adds	r3, r7, r3
 564 00ca 1B78     		ldrb	r3, [r3]
 565 00cc 04E0     		b	.L18
 566              	.L20:
 257:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 258:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_EXIT_CRITICAL();
 567              		.loc 1 258 0
 568 00ce FB69     		ldr	r3, [r7, #28]
 569 00d0 1800     		movs	r0, r3
 570 00d2 FFF7FEFF 		bl	OS_CPU_SR_Restore
 259:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     return (OS_ERR_PRIO_EXIST);
 571              		.loc 1 259 0
 572 00d6 2823     		movs	r3, #40
 573              	.L18:
 260:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** }
 574              		.loc 1 260 0
 575 00d8 1800     		movs	r0, r3
 576 00da BD46     		mov	sp, r7
 577 00dc 09B0     		add	sp, sp, #36
 578              		@ sp needed
 579 00de 90BD     		pop	{r4, r7, pc}
 580              	.L25:
 581              		.align	2
 582              	.L24:
 583 00e0 00000000 		.word	OSIntNesting
 584 00e4 00000000 		.word	OSTCBPrioTbl
 585 00e8 00000000 		.word	OSRunning
 586              		.cfi_endproc
 587              	.LFE2:
 588              		.size	OSTaskCreate, .-OSTaskCreate
 589              		.section	.text.OSTaskCreateExt,"ax",%progbits
 590              		.align	2
 591              		.global	OSTaskCreateExt
 592              		.code	16
 593              		.thumb_func
 594              		.type	OSTaskCreateExt, %function
 595              	OSTaskCreateExt:
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 16


 596              	.LFB3:
 261:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
 262:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** /*$PAGE*/
 263:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** /*
 264:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** ***************************************************************************************************
 265:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                                  CREATE A TASK (Extended Version)
 266:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
 267:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Description: This function is used to have uC/OS-II manage the execution of a task.  Tasks can ei
 268:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              be created prior to the start of multitasking or by a running task.  A task cannot b
 269:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              created by an ISR.  This function is similar to OSTaskCreate() except that it allows
 270:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              additional information about a task to be specified.
 271:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
 272:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Arguments  : task      is a pointer to the task's code
 273:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
 274:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              p_arg     is a pointer to an optional data area which can be used to pass parameters
 275:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                        the task when the task first executes.  Where the task is concerned it thi
 276:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                        it was invoked and passed the argument 'p_arg' as follows:
 277:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
 278:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                            void Task (void *p_arg)
 279:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                            {
 280:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                                for (;;) {
 281:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                                    Task code;
 282:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                                }
 283:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                            }
 284:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
 285:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              ptos      is a pointer to the task's top of stack.  If the configuration constant
 286:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                        OS_STK_GROWTH is set to 1, the stack is assumed to grow downward (i.e. fro
 287:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                        memory to low memory).  'ptos' will thus point to the highest (valid) memo
 288:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                        location of the stack.  If OS_STK_GROWTH is set to 0, 'ptos' will point to
 289:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                        lowest memory location of the stack and the stack will grow with increasin
 290:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                        memory locations.  'ptos' MUST point to a valid 'free' data item.
 291:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
 292:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              prio      is the task's priority.  A unique priority MUST be assigned to each task a
 293:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                        lower the number, the higher the priority.
 294:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
 295:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              id        is the task's ID (0..65535)
 296:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
 297:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              pbos      is a pointer to the task's bottom of stack.  If the configuration constant
 298:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                        OS_STK_GROWTH is set to 1, the stack is assumed to grow downward (i.e. fro
 299:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                        memory to low memory).  'pbos' will thus point to the LOWEST (valid) memor
 300:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                        location of the stack.  If OS_STK_GROWTH is set to 0, 'pbos' will point to
 301:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                        HIGHEST memory location of the stack and the stack will grow with increasi
 302:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                        memory locations.  'pbos' MUST point to a valid 'free' data item.
 303:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
 304:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              stk_size  is the size of the stack in number of elements.  If OS_STK is set to INT8U
 305:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                        'stk_size' corresponds to the number of bytes available.  If OS_STK is set
 306:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                        INT16U, 'stk_size' contains the number of 16-bit entries available.  Final
 307:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                        OS_STK is set to INT32U, 'stk_size' contains the number of 32-bit entries
 308:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                        available on the stack.
 309:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
 310:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              pext      is a pointer to a user supplied memory location which is used as a TCB ext
 311:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                        For example, this user memory can hold the contents of floating-point regi
 312:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                        during a context switch, the time each task takes to execute, the number o
 313:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                        the task has been switched-in, etc.
 314:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
 315:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              opt       contains additional information (or options) about the behavior of the tas
 316:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                        LOWER 8-bits are reserved by uC/OS-II while the upper 8 bits can be applic
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 17


 317:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                        specific.  See OS_TASK_OPT_??? in uCOS-II.H.  Current choices are:
 318:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
 319:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                        OS_TASK_OPT_STK_CHK      Stack checking to be allowed for the task
 320:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                        OS_TASK_OPT_STK_CLR      Clear the stack when the task is created
 321:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                        OS_TASK_OPT_SAVE_FP      If the CPU has floating-point registers, save the
 322:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                                                 during a context switch.
 323:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
 324:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Returns    : OS_ERR_NONE                      if the function was successful.
 325:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              OS_ERR_PRIO_EXIST                if the task priority already exist
 326:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                                               (each task MUST have a unique priority).
 327:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              OS_ERR_PRIO_INVALID              if the priority you specify is higher that the maxi
 328:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                                               allowed (i.e. > OS_LOWEST_PRIO)
 329:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              OS_ERR_TASK_CREATE_ISR           if you tried to create a task from an ISR.
 330:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              OS_ERR_ILLEGAL_CREATE_RUN_TIME   if you tried to create a task after safety critical
 331:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                                               operation started.
 332:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** ***************************************************************************************************
 333:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** */
 334:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** /*$PAGE*/
 335:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if OS_TASK_CREATE_EXT_EN > 0u
 336:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** INT8U  OSTaskCreateExt (void   (*task)(void *p_arg),
 337:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****                         void    *p_arg,
 338:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****                         OS_STK  *ptos,
 339:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****                         INT8U    prio,
 340:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****                         INT16U   id,
 341:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****                         OS_STK  *pbos,
 342:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****                         INT32U   stk_size,
 343:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****                         void    *pext,
 344:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****                         INT16U   opt)
 345:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** {
 597              		.loc 1 345 0
 598              		.cfi_startproc
 599              		@ args = 20, pretend = 0, frame = 32
 600              		@ frame_needed = 1, uses_anonymous_args = 0
 601 0000 B0B5     		push	{r4, r5, r7, lr}
 602              		.cfi_def_cfa_offset 16
 603              		.cfi_offset 4, -16
 604              		.cfi_offset 5, -12
 605              		.cfi_offset 7, -8
 606              		.cfi_offset 14, -4
 607 0002 8CB0     		sub	sp, sp, #48
 608              		.cfi_def_cfa_offset 64
 609 0004 04AF     		add	r7, sp, #16
 610              		.cfi_def_cfa 7, 48
 611 0006 F860     		str	r0, [r7, #12]
 612 0008 B960     		str	r1, [r7, #8]
 613 000a 7A60     		str	r2, [r7, #4]
 614 000c 1A00     		movs	r2, r3
 615 000e FB1C     		adds	r3, r7, #3
 616 0010 1A70     		strb	r2, [r3]
 346:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_STK     *psp;
 347:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     INT8U       err;
 348:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if OS_CRITICAL_METHOD == 3u                 /* Allocate storage for CPU status register           
 349:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_CPU_SR   cpu_sr = 0u;
 617              		.loc 1 349 0
 618 0012 0023     		movs	r3, #0
 619 0014 FB61     		str	r3, [r7, #28]
 350:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 18


 351:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
 352:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
 353:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
 354:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #ifdef OS_SAFETY_CRITICAL_IEC61508
 355:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (OSSafetyCriticalStartFlag == OS_TRUE) {
 356:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 357:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         return (OS_ERR_ILLEGAL_CREATE_RUN_TIME);
 358:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 359:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
 360:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
 361:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if OS_ARG_CHK_EN > 0u
 362:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (prio > OS_LOWEST_PRIO) {             /* Make sure priority is within allowable range       
 620              		.loc 1 362 0
 621 0016 FB1C     		adds	r3, r7, #3
 622 0018 1B78     		ldrb	r3, [r3]
 623 001a 1F2B     		cmp	r3, #31
 624 001c 01D9     		bls	.L27
 363:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         return (OS_ERR_PRIO_INVALID);
 625              		.loc 1 363 0
 626 001e 2A23     		movs	r3, #42
 627 0020 69E0     		b	.L28
 628              	.L27:
 364:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 365:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
 366:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_ENTER_CRITICAL();
 629              		.loc 1 366 0
 630 0022 FFF7FEFF 		bl	OS_CPU_SR_Save
 631 0026 0300     		movs	r3, r0
 632 0028 FB61     		str	r3, [r7, #28]
 367:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (OSIntNesting > 0u) {                 /* Make sure we don't create the task from within an I
 633              		.loc 1 367 0
 634 002a 354B     		ldr	r3, .L34
 635 002c 1B78     		ldrb	r3, [r3]
 636 002e 002B     		cmp	r3, #0
 637 0030 05D0     		beq	.L29
 368:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         OS_EXIT_CRITICAL();
 638              		.loc 1 368 0
 639 0032 FB69     		ldr	r3, [r7, #28]
 640 0034 1800     		movs	r0, r3
 641 0036 FFF7FEFF 		bl	OS_CPU_SR_Restore
 369:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         return (OS_ERR_TASK_CREATE_ISR);
 642              		.loc 1 369 0
 643 003a 3C23     		movs	r3, #60
 644 003c 5BE0     		b	.L28
 645              	.L29:
 370:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 371:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (OSTCBPrioTbl[prio] == (OS_TCB *)0) { /* Make sure task doesn't already exist at this priori
 646              		.loc 1 371 0
 647 003e FB1C     		adds	r3, r7, #3
 648 0040 1A78     		ldrb	r2, [r3]
 649 0042 304B     		ldr	r3, .L34+4
 650 0044 9200     		lsls	r2, r2, #2
 651 0046 D358     		ldr	r3, [r2, r3]
 652 0048 002B     		cmp	r3, #0
 653 004a 4FD1     		bne	.L30
 372:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         OSTCBPrioTbl[prio] = OS_TCB_RESERVED;/* Reserve the priority to prevent others from doing .
 654              		.loc 1 372 0
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 19


 655 004c FB1C     		adds	r3, r7, #3
 656 004e 1A78     		ldrb	r2, [r3]
 657 0050 2C4B     		ldr	r3, .L34+4
 658 0052 9200     		lsls	r2, r2, #2
 659 0054 0121     		movs	r1, #1
 660 0056 D150     		str	r1, [r2, r3]
 373:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****                                              /* ... the same thing until task is created.          
 374:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         OS_EXIT_CRITICAL();
 661              		.loc 1 374 0
 662 0058 FB69     		ldr	r3, [r7, #28]
 663 005a 1800     		movs	r0, r3
 664 005c FFF7FEFF 		bl	OS_CPU_SR_Restore
 375:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
 376:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if (OS_TASK_STAT_STK_CHK_EN > 0u)
 377:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         OS_TaskStkClr(pbos, stk_size, opt);                    /* Clear the task stack (if needed) 
 665              		.loc 1 377 0
 666 0060 4023     		movs	r3, #64
 667 0062 FB18     		adds	r3, r7, r3
 668 0064 1A88     		ldrh	r2, [r3]
 669 0066 B96B     		ldr	r1, [r7, #56]
 670 0068 7B6B     		ldr	r3, [r7, #52]
 671 006a 1800     		movs	r0, r3
 672 006c FFF7FEFF 		bl	OS_TaskStkClr
 378:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
 379:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
 380:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         psp = OSTaskStkInit(task, p_arg, ptos, opt);           /* Initialize the task's stack      
 673              		.loc 1 380 0
 674 0070 4023     		movs	r3, #64
 675 0072 FB18     		adds	r3, r7, r3
 676 0074 1B88     		ldrh	r3, [r3]
 677 0076 7A68     		ldr	r2, [r7, #4]
 678 0078 B968     		ldr	r1, [r7, #8]
 679 007a F868     		ldr	r0, [r7, #12]
 680 007c FFF7FEFF 		bl	OSTaskStkInit
 681 0080 0300     		movs	r3, r0
 682 0082 BB61     		str	r3, [r7, #24]
 381:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         err = OS_TCBInit(prio, psp, pbos, id, stk_size, pext, opt);
 683              		.loc 1 381 0
 684 0084 1723     		movs	r3, #23
 685 0086 FC18     		adds	r4, r7, r3
 686 0088 3023     		movs	r3, #48
 687 008a FB18     		adds	r3, r7, r3
 688 008c 1D88     		ldrh	r5, [r3]
 689 008e 7A6B     		ldr	r2, [r7, #52]
 690 0090 B969     		ldr	r1, [r7, #24]
 691 0092 FB1C     		adds	r3, r7, #3
 692 0094 1878     		ldrb	r0, [r3]
 693 0096 4023     		movs	r3, #64
 694 0098 FB18     		adds	r3, r7, r3
 695 009a 1B88     		ldrh	r3, [r3]
 696 009c 0293     		str	r3, [sp, #8]
 697 009e FB6B     		ldr	r3, [r7, #60]
 698 00a0 0193     		str	r3, [sp, #4]
 699 00a2 BB6B     		ldr	r3, [r7, #56]
 700 00a4 0093     		str	r3, [sp]
 701 00a6 2B00     		movs	r3, r5
 702 00a8 FFF7FEFF 		bl	OS_TCBInit
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 20


 703 00ac 0300     		movs	r3, r0
 704 00ae 2370     		strb	r3, [r4]
 382:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         if (err == OS_ERR_NONE) {
 705              		.loc 1 382 0
 706 00b0 1723     		movs	r3, #23
 707 00b2 FB18     		adds	r3, r7, r3
 708 00b4 1B78     		ldrb	r3, [r3]
 709 00b6 002B     		cmp	r3, #0
 710 00b8 06D1     		bne	.L31
 383:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****             if (OSRunning == OS_TRUE) {                        /* Find HPT if multitasking has star
 711              		.loc 1 383 0
 712 00ba 134B     		ldr	r3, .L34+8
 713 00bc 1B78     		ldrb	r3, [r3]
 714 00be 012B     		cmp	r3, #1
 715 00c0 10D1     		bne	.L33
 384:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****                 OS_Sched();
 716              		.loc 1 384 0
 717 00c2 FFF7FEFF 		bl	OS_Sched
 718 00c6 0DE0     		b	.L33
 719              	.L31:
 385:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****             }
 386:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         } else {
 387:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****             OS_ENTER_CRITICAL();
 720              		.loc 1 387 0
 721 00c8 FFF7FEFF 		bl	OS_CPU_SR_Save
 722 00cc 0300     		movs	r3, r0
 723 00ce FB61     		str	r3, [r7, #28]
 388:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****             OSTCBPrioTbl[prio] = (OS_TCB *)0;                  /* Make this priority avail. to othe
 724              		.loc 1 388 0
 725 00d0 FB1C     		adds	r3, r7, #3
 726 00d2 1A78     		ldrb	r2, [r3]
 727 00d4 0B4B     		ldr	r3, .L34+4
 728 00d6 9200     		lsls	r2, r2, #2
 729 00d8 0021     		movs	r1, #0
 730 00da D150     		str	r1, [r2, r3]
 389:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****             OS_EXIT_CRITICAL();
 731              		.loc 1 389 0
 732 00dc FB69     		ldr	r3, [r7, #28]
 733 00de 1800     		movs	r0, r3
 734 00e0 FFF7FEFF 		bl	OS_CPU_SR_Restore
 735              	.L33:
 390:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         }
 391:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         return (err);
 736              		.loc 1 391 0
 737 00e4 1723     		movs	r3, #23
 738 00e6 FB18     		adds	r3, r7, r3
 739 00e8 1B78     		ldrb	r3, [r3]
 740 00ea 04E0     		b	.L28
 741              	.L30:
 392:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 393:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_EXIT_CRITICAL();
 742              		.loc 1 393 0
 743 00ec FB69     		ldr	r3, [r7, #28]
 744 00ee 1800     		movs	r0, r3
 745 00f0 FFF7FEFF 		bl	OS_CPU_SR_Restore
 394:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     return (OS_ERR_PRIO_EXIST);
 746              		.loc 1 394 0
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 21


 747 00f4 2823     		movs	r3, #40
 748              	.L28:
 395:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** }
 749              		.loc 1 395 0
 750 00f6 1800     		movs	r0, r3
 751 00f8 BD46     		mov	sp, r7
 752 00fa 08B0     		add	sp, sp, #32
 753              		@ sp needed
 754 00fc B0BD     		pop	{r4, r5, r7, pc}
 755              	.L35:
 756 00fe C046     		.align	2
 757              	.L34:
 758 0100 00000000 		.word	OSIntNesting
 759 0104 00000000 		.word	OSTCBPrioTbl
 760 0108 00000000 		.word	OSRunning
 761              		.cfi_endproc
 762              	.LFE3:
 763              		.size	OSTaskCreateExt, .-OSTaskCreateExt
 764              		.section	.text.OSTaskResume,"ax",%progbits
 765              		.align	2
 766              		.global	OSTaskResume
 767              		.code	16
 768              		.thumb_func
 769              		.type	OSTaskResume, %function
 770              	OSTaskResume:
 771              	.LFB4:
 396:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
 397:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** /*$PAGE*/
 398:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** /*
 399:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** ***************************************************************************************************
 400:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                                            DELETE A TASK
 401:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
 402:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Description: This function allows you to delete a task.  The calling task can delete itself by
 403:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              its own priority number.  The deleted task is returned to the dormant state and can 
 404:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              re-activated by creating the deleted task again.
 405:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
 406:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Arguments  : prio    is the priority of the task to delete.  Note that you can explicitly delete
 407:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                      the current task without knowing its priority level by setting 'prio' to
 408:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                      OS_PRIO_SELF.
 409:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
 410:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Returns    : OS_ERR_NONE             if the call is successful
 411:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              OS_ERR_TASK_DEL_IDLE    if you attempted to delete uC/OS-II's idle task
 412:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              OS_ERR_PRIO_INVALID     if the priority you specify is higher that the maximum allow
 413:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                                      (i.e. >= OS_LOWEST_PRIO) or, you have not specified OS_PRIO_
 414:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              OS_ERR_TASK_DEL         if the task is assigned to a Mutex PIP.
 415:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              OS_ERR_TASK_NOT_EXIST   if the task you want to delete does not exist.
 416:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              OS_ERR_TASK_DEL_ISR     if you tried to delete a task from an ISR
 417:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
 418:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Notes      : 1) To reduce interrupt latency, OSTaskDel() 'disables' the task:
 419:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                    a) by making it not ready
 420:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                    b) by removing it from any wait lists
 421:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                    c) by preventing OSTimeTick() from making the task ready to run.
 422:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                 The task can then be 'unlinked' from the miscellaneous structures in uC/OS-II.
 423:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              2) The function OS_Dummy() is called after OS_EXIT_CRITICAL() because, on most proce
 424:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                 the next instruction following the enable interrupt instruction is ignored.
 425:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              3) An ISR cannot delete a task.
 426:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              4) The lock nesting counter is incremented because, for a brief instant, if the curr
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 22


 427:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                 task is being deleted, the current task would not be able to be rescheduled becau
 428:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                 is removed from the ready list.  Incrementing the nesting counter prevents anothe
 429:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                 from being schedule.  This means that an ISR would return to the current task whi
 430:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                 being deleted.  The rest of the deletion would thus be able to be completed.
 431:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** ***************************************************************************************************
 432:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** */
 433:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
 434:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if OS_TASK_DEL_EN > 0u
 435:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** INT8U  OSTaskDel (INT8U prio)
 436:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** {
 437:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if (OS_FLAG_EN > 0u) && (OS_MAX_FLAGS > 0u)
 438:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_FLAG_NODE *pnode;
 439:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
 440:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_TCB       *ptcb;
 441:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if OS_CRITICAL_METHOD == 3u                            /* Allocate storage for CPU status register
 442:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_CPU_SR     cpu_sr = 0u;
 443:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
 444:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
 445:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
 446:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
 447:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (OSIntNesting > 0u) {                            /* See if trying to delete from ISR        
 448:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         return (OS_ERR_TASK_DEL_ISR);
 449:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 450:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (prio == OS_TASK_IDLE_PRIO) {                    /* Not allowed to delete idle task         
 451:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         return (OS_ERR_TASK_DEL_IDLE);
 452:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 453:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if OS_ARG_CHK_EN > 0u
 454:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (prio >= OS_LOWEST_PRIO) {                       /* Task priority valid ?                   
 455:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         if (prio != OS_PRIO_SELF) {
 456:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****             return (OS_ERR_PRIO_INVALID);
 457:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         }
 458:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 459:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
 460:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
 461:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** /*$PAGE*/
 462:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_ENTER_CRITICAL();
 463:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (prio == OS_PRIO_SELF) {                         /* See if requesting to delete self        
 464:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         prio = OSTCBCur->OSTCBPrio;                     /* Set priority to delete to current       
 465:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 466:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     ptcb = OSTCBPrioTbl[prio];
 467:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (ptcb == (OS_TCB *)0) {                          /* Task to delete must exist               
 468:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         OS_EXIT_CRITICAL();
 469:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         return (OS_ERR_TASK_NOT_EXIST);
 470:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 471:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (ptcb == OS_TCB_RESERVED) {                      /* Must not be assigned to Mutex           
 472:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         OS_EXIT_CRITICAL();
 473:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         return (OS_ERR_TASK_DEL);
 474:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 475:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
 476:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OSRdyTbl[ptcb->OSTCBY] &= (OS_PRIO)~ptcb->OSTCBBitX;
 477:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (OSRdyTbl[ptcb->OSTCBY] == 0u) {                 /* Make task not ready                     
 478:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         OSRdyGrp           &= (OS_PRIO)~ptcb->OSTCBBitY;
 479:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 480:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
 481:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if (OS_EVENT_EN)
 482:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (ptcb->OSTCBEventPtr != (OS_EVENT *)0) {
 483:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         OS_EventTaskRemove(ptcb, ptcb->OSTCBEventPtr);  /* Remove this task from any event   wait l
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 23


 484:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 485:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if (OS_EVENT_MULTI_EN > 0u)
 486:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (ptcb->OSTCBEventMultiPtr != (OS_EVENT **)0) {   /* Remove this task from any events' wait l
 487:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         OS_EventTaskRemoveMulti(ptcb, ptcb->OSTCBEventMultiPtr);
 488:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 489:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
 490:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
 491:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
 492:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if (OS_FLAG_EN > 0u) && (OS_MAX_FLAGS > 0u)
 493:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     pnode = ptcb->OSTCBFlagNode;
 494:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (pnode != (OS_FLAG_NODE *)0) {                   /* If task is waiting on event flag        
 495:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         OS_FlagUnlink(pnode);                           /* Remove from wait list                   
 496:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 497:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
 498:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
 499:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     ptcb->OSTCBDly      = 0u;                           /* Prevent OSTimeTick() from updating      
 500:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     ptcb->OSTCBStat     = OS_STAT_RDY;                  /* Prevent task from being resumed         
 501:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     ptcb->OSTCBStatPend = OS_STAT_PEND_OK;
 502:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (OSLockNesting < 255u) {                         /* Make sure we don't context switch       
 503:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         OSLockNesting++;
 504:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 505:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_EXIT_CRITICAL();                                 /* Enabling INT. ignores next instruc.     
 506:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_Dummy();                                         /* ... Dummy ensures that INTs will be     
 507:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_ENTER_CRITICAL();                                /* ... disabled HERE!                      
 508:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (OSLockNesting > 0u) {                           /* Remove context switch lock              
 509:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         OSLockNesting--;
 510:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 511:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OSTaskDelHook(ptcb);                                /* Call user defined hook                  
 512:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
 513:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if OS_TASK_CREATE_EXT_EN > 0u
 514:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if defined(OS_TLS_TBL_SIZE) && (OS_TLS_TBL_SIZE > 0u)
 515:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_TLS_TaskDel(ptcb);                               /* Call TLS hook                           
 516:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
 517:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
 518:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
 519:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OSTaskCtr--;                                        /* One less task being managed             
 520:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OSTCBPrioTbl[prio] = (OS_TCB *)0;                   /* Clear old priority entry                
 521:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (ptcb->OSTCBPrev == (OS_TCB *)0) {               /* Remove from TCB chain                   
 522:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         ptcb->OSTCBNext->OSTCBPrev = (OS_TCB *)0;
 523:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         OSTCBList                  = ptcb->OSTCBNext;
 524:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     } else {
 525:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         ptcb->OSTCBPrev->OSTCBNext = ptcb->OSTCBNext;
 526:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         ptcb->OSTCBNext->OSTCBPrev = ptcb->OSTCBPrev;
 527:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 528:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     ptcb->OSTCBNext     = OSTCBFreeList;                /* Return TCB to free TCB list             
 529:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OSTCBFreeList       = ptcb;
 530:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if OS_TASK_NAME_EN > 0u
 531:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     ptcb->OSTCBTaskName = (INT8U *)(void *)"?";
 532:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
 533:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_EXIT_CRITICAL();
 534:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (OSRunning == OS_TRUE) {
 535:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         OS_Sched();                                     /* Find new highest priority task          
 536:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 537:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     return (OS_ERR_NONE);
 538:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** }
 539:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
 540:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** /*$PAGE*/
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 24


 541:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** /*
 542:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** ***************************************************************************************************
 543:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                                  REQUEST THAT A TASK DELETE ITSELF
 544:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
 545:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Description: This function is used to:
 546:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                   a) notify a task to delete itself.
 547:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                   b) to see if a task requested that the current task delete itself.
 548:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              This function is a little tricky to understand.  Basically, you have a task that nee
 549:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              to be deleted however, this task has resources that it has allocated (memory buffers
 550:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              semaphores, mailboxes, queues etc.).  The task cannot be deleted otherwise these
 551:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              resources would not be freed.  The requesting task calls OSTaskDelReq() to indicate 
 552:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              the task needs to be deleted.  Deleting of the task is however, deferred to the task
 553:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              be deleted.  For example, suppose that task #10 needs to be deleted.  The requesting
 554:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              example, task #5, would call OSTaskDelReq(10).  When task #10 gets to execute, it ca
 555:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              this function by specifying OS_PRIO_SELF and monitors the returned value.  If the re
 556:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              value is OS_ERR_TASK_DEL_REQ, another task requested a task delete.  Task #10 would 
 557:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              this:
 558:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
 559:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                   void Task(void *p_arg)
 560:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                   {
 561:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                       .
 562:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                       .
 563:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                       while (1) {
 564:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                           OSTimeDly(1);
 565:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                           if (OSTaskDelReq(OS_PRIO_SELF) == OS_ERR_TASK_DEL_REQ) {
 566:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                               Release any owned resources;
 567:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                               De-allocate any dynamic memory;
 568:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                               OSTaskDel(OS_PRIO_SELF);
 569:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                           }
 570:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                       }
 571:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                   }
 572:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
 573:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Arguments  : prio    is the priority of the task to request the delete from
 574:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
 575:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Returns    : OS_ERR_NONE            if the task exist and the request has been registered
 576:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              OS_ERR_TASK_NOT_EXIST  if the task has been deleted.  This allows the caller to know
 577:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                                     the request has been executed.
 578:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              OS_ERR_TASK_DEL        if the task is assigned to a Mutex.
 579:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              OS_ERR_TASK_DEL_IDLE   if you requested to delete uC/OS-II's idle task
 580:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              OS_ERR_PRIO_INVALID    if the priority you specify is higher that the maximum allowe
 581:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                                     (i.e. >= OS_LOWEST_PRIO) or, you have not specified OS_PRIO_S
 582:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              OS_ERR_TASK_DEL_REQ    if a task (possibly another task) requested that the running 
 583:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                                     deleted.
 584:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** ***************************************************************************************************
 585:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** */
 586:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** /*$PAGE*/
 587:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if OS_TASK_DEL_EN > 0u
 588:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** INT8U  OSTaskDelReq (INT8U prio)
 589:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** {
 590:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     INT8U      stat;
 591:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_TCB    *ptcb;
 592:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if OS_CRITICAL_METHOD == 3u                     /* Allocate storage for CPU status register       
 593:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_CPU_SR  cpu_sr = 0u;
 594:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
 595:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
 596:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
 597:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 25


 598:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (prio == OS_TASK_IDLE_PRIO) {                            /* Not allowed to delete idle task 
 599:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         return (OS_ERR_TASK_DEL_IDLE);
 600:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 601:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if OS_ARG_CHK_EN > 0u
 602:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (prio >= OS_LOWEST_PRIO) {                               /* Task priority valid ?           
 603:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         if (prio != OS_PRIO_SELF) {
 604:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****             return (OS_ERR_PRIO_INVALID);
 605:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         }
 606:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 607:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
 608:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (prio == OS_PRIO_SELF) {                                 /* See if a task is requesting to .
 609:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         OS_ENTER_CRITICAL();                                    /* ... this task to delete itself  
 610:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         stat = OSTCBCur->OSTCBDelReq;                           /* Return request status to caller 
 611:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         OS_EXIT_CRITICAL();
 612:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         return (stat);
 613:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 614:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_ENTER_CRITICAL();
 615:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     ptcb = OSTCBPrioTbl[prio];
 616:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (ptcb == (OS_TCB *)0) {                                  /* Task to delete must exist       
 617:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         OS_EXIT_CRITICAL();
 618:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         return (OS_ERR_TASK_NOT_EXIST);                         /* Task must already be deleted    
 619:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 620:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (ptcb == OS_TCB_RESERVED) {                              /* Must NOT be assigned to a Mutex 
 621:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         OS_EXIT_CRITICAL();
 622:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         return (OS_ERR_TASK_DEL);
 623:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 624:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     ptcb->OSTCBDelReq = OS_ERR_TASK_DEL_REQ;                    /* Set flag indicating task to be D
 625:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_EXIT_CRITICAL();
 626:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     return (OS_ERR_NONE);
 627:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** }
 628:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
 629:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** /*$PAGE*/
 630:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** /*
 631:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** ***************************************************************************************************
 632:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                                       GET THE NAME OF A TASK
 633:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
 634:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Description: This function is called to obtain the name of a task.
 635:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
 636:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Arguments  : prio      is the priority of the task that you want to obtain the name from.
 637:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
 638:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              pname     is a pointer to a pointer to an ASCII string that will receive the name of
 639:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
 640:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              perr      is a pointer to an error code that can contain one of the following values
 641:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
 642:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                        OS_ERR_NONE                if the requested task is resumed
 643:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                        OS_ERR_TASK_NOT_EXIST      if the task has not been created or is assigned
 644:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                        OS_ERR_PRIO_INVALID        if you specified an invalid priority:
 645:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                                                   A higher value than the idle task or not OS_PRI
 646:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                        OS_ERR_PNAME_NULL          You passed a NULL pointer for 'pname'
 647:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                        OS_ERR_NAME_GET_ISR        You called this function from an ISR
 648:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
 649:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
 650:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Returns    : The length of the string or 0 if the task does not exist.
 651:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** ***************************************************************************************************
 652:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** */
 653:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
 654:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if OS_TASK_NAME_EN > 0u
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 26


 655:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** INT8U  OSTaskNameGet (INT8U    prio,
 656:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****                       INT8U  **pname,
 657:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****                       INT8U   *perr)
 658:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** {
 659:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_TCB    *ptcb;
 660:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     INT8U      len;
 661:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if OS_CRITICAL_METHOD == 3u                             /* Allocate storage for CPU status registe
 662:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_CPU_SR  cpu_sr = 0u;
 663:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
 664:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
 665:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
 666:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
 667:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #ifdef OS_SAFETY_CRITICAL
 668:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (perr == (INT8U *)0) {
 669:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 670:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         return (0u);
 671:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 672:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
 673:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
 674:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if OS_ARG_CHK_EN > 0u
 675:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (prio > OS_LOWEST_PRIO) {                         /* Task priority valid ?                  
 676:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         if (prio != OS_PRIO_SELF) {
 677:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****             *perr = OS_ERR_PRIO_INVALID;                 /* No                                     
 678:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****             return (0u);
 679:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         }
 680:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 681:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (pname == (INT8U **)0) {                          /* Is 'pname' a NULL pointer?             
 682:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         *perr = OS_ERR_PNAME_NULL;                       /* Yes                                    
 683:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         return (0u);
 684:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 685:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
 686:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (OSIntNesting > 0u) {                              /* See if trying to call from an ISR     
 687:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         *perr = OS_ERR_NAME_GET_ISR;
 688:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         return (0u);
 689:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 690:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_ENTER_CRITICAL();
 691:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (prio == OS_PRIO_SELF) {                          /* See if caller desires it's own name    
 692:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         prio = OSTCBCur->OSTCBPrio;
 693:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 694:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     ptcb = OSTCBPrioTbl[prio];
 695:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (ptcb == (OS_TCB *)0) {                           /* Does task exist?                       
 696:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         OS_EXIT_CRITICAL();                              /* No                                     
 697:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         *perr = OS_ERR_TASK_NOT_EXIST;
 698:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         return (0u);
 699:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 700:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (ptcb == OS_TCB_RESERVED) {                       /* Task assigned to a Mutex?              
 701:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         OS_EXIT_CRITICAL();                              /* Yes                                    
 702:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         *perr = OS_ERR_TASK_NOT_EXIST;
 703:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         return (0u);
 704:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 705:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     *pname = ptcb->OSTCBTaskName;
 706:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     len    = OS_StrLen(*pname);
 707:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_EXIT_CRITICAL();
 708:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     *perr  = OS_ERR_NONE;
 709:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     return (len);
 710:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** }
 711:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 27


 712:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
 713:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** /*$PAGE*/
 714:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** /*
 715:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** ***************************************************************************************************
 716:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                                       ASSIGN A NAME TO A TASK
 717:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
 718:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Description: This function is used to set the name of a task.
 719:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
 720:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Arguments  : prio      is the priority of the task that you want the assign a name to.
 721:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
 722:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              pname     is a pointer to an ASCII string that contains the name of the task.
 723:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
 724:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              perr       is a pointer to an error code that can contain one of the following value
 725:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
 726:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                        OS_ERR_NONE                if the requested task is resumed
 727:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                        OS_ERR_TASK_NOT_EXIST      if the task has not been created or is assigned
 728:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                        OS_ERR_PNAME_NULL          You passed a NULL pointer for 'pname'
 729:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                        OS_ERR_PRIO_INVALID        if you specified an invalid priority:
 730:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                                                   A higher value than the idle task or not OS_PRI
 731:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                        OS_ERR_NAME_SET_ISR        if you called this function from an ISR
 732:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
 733:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Returns    : None
 734:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** ***************************************************************************************************
 735:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** */
 736:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if OS_TASK_NAME_EN > 0u
 737:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** void  OSTaskNameSet (INT8U   prio,
 738:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****                      INT8U  *pname,
 739:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****                      INT8U  *perr)
 740:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** {
 741:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_TCB    *ptcb;
 742:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if OS_CRITICAL_METHOD == 3u                         /* Allocate storage for CPU status register   
 743:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_CPU_SR  cpu_sr = 0u;
 744:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
 745:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
 746:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
 747:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
 748:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #ifdef OS_SAFETY_CRITICAL
 749:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (perr == (INT8U *)0) {
 750:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 751:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         return;
 752:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 753:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
 754:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
 755:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if OS_ARG_CHK_EN > 0u
 756:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (prio > OS_LOWEST_PRIO) {                     /* Task priority valid ?                      
 757:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         if (prio != OS_PRIO_SELF) {
 758:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****             *perr = OS_ERR_PRIO_INVALID;             /* No                                         
 759:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****             return;
 760:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         }
 761:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 762:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (pname == (INT8U *)0) {                       /* Is 'pname' a NULL pointer?                 
 763:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         *perr = OS_ERR_PNAME_NULL;                   /* Yes                                        
 764:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         return;
 765:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 766:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
 767:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (OSIntNesting > 0u) {                         /* See if trying to call from an ISR          
 768:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         *perr = OS_ERR_NAME_SET_ISR;
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 28


 769:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         return;
 770:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 771:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_ENTER_CRITICAL();
 772:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (prio == OS_PRIO_SELF) {                      /* See if caller desires to set it's own name 
 773:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         prio = OSTCBCur->OSTCBPrio;
 774:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 775:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     ptcb = OSTCBPrioTbl[prio];
 776:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (ptcb == (OS_TCB *)0) {                       /* Does task exist?                           
 777:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         OS_EXIT_CRITICAL();                          /* No                                         
 778:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         *perr = OS_ERR_TASK_NOT_EXIST;
 779:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         return;
 780:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 781:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (ptcb == OS_TCB_RESERVED) {                   /* Task assigned to a Mutex?                  
 782:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         OS_EXIT_CRITICAL();                          /* Yes                                        
 783:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         *perr = OS_ERR_TASK_NOT_EXIST;
 784:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         return;
 785:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 786:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     ptcb->OSTCBTaskName = pname;
 787:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_EXIT_CRITICAL();
 788:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     *perr               = OS_ERR_NONE;
 789:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** }
 790:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
 791:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
 792:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** /*$PAGE*/
 793:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** /*
 794:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** ***************************************************************************************************
 795:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                                       RESUME A SUSPENDED TASK
 796:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
 797:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Description: This function is called to resume a previously suspended task.  This is the only cal
 798:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              will remove an explicit task suspension.
 799:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
 800:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Arguments  : prio     is the priority of the task to resume.
 801:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
 802:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Returns    : OS_ERR_NONE                if the requested task is resumed
 803:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              OS_ERR_PRIO_INVALID        if the priority you specify is higher that the maximum al
 804:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                                         (i.e. >= OS_LOWEST_PRIO)
 805:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              OS_ERR_TASK_RESUME_PRIO    if the task to resume does not exist
 806:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              OS_ERR_TASK_NOT_EXIST      if the task is assigned to a Mutex PIP
 807:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              OS_ERR_TASK_NOT_SUSPENDED  if the task to resume has not been suspended
 808:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** ***************************************************************************************************
 809:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** */
 810:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
 811:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if OS_TASK_SUSPEND_EN > 0u
 812:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** INT8U  OSTaskResume (INT8U prio)
 813:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** {
 772              		.loc 1 813 0
 773              		.cfi_startproc
 774              		@ args = 0, pretend = 0, frame = 16
 775              		@ frame_needed = 1, uses_anonymous_args = 0
 776 0000 80B5     		push	{r7, lr}
 777              		.cfi_def_cfa_offset 8
 778              		.cfi_offset 7, -8
 779              		.cfi_offset 14, -4
 780 0002 84B0     		sub	sp, sp, #16
 781              		.cfi_def_cfa_offset 24
 782 0004 00AF     		add	r7, sp, #0
 783              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 29


 784 0006 0200     		movs	r2, r0
 785 0008 FB1D     		adds	r3, r7, #7
 786 000a 1A70     		strb	r2, [r3]
 814:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_TCB    *ptcb;
 815:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if OS_CRITICAL_METHOD == 3u                                  /* Storage for CPU status register   
 816:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_CPU_SR  cpu_sr = 0u;
 787              		.loc 1 816 0
 788 000c 0023     		movs	r3, #0
 789 000e FB60     		str	r3, [r7, #12]
 817:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
 818:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
 819:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
 820:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
 821:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if OS_ARG_CHK_EN > 0u
 822:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (prio >= OS_LOWEST_PRIO) {                             /* Make sure task priority is valid  
 790              		.loc 1 822 0
 791 0010 FB1D     		adds	r3, r7, #7
 792 0012 1B78     		ldrb	r3, [r3]
 793 0014 1E2B     		cmp	r3, #30
 794 0016 01D9     		bls	.L37
 823:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         return (OS_ERR_PRIO_INVALID);
 795              		.loc 1 823 0
 796 0018 2A23     		movs	r3, #42
 797 001a 6BE0     		b	.L38
 798              	.L37:
 824:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 825:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
 826:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_ENTER_CRITICAL();
 799              		.loc 1 826 0
 800 001c FFF7FEFF 		bl	OS_CPU_SR_Save
 801 0020 0300     		movs	r3, r0
 802 0022 FB60     		str	r3, [r7, #12]
 827:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     ptcb = OSTCBPrioTbl[prio];
 803              		.loc 1 827 0
 804 0024 FB1D     		adds	r3, r7, #7
 805 0026 1A78     		ldrb	r2, [r3]
 806 0028 344B     		ldr	r3, .L47
 807 002a 9200     		lsls	r2, r2, #2
 808 002c D358     		ldr	r3, [r2, r3]
 809 002e BB60     		str	r3, [r7, #8]
 828:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (ptcb == (OS_TCB *)0) {                                /* Task to suspend must exist        
 810              		.loc 1 828 0
 811 0030 BB68     		ldr	r3, [r7, #8]
 812 0032 002B     		cmp	r3, #0
 813 0034 05D1     		bne	.L39
 829:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         OS_EXIT_CRITICAL();
 814              		.loc 1 829 0
 815 0036 FB68     		ldr	r3, [r7, #12]
 816 0038 1800     		movs	r0, r3
 817 003a FFF7FEFF 		bl	OS_CPU_SR_Restore
 830:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         return (OS_ERR_TASK_RESUME_PRIO);
 818              		.loc 1 830 0
 819 003e 4623     		movs	r3, #70
 820 0040 58E0     		b	.L38
 821              	.L39:
 831:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 832:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (ptcb == OS_TCB_RESERVED) {                            /* See if assigned to Mutex          
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 30


 822              		.loc 1 832 0
 823 0042 BB68     		ldr	r3, [r7, #8]
 824 0044 012B     		cmp	r3, #1
 825 0046 05D1     		bne	.L40
 833:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         OS_EXIT_CRITICAL();
 826              		.loc 1 833 0
 827 0048 FB68     		ldr	r3, [r7, #12]
 828 004a 1800     		movs	r0, r3
 829 004c FFF7FEFF 		bl	OS_CPU_SR_Restore
 834:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         return (OS_ERR_TASK_NOT_EXIST);
 830              		.loc 1 834 0
 831 0050 4323     		movs	r3, #67
 832 0052 4FE0     		b	.L38
 833              	.L40:
 835:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 836:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if ((ptcb->OSTCBStat & OS_STAT_SUSPEND) != OS_STAT_RDY) { /* Task must be suspended            
 834              		.loc 1 836 0
 835 0054 BB68     		ldr	r3, [r7, #8]
 836 0056 2422     		movs	r2, #36
 837 0058 9B5C     		ldrb	r3, [r3, r2]
 838 005a 1A00     		movs	r2, r3
 839 005c 0823     		movs	r3, #8
 840 005e 1340     		ands	r3, r2
 841 0060 43D0     		beq	.L41
 837:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         ptcb->OSTCBStat &= (INT8U)~(INT8U)OS_STAT_SUSPEND;    /* Remove suspension                 
 842              		.loc 1 837 0
 843 0062 BB68     		ldr	r3, [r7, #8]
 844 0064 2422     		movs	r2, #36
 845 0066 9B5C     		ldrb	r3, [r3, r2]
 846 0068 0822     		movs	r2, #8
 847 006a 9343     		bics	r3, r2
 848 006c D9B2     		uxtb	r1, r3
 849 006e BB68     		ldr	r3, [r7, #8]
 850 0070 2422     		movs	r2, #36
 851 0072 9954     		strb	r1, [r3, r2]
 838:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         if ((ptcb->OSTCBStat & OS_STAT_PEND_ANY) == OS_STAT_RDY) { /* See if task is now ready     
 852              		.loc 1 838 0
 853 0074 BB68     		ldr	r3, [r7, #8]
 854 0076 2422     		movs	r2, #36
 855 0078 9B5C     		ldrb	r3, [r3, r2]
 856 007a 1A00     		movs	r2, r3
 857 007c 3723     		movs	r3, #55
 858 007e 1340     		ands	r3, r2
 859 0080 2DD1     		bne	.L42
 839:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****             if (ptcb->OSTCBDly == 0u) {
 860              		.loc 1 839 0
 861 0082 BB68     		ldr	r3, [r7, #8]
 862 0084 1B6A     		ldr	r3, [r3, #32]
 863 0086 002B     		cmp	r3, #0
 864 0088 24D1     		bne	.L43
 840:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****                 OSRdyGrp               |= ptcb->OSTCBBitY;    /* Yes, Make task ready to run       
 865              		.loc 1 840 0
 866 008a BB68     		ldr	r3, [r7, #8]
 867 008c 2A22     		movs	r2, #42
 868 008e 9A5C     		ldrb	r2, [r3, r2]
 869 0090 1B4B     		ldr	r3, .L47+4
 870 0092 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 31


 871 0094 1343     		orrs	r3, r2
 872 0096 DAB2     		uxtb	r2, r3
 873 0098 194B     		ldr	r3, .L47+4
 874 009a 1A70     		strb	r2, [r3]
 841:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****                 OSRdyTbl[ptcb->OSTCBY] |= ptcb->OSTCBBitX;
 875              		.loc 1 841 0
 876 009c BB68     		ldr	r3, [r7, #8]
 877 009e 2822     		movs	r2, #40
 878 00a0 9B5C     		ldrb	r3, [r3, r2]
 879 00a2 1800     		movs	r0, r3
 880 00a4 BB68     		ldr	r3, [r7, #8]
 881 00a6 2822     		movs	r2, #40
 882 00a8 9B5C     		ldrb	r3, [r3, r2]
 883 00aa 1A00     		movs	r2, r3
 884 00ac 154B     		ldr	r3, .L47+8
 885 00ae 9A5C     		ldrb	r2, [r3, r2]
 886 00b0 BB68     		ldr	r3, [r7, #8]
 887 00b2 2921     		movs	r1, #41
 888 00b4 5B5C     		ldrb	r3, [r3, r1]
 889 00b6 1343     		orrs	r3, r2
 890 00b8 DAB2     		uxtb	r2, r3
 891 00ba 124B     		ldr	r3, .L47+8
 892 00bc 1A54     		strb	r2, [r3, r0]
 842:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****                 OS_EXIT_CRITICAL();
 893              		.loc 1 842 0
 894 00be FB68     		ldr	r3, [r7, #12]
 895 00c0 1800     		movs	r0, r3
 896 00c2 FFF7FEFF 		bl	OS_CPU_SR_Restore
 843:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****                 if (OSRunning == OS_TRUE) {
 897              		.loc 1 843 0
 898 00c6 104B     		ldr	r3, .L47+12
 899 00c8 1B78     		ldrb	r3, [r3]
 900 00ca 012B     		cmp	r3, #1
 901 00cc 0BD1     		bne	.L46
 844:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****                     OS_Sched();                               /* Find new highest priority task    
 902              		.loc 1 844 0
 903 00ce FFF7FEFF 		bl	OS_Sched
 904 00d2 08E0     		b	.L46
 905              	.L43:
 845:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****                 }
 846:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****             } else {
 847:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****                 OS_EXIT_CRITICAL();
 906              		.loc 1 847 0
 907 00d4 FB68     		ldr	r3, [r7, #12]
 908 00d6 1800     		movs	r0, r3
 909 00d8 FFF7FEFF 		bl	OS_CPU_SR_Restore
 910 00dc 03E0     		b	.L46
 911              	.L42:
 848:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****             }
 849:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         } else {                                              /* Must be pending on event          
 850:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****             OS_EXIT_CRITICAL();
 912              		.loc 1 850 0
 913 00de FB68     		ldr	r3, [r7, #12]
 914 00e0 1800     		movs	r0, r3
 915 00e2 FFF7FEFF 		bl	OS_CPU_SR_Restore
 916              	.L46:
 851:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         }
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 32


 852:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         return (OS_ERR_NONE);
 917              		.loc 1 852 0
 918 00e6 0023     		movs	r3, #0
 919 00e8 04E0     		b	.L38
 920              	.L41:
 853:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 854:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_EXIT_CRITICAL();
 921              		.loc 1 854 0
 922 00ea FB68     		ldr	r3, [r7, #12]
 923 00ec 1800     		movs	r0, r3
 924 00ee FFF7FEFF 		bl	OS_CPU_SR_Restore
 855:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     return (OS_ERR_TASK_NOT_SUSPENDED);
 925              		.loc 1 855 0
 926 00f2 4423     		movs	r3, #68
 927              	.L38:
 856:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** }
 928              		.loc 1 856 0
 929 00f4 1800     		movs	r0, r3
 930 00f6 BD46     		mov	sp, r7
 931 00f8 04B0     		add	sp, sp, #16
 932              		@ sp needed
 933 00fa 80BD     		pop	{r7, pc}
 934              	.L48:
 935              		.align	2
 936              	.L47:
 937 00fc 00000000 		.word	OSTCBPrioTbl
 938 0100 00000000 		.word	OSRdyGrp
 939 0104 00000000 		.word	OSRdyTbl
 940 0108 00000000 		.word	OSRunning
 941              		.cfi_endproc
 942              	.LFE4:
 943              		.size	OSTaskResume, .-OSTaskResume
 944              		.section	.text.OSTaskStkChk,"ax",%progbits
 945              		.align	2
 946              		.global	OSTaskStkChk
 947              		.code	16
 948              		.thumb_func
 949              		.type	OSTaskStkChk, %function
 950              	OSTaskStkChk:
 951              	.LFB5:
 857:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
 858:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** /*$PAGE*/
 859:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** /*
 860:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** ***************************************************************************************************
 861:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                                           STACK CHECKING
 862:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
 863:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Description: This function is called to check the amount of free memory left on the specified tas
 864:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              stack.
 865:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
 866:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Arguments  : prio          is the task priority
 867:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
 868:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              p_stk_data    is a pointer to a data structure of type OS_STK_DATA.
 869:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
 870:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Returns    : OS_ERR_NONE            upon success
 871:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              OS_ERR_PRIO_INVALID    if the priority you specify is higher that the maximum allowe
 872:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                                     (i.e. > OS_LOWEST_PRIO) or, you have not specified OS_PRIO_SE
 873:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              OS_ERR_TASK_NOT_EXIST  if the desired task has not been created or is assigned to a 
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 33


 874:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              OS_ERR_TASK_OPT        if you did NOT specified OS_TASK_OPT_STK_CHK when the task wa
 875:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              OS_ERR_PDATA_NULL      if 'p_stk_data' is a NULL pointer
 876:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** ***************************************************************************************************
 877:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** */
 878:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if (OS_TASK_STAT_STK_CHK_EN > 0u) && (OS_TASK_CREATE_EXT_EN > 0u)
 879:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** INT8U  OSTaskStkChk (INT8U         prio,
 880:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****                      OS_STK_DATA  *p_stk_data)
 881:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** {
 952              		.loc 1 881 0
 953              		.cfi_startproc
 954              		@ args = 0, pretend = 0, frame = 32
 955              		@ frame_needed = 1, uses_anonymous_args = 0
 956 0000 80B5     		push	{r7, lr}
 957              		.cfi_def_cfa_offset 8
 958              		.cfi_offset 7, -8
 959              		.cfi_offset 14, -4
 960 0002 88B0     		sub	sp, sp, #32
 961              		.cfi_def_cfa_offset 40
 962 0004 00AF     		add	r7, sp, #0
 963              		.cfi_def_cfa_register 7
 964 0006 0200     		movs	r2, r0
 965 0008 3960     		str	r1, [r7]
 966 000a FB1D     		adds	r3, r7, #7
 967 000c 1A70     		strb	r2, [r3]
 882:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_TCB    *ptcb;
 883:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_STK    *pchk;
 884:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     INT32U     nfree;
 885:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     INT32U     size;
 886:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if OS_CRITICAL_METHOD == 3u                           /* Allocate storage for CPU status register 
 887:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_CPU_SR  cpu_sr = 0u;
 968              		.loc 1 887 0
 969 000e 0023     		movs	r3, #0
 970 0010 7B61     		str	r3, [r7, #20]
 888:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
 889:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
 890:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
 891:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
 892:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if OS_ARG_CHK_EN > 0u
 893:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (prio > OS_LOWEST_PRIO) {                       /* Make sure task priority is valid         
 971              		.loc 1 893 0
 972 0012 FB1D     		adds	r3, r7, #7
 973 0014 1B78     		ldrb	r3, [r3]
 974 0016 1F2B     		cmp	r3, #31
 975 0018 05D9     		bls	.L50
 894:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         if (prio != OS_PRIO_SELF) {
 976              		.loc 1 894 0
 977 001a FB1D     		adds	r3, r7, #7
 978 001c 1B78     		ldrb	r3, [r3]
 979 001e FF2B     		cmp	r3, #255
 980 0020 01D0     		beq	.L50
 895:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****             return (OS_ERR_PRIO_INVALID);
 981              		.loc 1 895 0
 982 0022 2A23     		movs	r3, #42
 983 0024 5BE0     		b	.L51
 984              	.L50:
 896:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         }
 897:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 34


 898:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (p_stk_data == (OS_STK_DATA *)0) {              /* Validate 'p_stk_data'                    
 985              		.loc 1 898 0
 986 0026 3B68     		ldr	r3, [r7]
 987 0028 002B     		cmp	r3, #0
 988 002a 01D1     		bne	.L52
 899:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         return (OS_ERR_PDATA_NULL);
 989              		.loc 1 899 0
 990 002c 0923     		movs	r3, #9
 991 002e 56E0     		b	.L51
 992              	.L52:
 900:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 901:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
 902:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     p_stk_data->OSFree = 0u;                           /* Assume failure, set to 0 size            
 993              		.loc 1 902 0
 994 0030 3B68     		ldr	r3, [r7]
 995 0032 0022     		movs	r2, #0
 996 0034 1A60     		str	r2, [r3]
 903:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     p_stk_data->OSUsed = 0u;
 997              		.loc 1 903 0
 998 0036 3B68     		ldr	r3, [r7]
 999 0038 0022     		movs	r2, #0
 1000 003a 5A60     		str	r2, [r3, #4]
 904:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_ENTER_CRITICAL();
 1001              		.loc 1 904 0
 1002 003c FFF7FEFF 		bl	OS_CPU_SR_Save
 1003 0040 0300     		movs	r3, r0
 1004 0042 7B61     		str	r3, [r7, #20]
 905:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (prio == OS_PRIO_SELF) {                        /* See if check for SELF                    
 1005              		.loc 1 905 0
 1006 0044 FB1D     		adds	r3, r7, #7
 1007 0046 1B78     		ldrb	r3, [r3]
 1008 0048 FF2B     		cmp	r3, #255
 1009 004a 05D1     		bne	.L53
 906:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         prio = OSTCBCur->OSTCBPrio;
 1010              		.loc 1 906 0
 1011 004c 264B     		ldr	r3, .L59
 1012 004e 1A68     		ldr	r2, [r3]
 1013 0050 FB1D     		adds	r3, r7, #7
 1014 0052 2621     		movs	r1, #38
 1015 0054 525C     		ldrb	r2, [r2, r1]
 1016 0056 1A70     		strb	r2, [r3]
 1017              	.L53:
 907:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 908:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     ptcb = OSTCBPrioTbl[prio];
 1018              		.loc 1 908 0
 1019 0058 FB1D     		adds	r3, r7, #7
 1020 005a 1A78     		ldrb	r2, [r3]
 1021 005c 234B     		ldr	r3, .L59+4
 1022 005e 9200     		lsls	r2, r2, #2
 1023 0060 D358     		ldr	r3, [r2, r3]
 1024 0062 3B61     		str	r3, [r7, #16]
 909:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (ptcb == (OS_TCB *)0) {                         /* Make sure task exist                     
 1025              		.loc 1 909 0
 1026 0064 3B69     		ldr	r3, [r7, #16]
 1027 0066 002B     		cmp	r3, #0
 1028 0068 05D1     		bne	.L54
 910:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         OS_EXIT_CRITICAL();
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 35


 1029              		.loc 1 910 0
 1030 006a 7B69     		ldr	r3, [r7, #20]
 1031 006c 1800     		movs	r0, r3
 1032 006e FFF7FEFF 		bl	OS_CPU_SR_Restore
 911:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         return (OS_ERR_TASK_NOT_EXIST);
 1033              		.loc 1 911 0
 1034 0072 4323     		movs	r3, #67
 1035 0074 33E0     		b	.L51
 1036              	.L54:
 912:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 913:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (ptcb == OS_TCB_RESERVED) {
 1037              		.loc 1 913 0
 1038 0076 3B69     		ldr	r3, [r7, #16]
 1039 0078 012B     		cmp	r3, #1
 1040 007a 05D1     		bne	.L55
 914:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         OS_EXIT_CRITICAL();
 1041              		.loc 1 914 0
 1042 007c 7B69     		ldr	r3, [r7, #20]
 1043 007e 1800     		movs	r0, r3
 1044 0080 FFF7FEFF 		bl	OS_CPU_SR_Restore
 915:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         return (OS_ERR_TASK_NOT_EXIST);
 1045              		.loc 1 915 0
 1046 0084 4323     		movs	r3, #67
 1047 0086 2AE0     		b	.L51
 1048              	.L55:
 916:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 917:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if ((ptcb->OSTCBOpt & OS_TASK_OPT_STK_CHK) == 0u) { /* Make sure stack checking option is set  
 1049              		.loc 1 917 0
 1050 0088 3B69     		ldr	r3, [r7, #16]
 1051 008a 1B8A     		ldrh	r3, [r3, #16]
 1052 008c 1A00     		movs	r2, r3
 1053 008e 0123     		movs	r3, #1
 1054 0090 1340     		ands	r3, r2
 1055 0092 05D1     		bne	.L56
 918:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         OS_EXIT_CRITICAL();
 1056              		.loc 1 918 0
 1057 0094 7B69     		ldr	r3, [r7, #20]
 1058 0096 1800     		movs	r0, r3
 1059 0098 FFF7FEFF 		bl	OS_CPU_SR_Restore
 919:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         return (OS_ERR_TASK_OPT);
 1060              		.loc 1 919 0
 1061 009c 4523     		movs	r3, #69
 1062 009e 1EE0     		b	.L51
 1063              	.L56:
 920:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 921:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     nfree = 0u;
 1064              		.loc 1 921 0
 1065 00a0 0023     		movs	r3, #0
 1066 00a2 BB61     		str	r3, [r7, #24]
 922:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     size  = ptcb->OSTCBStkSize;
 1067              		.loc 1 922 0
 1068 00a4 3B69     		ldr	r3, [r7, #16]
 1069 00a6 DB68     		ldr	r3, [r3, #12]
 1070 00a8 FB60     		str	r3, [r7, #12]
 923:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     pchk  = ptcb->OSTCBStkBottom;
 1071              		.loc 1 923 0
 1072 00aa 3B69     		ldr	r3, [r7, #16]
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 36


 1073 00ac 9B68     		ldr	r3, [r3, #8]
 1074 00ae FB61     		str	r3, [r7, #28]
 924:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_EXIT_CRITICAL();
 1075              		.loc 1 924 0
 1076 00b0 7B69     		ldr	r3, [r7, #20]
 1077 00b2 1800     		movs	r0, r3
 1078 00b4 FFF7FEFF 		bl	OS_CPU_SR_Restore
 925:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if OS_STK_GROWTH == 1u
 926:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     while (*pchk++ == (OS_STK)0) {                    /* Compute the number of zero entries on the 
 1079              		.loc 1 926 0
 1080 00b8 02E0     		b	.L57
 1081              	.L58:
 927:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         nfree++;
 1082              		.loc 1 927 0
 1083 00ba BB69     		ldr	r3, [r7, #24]
 1084 00bc 0133     		adds	r3, r3, #1
 1085 00be BB61     		str	r3, [r7, #24]
 1086              	.L57:
 926:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         nfree++;
 1087              		.loc 1 926 0
 1088 00c0 FB69     		ldr	r3, [r7, #28]
 1089 00c2 1A1D     		adds	r2, r3, #4
 1090 00c4 FA61     		str	r2, [r7, #28]
 1091 00c6 1B68     		ldr	r3, [r3]
 1092 00c8 002B     		cmp	r3, #0
 1093 00ca F6D0     		beq	.L58
 928:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 929:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #else
 930:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     while (*pchk-- == (OS_STK)0) {
 931:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         nfree++;
 932:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 933:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
 934:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     p_stk_data->OSFree = nfree;                       /* Store   number of free entries on the stk 
 1094              		.loc 1 934 0
 1095 00cc 3B68     		ldr	r3, [r7]
 1096 00ce BA69     		ldr	r2, [r7, #24]
 1097 00d0 1A60     		str	r2, [r3]
 935:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     p_stk_data->OSUsed = size - nfree;                /* Compute number of entries used on the stk 
 1098              		.loc 1 935 0
 1099 00d2 FA68     		ldr	r2, [r7, #12]
 1100 00d4 BB69     		ldr	r3, [r7, #24]
 1101 00d6 D21A     		subs	r2, r2, r3
 1102 00d8 3B68     		ldr	r3, [r7]
 1103 00da 5A60     		str	r2, [r3, #4]
 936:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     return (OS_ERR_NONE);
 1104              		.loc 1 936 0
 1105 00dc 0023     		movs	r3, #0
 1106              	.L51:
 937:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** }
 1107              		.loc 1 937 0
 1108 00de 1800     		movs	r0, r3
 1109 00e0 BD46     		mov	sp, r7
 1110 00e2 08B0     		add	sp, sp, #32
 1111              		@ sp needed
 1112 00e4 80BD     		pop	{r7, pc}
 1113              	.L60:
 1114 00e6 C046     		.align	2
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 37


 1115              	.L59:
 1116 00e8 00000000 		.word	OSTCBCur
 1117 00ec 00000000 		.word	OSTCBPrioTbl
 1118              		.cfi_endproc
 1119              	.LFE5:
 1120              		.size	OSTaskStkChk, .-OSTaskStkChk
 1121              		.section	.text.OSTaskSuspend,"ax",%progbits
 1122              		.align	2
 1123              		.global	OSTaskSuspend
 1124              		.code	16
 1125              		.thumb_func
 1126              		.type	OSTaskSuspend, %function
 1127              	OSTaskSuspend:
 1128              	.LFB6:
 938:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
 939:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** /*$PAGE*/
 940:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** /*
 941:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** ***************************************************************************************************
 942:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                                           SUSPEND A TASK
 943:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
 944:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Description: This function is called to suspend a task.  The task can be the calling task if the
 945:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              priority passed to OSTaskSuspend() is the priority of the calling task or OS_PRIO_SE
 946:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
 947:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Arguments  : prio     is the priority of the task to suspend.  If you specify OS_PRIO_SELF, the
 948:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                       calling task will suspend itself and rescheduling will occur.
 949:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
 950:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Returns    : OS_ERR_NONE               if the requested task is suspended
 951:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              OS_ERR_TASK_SUSPEND_IDLE  if you attempted to suspend the idle task which is not all
 952:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              OS_ERR_PRIO_INVALID       if the priority you specify is higher that the maximum all
 953:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                                        (i.e. >= OS_LOWEST_PRIO) or, you have not specified OS_PRI
 954:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              OS_ERR_TASK_SUSPEND_PRIO  if the task to suspend does not exist
 955:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              OS_ERR_TASK_NOT_EXITS     if the task is assigned to a Mutex PIP
 956:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
 957:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Note       : You should use this function with great care.  If you suspend a task that is waiting
 958:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              an event (i.e. a message, a semaphore, a queue ...) you will prevent this task from
 959:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              running when the event arrives.
 960:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** ***************************************************************************************************
 961:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** */
 962:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
 963:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if OS_TASK_SUSPEND_EN > 0u
 964:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** INT8U  OSTaskSuspend (INT8U prio)
 965:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** {
 1129              		.loc 1 965 0
 1130              		.cfi_startproc
 1131              		@ args = 0, pretend = 0, frame = 24
 1132              		@ frame_needed = 1, uses_anonymous_args = 0
 1133 0000 80B5     		push	{r7, lr}
 1134              		.cfi_def_cfa_offset 8
 1135              		.cfi_offset 7, -8
 1136              		.cfi_offset 14, -4
 1137 0002 86B0     		sub	sp, sp, #24
 1138              		.cfi_def_cfa_offset 32
 1139 0004 00AF     		add	r7, sp, #0
 1140              		.cfi_def_cfa_register 7
 1141 0006 0200     		movs	r2, r0
 1142 0008 FB1D     		adds	r3, r7, #7
 1143 000a 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 38


 966:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     BOOLEAN    self;
 967:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_TCB    *ptcb;
 968:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     INT8U      y;
 969:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if OS_CRITICAL_METHOD == 3u                     /* Allocate storage for CPU status register       
 970:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_CPU_SR  cpu_sr = 0u;
 1144              		.loc 1 970 0
 1145 000c 0023     		movs	r3, #0
 1146 000e 3B61     		str	r3, [r7, #16]
 971:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
 972:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
 973:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
 974:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
 975:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if OS_ARG_CHK_EN > 0u
 976:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (prio == OS_TASK_IDLE_PRIO) {                            /* Not allowed to suspend idle task
 1147              		.loc 1 976 0
 1148 0010 FB1D     		adds	r3, r7, #7
 1149 0012 1B78     		ldrb	r3, [r3]
 1150 0014 1F2B     		cmp	r3, #31
 1151 0016 01D1     		bne	.L62
 977:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         return (OS_ERR_TASK_SUSPEND_IDLE);
 1152              		.loc 1 977 0
 1153 0018 4723     		movs	r3, #71
 1154 001a 83E0     		b	.L63
 1155              	.L62:
 978:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 979:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (prio >= OS_LOWEST_PRIO) {                               /* Task priority valid ?           
 1156              		.loc 1 979 0
 1157 001c FB1D     		adds	r3, r7, #7
 1158 001e 1B78     		ldrb	r3, [r3]
 1159 0020 1E2B     		cmp	r3, #30
 1160 0022 05D9     		bls	.L64
 980:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         if (prio != OS_PRIO_SELF) {
 1161              		.loc 1 980 0
 1162 0024 FB1D     		adds	r3, r7, #7
 1163 0026 1B78     		ldrb	r3, [r3]
 1164 0028 FF2B     		cmp	r3, #255
 1165 002a 01D0     		beq	.L64
 981:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****             return (OS_ERR_PRIO_INVALID);
 1166              		.loc 1 981 0
 1167 002c 2A23     		movs	r3, #42
 1168 002e 79E0     		b	.L63
 1169              	.L64:
 982:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         }
 983:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 984:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
 985:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_ENTER_CRITICAL();
 1170              		.loc 1 985 0
 1171 0030 FFF7FEFF 		bl	OS_CPU_SR_Save
 1172 0034 0300     		movs	r3, r0
 1173 0036 3B61     		str	r3, [r7, #16]
 986:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (prio == OS_PRIO_SELF) {                                 /* See if suspend SELF             
 1174              		.loc 1 986 0
 1175 0038 FB1D     		adds	r3, r7, #7
 1176 003a 1B78     		ldrb	r3, [r3]
 1177 003c FF2B     		cmp	r3, #255
 1178 003e 0AD1     		bne	.L65
 987:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         prio = OSTCBCur->OSTCBPrio;
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 39


 1179              		.loc 1 987 0
 1180 0040 3A4B     		ldr	r3, .L72
 1181 0042 1A68     		ldr	r2, [r3]
 1182 0044 FB1D     		adds	r3, r7, #7
 1183 0046 2621     		movs	r1, #38
 1184 0048 525C     		ldrb	r2, [r2, r1]
 1185 004a 1A70     		strb	r2, [r3]
 988:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         self = OS_TRUE;
 1186              		.loc 1 988 0
 1187 004c 1723     		movs	r3, #23
 1188 004e FB18     		adds	r3, r7, r3
 1189 0050 0122     		movs	r2, #1
 1190 0052 1A70     		strb	r2, [r3]
 1191 0054 10E0     		b	.L66
 1192              	.L65:
 989:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     } else if (prio == OSTCBCur->OSTCBPrio) {                   /* See if suspending self          
 1193              		.loc 1 989 0
 1194 0056 354B     		ldr	r3, .L72
 1195 0058 1B68     		ldr	r3, [r3]
 1196 005a 2622     		movs	r2, #38
 1197 005c 9B5C     		ldrb	r3, [r3, r2]
 1198 005e FA1D     		adds	r2, r7, #7
 1199 0060 1278     		ldrb	r2, [r2]
 1200 0062 9A42     		cmp	r2, r3
 1201 0064 04D1     		bne	.L67
 990:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         self = OS_TRUE;
 1202              		.loc 1 990 0
 1203 0066 1723     		movs	r3, #23
 1204 0068 FB18     		adds	r3, r7, r3
 1205 006a 0122     		movs	r2, #1
 1206 006c 1A70     		strb	r2, [r3]
 1207 006e 03E0     		b	.L66
 1208              	.L67:
 991:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     } else {
 992:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         self = OS_FALSE;                                        /* No suspending another task      
 1209              		.loc 1 992 0
 1210 0070 1723     		movs	r3, #23
 1211 0072 FB18     		adds	r3, r7, r3
 1212 0074 0022     		movs	r2, #0
 1213 0076 1A70     		strb	r2, [r3]
 1214              	.L66:
 993:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 994:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     ptcb = OSTCBPrioTbl[prio];
 1215              		.loc 1 994 0
 1216 0078 FB1D     		adds	r3, r7, #7
 1217 007a 1A78     		ldrb	r2, [r3]
 1218 007c 2C4B     		ldr	r3, .L72+4
 1219 007e 9200     		lsls	r2, r2, #2
 1220 0080 D358     		ldr	r3, [r2, r3]
 1221 0082 FB60     		str	r3, [r7, #12]
 995:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (ptcb == (OS_TCB *)0) {                                  /* Task to suspend must exist      
 1222              		.loc 1 995 0
 1223 0084 FB68     		ldr	r3, [r7, #12]
 1224 0086 002B     		cmp	r3, #0
 1225 0088 05D1     		bne	.L68
 996:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         OS_EXIT_CRITICAL();
 1226              		.loc 1 996 0
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 40


 1227 008a 3B69     		ldr	r3, [r7, #16]
 1228 008c 1800     		movs	r0, r3
 1229 008e FFF7FEFF 		bl	OS_CPU_SR_Restore
 997:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         return (OS_ERR_TASK_SUSPEND_PRIO);
 1230              		.loc 1 997 0
 1231 0092 4823     		movs	r3, #72
 1232 0094 46E0     		b	.L63
 1233              	.L68:
 998:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 999:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (ptcb == OS_TCB_RESERVED) {                              /* See if assigned to Mutex        
 1234              		.loc 1 999 0
 1235 0096 FB68     		ldr	r3, [r7, #12]
 1236 0098 012B     		cmp	r3, #1
 1237 009a 05D1     		bne	.L69
1000:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         OS_EXIT_CRITICAL();
 1238              		.loc 1 1000 0
 1239 009c 3B69     		ldr	r3, [r7, #16]
 1240 009e 1800     		movs	r0, r3
 1241 00a0 FFF7FEFF 		bl	OS_CPU_SR_Restore
1001:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         return (OS_ERR_TASK_NOT_EXIST);
 1242              		.loc 1 1001 0
 1243 00a4 4323     		movs	r3, #67
 1244 00a6 3DE0     		b	.L63
 1245              	.L69:
1002:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
1003:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     y            = ptcb->OSTCBY;
 1246              		.loc 1 1003 0
 1247 00a8 0B23     		movs	r3, #11
 1248 00aa FB18     		adds	r3, r7, r3
 1249 00ac FA68     		ldr	r2, [r7, #12]
 1250 00ae 2821     		movs	r1, #40
 1251 00b0 525C     		ldrb	r2, [r2, r1]
 1252 00b2 1A70     		strb	r2, [r3]
1004:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OSRdyTbl[y] &= (OS_PRIO)~ptcb->OSTCBBitX;                   /* Make task not ready             
 1253              		.loc 1 1004 0
 1254 00b4 0B23     		movs	r3, #11
 1255 00b6 FB18     		adds	r3, r7, r3
 1256 00b8 1B78     		ldrb	r3, [r3]
 1257 00ba 0B22     		movs	r2, #11
 1258 00bc BA18     		adds	r2, r7, r2
 1259 00be 1278     		ldrb	r2, [r2]
 1260 00c0 1C49     		ldr	r1, .L72+8
 1261 00c2 8A5C     		ldrb	r2, [r1, r2]
 1262 00c4 F968     		ldr	r1, [r7, #12]
 1263 00c6 2920     		movs	r0, #41
 1264 00c8 095C     		ldrb	r1, [r1, r0]
 1265 00ca C943     		mvns	r1, r1
 1266 00cc C9B2     		uxtb	r1, r1
 1267 00ce 0A40     		ands	r2, r1
 1268 00d0 D1B2     		uxtb	r1, r2
 1269 00d2 184A     		ldr	r2, .L72+8
 1270 00d4 D154     		strb	r1, [r2, r3]
1005:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (OSRdyTbl[y] == 0u) {
 1271              		.loc 1 1005 0
 1272 00d6 0B23     		movs	r3, #11
 1273 00d8 FB18     		adds	r3, r7, r3
 1274 00da 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 41


 1275 00dc 154A     		ldr	r2, .L72+8
 1276 00de D35C     		ldrb	r3, [r2, r3]
 1277 00e0 002B     		cmp	r3, #0
 1278 00e2 0AD1     		bne	.L70
1006:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         OSRdyGrp &= (OS_PRIO)~ptcb->OSTCBBitY;
 1279              		.loc 1 1006 0
 1280 00e4 FB68     		ldr	r3, [r7, #12]
 1281 00e6 2A22     		movs	r2, #42
 1282 00e8 9B5C     		ldrb	r3, [r3, r2]
 1283 00ea DB43     		mvns	r3, r3
 1284 00ec DBB2     		uxtb	r3, r3
 1285 00ee 124A     		ldr	r2, .L72+12
 1286 00f0 1278     		ldrb	r2, [r2]
 1287 00f2 1340     		ands	r3, r2
 1288 00f4 DAB2     		uxtb	r2, r3
 1289 00f6 104B     		ldr	r3, .L72+12
 1290 00f8 1A70     		strb	r2, [r3]
 1291              	.L70:
1007:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
1008:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     ptcb->OSTCBStat |= OS_STAT_SUSPEND;                         /* Status of task is 'SUSPENDED'   
 1292              		.loc 1 1008 0
 1293 00fa FB68     		ldr	r3, [r7, #12]
 1294 00fc 2422     		movs	r2, #36
 1295 00fe 9B5C     		ldrb	r3, [r3, r2]
 1296 0100 0822     		movs	r2, #8
 1297 0102 1343     		orrs	r3, r2
 1298 0104 D9B2     		uxtb	r1, r3
 1299 0106 FB68     		ldr	r3, [r7, #12]
 1300 0108 2422     		movs	r2, #36
 1301 010a 9954     		strb	r1, [r3, r2]
1009:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_EXIT_CRITICAL();
 1302              		.loc 1 1009 0
 1303 010c 3B69     		ldr	r3, [r7, #16]
 1304 010e 1800     		movs	r0, r3
 1305 0110 FFF7FEFF 		bl	OS_CPU_SR_Restore
1010:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (self == OS_TRUE) {                                      /* Context switch only if SELF     
 1306              		.loc 1 1010 0
 1307 0114 1723     		movs	r3, #23
 1308 0116 FB18     		adds	r3, r7, r3
 1309 0118 1B78     		ldrb	r3, [r3]
 1310 011a 012B     		cmp	r3, #1
 1311 011c 01D1     		bne	.L71
1011:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         OS_Sched();                                             /* Find new highest priority task  
 1312              		.loc 1 1011 0
 1313 011e FFF7FEFF 		bl	OS_Sched
 1314              	.L71:
1012:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
1013:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     return (OS_ERR_NONE);
 1315              		.loc 1 1013 0
 1316 0122 0023     		movs	r3, #0
 1317              	.L63:
1014:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** }
 1318              		.loc 1 1014 0
 1319 0124 1800     		movs	r0, r3
 1320 0126 BD46     		mov	sp, r7
 1321 0128 06B0     		add	sp, sp, #24
 1322              		@ sp needed
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 42


 1323 012a 80BD     		pop	{r7, pc}
 1324              	.L73:
 1325              		.align	2
 1326              	.L72:
 1327 012c 00000000 		.word	OSTCBCur
 1328 0130 00000000 		.word	OSTCBPrioTbl
 1329 0134 00000000 		.word	OSRdyTbl
 1330 0138 00000000 		.word	OSRdyGrp
 1331              		.cfi_endproc
 1332              	.LFE6:
 1333              		.size	OSTaskSuspend, .-OSTaskSuspend
 1334              		.section	.text.OSTaskRegGet,"ax",%progbits
 1335              		.align	2
 1336              		.global	OSTaskRegGet
 1337              		.code	16
 1338              		.thumb_func
 1339              		.type	OSTaskRegGet, %function
 1340              	OSTaskRegGet:
 1341              	.LFB7:
1015:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
1016:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** /*$PAGE*/
1017:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** /*
1018:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** ***************************************************************************************************
1019:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                                            QUERY A TASK
1020:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
1021:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Description: This function is called to obtain a copy of the desired task's TCB.
1022:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
1023:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Arguments  : prio         is the priority of the task to obtain information from.
1024:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
1025:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              p_task_data  is a pointer to where the desired task's OS_TCB will be stored.
1026:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
1027:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Returns    : OS_ERR_NONE            if the requested task is suspended
1028:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              OS_ERR_PRIO_INVALID    if the priority you specify is higher that the maximum allowe
1029:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                                     (i.e. > OS_LOWEST_PRIO) or, you have not specified OS_PRIO_SE
1030:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              OS_ERR_PRIO            if the desired task has not been created
1031:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              OS_ERR_TASK_NOT_EXIST  if the task is assigned to a Mutex PIP
1032:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              OS_ERR_PDATA_NULL      if 'p_task_data' is a NULL pointer
1033:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** ***************************************************************************************************
1034:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** */
1035:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
1036:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if OS_TASK_QUERY_EN > 0u
1037:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** INT8U  OSTaskQuery (INT8U    prio,
1038:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****                     OS_TCB  *p_task_data)
1039:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** {
1040:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_TCB    *ptcb;
1041:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if OS_CRITICAL_METHOD == 3u                     /* Allocate storage for CPU status register       
1042:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_CPU_SR  cpu_sr = 0u;
1043:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
1044:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
1045:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
1046:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
1047:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if OS_ARG_CHK_EN > 0u
1048:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (prio > OS_LOWEST_PRIO) {                 /* Task priority valid ?                          
1049:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         if (prio != OS_PRIO_SELF) {
1050:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****             return (OS_ERR_PRIO_INVALID);
1051:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         }
1052:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 43


1053:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (p_task_data == (OS_TCB *)0) {            /* Validate 'p_task_data'                         
1054:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         return (OS_ERR_PDATA_NULL);
1055:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
1056:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
1057:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_ENTER_CRITICAL();
1058:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (prio == OS_PRIO_SELF) {                  /* See if suspend SELF                            
1059:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         prio = OSTCBCur->OSTCBPrio;
1060:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
1061:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     ptcb = OSTCBPrioTbl[prio];
1062:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (ptcb == (OS_TCB *)0) {                   /* Task to query must exist                       
1063:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         OS_EXIT_CRITICAL();
1064:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         return (OS_ERR_PRIO);
1065:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
1066:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (ptcb == OS_TCB_RESERVED) {               /* Task to query must not be assigned to a Mutex  
1067:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         OS_EXIT_CRITICAL();
1068:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         return (OS_ERR_TASK_NOT_EXIST);
1069:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
1070:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****                                                  /* Copy TCB into user storage area                
1071:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_MemCopy((INT8U *)p_task_data, (INT8U *)ptcb, sizeof(OS_TCB));
1072:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_EXIT_CRITICAL();
1073:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     return (OS_ERR_NONE);
1074:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** }
1075:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
1076:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** /*$PAGE*/
1077:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** /*
1078:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** ***************************************************************************************************
1079:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                              GET THE CURRENT VALUE OF A TASK REGISTER
1080:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
1081:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Description: This function is called to obtain the current value of a task register.  Task regist
1082:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              are application specific and can be used to store task specific values such as 'erro
1083:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              numbers' (i.e. errno), statistics, etc.  Each task register can hold a 32-bit value.
1084:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
1085:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Arguments  : prio      is the priority of the task you want to get the task register from.  If yo
1086:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                        specify OS_PRIO_SELF then the task register of the current task will be ob
1087:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
1088:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              id        is the 'id' of the desired task register.  Note that the 'id' must be less
1089:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                        than OS_TASK_REG_TBL_SIZE
1090:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
1091:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              perr      is a pointer to a variable that will hold an error code related to this ca
1092:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
1093:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                        OS_ERR_NONE            if the call was successful
1094:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                        OS_ERR_PRIO_INVALID    if you specified an invalid priority
1095:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                        OS_ERR_ID_INVALID      if the 'id' is not between 0 and OS_TASK_REG_TBL_SI
1096:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
1097:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Returns    : The current value of the task's register or 0 if an error is detected.
1098:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
1099:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Note(s)    : The maximum number of task variables is 254
1100:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** ***************************************************************************************************
1101:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** */
1102:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
1103:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if OS_TASK_REG_TBL_SIZE > 0u
1104:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** INT32U  OSTaskRegGet (INT8U   prio,
1105:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****                       INT8U   id,
1106:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****                       INT8U  *perr)
1107:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** {
 1342              		.loc 1 1107 0
 1343              		.cfi_startproc
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 44


 1344              		@ args = 0, pretend = 0, frame = 24
 1345              		@ frame_needed = 1, uses_anonymous_args = 0
 1346 0000 80B5     		push	{r7, lr}
 1347              		.cfi_def_cfa_offset 8
 1348              		.cfi_offset 7, -8
 1349              		.cfi_offset 14, -4
 1350 0002 86B0     		sub	sp, sp, #24
 1351              		.cfi_def_cfa_offset 32
 1352 0004 00AF     		add	r7, sp, #0
 1353              		.cfi_def_cfa_register 7
 1354 0006 3A60     		str	r2, [r7]
 1355 0008 FB1D     		adds	r3, r7, #7
 1356 000a 021C     		adds	r2, r0, #0
 1357 000c 1A70     		strb	r2, [r3]
 1358 000e BB1D     		adds	r3, r7, #6
 1359 0010 0A1C     		adds	r2, r1, #0
 1360 0012 1A70     		strb	r2, [r3]
1108:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if OS_CRITICAL_METHOD == 3u                     /* Allocate storage for CPU status register       
1109:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_CPU_SR  cpu_sr = 0u;
 1361              		.loc 1 1109 0
 1362 0014 0023     		movs	r3, #0
 1363 0016 3B61     		str	r3, [r7, #16]
1110:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
1111:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     INT32U     value;
1112:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_TCB    *ptcb;
1113:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
1114:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
1115:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
1116:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #ifdef OS_SAFETY_CRITICAL
1117:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (perr == (INT8U *)0) {
1118:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
1119:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         return (0u);
1120:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
1121:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
1122:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
1123:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if OS_ARG_CHK_EN > 0u
1124:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (prio >= OS_LOWEST_PRIO) {
 1364              		.loc 1 1124 0
 1365 0018 FB1D     		adds	r3, r7, #7
 1366 001a 1B78     		ldrb	r3, [r3]
 1367 001c 1E2B     		cmp	r3, #30
 1368 001e 08D9     		bls	.L75
1125:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         if (prio != OS_PRIO_SELF) {
 1369              		.loc 1 1125 0
 1370 0020 FB1D     		adds	r3, r7, #7
 1371 0022 1B78     		ldrb	r3, [r3]
 1372 0024 FF2B     		cmp	r3, #255
 1373 0026 04D0     		beq	.L75
1126:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****             *perr = OS_ERR_PRIO_INVALID;
 1374              		.loc 1 1126 0
 1375 0028 3B68     		ldr	r3, [r7]
 1376 002a 2A22     		movs	r2, #42
 1377 002c 1A70     		strb	r2, [r3]
1127:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****             return (0u);
 1378              		.loc 1 1127 0
 1379 002e 0023     		movs	r3, #0
 1380 0030 2BE0     		b	.L76
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 45


 1381              	.L75:
1128:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         }
1129:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
1130:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (id >= OS_TASK_REG_TBL_SIZE) {
 1382              		.loc 1 1130 0
 1383 0032 BB1D     		adds	r3, r7, #6
 1384 0034 1B78     		ldrb	r3, [r3]
 1385 0036 002B     		cmp	r3, #0
 1386 0038 04D0     		beq	.L77
1131:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         *perr = OS_ERR_ID_INVALID;
 1387              		.loc 1 1131 0
 1388 003a 3B68     		ldr	r3, [r7]
 1389 003c 0822     		movs	r2, #8
 1390 003e 1A70     		strb	r2, [r3]
1132:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         return (0u);
 1391              		.loc 1 1132 0
 1392 0040 0023     		movs	r3, #0
 1393 0042 22E0     		b	.L76
 1394              	.L77:
1133:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
1134:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
1135:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_ENTER_CRITICAL();
 1395              		.loc 1 1135 0
 1396 0044 FFF7FEFF 		bl	OS_CPU_SR_Save
 1397 0048 0300     		movs	r3, r0
 1398 004a 3B61     		str	r3, [r7, #16]
1136:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (prio == OS_PRIO_SELF) {                  /* See if need to get register from current task  
 1399              		.loc 1 1136 0
 1400 004c FB1D     		adds	r3, r7, #7
 1401 004e 1B78     		ldrb	r3, [r3]
 1402 0050 FF2B     		cmp	r3, #255
 1403 0052 03D1     		bne	.L78
1137:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         ptcb = OSTCBCur;
 1404              		.loc 1 1137 0
 1405 0054 0F4B     		ldr	r3, .L80
 1406 0056 1B68     		ldr	r3, [r3]
 1407 0058 7B61     		str	r3, [r7, #20]
 1408 005a 05E0     		b	.L79
 1409              	.L78:
1138:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     } else {
1139:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         ptcb = OSTCBPrioTbl[prio];
 1410              		.loc 1 1139 0
 1411 005c FB1D     		adds	r3, r7, #7
 1412 005e 1A78     		ldrb	r2, [r3]
 1413 0060 0D4B     		ldr	r3, .L80+4
 1414 0062 9200     		lsls	r2, r2, #2
 1415 0064 D358     		ldr	r3, [r2, r3]
 1416 0066 7B61     		str	r3, [r7, #20]
 1417              	.L79:
1140:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
1141:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     value = ptcb->OSTCBRegTbl[id];
 1418              		.loc 1 1141 0
 1419 0068 BB1D     		adds	r3, r7, #6
 1420 006a 1B78     		ldrb	r3, [r3]
 1421 006c 7A69     		ldr	r2, [r7, #20]
 1422 006e 0A33     		adds	r3, r3, #10
 1423 0070 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 46


 1424 0072 D318     		adds	r3, r2, r3
 1425 0074 0433     		adds	r3, r3, #4
 1426 0076 1B68     		ldr	r3, [r3]
 1427 0078 FB60     		str	r3, [r7, #12]
1142:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_EXIT_CRITICAL();
 1428              		.loc 1 1142 0
 1429 007a 3B69     		ldr	r3, [r7, #16]
 1430 007c 1800     		movs	r0, r3
 1431 007e FFF7FEFF 		bl	OS_CPU_SR_Restore
1143:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     *perr = OS_ERR_NONE;
 1432              		.loc 1 1143 0
 1433 0082 3B68     		ldr	r3, [r7]
 1434 0084 0022     		movs	r2, #0
 1435 0086 1A70     		strb	r2, [r3]
1144:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     return (value);
 1436              		.loc 1 1144 0
 1437 0088 FB68     		ldr	r3, [r7, #12]
 1438              	.L76:
1145:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** }
 1439              		.loc 1 1145 0
 1440 008a 1800     		movs	r0, r3
 1441 008c BD46     		mov	sp, r7
 1442 008e 06B0     		add	sp, sp, #24
 1443              		@ sp needed
 1444 0090 80BD     		pop	{r7, pc}
 1445              	.L81:
 1446 0092 C046     		.align	2
 1447              	.L80:
 1448 0094 00000000 		.word	OSTCBCur
 1449 0098 00000000 		.word	OSTCBPrioTbl
 1450              		.cfi_endproc
 1451              	.LFE7:
 1452              		.size	OSTaskRegGet, .-OSTaskRegGet
 1453              		.section	.text.OSTaskRegGetID,"ax",%progbits
 1454              		.align	2
 1455              		.global	OSTaskRegGetID
 1456              		.code	16
 1457              		.thumb_func
 1458              		.type	OSTaskRegGetID, %function
 1459              	OSTaskRegGetID:
 1460              	.LFB8:
1146:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
1147:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
1148:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** /*$PAGE*/
1149:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** /*
1150:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** ***************************************************************************************************
1151:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                                    ALLOCATE THE NEXT AVAILABLE TASK REGISTER ID
1152:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
1153:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Description: This function is called to obtain a task register ID.  This function thus allows tas
1154:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              allocated dynamically instead of statically.
1155:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
1156:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Arguments  : p_err       is a pointer to a variable that will hold an error code related to this 
1157:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
1158:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                            OS_ERR_NONE               if the call was successful
1159:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                            OS_ERR_NO_MORE_ID_AVAIL   if you are attempting to assign more task re
1160:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                                                           have available through OS_TASK_REG_TBL_
1161:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 47


1162:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Returns    : The next available task register 'id' or OS_TASK_REG_TBL_SIZE if an error is detecte
1163:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** ***************************************************************************************************
1164:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** */
1165:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
1166:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if OS_TASK_REG_TBL_SIZE > 0u
1167:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** INT8U  OSTaskRegGetID (INT8U  *perr)
1168:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** {
 1461              		.loc 1 1168 0
 1462              		.cfi_startproc
 1463              		@ args = 0, pretend = 0, frame = 16
 1464              		@ frame_needed = 1, uses_anonymous_args = 0
 1465 0000 80B5     		push	{r7, lr}
 1466              		.cfi_def_cfa_offset 8
 1467              		.cfi_offset 7, -8
 1468              		.cfi_offset 14, -4
 1469 0002 84B0     		sub	sp, sp, #16
 1470              		.cfi_def_cfa_offset 24
 1471 0004 00AF     		add	r7, sp, #0
 1472              		.cfi_def_cfa_register 7
 1473 0006 7860     		str	r0, [r7, #4]
1169:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if OS_CRITICAL_METHOD == 3u                                    /* Allocate storage for CPU status 
1170:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_CPU_SR  cpu_sr = 0u;
 1474              		.loc 1 1170 0
 1475 0008 0023     		movs	r3, #0
 1476 000a FB60     		str	r3, [r7, #12]
1171:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
1172:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     INT8U      id;
1173:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
1174:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
1175:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #ifdef OS_SAFETY_CRITICAL
1176:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (perr == (INT8U *)0) {
1177:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
1178:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         return ((INT8U)OS_TASK_REG_TBL_SIZE);
1179:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
1180:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
1181:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
1182:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_ENTER_CRITICAL();
 1477              		.loc 1 1182 0
 1478 000c FFF7FEFF 		bl	OS_CPU_SR_Save
 1479 0010 0300     		movs	r3, r0
 1480 0012 FB60     		str	r3, [r7, #12]
1183:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (OSTaskRegNextAvailID >= OS_TASK_REG_TBL_SIZE) {         /* See if we exceeded the number of
 1481              		.loc 1 1183 0
 1482 0014 124B     		ldr	r3, .L85
 1483 0016 1B78     		ldrb	r3, [r3]
 1484 0018 002B     		cmp	r3, #0
 1485 001a 08D0     		beq	.L83
1184:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****        *perr = OS_ERR_NO_MORE_ID_AVAIL;                         /* Yes, cannot allocate more task r
 1486              		.loc 1 1184 0
 1487 001c 7B68     		ldr	r3, [r7, #4]
 1488 001e 9622     		movs	r2, #150
 1489 0020 1A70     		strb	r2, [r3]
1185:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         OS_EXIT_CRITICAL();
 1490              		.loc 1 1185 0
 1491 0022 FB68     		ldr	r3, [r7, #12]
 1492 0024 1800     		movs	r0, r3
 1493 0026 FFF7FEFF 		bl	OS_CPU_SR_Restore
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 48


1186:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         return ((INT8U)OS_TASK_REG_TBL_SIZE);
 1494              		.loc 1 1186 0
 1495 002a 0123     		movs	r3, #1
 1496 002c 14E0     		b	.L84
 1497              	.L83:
1187:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
1188:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****      
1189:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     id   = OSTaskRegNextAvailID;                                /* Assign the next available ID    
 1498              		.loc 1 1189 0
 1499 002e 0B23     		movs	r3, #11
 1500 0030 FB18     		adds	r3, r7, r3
 1501 0032 0B4A     		ldr	r2, .L85
 1502 0034 1278     		ldrb	r2, [r2]
 1503 0036 1A70     		strb	r2, [r3]
1190:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OSTaskRegNextAvailID++;                                     /* Increment available ID for next 
 1504              		.loc 1 1190 0
 1505 0038 094B     		ldr	r3, .L85
 1506 003a 1B78     		ldrb	r3, [r3]
 1507 003c 0133     		adds	r3, r3, #1
 1508 003e DAB2     		uxtb	r2, r3
 1509 0040 074B     		ldr	r3, .L85
 1510 0042 1A70     		strb	r2, [r3]
1191:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_EXIT_CRITICAL();
 1511              		.loc 1 1191 0
 1512 0044 FB68     		ldr	r3, [r7, #12]
 1513 0046 1800     		movs	r0, r3
 1514 0048 FFF7FEFF 		bl	OS_CPU_SR_Restore
1192:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****    *perr = OS_ERR_NONE;
 1515              		.loc 1 1192 0
 1516 004c 7B68     		ldr	r3, [r7, #4]
 1517 004e 0022     		movs	r2, #0
 1518 0050 1A70     		strb	r2, [r3]
1193:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     return (id);
 1519              		.loc 1 1193 0
 1520 0052 0B23     		movs	r3, #11
 1521 0054 FB18     		adds	r3, r7, r3
 1522 0056 1B78     		ldrb	r3, [r3]
 1523              	.L84:
1194:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** }
 1524              		.loc 1 1194 0
 1525 0058 1800     		movs	r0, r3
 1526 005a BD46     		mov	sp, r7
 1527 005c 04B0     		add	sp, sp, #16
 1528              		@ sp needed
 1529 005e 80BD     		pop	{r7, pc}
 1530              	.L86:
 1531              		.align	2
 1532              	.L85:
 1533 0060 00000000 		.word	OSTaskRegNextAvailID
 1534              		.cfi_endproc
 1535              	.LFE8:
 1536              		.size	OSTaskRegGetID, .-OSTaskRegGetID
 1537              		.section	.text.OSTaskRegSet,"ax",%progbits
 1538              		.align	2
 1539              		.global	OSTaskRegSet
 1540              		.code	16
 1541              		.thumb_func
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 49


 1542              		.type	OSTaskRegSet, %function
 1543              	OSTaskRegSet:
 1544              	.LFB9:
1195:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
1196:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
1197:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** /*$PAGE*/
1198:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** /*
1199:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** ***************************************************************************************************
1200:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                              SET THE CURRENT VALUE OF A TASK VARIABLE
1201:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
1202:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Description: This function is called to change the current value of a task register.  Task regist
1203:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              are application specific and can be used to store task specific values such as 'erro
1204:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              numbers' (i.e. errno), statistics, etc.  Each task register can hold a 32-bit value.
1205:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
1206:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Arguments  : prio      is the priority of the task you want to set the task register for.  If you
1207:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                        specify OS_PRIO_SELF then the task register of the current task will be ob
1208:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
1209:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              id        is the 'id' of the desired task register.  Note that the 'id' must be less
1210:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                        than OS_TASK_REG_TBL_SIZE
1211:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
1212:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              value     is the desired value for the task register.
1213:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
1214:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              perr      is a pointer to a variable that will hold an error code related to this ca
1215:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
1216:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                        OS_ERR_NONE            if the call was successful
1217:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                        OS_ERR_PRIO_INVALID    if you specified an invalid priority
1218:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                        OS_ERR_ID_INVALID      if the 'id' is not between 0 and OS_TASK_REG_TBL_SI
1219:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
1220:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Returns    : The current value of the task's variable or 0 if an error is detected.
1221:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
1222:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Note(s)    : The maximum number of task variables is 254
1223:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** ***************************************************************************************************
1224:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** */
1225:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
1226:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if OS_TASK_REG_TBL_SIZE > 0u
1227:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** void  OSTaskRegSet (INT8U    prio,
1228:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****                     INT8U    id,
1229:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****                     INT32U   value,
1230:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****                     INT8U   *perr)
1231:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** {
 1545              		.loc 1 1231 0
 1546              		.cfi_startproc
 1547              		@ args = 0, pretend = 0, frame = 24
 1548              		@ frame_needed = 1, uses_anonymous_args = 0
 1549 0000 80B5     		push	{r7, lr}
 1550              		.cfi_def_cfa_offset 8
 1551              		.cfi_offset 7, -8
 1552              		.cfi_offset 14, -4
 1553 0002 86B0     		sub	sp, sp, #24
 1554              		.cfi_def_cfa_offset 32
 1555 0004 00AF     		add	r7, sp, #0
 1556              		.cfi_def_cfa_register 7
 1557 0006 BA60     		str	r2, [r7, #8]
 1558 0008 7B60     		str	r3, [r7, #4]
 1559 000a 0F23     		movs	r3, #15
 1560 000c FB18     		adds	r3, r7, r3
 1561 000e 021C     		adds	r2, r0, #0
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 50


 1562 0010 1A70     		strb	r2, [r3]
 1563 0012 0E23     		movs	r3, #14
 1564 0014 FB18     		adds	r3, r7, r3
 1565 0016 0A1C     		adds	r2, r1, #0
 1566 0018 1A70     		strb	r2, [r3]
1232:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if OS_CRITICAL_METHOD == 3u                     /* Allocate storage for CPU status register       
1233:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_CPU_SR  cpu_sr = 0u;
 1567              		.loc 1 1233 0
 1568 001a 0023     		movs	r3, #0
 1569 001c 3B61     		str	r3, [r7, #16]
1234:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
1235:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_TCB    *ptcb;
1236:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
1237:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
1238:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #ifdef OS_SAFETY_CRITICAL
1239:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (perr == (INT8U *)0) {
1240:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
1241:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         return;
1242:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
1243:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
1244:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
1245:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if OS_ARG_CHK_EN > 0u
1246:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (prio >= OS_LOWEST_PRIO) {
 1570              		.loc 1 1246 0
 1571 001e 0F23     		movs	r3, #15
 1572 0020 FB18     		adds	r3, r7, r3
 1573 0022 1B78     		ldrb	r3, [r3]
 1574 0024 1E2B     		cmp	r3, #30
 1575 0026 08D9     		bls	.L88
1247:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         if (prio != OS_PRIO_SELF) {
 1576              		.loc 1 1247 0
 1577 0028 0F23     		movs	r3, #15
 1578 002a FB18     		adds	r3, r7, r3
 1579 002c 1B78     		ldrb	r3, [r3]
 1580 002e FF2B     		cmp	r3, #255
 1581 0030 03D0     		beq	.L88
1248:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****             *perr = OS_ERR_PRIO_INVALID;
 1582              		.loc 1 1248 0
 1583 0032 7B68     		ldr	r3, [r7, #4]
 1584 0034 2A22     		movs	r2, #42
 1585 0036 1A70     		strb	r2, [r3]
1249:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****             return;
 1586              		.loc 1 1249 0
 1587 0038 2DE0     		b	.L87
 1588              	.L88:
1250:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         }
1251:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
1252:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (id >= OS_TASK_REG_TBL_SIZE) {
 1589              		.loc 1 1252 0
 1590 003a 0E23     		movs	r3, #14
 1591 003c FB18     		adds	r3, r7, r3
 1592 003e 1B78     		ldrb	r3, [r3]
 1593 0040 002B     		cmp	r3, #0
 1594 0042 03D0     		beq	.L90
1253:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         *perr = OS_ERR_ID_INVALID;
 1595              		.loc 1 1253 0
 1596 0044 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 51


 1597 0046 0822     		movs	r2, #8
 1598 0048 1A70     		strb	r2, [r3]
1254:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         return;
 1599              		.loc 1 1254 0
 1600 004a 24E0     		b	.L87
 1601              	.L90:
1255:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
1256:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
1257:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_ENTER_CRITICAL();
 1602              		.loc 1 1257 0
 1603 004c FFF7FEFF 		bl	OS_CPU_SR_Save
 1604 0050 0300     		movs	r3, r0
 1605 0052 3B61     		str	r3, [r7, #16]
1258:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if (prio == OS_PRIO_SELF) {                  /* See if need to get register from current task  
 1606              		.loc 1 1258 0
 1607 0054 0F23     		movs	r3, #15
 1608 0056 FB18     		adds	r3, r7, r3
 1609 0058 1B78     		ldrb	r3, [r3]
 1610 005a FF2B     		cmp	r3, #255
 1611 005c 03D1     		bne	.L91
1259:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         ptcb = OSTCBCur;
 1612              		.loc 1 1259 0
 1613 005e 0F4B     		ldr	r3, .L93
 1614 0060 1B68     		ldr	r3, [r3]
 1615 0062 7B61     		str	r3, [r7, #20]
 1616 0064 06E0     		b	.L92
 1617              	.L91:
1260:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     } else {
1261:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         ptcb = OSTCBPrioTbl[prio];
 1618              		.loc 1 1261 0
 1619 0066 0F23     		movs	r3, #15
 1620 0068 FB18     		adds	r3, r7, r3
 1621 006a 1A78     		ldrb	r2, [r3]
 1622 006c 0C4B     		ldr	r3, .L93+4
 1623 006e 9200     		lsls	r2, r2, #2
 1624 0070 D358     		ldr	r3, [r2, r3]
 1625 0072 7B61     		str	r3, [r7, #20]
 1626              	.L92:
1262:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
1263:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     ptcb->OSTCBRegTbl[id] = value;
 1627              		.loc 1 1263 0
 1628 0074 0E23     		movs	r3, #14
 1629 0076 FB18     		adds	r3, r7, r3
 1630 0078 1B78     		ldrb	r3, [r3]
 1631 007a 7A69     		ldr	r2, [r7, #20]
 1632 007c 0A33     		adds	r3, r3, #10
 1633 007e 9B00     		lsls	r3, r3, #2
 1634 0080 D318     		adds	r3, r2, r3
 1635 0082 0433     		adds	r3, r3, #4
 1636 0084 BA68     		ldr	r2, [r7, #8]
 1637 0086 1A60     		str	r2, [r3]
1264:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OS_EXIT_CRITICAL();
 1638              		.loc 1 1264 0
 1639 0088 3B69     		ldr	r3, [r7, #16]
 1640 008a 1800     		movs	r0, r3
 1641 008c FFF7FEFF 		bl	OS_CPU_SR_Restore
1265:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     *perr                 = OS_ERR_NONE;
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 52


 1642              		.loc 1 1265 0
 1643 0090 7B68     		ldr	r3, [r7, #4]
 1644 0092 0022     		movs	r2, #0
 1645 0094 1A70     		strb	r2, [r3]
 1646              	.L87:
1266:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** }
 1647              		.loc 1 1266 0
 1648 0096 BD46     		mov	sp, r7
 1649 0098 06B0     		add	sp, sp, #24
 1650              		@ sp needed
 1651 009a 80BD     		pop	{r7, pc}
 1652              	.L94:
 1653              		.align	2
 1654              	.L93:
 1655 009c 00000000 		.word	OSTCBCur
 1656 00a0 00000000 		.word	OSTCBPrioTbl
 1657              		.cfi_endproc
 1658              	.LFE9:
 1659              		.size	OSTaskRegSet, .-OSTaskRegSet
 1660              		.section	.text.OS_TaskReturn,"ax",%progbits
 1661              		.align	2
 1662              		.global	OS_TaskReturn
 1663              		.code	16
 1664              		.thumb_func
 1665              		.type	OS_TaskReturn, %function
 1666              	OS_TaskReturn:
 1667              	.LFB10:
1267:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
1268:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
1269:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** /*$PAGE*/
1270:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** /*
1271:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** ***************************************************************************************************
1272:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                                    CATCH ACCIDENTAL TASK RETURN
1273:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
1274:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Description: This function is called if a task accidentally returns without deleting itself.  In 
1275:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              words, a task should either be an infinite loop or delete itself if it's done.
1276:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
1277:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Arguments  : none
1278:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
1279:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Returns    : none
1280:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
1281:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Note(s)    : This function is INTERNAL to uC/OS-II and your application should not call it.
1282:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** ***************************************************************************************************
1283:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** */
1284:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
1285:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** void  OS_TaskReturn (void)
1286:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** {
 1668              		.loc 1 1286 0
 1669              		.cfi_startproc
 1670              		@ args = 0, pretend = 0, frame = 0
 1671              		@ frame_needed = 1, uses_anonymous_args = 0
 1672 0000 80B5     		push	{r7, lr}
 1673              		.cfi_def_cfa_offset 8
 1674              		.cfi_offset 7, -8
 1675              		.cfi_offset 14, -4
 1676 0002 00AF     		add	r7, sp, #0
 1677              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 53


1287:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     OSTaskReturnHook(OSTCBCur);                   /* Call hook to let user decide on what to do    
 1678              		.loc 1 1287 0
 1679 0004 054B     		ldr	r3, .L97
 1680 0006 1B68     		ldr	r3, [r3]
 1681 0008 1800     		movs	r0, r3
 1682 000a FFF7FEFF 		bl	OSTaskReturnHook
 1683              	.L96:
1288:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
1289:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if OS_TASK_DEL_EN > 0u
1290:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     (void)OSTaskDel(OS_PRIO_SELF);                /* Delete task if it accidentally returns!       
1291:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #else
1292:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     for (;;) {
1293:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         OSTimeDly(OS_TICKS_PER_SEC);
 1684              		.loc 1 1293 0 discriminator 1
 1685 000e FA23     		movs	r3, #250
 1686 0010 9B00     		lsls	r3, r3, #2
 1687 0012 1800     		movs	r0, r3
 1688 0014 FFF7FEFF 		bl	OSTimeDly
1294:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
 1689              		.loc 1 1294 0 discriminator 1
 1690 0018 F9E7     		b	.L96
 1691              	.L98:
 1692 001a C046     		.align	2
 1693              	.L97:
 1694 001c 00000000 		.word	OSTCBCur
 1695              		.cfi_endproc
 1696              	.LFE10:
 1697              		.size	OS_TaskReturn, .-OS_TaskReturn
 1698              		.section	.text.OS_TaskStkClr,"ax",%progbits
 1699              		.align	2
 1700              		.global	OS_TaskStkClr
 1701              		.code	16
 1702              		.thumb_func
 1703              		.type	OS_TaskStkClr, %function
 1704              	OS_TaskStkClr:
 1705              	.LFB11:
1295:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
1296:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** }
1297:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** 
1298:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** /*$PAGE*/
1299:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** /*
1300:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** ***************************************************************************************************
1301:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                                          CLEAR TASK STACK
1302:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
1303:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Description: This function is used to clear the stack of a task (i.e. write all zeros)
1304:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
1305:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Arguments  : pbos     is a pointer to the task's bottom of stack.  If the configuration constant
1306:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                       OS_STK_GROWTH is set to 1, the stack is assumed to grow downward (i.e. from
1307:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                       memory to low memory).  'pbos' will thus point to the lowest (valid) memory
1308:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                       location of the stack.  If OS_STK_GROWTH is set to 0, 'pbos' will point to 
1309:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                       highest memory location of the stack and the stack will grow with increasin
1310:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                       memory locations.  'pbos' MUST point to a valid 'free' data item.
1311:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
1312:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              size     is the number of 'stack elements' to clear.
1313:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
1314:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *              opt      contains additional information (or options) about the behavior of the task
1315:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                       LOWER 8-bits are reserved by uC/OS-II while the upper 8 bits can be applica
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 54


1316:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *                       specific.  See OS_TASK_OPT_??? in uCOS-II.H.
1317:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** *
1318:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** * Returns    : none
1319:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** ***************************************************************************************************
1320:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** */
1321:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if (OS_TASK_STAT_STK_CHK_EN > 0u) && (OS_TASK_CREATE_EXT_EN > 0u)
1322:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** void  OS_TaskStkClr (OS_STK  *pbos,
1323:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****                      INT32U   size,
1324:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****                      INT16U   opt)
1325:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** {
 1706              		.loc 1 1325 0
 1707              		.cfi_startproc
 1708              		@ args = 0, pretend = 0, frame = 16
 1709              		@ frame_needed = 1, uses_anonymous_args = 0
 1710 0000 80B5     		push	{r7, lr}
 1711              		.cfi_def_cfa_offset 8
 1712              		.cfi_offset 7, -8
 1713              		.cfi_offset 14, -4
 1714 0002 84B0     		sub	sp, sp, #16
 1715              		.cfi_def_cfa_offset 24
 1716 0004 00AF     		add	r7, sp, #0
 1717              		.cfi_def_cfa_register 7
 1718 0006 F860     		str	r0, [r7, #12]
 1719 0008 B960     		str	r1, [r7, #8]
 1720 000a BB1D     		adds	r3, r7, #6
 1721 000c 1A80     		strh	r2, [r3]
1326:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     if ((opt & OS_TASK_OPT_STK_CHK) != 0x0000u) {      /* See if stack checking has been enabled   
 1722              		.loc 1 1326 0
 1723 000e BB1D     		adds	r3, r7, #6
 1724 0010 1B88     		ldrh	r3, [r3]
 1725 0012 0122     		movs	r2, #1
 1726 0014 1340     		ands	r3, r2
 1727 0016 10D0     		beq	.L103
1327:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         if ((opt & OS_TASK_OPT_STK_CLR) != 0x0000u) {  /* See if stack needs to be cleared         
 1728              		.loc 1 1327 0
 1729 0018 BB1D     		adds	r3, r7, #6
 1730 001a 1B88     		ldrh	r3, [r3]
 1731 001c 0222     		movs	r2, #2
 1732 001e 1340     		ands	r3, r2
 1733 0020 0BD0     		beq	.L103
1328:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #if OS_STK_GROWTH == 1u
1329:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****             while (size > 0u) {                        /* Stack grows from HIGH to LOW memory      
 1734              		.loc 1 1329 0
 1735 0022 07E0     		b	.L101
 1736              	.L102:
1330:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****                 size--;
 1737              		.loc 1 1330 0
 1738 0024 BB68     		ldr	r3, [r7, #8]
 1739 0026 013B     		subs	r3, r3, #1
 1740 0028 BB60     		str	r3, [r7, #8]
1331:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****                 *pbos++ = (OS_STK)0;                   /* Clear from bottom of stack and up!       
 1741              		.loc 1 1331 0
 1742 002a FB68     		ldr	r3, [r7, #12]
 1743 002c 1A1D     		adds	r2, r3, #4
 1744 002e FA60     		str	r2, [r7, #12]
 1745 0030 0022     		movs	r2, #0
 1746 0032 1A60     		str	r2, [r3]
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 55


 1747              	.L101:
1329:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****                 size--;
 1748              		.loc 1 1329 0
 1749 0034 BB68     		ldr	r3, [r7, #8]
 1750 0036 002B     		cmp	r3, #0
 1751 0038 F4D1     		bne	.L102
 1752              	.L103:
1332:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****             }
1333:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #else
1334:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****             while (size > 0u) {                        /* Stack grows from LOW to HIGH memory      
1335:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****                 size--;
1336:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****                 *pbos-- = (OS_STK)0;                   /* Clear from bottom of stack and down      
1337:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****             }
1338:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** #endif
1339:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****         }
1340:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c ****     }
1341:..\..\..\..\..\..\Software\uCOS-II\Source/os_task.c **** }
 1753              		.loc 1 1341 0
 1754 003a C046     		nop
 1755 003c BD46     		mov	sp, r7
 1756 003e 04B0     		add	sp, sp, #16
 1757              		@ sp needed
 1758 0040 80BD     		pop	{r7, pc}
 1759              		.cfi_endproc
 1760              	.LFE11:
 1761              		.size	OS_TaskStkClr, .-OS_TaskStkClr
 1762 0042 C046     		.text
 1763              	.Letext0:
 1764              		.file 2 "..\\..\\..\\..\\..\\..\\Software\\uCOS-II\\Ports\\ARM-Cortex-M0\\Generic\\GNU/os_cpu.h"
 1765              		.file 3 "..\\..\\..\\..\\..\\..\\Software\\uCOS-II\\Source/ucos_ii.h"
 1766              		.section	.debug_info,"",%progbits
 1767              	.Ldebug_info0:
 1768 0000 E4070000 		.4byte	0x7e4
 1769 0004 0400     		.2byte	0x4
 1770 0006 00000000 		.4byte	.Ldebug_abbrev0
 1771 000a 04       		.byte	0x4
 1772 000b 01       		.uleb128 0x1
 1773 000c 0F020000 		.4byte	.LASF95
 1774 0010 0C       		.byte	0xc
 1775 0011 89010000 		.4byte	.LASF96
 1776 0015 4F040000 		.4byte	.LASF97
 1777 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1778 001d 00000000 		.4byte	0
 1779 0021 00000000 		.4byte	.Ldebug_line0
 1780 0025 02       		.uleb128 0x2
 1781 0026 01       		.byte	0x1
 1782 0027 06       		.byte	0x6
 1783 0028 98000000 		.4byte	.LASF0
 1784 002c 02       		.uleb128 0x2
 1785 002d 01       		.byte	0x1
 1786 002e 08       		.byte	0x8
 1787 002f 55030000 		.4byte	.LASF1
 1788 0033 02       		.uleb128 0x2
 1789 0034 02       		.byte	0x2
 1790 0035 05       		.byte	0x5
 1791 0036 7B030000 		.4byte	.LASF2
 1792 003a 02       		.uleb128 0x2
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 56


 1793 003b 02       		.byte	0x2
 1794 003c 07       		.byte	0x7
 1795 003d DA010000 		.4byte	.LASF3
 1796 0041 02       		.uleb128 0x2
 1797 0042 04       		.byte	0x4
 1798 0043 05       		.byte	0x5
 1799 0044 CF000000 		.4byte	.LASF4
 1800 0048 02       		.uleb128 0x2
 1801 0049 04       		.byte	0x4
 1802 004a 07       		.byte	0x7
 1803 004b BD010000 		.4byte	.LASF5
 1804 004f 02       		.uleb128 0x2
 1805 0050 08       		.byte	0x8
 1806 0051 05       		.byte	0x5
 1807 0052 8A000000 		.4byte	.LASF6
 1808 0056 02       		.uleb128 0x2
 1809 0057 08       		.byte	0x8
 1810 0058 07       		.byte	0x7
 1811 0059 43000000 		.4byte	.LASF7
 1812 005d 03       		.uleb128 0x3
 1813 005e 04       		.byte	0x4
 1814 005f 05       		.byte	0x5
 1815 0060 696E7400 		.ascii	"int\000"
 1816 0064 02       		.uleb128 0x2
 1817 0065 04       		.byte	0x4
 1818 0066 07       		.byte	0x7
 1819 0067 7C010000 		.4byte	.LASF8
 1820 006b 02       		.uleb128 0x2
 1821 006c 08       		.byte	0x8
 1822 006d 04       		.byte	0x4
 1823 006e CF020000 		.4byte	.LASF9
 1824 0072 04       		.uleb128 0x4
 1825 0073 04       		.byte	0x4
 1826 0074 02       		.uleb128 0x2
 1827 0075 04       		.byte	0x4
 1828 0076 07       		.byte	0x7
 1829 0077 C6020000 		.4byte	.LASF10
 1830 007b 02       		.uleb128 0x2
 1831 007c 01       		.byte	0x1
 1832 007d 08       		.byte	0x8
 1833 007e DE030000 		.4byte	.LASF11
 1834 0082 05       		.uleb128 0x5
 1835 0083 94030000 		.4byte	.LASF12
 1836 0087 02       		.byte	0x2
 1837 0088 72       		.byte	0x72
 1838 0089 2C000000 		.4byte	0x2c
 1839 008d 05       		.uleb128 0x5
 1840 008e 3D000000 		.4byte	.LASF13
 1841 0092 02       		.byte	0x2
 1842 0093 73       		.byte	0x73
 1843 0094 2C000000 		.4byte	0x2c
 1844 0098 05       		.uleb128 0x5
 1845 0099 78000000 		.4byte	.LASF14
 1846 009d 02       		.byte	0x2
 1847 009e 75       		.byte	0x75
 1848 009f 3A000000 		.4byte	0x3a
 1849 00a3 05       		.uleb128 0x5
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 57


 1850 00a4 FF000000 		.4byte	.LASF15
 1851 00a8 02       		.byte	0x2
 1852 00a9 77       		.byte	0x77
 1853 00aa 64000000 		.4byte	0x64
 1854 00ae 02       		.uleb128 0x2
 1855 00af 04       		.byte	0x4
 1856 00b0 04       		.byte	0x4
 1857 00b1 3F030000 		.4byte	.LASF16
 1858 00b5 02       		.uleb128 0x2
 1859 00b6 08       		.byte	0x8
 1860 00b7 04       		.byte	0x4
 1861 00b8 F2000000 		.4byte	.LASF17
 1862 00bc 05       		.uleb128 0x5
 1863 00bd C8000000 		.4byte	.LASF18
 1864 00c1 02       		.byte	0x2
 1865 00c2 7C       		.byte	0x7c
 1866 00c3 64000000 		.4byte	0x64
 1867 00c7 05       		.uleb128 0x5
 1868 00c8 71030000 		.4byte	.LASF19
 1869 00cc 02       		.byte	0x2
 1870 00cd 7D       		.byte	0x7d
 1871 00ce 64000000 		.4byte	0x64
 1872 00d2 06       		.uleb128 0x6
 1873 00d3 EA030000 		.4byte	.LASF20
 1874 00d7 03       		.byte	0x3
 1875 00d8 7201     		.2byte	0x172
 1876 00da 8D000000 		.4byte	0x8d
 1877 00de 07       		.uleb128 0x7
 1878 00df 58010000 		.4byte	.LASF27
 1879 00e3 10       		.byte	0x10
 1880 00e4 03       		.byte	0x3
 1881 00e5 7801     		.2byte	0x178
 1882 00e7 2D010000 		.4byte	0x12d
 1883 00eb 08       		.uleb128 0x8
 1884 00ec A5020000 		.4byte	.LASF21
 1885 00f0 03       		.byte	0x3
 1886 00f1 7901     		.2byte	0x179
 1887 00f3 8D000000 		.4byte	0x8d
 1888 00f7 00       		.byte	0
 1889 00f8 08       		.uleb128 0x8
 1890 00f9 7F000000 		.4byte	.LASF22
 1891 00fd 03       		.byte	0x3
 1892 00fe 7A01     		.2byte	0x17a
 1893 0100 72000000 		.4byte	0x72
 1894 0104 04       		.byte	0x4
 1895 0105 08       		.uleb128 0x8
 1896 0106 9C030000 		.4byte	.LASF23
 1897 010a 03       		.byte	0x3
 1898 010b 7B01     		.2byte	0x17b
 1899 010d 98000000 		.4byte	0x98
 1900 0111 08       		.byte	0x8
 1901 0112 08       		.uleb128 0x8
 1902 0113 BB020000 		.4byte	.LASF24
 1903 0117 03       		.byte	0x3
 1904 0118 7C01     		.2byte	0x17c
 1905 011a D2000000 		.4byte	0xd2
 1906 011e 0A       		.byte	0xa
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 58


 1907 011f 08       		.uleb128 0x8
 1908 0120 1E000000 		.4byte	.LASF25
 1909 0124 03       		.byte	0x3
 1910 0125 7D01     		.2byte	0x17d
 1911 0127 2D010000 		.4byte	0x12d
 1912 012b 0B       		.byte	0xb
 1913 012c 00       		.byte	0
 1914 012d 09       		.uleb128 0x9
 1915 012e D2000000 		.4byte	0xd2
 1916 0132 3D010000 		.4byte	0x13d
 1917 0136 0A       		.uleb128 0xa
 1918 0137 74000000 		.4byte	0x74
 1919 013b 03       		.byte	0x3
 1920 013c 00       		.byte	0
 1921 013d 06       		.uleb128 0x6
 1922 013e 4C030000 		.4byte	.LASF26
 1923 0142 03       		.byte	0x3
 1924 0143 8201     		.2byte	0x182
 1925 0145 DE000000 		.4byte	0xde
 1926 0149 07       		.uleb128 0x7
 1927 014a 5A000000 		.4byte	.LASF28
 1928 014e 08       		.byte	0x8
 1929 014f 03       		.byte	0x3
 1930 0150 2102     		.2byte	0x221
 1931 0152 71010000 		.4byte	0x171
 1932 0156 08       		.uleb128 0x8
 1933 0157 45030000 		.4byte	.LASF29
 1934 015b 03       		.byte	0x3
 1935 015c 2202     		.2byte	0x222
 1936 015e A3000000 		.4byte	0xa3
 1937 0162 00       		.byte	0
 1938 0163 08       		.uleb128 0x8
 1939 0164 E3030000 		.4byte	.LASF30
 1940 0168 03       		.byte	0x3
 1941 0169 2302     		.2byte	0x223
 1942 016b A3000000 		.4byte	0xa3
 1943 016f 04       		.byte	0x4
 1944 0170 00       		.byte	0
 1945 0171 06       		.uleb128 0x6
 1946 0172 12000000 		.4byte	.LASF31
 1947 0176 03       		.byte	0x3
 1948 0177 2402     		.2byte	0x224
 1949 0179 49010000 		.4byte	0x149
 1950 017d 07       		.uleb128 0x7
 1951 017e 1F010000 		.4byte	.LASF32
 1952 0182 30       		.byte	0x30
 1953 0183 03       		.byte	0x3
 1954 0184 2E02     		.2byte	0x22e
 1955 0186 75020000 		.4byte	0x275
 1956 018a 08       		.uleb128 0x8
 1957 018b 03020000 		.4byte	.LASF33
 1958 018f 03       		.byte	0x3
 1959 0190 2F02     		.2byte	0x22f
 1960 0192 75020000 		.4byte	0x275
 1961 0196 00       		.byte	0
 1962 0197 08       		.uleb128 0x8
 1963 0198 B4030000 		.4byte	.LASF34
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 59


 1964 019c 03       		.byte	0x3
 1965 019d 3202     		.2byte	0x232
 1966 019f 72000000 		.4byte	0x72
 1967 01a3 04       		.byte	0x4
 1968 01a4 08       		.uleb128 0x8
 1969 01a5 06040000 		.4byte	.LASF35
 1970 01a9 03       		.byte	0x3
 1971 01aa 3302     		.2byte	0x233
 1972 01ac 75020000 		.4byte	0x275
 1973 01b0 08       		.byte	0x8
 1974 01b1 08       		.uleb128 0x8
 1975 01b2 61010000 		.4byte	.LASF36
 1976 01b6 03       		.byte	0x3
 1977 01b7 3402     		.2byte	0x234
 1978 01b9 A3000000 		.4byte	0xa3
 1979 01bd 0C       		.byte	0xc
 1980 01be 08       		.uleb128 0x8
 1981 01bf C0030000 		.4byte	.LASF37
 1982 01c3 03       		.byte	0x3
 1983 01c4 3502     		.2byte	0x235
 1984 01c6 98000000 		.4byte	0x98
 1985 01ca 10       		.byte	0x10
 1986 01cb 08       		.uleb128 0x8
 1987 01cc 06010000 		.4byte	.LASF38
 1988 01d0 03       		.byte	0x3
 1989 01d1 3602     		.2byte	0x236
 1990 01d3 98000000 		.4byte	0x98
 1991 01d7 12       		.byte	0x12
 1992 01d8 08       		.uleb128 0x8
 1993 01d9 DB020000 		.4byte	.LASF39
 1994 01dd 03       		.byte	0x3
 1995 01de 3902     		.2byte	0x239
 1996 01e0 7B020000 		.4byte	0x27b
 1997 01e4 14       		.byte	0x14
 1998 01e5 08       		.uleb128 0x8
 1999 01e6 15040000 		.4byte	.LASF40
 2000 01ea 03       		.byte	0x3
 2001 01eb 3A02     		.2byte	0x23a
 2002 01ed 7B020000 		.4byte	0x27b
 2003 01f1 18       		.byte	0x18
 2004 01f2 08       		.uleb128 0x8
 2005 01f3 CB040000 		.4byte	.LASF41
 2006 01f7 03       		.byte	0x3
 2007 01f8 4302     		.2byte	0x243
 2008 01fa 81020000 		.4byte	0x281
 2009 01fe 1C       		.byte	0x1c
 2010 01ff 08       		.uleb128 0x8
 2011 0200 D8000000 		.4byte	.LASF42
 2012 0204 03       		.byte	0x3
 2013 0205 5502     		.2byte	0x255
 2014 0207 A3000000 		.4byte	0xa3
 2015 020b 20       		.byte	0x20
 2016 020c 08       		.uleb128 0x8
 2017 020d E1000000 		.4byte	.LASF43
 2018 0211 03       		.byte	0x3
 2019 0212 5602     		.2byte	0x256
 2020 0214 8D000000 		.4byte	0x8d
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 60


 2021 0218 24       		.byte	0x24
 2022 0219 08       		.uleb128 0x8
 2023 021a 6E010000 		.4byte	.LASF44
 2024 021e 03       		.byte	0x3
 2025 021f 5702     		.2byte	0x257
 2026 0221 8D000000 		.4byte	0x8d
 2027 0225 25       		.byte	0x25
 2028 0226 08       		.uleb128 0x8
 2029 0227 D9040000 		.4byte	.LASF45
 2030 022b 03       		.byte	0x3
 2031 022c 5802     		.2byte	0x258
 2032 022e 8D000000 		.4byte	0x8d
 2033 0232 26       		.byte	0x26
 2034 0233 08       		.uleb128 0x8
 2035 0234 BD040000 		.4byte	.LASF46
 2036 0238 03       		.byte	0x3
 2037 0239 5A02     		.2byte	0x25a
 2038 023b 8D000000 		.4byte	0x8d
 2039 023f 27       		.byte	0x27
 2040 0240 08       		.uleb128 0x8
 2041 0241 C4040000 		.4byte	.LASF47
 2042 0245 03       		.byte	0x3
 2043 0246 5B02     		.2byte	0x25b
 2044 0248 8D000000 		.4byte	0x8d
 2045 024c 28       		.byte	0x28
 2046 024d 08       		.uleb128 0x8
 2047 024e FA020000 		.4byte	.LASF48
 2048 0252 03       		.byte	0x3
 2049 0253 5C02     		.2byte	0x25c
 2050 0255 D2000000 		.4byte	0xd2
 2051 0259 29       		.byte	0x29
 2052 025a 08       		.uleb128 0x8
 2053 025b 04030000 		.4byte	.LASF49
 2054 025f 03       		.byte	0x3
 2055 0260 5D02     		.2byte	0x25d
 2056 0262 D2000000 		.4byte	0xd2
 2057 0266 2A       		.byte	0x2a
 2058 0267 08       		.uleb128 0x8
 2059 0268 43040000 		.4byte	.LASF50
 2060 026c 03       		.byte	0x3
 2061 026d 7002     		.2byte	0x270
 2062 026f 87020000 		.4byte	0x287
 2063 0273 2C       		.byte	0x2c
 2064 0274 00       		.byte	0
 2065 0275 0B       		.uleb128 0xb
 2066 0276 04       		.byte	0x4
 2067 0277 BC000000 		.4byte	0xbc
 2068 027b 0B       		.uleb128 0xb
 2069 027c 04       		.byte	0x4
 2070 027d 7D010000 		.4byte	0x17d
 2071 0281 0B       		.uleb128 0xb
 2072 0282 04       		.byte	0x4
 2073 0283 3D010000 		.4byte	0x13d
 2074 0287 09       		.uleb128 0x9
 2075 0288 A3000000 		.4byte	0xa3
 2076 028c 97020000 		.4byte	0x297
 2077 0290 0A       		.uleb128 0xa
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 61


 2078 0291 74000000 		.4byte	0x74
 2079 0295 00       		.byte	0
 2080 0296 00       		.byte	0
 2081 0297 06       		.uleb128 0x6
 2082 0298 C9030000 		.4byte	.LASF51
 2083 029c 03       		.byte	0x3
 2084 029d 7202     		.2byte	0x272
 2085 029f 7D010000 		.4byte	0x17d
 2086 02a3 0B       		.uleb128 0xb
 2087 02a4 04       		.byte	0x4
 2088 02a5 8D000000 		.4byte	0x8d
 2089 02a9 0C       		.uleb128 0xc
 2090 02aa 41010000 		.4byte	.LASF64
 2091 02ae 01       		.byte	0x1
 2092 02af 35       		.byte	0x35
 2093 02b0 8D000000 		.4byte	0x8d
 2094 02b4 00000000 		.4byte	.LFB1
 2095 02b8 9C020000 		.4byte	.LFE1-.LFB1
 2096 02bc 01       		.uleb128 0x1
 2097 02bd 9C       		.byte	0x9c
 2098 02be 6B030000 		.4byte	0x36b
 2099 02c2 0D       		.uleb128 0xd
 2100 02c3 9D020000 		.4byte	.LASF52
 2101 02c7 01       		.byte	0x1
 2102 02c8 35       		.byte	0x35
 2103 02c9 8D000000 		.4byte	0x8d
 2104 02cd 02       		.uleb128 0x2
 2105 02ce 91       		.byte	0x91
 2106 02cf 5F       		.sleb128 -33
 2107 02d0 0D       		.uleb128 0xd
 2108 02d1 F2010000 		.4byte	.LASF53
 2109 02d5 01       		.byte	0x1
 2110 02d6 36       		.byte	0x36
 2111 02d7 8D000000 		.4byte	0x8d
 2112 02db 02       		.uleb128 0x2
 2113 02dc 91       		.byte	0x91
 2114 02dd 5E       		.sleb128 -34
 2115 02de 0E       		.uleb128 0xe
 2116 02df 13010000 		.4byte	.LASF54
 2117 02e3 01       		.byte	0x1
 2118 02e4 39       		.byte	0x39
 2119 02e5 81020000 		.4byte	0x281
 2120 02e9 02       		.uleb128 0x2
 2121 02ea 91       		.byte	0x91
 2122 02eb 64       		.sleb128 -28
 2123 02ec 0E       		.uleb128 0xe
 2124 02ed ED010000 		.4byte	.LASF55
 2125 02f1 01       		.byte	0x1
 2126 02f2 3E       		.byte	0x3e
 2127 02f3 6B030000 		.4byte	0x36b
 2128 02f7 02       		.uleb128 0x2
 2129 02f8 91       		.byte	0x91
 2130 02f9 70       		.sleb128 -16
 2131 02fa 0E       		.uleb128 0xe
 2132 02fb E3040000 		.4byte	.LASF56
 2133 02ff 01       		.byte	0x1
 2134 0300 3F       		.byte	0x3f
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 62


 2135 0301 8D000000 		.4byte	0x8d
 2136 0305 02       		.uleb128 0x2
 2137 0306 91       		.byte	0x91
 2138 0307 6F       		.sleb128 -17
 2139 0308 0E       		.uleb128 0xe
 2140 0309 CF010000 		.4byte	.LASF57
 2141 030d 01       		.byte	0x1
 2142 030e 40       		.byte	0x40
 2143 030f 8D000000 		.4byte	0x8d
 2144 0313 02       		.uleb128 0x2
 2145 0314 91       		.byte	0x91
 2146 0315 6E       		.sleb128 -18
 2147 0316 0E       		.uleb128 0xe
 2148 0317 8E030000 		.4byte	.LASF58
 2149 031b 01       		.byte	0x1
 2150 031c 41       		.byte	0x41
 2151 031d 8D000000 		.4byte	0x8d
 2152 0321 02       		.uleb128 0x2
 2153 0322 91       		.byte	0x91
 2154 0323 6B       		.sleb128 -21
 2155 0324 0E       		.uleb128 0xe
 2156 0325 BF000000 		.4byte	.LASF59
 2157 0329 01       		.byte	0x1
 2158 032a 42       		.byte	0x42
 2159 032b D2000000 		.4byte	0xd2
 2160 032f 02       		.uleb128 0x2
 2161 0330 91       		.byte	0x91
 2162 0331 6D       		.sleb128 -19
 2163 0332 0E       		.uleb128 0xe
 2164 0333 0E030000 		.4byte	.LASF60
 2165 0337 01       		.byte	0x1
 2166 0338 43       		.byte	0x43
 2167 0339 D2000000 		.4byte	0xd2
 2168 033d 02       		.uleb128 0x2
 2169 033e 91       		.byte	0x91
 2170 033f 6C       		.sleb128 -20
 2171 0340 0E       		.uleb128 0xe
 2172 0341 1F040000 		.4byte	.LASF61
 2173 0345 01       		.byte	0x1
 2174 0346 44       		.byte	0x44
 2175 0347 D2000000 		.4byte	0xd2
 2176 034b 02       		.uleb128 0x2
 2177 034c 91       		.byte	0x91
 2178 034d 6A       		.sleb128 -22
 2179 034e 0E       		.uleb128 0xe
 2180 034f 63030000 		.4byte	.LASF62
 2181 0353 01       		.byte	0x1
 2182 0354 45       		.byte	0x45
 2183 0355 D2000000 		.4byte	0xd2
 2184 0359 02       		.uleb128 0x2
 2185 035a 91       		.byte	0x91
 2186 035b 69       		.sleb128 -23
 2187 035c 0E       		.uleb128 0xe
 2188 035d EB000000 		.4byte	.LASF63
 2189 0361 01       		.byte	0x1
 2190 0362 47       		.byte	0x47
 2191 0363 C7000000 		.4byte	0xc7
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 63


 2192 0367 02       		.uleb128 0x2
 2193 0368 91       		.byte	0x91
 2194 0369 74       		.sleb128 -12
 2195 036a 00       		.byte	0
 2196 036b 0B       		.uleb128 0xb
 2197 036c 04       		.byte	0x4
 2198 036d 97020000 		.4byte	0x297
 2199 0371 0C       		.uleb128 0xc
 2200 0372 05000000 		.4byte	.LASF65
 2201 0376 01       		.byte	0x1
 2202 0377 D3       		.byte	0xd3
 2203 0378 8D000000 		.4byte	0x8d
 2204 037c 00000000 		.4byte	.LFB2
 2205 0380 EC000000 		.4byte	.LFE2-.LFB2
 2206 0384 01       		.uleb128 0x1
 2207 0385 9C       		.byte	0x9c
 2208 0386 ED030000 		.4byte	0x3ed
 2209 038a 0D       		.uleb128 0xd
 2210 038b 01040000 		.4byte	.LASF66
 2211 038f 01       		.byte	0x1
 2212 0390 D3       		.byte	0xd3
 2213 0391 F8030000 		.4byte	0x3f8
 2214 0395 02       		.uleb128 0x2
 2215 0396 91       		.byte	0x91
 2216 0397 5C       		.sleb128 -36
 2217 0398 0D       		.uleb128 0xd
 2218 0399 29000000 		.4byte	.LASF67
 2219 039d 01       		.byte	0x1
 2220 039e D4       		.byte	0xd4
 2221 039f 72000000 		.4byte	0x72
 2222 03a3 02       		.uleb128 0x2
 2223 03a4 91       		.byte	0x91
 2224 03a5 58       		.sleb128 -40
 2225 03a6 0D       		.uleb128 0xd
 2226 03a7 00000000 		.4byte	.LASF68
 2227 03ab 01       		.byte	0x1
 2228 03ac D5       		.byte	0xd5
 2229 03ad 75020000 		.4byte	0x275
 2230 03b1 02       		.uleb128 0x2
 2231 03b2 91       		.byte	0x91
 2232 03b3 54       		.sleb128 -44
 2233 03b4 0D       		.uleb128 0xd
 2234 03b5 3A030000 		.4byte	.LASF69
 2235 03b9 01       		.byte	0x1
 2236 03ba D6       		.byte	0xd6
 2237 03bb 8D000000 		.4byte	0x8d
 2238 03bf 02       		.uleb128 0x2
 2239 03c0 91       		.byte	0x91
 2240 03c1 53       		.sleb128 -45
 2241 03c2 0F       		.uleb128 0xf
 2242 03c3 70737000 		.ascii	"psp\000"
 2243 03c7 01       		.byte	0x1
 2244 03c8 D8       		.byte	0xd8
 2245 03c9 75020000 		.4byte	0x275
 2246 03cd 02       		.uleb128 0x2
 2247 03ce 91       		.byte	0x91
 2248 03cf 68       		.sleb128 -24
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 64


 2249 03d0 0F       		.uleb128 0xf
 2250 03d1 65727200 		.ascii	"err\000"
 2251 03d5 01       		.byte	0x1
 2252 03d6 D9       		.byte	0xd9
 2253 03d7 8D000000 		.4byte	0x8d
 2254 03db 02       		.uleb128 0x2
 2255 03dc 91       		.byte	0x91
 2256 03dd 67       		.sleb128 -25
 2257 03de 0E       		.uleb128 0xe
 2258 03df EB000000 		.4byte	.LASF63
 2259 03e3 01       		.byte	0x1
 2260 03e4 DB       		.byte	0xdb
 2261 03e5 C7000000 		.4byte	0xc7
 2262 03e9 02       		.uleb128 0x2
 2263 03ea 91       		.byte	0x91
 2264 03eb 6C       		.sleb128 -20
 2265 03ec 00       		.byte	0
 2266 03ed 10       		.uleb128 0x10
 2267 03ee F8030000 		.4byte	0x3f8
 2268 03f2 11       		.uleb128 0x11
 2269 03f3 72000000 		.4byte	0x72
 2270 03f7 00       		.byte	0
 2271 03f8 0B       		.uleb128 0xb
 2272 03f9 04       		.byte	0x4
 2273 03fa ED030000 		.4byte	0x3ed
 2274 03fe 12       		.uleb128 0x12
 2275 03ff 31010000 		.4byte	.LASF70
 2276 0403 01       		.byte	0x1
 2277 0404 5001     		.2byte	0x150
 2278 0406 8D000000 		.4byte	0x8d
 2279 040a 00000000 		.4byte	.LFB3
 2280 040e 0C010000 		.4byte	.LFE3-.LFB3
 2281 0412 01       		.uleb128 0x1
 2282 0413 9C       		.byte	0x9c
 2283 0414 CC040000 		.4byte	0x4cc
 2284 0418 13       		.uleb128 0x13
 2285 0419 01040000 		.4byte	.LASF66
 2286 041d 01       		.byte	0x1
 2287 041e 5001     		.2byte	0x150
 2288 0420 F8030000 		.4byte	0x3f8
 2289 0424 02       		.uleb128 0x2
 2290 0425 91       		.byte	0x91
 2291 0426 5C       		.sleb128 -36
 2292 0427 13       		.uleb128 0x13
 2293 0428 29000000 		.4byte	.LASF67
 2294 042c 01       		.byte	0x1
 2295 042d 5101     		.2byte	0x151
 2296 042f 72000000 		.4byte	0x72
 2297 0433 02       		.uleb128 0x2
 2298 0434 91       		.byte	0x91
 2299 0435 58       		.sleb128 -40
 2300 0436 13       		.uleb128 0x13
 2301 0437 00000000 		.4byte	.LASF68
 2302 043b 01       		.byte	0x1
 2303 043c 5201     		.2byte	0x152
 2304 043e 75020000 		.4byte	0x275
 2305 0442 02       		.uleb128 0x2
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 65


 2306 0443 91       		.byte	0x91
 2307 0444 54       		.sleb128 -44
 2308 0445 13       		.uleb128 0x13
 2309 0446 3A030000 		.4byte	.LASF69
 2310 044a 01       		.byte	0x1
 2311 044b 5301     		.2byte	0x153
 2312 044d 8D000000 		.4byte	0x8d
 2313 0451 02       		.uleb128 0x2
 2314 0452 91       		.byte	0x91
 2315 0453 53       		.sleb128 -45
 2316 0454 14       		.uleb128 0x14
 2317 0455 696400   		.ascii	"id\000"
 2318 0458 01       		.byte	0x1
 2319 0459 5401     		.2byte	0x154
 2320 045b 98000000 		.4byte	0x98
 2321 045f 02       		.uleb128 0x2
 2322 0460 91       		.byte	0x91
 2323 0461 00       		.sleb128 0
 2324 0462 13       		.uleb128 0x13
 2325 0463 0E010000 		.4byte	.LASF71
 2326 0467 01       		.byte	0x1
 2327 0468 5501     		.2byte	0x155
 2328 046a 75020000 		.4byte	0x275
 2329 046e 02       		.uleb128 0x2
 2330 046f 91       		.byte	0x91
 2331 0470 04       		.sleb128 4
 2332 0471 13       		.uleb128 0x13
 2333 0472 85030000 		.4byte	.LASF72
 2334 0476 01       		.byte	0x1
 2335 0477 5601     		.2byte	0x156
 2336 0479 A3000000 		.4byte	0xa3
 2337 047d 02       		.uleb128 0x2
 2338 047e 91       		.byte	0x91
 2339 047f 08       		.sleb128 8
 2340 0480 13       		.uleb128 0x13
 2341 0481 3E040000 		.4byte	.LASF73
 2342 0485 01       		.byte	0x1
 2343 0486 5701     		.2byte	0x157
 2344 0488 72000000 		.4byte	0x72
 2345 048c 02       		.uleb128 0x2
 2346 048d 91       		.byte	0x91
 2347 048e 0C       		.sleb128 12
 2348 048f 14       		.uleb128 0x14
 2349 0490 6F707400 		.ascii	"opt\000"
 2350 0494 01       		.byte	0x1
 2351 0495 5801     		.2byte	0x158
 2352 0497 98000000 		.4byte	0x98
 2353 049b 02       		.uleb128 0x2
 2354 049c 91       		.byte	0x91
 2355 049d 10       		.sleb128 16
 2356 049e 15       		.uleb128 0x15
 2357 049f 70737000 		.ascii	"psp\000"
 2358 04a3 01       		.byte	0x1
 2359 04a4 5A01     		.2byte	0x15a
 2360 04a6 75020000 		.4byte	0x275
 2361 04aa 02       		.uleb128 0x2
 2362 04ab 91       		.byte	0x91
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 66


 2363 04ac 68       		.sleb128 -24
 2364 04ad 15       		.uleb128 0x15
 2365 04ae 65727200 		.ascii	"err\000"
 2366 04b2 01       		.byte	0x1
 2367 04b3 5B01     		.2byte	0x15b
 2368 04b5 8D000000 		.4byte	0x8d
 2369 04b9 02       		.uleb128 0x2
 2370 04ba 91       		.byte	0x91
 2371 04bb 67       		.sleb128 -25
 2372 04bc 16       		.uleb128 0x16
 2373 04bd EB000000 		.4byte	.LASF63
 2374 04c1 01       		.byte	0x1
 2375 04c2 5D01     		.2byte	0x15d
 2376 04c4 C7000000 		.4byte	0xc7
 2377 04c8 02       		.uleb128 0x2
 2378 04c9 91       		.byte	0x91
 2379 04ca 6C       		.sleb128 -20
 2380 04cb 00       		.byte	0
 2381 04cc 12       		.uleb128 0x12
 2382 04cd 66000000 		.4byte	.LASF74
 2383 04d1 01       		.byte	0x1
 2384 04d2 2C03     		.2byte	0x32c
 2385 04d4 8D000000 		.4byte	0x8d
 2386 04d8 00000000 		.4byte	.LFB4
 2387 04dc 0C010000 		.4byte	.LFE4-.LFB4
 2388 04e0 01       		.uleb128 0x1
 2389 04e1 9C       		.byte	0x9c
 2390 04e2 14050000 		.4byte	0x514
 2391 04e6 13       		.uleb128 0x13
 2392 04e7 3A030000 		.4byte	.LASF69
 2393 04eb 01       		.byte	0x1
 2394 04ec 2C03     		.2byte	0x32c
 2395 04ee 8D000000 		.4byte	0x8d
 2396 04f2 02       		.uleb128 0x2
 2397 04f3 91       		.byte	0x91
 2398 04f4 6F       		.sleb128 -17
 2399 04f5 16       		.uleb128 0x16
 2400 04f6 ED010000 		.4byte	.LASF55
 2401 04fa 01       		.byte	0x1
 2402 04fb 2E03     		.2byte	0x32e
 2403 04fd 6B030000 		.4byte	0x36b
 2404 0501 02       		.uleb128 0x2
 2405 0502 91       		.byte	0x91
 2406 0503 70       		.sleb128 -16
 2407 0504 16       		.uleb128 0x16
 2408 0505 EB000000 		.4byte	.LASF63
 2409 0509 01       		.byte	0x1
 2410 050a 3003     		.2byte	0x330
 2411 050c C7000000 		.4byte	0xc7
 2412 0510 02       		.uleb128 0x2
 2413 0511 91       		.byte	0x91
 2414 0512 74       		.sleb128 -12
 2415 0513 00       		.byte	0
 2416 0514 12       		.uleb128 0x12
 2417 0515 A4000000 		.4byte	.LASF75
 2418 0519 01       		.byte	0x1
 2419 051a 6F03     		.2byte	0x36f
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 67


 2420 051c 8D000000 		.4byte	0x8d
 2421 0520 00000000 		.4byte	.LFB5
 2422 0524 F0000000 		.4byte	.LFE5-.LFB5
 2423 0528 01       		.uleb128 0x1
 2424 0529 9C       		.byte	0x9c
 2425 052a 98050000 		.4byte	0x598
 2426 052e 13       		.uleb128 0x13
 2427 052f 3A030000 		.4byte	.LASF69
 2428 0533 01       		.byte	0x1
 2429 0534 6F03     		.2byte	0x36f
 2430 0536 8D000000 		.4byte	0x8d
 2431 053a 02       		.uleb128 0x2
 2432 053b 91       		.byte	0x91
 2433 053c 5F       		.sleb128 -33
 2434 053d 13       		.uleb128 0x13
 2435 053e 26010000 		.4byte	.LASF76
 2436 0542 01       		.byte	0x1
 2437 0543 7003     		.2byte	0x370
 2438 0545 98050000 		.4byte	0x598
 2439 0549 02       		.uleb128 0x2
 2440 054a 91       		.byte	0x91
 2441 054b 58       		.sleb128 -40
 2442 054c 16       		.uleb128 0x16
 2443 054d ED010000 		.4byte	.LASF55
 2444 0551 01       		.byte	0x1
 2445 0552 7203     		.2byte	0x372
 2446 0554 6B030000 		.4byte	0x36b
 2447 0558 02       		.uleb128 0x2
 2448 0559 91       		.byte	0x91
 2449 055a 68       		.sleb128 -24
 2450 055b 16       		.uleb128 0x16
 2451 055c 6C030000 		.4byte	.LASF77
 2452 0560 01       		.byte	0x1
 2453 0561 7303     		.2byte	0x373
 2454 0563 75020000 		.4byte	0x275
 2455 0567 02       		.uleb128 0x2
 2456 0568 91       		.byte	0x91
 2457 0569 74       		.sleb128 -12
 2458 056a 16       		.uleb128 0x16
 2459 056b F9000000 		.4byte	.LASF78
 2460 056f 01       		.byte	0x1
 2461 0570 7403     		.2byte	0x374
 2462 0572 A3000000 		.4byte	0xa3
 2463 0576 02       		.uleb128 0x2
 2464 0577 91       		.byte	0x91
 2465 0578 70       		.sleb128 -16
 2466 0579 16       		.uleb128 0x16
 2467 057a D5010000 		.4byte	.LASF79
 2468 057e 01       		.byte	0x1
 2469 057f 7503     		.2byte	0x375
 2470 0581 A3000000 		.4byte	0xa3
 2471 0585 02       		.uleb128 0x2
 2472 0586 91       		.byte	0x91
 2473 0587 64       		.sleb128 -28
 2474 0588 16       		.uleb128 0x16
 2475 0589 EB000000 		.4byte	.LASF63
 2476 058d 01       		.byte	0x1
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 68


 2477 058e 7703     		.2byte	0x377
 2478 0590 C7000000 		.4byte	0xc7
 2479 0594 02       		.uleb128 0x2
 2480 0595 91       		.byte	0x91
 2481 0596 6C       		.sleb128 -20
 2482 0597 00       		.byte	0
 2483 0598 0B       		.uleb128 0xb
 2484 0599 04       		.byte	0x4
 2485 059a 71010000 		.4byte	0x171
 2486 059e 12       		.uleb128 0x12
 2487 059f D0030000 		.4byte	.LASF80
 2488 05a3 01       		.byte	0x1
 2489 05a4 C403     		.2byte	0x3c4
 2490 05a6 8D000000 		.4byte	0x8d
 2491 05aa 00000000 		.4byte	.LFB6
 2492 05ae 3C010000 		.4byte	.LFE6-.LFB6
 2493 05b2 01       		.uleb128 0x1
 2494 05b3 9C       		.byte	0x9c
 2495 05b4 02060000 		.4byte	0x602
 2496 05b8 13       		.uleb128 0x13
 2497 05b9 3A030000 		.4byte	.LASF69
 2498 05bd 01       		.byte	0x1
 2499 05be C403     		.2byte	0x3c4
 2500 05c0 8D000000 		.4byte	0x8d
 2501 05c4 02       		.uleb128 0x2
 2502 05c5 91       		.byte	0x91
 2503 05c6 67       		.sleb128 -25
 2504 05c7 16       		.uleb128 0x16
 2505 05c8 1A010000 		.4byte	.LASF81
 2506 05cc 01       		.byte	0x1
 2507 05cd C603     		.2byte	0x3c6
 2508 05cf 82000000 		.4byte	0x82
 2509 05d3 02       		.uleb128 0x2
 2510 05d4 91       		.byte	0x91
 2511 05d5 77       		.sleb128 -9
 2512 05d6 16       		.uleb128 0x16
 2513 05d7 ED010000 		.4byte	.LASF55
 2514 05db 01       		.byte	0x1
 2515 05dc C703     		.2byte	0x3c7
 2516 05de 6B030000 		.4byte	0x36b
 2517 05e2 02       		.uleb128 0x2
 2518 05e3 91       		.byte	0x91
 2519 05e4 6C       		.sleb128 -20
 2520 05e5 15       		.uleb128 0x15
 2521 05e6 7900     		.ascii	"y\000"
 2522 05e8 01       		.byte	0x1
 2523 05e9 C803     		.2byte	0x3c8
 2524 05eb 8D000000 		.4byte	0x8d
 2525 05ef 02       		.uleb128 0x2
 2526 05f0 91       		.byte	0x91
 2527 05f1 6B       		.sleb128 -21
 2528 05f2 16       		.uleb128 0x16
 2529 05f3 EB000000 		.4byte	.LASF63
 2530 05f7 01       		.byte	0x1
 2531 05f8 CA03     		.2byte	0x3ca
 2532 05fa C7000000 		.4byte	0xc7
 2533 05fe 02       		.uleb128 0x2
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 69


 2534 05ff 91       		.byte	0x91
 2535 0600 70       		.sleb128 -16
 2536 0601 00       		.byte	0
 2537 0602 12       		.uleb128 0x12
 2538 0603 A7030000 		.4byte	.LASF82
 2539 0607 01       		.byte	0x1
 2540 0608 5004     		.2byte	0x450
 2541 060a A3000000 		.4byte	0xa3
 2542 060e 00000000 		.4byte	.LFB7
 2543 0612 9C000000 		.4byte	.LFE7-.LFB7
 2544 0616 01       		.uleb128 0x1
 2545 0617 9C       		.byte	0x9c
 2546 0618 76060000 		.4byte	0x676
 2547 061c 13       		.uleb128 0x13
 2548 061d 3A030000 		.4byte	.LASF69
 2549 0621 01       		.byte	0x1
 2550 0622 5004     		.2byte	0x450
 2551 0624 8D000000 		.4byte	0x8d
 2552 0628 02       		.uleb128 0x2
 2553 0629 91       		.byte	0x91
 2554 062a 67       		.sleb128 -25
 2555 062b 14       		.uleb128 0x14
 2556 062c 696400   		.ascii	"id\000"
 2557 062f 01       		.byte	0x1
 2558 0630 5104     		.2byte	0x451
 2559 0632 8D000000 		.4byte	0x8d
 2560 0636 02       		.uleb128 0x2
 2561 0637 91       		.byte	0x91
 2562 0638 66       		.sleb128 -26
 2563 0639 13       		.uleb128 0x13
 2564 063a 73000000 		.4byte	.LASF83
 2565 063e 01       		.byte	0x1
 2566 063f 5204     		.2byte	0x452
 2567 0641 A3020000 		.4byte	0x2a3
 2568 0645 02       		.uleb128 0x2
 2569 0646 91       		.byte	0x91
 2570 0647 60       		.sleb128 -32
 2571 0648 16       		.uleb128 0x16
 2572 0649 EB000000 		.4byte	.LASF63
 2573 064d 01       		.byte	0x1
 2574 064e 5504     		.2byte	0x455
 2575 0650 C7000000 		.4byte	0xc7
 2576 0654 02       		.uleb128 0x2
 2577 0655 91       		.byte	0x91
 2578 0656 70       		.sleb128 -16
 2579 0657 16       		.uleb128 0x16
 2580 0658 52010000 		.4byte	.LASF84
 2581 065c 01       		.byte	0x1
 2582 065d 5704     		.2byte	0x457
 2583 065f A3000000 		.4byte	0xa3
 2584 0663 02       		.uleb128 0x2
 2585 0664 91       		.byte	0x91
 2586 0665 6C       		.sleb128 -20
 2587 0666 16       		.uleb128 0x16
 2588 0667 ED010000 		.4byte	.LASF55
 2589 066b 01       		.byte	0x1
 2590 066c 5804     		.2byte	0x458
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 70


 2591 066e 6B030000 		.4byte	0x36b
 2592 0672 02       		.uleb128 0x2
 2593 0673 91       		.byte	0x91
 2594 0674 74       		.sleb128 -12
 2595 0675 00       		.byte	0
 2596 0676 12       		.uleb128 0x12
 2597 0677 F2030000 		.4byte	.LASF85
 2598 067b 01       		.byte	0x1
 2599 067c 8F04     		.2byte	0x48f
 2600 067e 8D000000 		.4byte	0x8d
 2601 0682 00000000 		.4byte	.LFB8
 2602 0686 64000000 		.4byte	.LFE8-.LFB8
 2603 068a 01       		.uleb128 0x1
 2604 068b 9C       		.byte	0x9c
 2605 068c BD060000 		.4byte	0x6bd
 2606 0690 13       		.uleb128 0x13
 2607 0691 73000000 		.4byte	.LASF83
 2608 0695 01       		.byte	0x1
 2609 0696 8F04     		.2byte	0x48f
 2610 0698 A3020000 		.4byte	0x2a3
 2611 069c 02       		.uleb128 0x2
 2612 069d 91       		.byte	0x91
 2613 069e 6C       		.sleb128 -20
 2614 069f 16       		.uleb128 0x16
 2615 06a0 EB000000 		.4byte	.LASF63
 2616 06a4 01       		.byte	0x1
 2617 06a5 9204     		.2byte	0x492
 2618 06a7 C7000000 		.4byte	0xc7
 2619 06ab 02       		.uleb128 0x2
 2620 06ac 91       		.byte	0x91
 2621 06ad 74       		.sleb128 -12
 2622 06ae 15       		.uleb128 0x15
 2623 06af 696400   		.ascii	"id\000"
 2624 06b2 01       		.byte	0x1
 2625 06b3 9404     		.2byte	0x494
 2626 06b5 8D000000 		.4byte	0x8d
 2627 06b9 02       		.uleb128 0x2
 2628 06ba 91       		.byte	0x91
 2629 06bb 73       		.sleb128 -13
 2630 06bc 00       		.byte	0
 2631 06bd 17       		.uleb128 0x17
 2632 06be 24030000 		.4byte	.LASF86
 2633 06c2 01       		.byte	0x1
 2634 06c3 CB04     		.2byte	0x4cb
 2635 06c5 00000000 		.4byte	.LFB9
 2636 06c9 A4000000 		.4byte	.LFE9-.LFB9
 2637 06cd 01       		.uleb128 0x1
 2638 06ce 9C       		.byte	0x9c
 2639 06cf 2D070000 		.4byte	0x72d
 2640 06d3 13       		.uleb128 0x13
 2641 06d4 3A030000 		.4byte	.LASF69
 2642 06d8 01       		.byte	0x1
 2643 06d9 CB04     		.2byte	0x4cb
 2644 06db 8D000000 		.4byte	0x8d
 2645 06df 02       		.uleb128 0x2
 2646 06e0 91       		.byte	0x91
 2647 06e1 6F       		.sleb128 -17
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 71


 2648 06e2 14       		.uleb128 0x14
 2649 06e3 696400   		.ascii	"id\000"
 2650 06e6 01       		.byte	0x1
 2651 06e7 CC04     		.2byte	0x4cc
 2652 06e9 8D000000 		.4byte	0x8d
 2653 06ed 02       		.uleb128 0x2
 2654 06ee 91       		.byte	0x91
 2655 06ef 6E       		.sleb128 -18
 2656 06f0 13       		.uleb128 0x13
 2657 06f1 52010000 		.4byte	.LASF84
 2658 06f5 01       		.byte	0x1
 2659 06f6 CD04     		.2byte	0x4cd
 2660 06f8 A3000000 		.4byte	0xa3
 2661 06fc 02       		.uleb128 0x2
 2662 06fd 91       		.byte	0x91
 2663 06fe 68       		.sleb128 -24
 2664 06ff 13       		.uleb128 0x13
 2665 0700 73000000 		.4byte	.LASF83
 2666 0704 01       		.byte	0x1
 2667 0705 CE04     		.2byte	0x4ce
 2668 0707 A3020000 		.4byte	0x2a3
 2669 070b 02       		.uleb128 0x2
 2670 070c 91       		.byte	0x91
 2671 070d 64       		.sleb128 -28
 2672 070e 16       		.uleb128 0x16
 2673 070f EB000000 		.4byte	.LASF63
 2674 0713 01       		.byte	0x1
 2675 0714 D104     		.2byte	0x4d1
 2676 0716 C7000000 		.4byte	0xc7
 2677 071a 02       		.uleb128 0x2
 2678 071b 91       		.byte	0x91
 2679 071c 70       		.sleb128 -16
 2680 071d 16       		.uleb128 0x16
 2681 071e ED010000 		.4byte	.LASF55
 2682 0722 01       		.byte	0x1
 2683 0723 D304     		.2byte	0x4d3
 2684 0725 6B030000 		.4byte	0x36b
 2685 0729 02       		.uleb128 0x2
 2686 072a 91       		.byte	0x91
 2687 072b 74       		.sleb128 -12
 2688 072c 00       		.byte	0
 2689 072d 18       		.uleb128 0x18
 2690 072e 2F000000 		.4byte	.LASF98
 2691 0732 01       		.byte	0x1
 2692 0733 0505     		.2byte	0x505
 2693 0735 00000000 		.4byte	.LFB10
 2694 0739 20000000 		.4byte	.LFE10-.LFB10
 2695 073d 01       		.uleb128 0x1
 2696 073e 9C       		.byte	0x9c
 2697 073f 19       		.uleb128 0x19
 2698 0740 B1000000 		.4byte	.LASF87
 2699 0744 01       		.byte	0x1
 2700 0745 2A05     		.2byte	0x52a
 2701 0747 00000000 		.4byte	.LFB11
 2702 074b 42000000 		.4byte	.LFE11-.LFB11
 2703 074f 01       		.uleb128 0x1
 2704 0750 9C       		.byte	0x9c
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 72


 2705 0751 83070000 		.4byte	0x783
 2706 0755 13       		.uleb128 0x13
 2707 0756 0E010000 		.4byte	.LASF71
 2708 075a 01       		.byte	0x1
 2709 075b 2A05     		.2byte	0x52a
 2710 075d 75020000 		.4byte	0x275
 2711 0761 02       		.uleb128 0x2
 2712 0762 91       		.byte	0x91
 2713 0763 74       		.sleb128 -12
 2714 0764 13       		.uleb128 0x13
 2715 0765 D5010000 		.4byte	.LASF79
 2716 0769 01       		.byte	0x1
 2717 076a 2B05     		.2byte	0x52b
 2718 076c A3000000 		.4byte	0xa3
 2719 0770 02       		.uleb128 0x2
 2720 0771 91       		.byte	0x91
 2721 0772 70       		.sleb128 -16
 2722 0773 14       		.uleb128 0x14
 2723 0774 6F707400 		.ascii	"opt\000"
 2724 0778 01       		.byte	0x1
 2725 0779 2C05     		.2byte	0x52c
 2726 077b 98000000 		.4byte	0x98
 2727 077f 02       		.uleb128 0x2
 2728 0780 91       		.byte	0x91
 2729 0781 6E       		.sleb128 -18
 2730 0782 00       		.byte	0
 2731 0783 1A       		.uleb128 0x1a
 2732 0784 28040000 		.4byte	.LASF88
 2733 0788 03       		.byte	0x3
 2734 0789 C402     		.2byte	0x2c4
 2735 078b 8D000000 		.4byte	0x8d
 2736 078f 1A       		.uleb128 0x1a
 2737 0790 35040000 		.4byte	.LASF89
 2738 0794 03       		.byte	0x3
 2739 0795 CB02     		.2byte	0x2cb
 2740 0797 D2000000 		.4byte	0xd2
 2741 079b 1A       		.uleb128 0x1a
 2742 079c FA010000 		.4byte	.LASF90
 2743 07a0 03       		.byte	0x3
 2744 07a1 CC02     		.2byte	0x2cc
 2745 07a3 2D010000 		.4byte	0x12d
 2746 07a7 1A       		.uleb128 0x1a
 2747 07a8 B1020000 		.4byte	.LASF91
 2748 07ac 03       		.byte	0x3
 2749 07ad CE02     		.2byte	0x2ce
 2750 07af 82000000 		.4byte	0x82
 2751 07b3 1A       		.uleb128 0x1a
 2752 07b4 31030000 		.4byte	.LASF92
 2753 07b8 03       		.byte	0x3
 2754 07b9 DB02     		.2byte	0x2db
 2755 07bb 6B030000 		.4byte	0x36b
 2756 07bf 09       		.uleb128 0x9
 2757 07c0 6B030000 		.4byte	0x36b
 2758 07c4 CF070000 		.4byte	0x7cf
 2759 07c8 0A       		.uleb128 0xa
 2760 07c9 74000000 		.4byte	0x74
 2761 07cd 1F       		.byte	0x1f
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 73


 2762 07ce 00       		.byte	0
 2763 07cf 1A       		.uleb128 0x1a
 2764 07d0 17030000 		.4byte	.LASF93
 2765 07d4 03       		.byte	0x3
 2766 07d5 DF02     		.2byte	0x2df
 2767 07d7 BF070000 		.4byte	0x7bf
 2768 07db 1A       		.uleb128 0x1a
 2769 07dc E5020000 		.4byte	.LASF94
 2770 07e0 03       		.byte	0x3
 2771 07e1 F102     		.2byte	0x2f1
 2772 07e3 8D000000 		.4byte	0x8d
 2773 07e7 00       		.byte	0
 2774              		.section	.debug_abbrev,"",%progbits
 2775              	.Ldebug_abbrev0:
 2776 0000 01       		.uleb128 0x1
 2777 0001 11       		.uleb128 0x11
 2778 0002 01       		.byte	0x1
 2779 0003 25       		.uleb128 0x25
 2780 0004 0E       		.uleb128 0xe
 2781 0005 13       		.uleb128 0x13
 2782 0006 0B       		.uleb128 0xb
 2783 0007 03       		.uleb128 0x3
 2784 0008 0E       		.uleb128 0xe
 2785 0009 1B       		.uleb128 0x1b
 2786 000a 0E       		.uleb128 0xe
 2787 000b 55       		.uleb128 0x55
 2788 000c 17       		.uleb128 0x17
 2789 000d 11       		.uleb128 0x11
 2790 000e 01       		.uleb128 0x1
 2791 000f 10       		.uleb128 0x10
 2792 0010 17       		.uleb128 0x17
 2793 0011 00       		.byte	0
 2794 0012 00       		.byte	0
 2795 0013 02       		.uleb128 0x2
 2796 0014 24       		.uleb128 0x24
 2797 0015 00       		.byte	0
 2798 0016 0B       		.uleb128 0xb
 2799 0017 0B       		.uleb128 0xb
 2800 0018 3E       		.uleb128 0x3e
 2801 0019 0B       		.uleb128 0xb
 2802 001a 03       		.uleb128 0x3
 2803 001b 0E       		.uleb128 0xe
 2804 001c 00       		.byte	0
 2805 001d 00       		.byte	0
 2806 001e 03       		.uleb128 0x3
 2807 001f 24       		.uleb128 0x24
 2808 0020 00       		.byte	0
 2809 0021 0B       		.uleb128 0xb
 2810 0022 0B       		.uleb128 0xb
 2811 0023 3E       		.uleb128 0x3e
 2812 0024 0B       		.uleb128 0xb
 2813 0025 03       		.uleb128 0x3
 2814 0026 08       		.uleb128 0x8
 2815 0027 00       		.byte	0
 2816 0028 00       		.byte	0
 2817 0029 04       		.uleb128 0x4
 2818 002a 0F       		.uleb128 0xf
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 74


 2819 002b 00       		.byte	0
 2820 002c 0B       		.uleb128 0xb
 2821 002d 0B       		.uleb128 0xb
 2822 002e 00       		.byte	0
 2823 002f 00       		.byte	0
 2824 0030 05       		.uleb128 0x5
 2825 0031 16       		.uleb128 0x16
 2826 0032 00       		.byte	0
 2827 0033 03       		.uleb128 0x3
 2828 0034 0E       		.uleb128 0xe
 2829 0035 3A       		.uleb128 0x3a
 2830 0036 0B       		.uleb128 0xb
 2831 0037 3B       		.uleb128 0x3b
 2832 0038 0B       		.uleb128 0xb
 2833 0039 49       		.uleb128 0x49
 2834 003a 13       		.uleb128 0x13
 2835 003b 00       		.byte	0
 2836 003c 00       		.byte	0
 2837 003d 06       		.uleb128 0x6
 2838 003e 16       		.uleb128 0x16
 2839 003f 00       		.byte	0
 2840 0040 03       		.uleb128 0x3
 2841 0041 0E       		.uleb128 0xe
 2842 0042 3A       		.uleb128 0x3a
 2843 0043 0B       		.uleb128 0xb
 2844 0044 3B       		.uleb128 0x3b
 2845 0045 05       		.uleb128 0x5
 2846 0046 49       		.uleb128 0x49
 2847 0047 13       		.uleb128 0x13
 2848 0048 00       		.byte	0
 2849 0049 00       		.byte	0
 2850 004a 07       		.uleb128 0x7
 2851 004b 13       		.uleb128 0x13
 2852 004c 01       		.byte	0x1
 2853 004d 03       		.uleb128 0x3
 2854 004e 0E       		.uleb128 0xe
 2855 004f 0B       		.uleb128 0xb
 2856 0050 0B       		.uleb128 0xb
 2857 0051 3A       		.uleb128 0x3a
 2858 0052 0B       		.uleb128 0xb
 2859 0053 3B       		.uleb128 0x3b
 2860 0054 05       		.uleb128 0x5
 2861 0055 01       		.uleb128 0x1
 2862 0056 13       		.uleb128 0x13
 2863 0057 00       		.byte	0
 2864 0058 00       		.byte	0
 2865 0059 08       		.uleb128 0x8
 2866 005a 0D       		.uleb128 0xd
 2867 005b 00       		.byte	0
 2868 005c 03       		.uleb128 0x3
 2869 005d 0E       		.uleb128 0xe
 2870 005e 3A       		.uleb128 0x3a
 2871 005f 0B       		.uleb128 0xb
 2872 0060 3B       		.uleb128 0x3b
 2873 0061 05       		.uleb128 0x5
 2874 0062 49       		.uleb128 0x49
 2875 0063 13       		.uleb128 0x13
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 75


 2876 0064 38       		.uleb128 0x38
 2877 0065 0B       		.uleb128 0xb
 2878 0066 00       		.byte	0
 2879 0067 00       		.byte	0
 2880 0068 09       		.uleb128 0x9
 2881 0069 01       		.uleb128 0x1
 2882 006a 01       		.byte	0x1
 2883 006b 49       		.uleb128 0x49
 2884 006c 13       		.uleb128 0x13
 2885 006d 01       		.uleb128 0x1
 2886 006e 13       		.uleb128 0x13
 2887 006f 00       		.byte	0
 2888 0070 00       		.byte	0
 2889 0071 0A       		.uleb128 0xa
 2890 0072 21       		.uleb128 0x21
 2891 0073 00       		.byte	0
 2892 0074 49       		.uleb128 0x49
 2893 0075 13       		.uleb128 0x13
 2894 0076 2F       		.uleb128 0x2f
 2895 0077 0B       		.uleb128 0xb
 2896 0078 00       		.byte	0
 2897 0079 00       		.byte	0
 2898 007a 0B       		.uleb128 0xb
 2899 007b 0F       		.uleb128 0xf
 2900 007c 00       		.byte	0
 2901 007d 0B       		.uleb128 0xb
 2902 007e 0B       		.uleb128 0xb
 2903 007f 49       		.uleb128 0x49
 2904 0080 13       		.uleb128 0x13
 2905 0081 00       		.byte	0
 2906 0082 00       		.byte	0
 2907 0083 0C       		.uleb128 0xc
 2908 0084 2E       		.uleb128 0x2e
 2909 0085 01       		.byte	0x1
 2910 0086 3F       		.uleb128 0x3f
 2911 0087 19       		.uleb128 0x19
 2912 0088 03       		.uleb128 0x3
 2913 0089 0E       		.uleb128 0xe
 2914 008a 3A       		.uleb128 0x3a
 2915 008b 0B       		.uleb128 0xb
 2916 008c 3B       		.uleb128 0x3b
 2917 008d 0B       		.uleb128 0xb
 2918 008e 27       		.uleb128 0x27
 2919 008f 19       		.uleb128 0x19
 2920 0090 49       		.uleb128 0x49
 2921 0091 13       		.uleb128 0x13
 2922 0092 11       		.uleb128 0x11
 2923 0093 01       		.uleb128 0x1
 2924 0094 12       		.uleb128 0x12
 2925 0095 06       		.uleb128 0x6
 2926 0096 40       		.uleb128 0x40
 2927 0097 18       		.uleb128 0x18
 2928 0098 9642     		.uleb128 0x2116
 2929 009a 19       		.uleb128 0x19
 2930 009b 01       		.uleb128 0x1
 2931 009c 13       		.uleb128 0x13
 2932 009d 00       		.byte	0
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 76


 2933 009e 00       		.byte	0
 2934 009f 0D       		.uleb128 0xd
 2935 00a0 05       		.uleb128 0x5
 2936 00a1 00       		.byte	0
 2937 00a2 03       		.uleb128 0x3
 2938 00a3 0E       		.uleb128 0xe
 2939 00a4 3A       		.uleb128 0x3a
 2940 00a5 0B       		.uleb128 0xb
 2941 00a6 3B       		.uleb128 0x3b
 2942 00a7 0B       		.uleb128 0xb
 2943 00a8 49       		.uleb128 0x49
 2944 00a9 13       		.uleb128 0x13
 2945 00aa 02       		.uleb128 0x2
 2946 00ab 18       		.uleb128 0x18
 2947 00ac 00       		.byte	0
 2948 00ad 00       		.byte	0
 2949 00ae 0E       		.uleb128 0xe
 2950 00af 34       		.uleb128 0x34
 2951 00b0 00       		.byte	0
 2952 00b1 03       		.uleb128 0x3
 2953 00b2 0E       		.uleb128 0xe
 2954 00b3 3A       		.uleb128 0x3a
 2955 00b4 0B       		.uleb128 0xb
 2956 00b5 3B       		.uleb128 0x3b
 2957 00b6 0B       		.uleb128 0xb
 2958 00b7 49       		.uleb128 0x49
 2959 00b8 13       		.uleb128 0x13
 2960 00b9 02       		.uleb128 0x2
 2961 00ba 18       		.uleb128 0x18
 2962 00bb 00       		.byte	0
 2963 00bc 00       		.byte	0
 2964 00bd 0F       		.uleb128 0xf
 2965 00be 34       		.uleb128 0x34
 2966 00bf 00       		.byte	0
 2967 00c0 03       		.uleb128 0x3
 2968 00c1 08       		.uleb128 0x8
 2969 00c2 3A       		.uleb128 0x3a
 2970 00c3 0B       		.uleb128 0xb
 2971 00c4 3B       		.uleb128 0x3b
 2972 00c5 0B       		.uleb128 0xb
 2973 00c6 49       		.uleb128 0x49
 2974 00c7 13       		.uleb128 0x13
 2975 00c8 02       		.uleb128 0x2
 2976 00c9 18       		.uleb128 0x18
 2977 00ca 00       		.byte	0
 2978 00cb 00       		.byte	0
 2979 00cc 10       		.uleb128 0x10
 2980 00cd 15       		.uleb128 0x15
 2981 00ce 01       		.byte	0x1
 2982 00cf 27       		.uleb128 0x27
 2983 00d0 19       		.uleb128 0x19
 2984 00d1 01       		.uleb128 0x1
 2985 00d2 13       		.uleb128 0x13
 2986 00d3 00       		.byte	0
 2987 00d4 00       		.byte	0
 2988 00d5 11       		.uleb128 0x11
 2989 00d6 05       		.uleb128 0x5
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 77


 2990 00d7 00       		.byte	0
 2991 00d8 49       		.uleb128 0x49
 2992 00d9 13       		.uleb128 0x13
 2993 00da 00       		.byte	0
 2994 00db 00       		.byte	0
 2995 00dc 12       		.uleb128 0x12
 2996 00dd 2E       		.uleb128 0x2e
 2997 00de 01       		.byte	0x1
 2998 00df 3F       		.uleb128 0x3f
 2999 00e0 19       		.uleb128 0x19
 3000 00e1 03       		.uleb128 0x3
 3001 00e2 0E       		.uleb128 0xe
 3002 00e3 3A       		.uleb128 0x3a
 3003 00e4 0B       		.uleb128 0xb
 3004 00e5 3B       		.uleb128 0x3b
 3005 00e6 05       		.uleb128 0x5
 3006 00e7 27       		.uleb128 0x27
 3007 00e8 19       		.uleb128 0x19
 3008 00e9 49       		.uleb128 0x49
 3009 00ea 13       		.uleb128 0x13
 3010 00eb 11       		.uleb128 0x11
 3011 00ec 01       		.uleb128 0x1
 3012 00ed 12       		.uleb128 0x12
 3013 00ee 06       		.uleb128 0x6
 3014 00ef 40       		.uleb128 0x40
 3015 00f0 18       		.uleb128 0x18
 3016 00f1 9642     		.uleb128 0x2116
 3017 00f3 19       		.uleb128 0x19
 3018 00f4 01       		.uleb128 0x1
 3019 00f5 13       		.uleb128 0x13
 3020 00f6 00       		.byte	0
 3021 00f7 00       		.byte	0
 3022 00f8 13       		.uleb128 0x13
 3023 00f9 05       		.uleb128 0x5
 3024 00fa 00       		.byte	0
 3025 00fb 03       		.uleb128 0x3
 3026 00fc 0E       		.uleb128 0xe
 3027 00fd 3A       		.uleb128 0x3a
 3028 00fe 0B       		.uleb128 0xb
 3029 00ff 3B       		.uleb128 0x3b
 3030 0100 05       		.uleb128 0x5
 3031 0101 49       		.uleb128 0x49
 3032 0102 13       		.uleb128 0x13
 3033 0103 02       		.uleb128 0x2
 3034 0104 18       		.uleb128 0x18
 3035 0105 00       		.byte	0
 3036 0106 00       		.byte	0
 3037 0107 14       		.uleb128 0x14
 3038 0108 05       		.uleb128 0x5
 3039 0109 00       		.byte	0
 3040 010a 03       		.uleb128 0x3
 3041 010b 08       		.uleb128 0x8
 3042 010c 3A       		.uleb128 0x3a
 3043 010d 0B       		.uleb128 0xb
 3044 010e 3B       		.uleb128 0x3b
 3045 010f 05       		.uleb128 0x5
 3046 0110 49       		.uleb128 0x49
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 78


 3047 0111 13       		.uleb128 0x13
 3048 0112 02       		.uleb128 0x2
 3049 0113 18       		.uleb128 0x18
 3050 0114 00       		.byte	0
 3051 0115 00       		.byte	0
 3052 0116 15       		.uleb128 0x15
 3053 0117 34       		.uleb128 0x34
 3054 0118 00       		.byte	0
 3055 0119 03       		.uleb128 0x3
 3056 011a 08       		.uleb128 0x8
 3057 011b 3A       		.uleb128 0x3a
 3058 011c 0B       		.uleb128 0xb
 3059 011d 3B       		.uleb128 0x3b
 3060 011e 05       		.uleb128 0x5
 3061 011f 49       		.uleb128 0x49
 3062 0120 13       		.uleb128 0x13
 3063 0121 02       		.uleb128 0x2
 3064 0122 18       		.uleb128 0x18
 3065 0123 00       		.byte	0
 3066 0124 00       		.byte	0
 3067 0125 16       		.uleb128 0x16
 3068 0126 34       		.uleb128 0x34
 3069 0127 00       		.byte	0
 3070 0128 03       		.uleb128 0x3
 3071 0129 0E       		.uleb128 0xe
 3072 012a 3A       		.uleb128 0x3a
 3073 012b 0B       		.uleb128 0xb
 3074 012c 3B       		.uleb128 0x3b
 3075 012d 05       		.uleb128 0x5
 3076 012e 49       		.uleb128 0x49
 3077 012f 13       		.uleb128 0x13
 3078 0130 02       		.uleb128 0x2
 3079 0131 18       		.uleb128 0x18
 3080 0132 00       		.byte	0
 3081 0133 00       		.byte	0
 3082 0134 17       		.uleb128 0x17
 3083 0135 2E       		.uleb128 0x2e
 3084 0136 01       		.byte	0x1
 3085 0137 3F       		.uleb128 0x3f
 3086 0138 19       		.uleb128 0x19
 3087 0139 03       		.uleb128 0x3
 3088 013a 0E       		.uleb128 0xe
 3089 013b 3A       		.uleb128 0x3a
 3090 013c 0B       		.uleb128 0xb
 3091 013d 3B       		.uleb128 0x3b
 3092 013e 05       		.uleb128 0x5
 3093 013f 27       		.uleb128 0x27
 3094 0140 19       		.uleb128 0x19
 3095 0141 11       		.uleb128 0x11
 3096 0142 01       		.uleb128 0x1
 3097 0143 12       		.uleb128 0x12
 3098 0144 06       		.uleb128 0x6
 3099 0145 40       		.uleb128 0x40
 3100 0146 18       		.uleb128 0x18
 3101 0147 9642     		.uleb128 0x2116
 3102 0149 19       		.uleb128 0x19
 3103 014a 01       		.uleb128 0x1
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 79


 3104 014b 13       		.uleb128 0x13
 3105 014c 00       		.byte	0
 3106 014d 00       		.byte	0
 3107 014e 18       		.uleb128 0x18
 3108 014f 2E       		.uleb128 0x2e
 3109 0150 00       		.byte	0
 3110 0151 3F       		.uleb128 0x3f
 3111 0152 19       		.uleb128 0x19
 3112 0153 03       		.uleb128 0x3
 3113 0154 0E       		.uleb128 0xe
 3114 0155 3A       		.uleb128 0x3a
 3115 0156 0B       		.uleb128 0xb
 3116 0157 3B       		.uleb128 0x3b
 3117 0158 05       		.uleb128 0x5
 3118 0159 27       		.uleb128 0x27
 3119 015a 19       		.uleb128 0x19
 3120 015b 11       		.uleb128 0x11
 3121 015c 01       		.uleb128 0x1
 3122 015d 12       		.uleb128 0x12
 3123 015e 06       		.uleb128 0x6
 3124 015f 40       		.uleb128 0x40
 3125 0160 18       		.uleb128 0x18
 3126 0161 9642     		.uleb128 0x2116
 3127 0163 19       		.uleb128 0x19
 3128 0164 00       		.byte	0
 3129 0165 00       		.byte	0
 3130 0166 19       		.uleb128 0x19
 3131 0167 2E       		.uleb128 0x2e
 3132 0168 01       		.byte	0x1
 3133 0169 3F       		.uleb128 0x3f
 3134 016a 19       		.uleb128 0x19
 3135 016b 03       		.uleb128 0x3
 3136 016c 0E       		.uleb128 0xe
 3137 016d 3A       		.uleb128 0x3a
 3138 016e 0B       		.uleb128 0xb
 3139 016f 3B       		.uleb128 0x3b
 3140 0170 05       		.uleb128 0x5
 3141 0171 27       		.uleb128 0x27
 3142 0172 19       		.uleb128 0x19
 3143 0173 11       		.uleb128 0x11
 3144 0174 01       		.uleb128 0x1
 3145 0175 12       		.uleb128 0x12
 3146 0176 06       		.uleb128 0x6
 3147 0177 40       		.uleb128 0x40
 3148 0178 18       		.uleb128 0x18
 3149 0179 9742     		.uleb128 0x2117
 3150 017b 19       		.uleb128 0x19
 3151 017c 01       		.uleb128 0x1
 3152 017d 13       		.uleb128 0x13
 3153 017e 00       		.byte	0
 3154 017f 00       		.byte	0
 3155 0180 1A       		.uleb128 0x1a
 3156 0181 34       		.uleb128 0x34
 3157 0182 00       		.byte	0
 3158 0183 03       		.uleb128 0x3
 3159 0184 0E       		.uleb128 0xe
 3160 0185 3A       		.uleb128 0x3a
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 80


 3161 0186 0B       		.uleb128 0xb
 3162 0187 3B       		.uleb128 0x3b
 3163 0188 05       		.uleb128 0x5
 3164 0189 49       		.uleb128 0x49
 3165 018a 13       		.uleb128 0x13
 3166 018b 3F       		.uleb128 0x3f
 3167 018c 19       		.uleb128 0x19
 3168 018d 3C       		.uleb128 0x3c
 3169 018e 19       		.uleb128 0x19
 3170 018f 00       		.byte	0
 3171 0190 00       		.byte	0
 3172 0191 00       		.byte	0
 3173              		.section	.debug_aranges,"",%progbits
 3174 0000 6C000000 		.4byte	0x6c
 3175 0004 0200     		.2byte	0x2
 3176 0006 00000000 		.4byte	.Ldebug_info0
 3177 000a 04       		.byte	0x4
 3178 000b 00       		.byte	0
 3179 000c 0000     		.2byte	0
 3180 000e 0000     		.2byte	0
 3181 0010 00000000 		.4byte	.LFB1
 3182 0014 9C020000 		.4byte	.LFE1-.LFB1
 3183 0018 00000000 		.4byte	.LFB2
 3184 001c EC000000 		.4byte	.LFE2-.LFB2
 3185 0020 00000000 		.4byte	.LFB3
 3186 0024 0C010000 		.4byte	.LFE3-.LFB3
 3187 0028 00000000 		.4byte	.LFB4
 3188 002c 0C010000 		.4byte	.LFE4-.LFB4
 3189 0030 00000000 		.4byte	.LFB5
 3190 0034 F0000000 		.4byte	.LFE5-.LFB5
 3191 0038 00000000 		.4byte	.LFB6
 3192 003c 3C010000 		.4byte	.LFE6-.LFB6
 3193 0040 00000000 		.4byte	.LFB7
 3194 0044 9C000000 		.4byte	.LFE7-.LFB7
 3195 0048 00000000 		.4byte	.LFB8
 3196 004c 64000000 		.4byte	.LFE8-.LFB8
 3197 0050 00000000 		.4byte	.LFB9
 3198 0054 A4000000 		.4byte	.LFE9-.LFB9
 3199 0058 00000000 		.4byte	.LFB10
 3200 005c 20000000 		.4byte	.LFE10-.LFB10
 3201 0060 00000000 		.4byte	.LFB11
 3202 0064 42000000 		.4byte	.LFE11-.LFB11
 3203 0068 00000000 		.4byte	0
 3204 006c 00000000 		.4byte	0
 3205              		.section	.debug_ranges,"",%progbits
 3206              	.Ldebug_ranges0:
 3207 0000 00000000 		.4byte	.LFB1
 3208 0004 9C020000 		.4byte	.LFE1
 3209 0008 00000000 		.4byte	.LFB2
 3210 000c EC000000 		.4byte	.LFE2
 3211 0010 00000000 		.4byte	.LFB3
 3212 0014 0C010000 		.4byte	.LFE3
 3213 0018 00000000 		.4byte	.LFB4
 3214 001c 0C010000 		.4byte	.LFE4
 3215 0020 00000000 		.4byte	.LFB5
 3216 0024 F0000000 		.4byte	.LFE5
 3217 0028 00000000 		.4byte	.LFB6
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 81


 3218 002c 3C010000 		.4byte	.LFE6
 3219 0030 00000000 		.4byte	.LFB7
 3220 0034 9C000000 		.4byte	.LFE7
 3221 0038 00000000 		.4byte	.LFB8
 3222 003c 64000000 		.4byte	.LFE8
 3223 0040 00000000 		.4byte	.LFB9
 3224 0044 A4000000 		.4byte	.LFE9
 3225 0048 00000000 		.4byte	.LFB10
 3226 004c 20000000 		.4byte	.LFE10
 3227 0050 00000000 		.4byte	.LFB11
 3228 0054 42000000 		.4byte	.LFE11
 3229 0058 00000000 		.4byte	0
 3230 005c 00000000 		.4byte	0
 3231              		.section	.debug_line,"",%progbits
 3232              	.Ldebug_line0:
 3233 0000 69020000 		.section	.debug_str,"MS",%progbits,1
 3233      0200A600 
 3233      00000201 
 3233      FB0E0D00 
 3233      01010101 
 3234              	.LASF68:
 3235 0000 70746F73 		.ascii	"ptos\000"
 3235      00
 3236              	.LASF65:
 3237 0005 4F535461 		.ascii	"OSTaskCreate\000"
 3237      736B4372 
 3237      65617465 
 3237      00
 3238              	.LASF31:
 3239 0012 4F535F53 		.ascii	"OS_STK_DATA\000"
 3239      544B5F44 
 3239      41544100 
 3240              	.LASF25:
 3241 001e 4F534576 		.ascii	"OSEventTbl\000"
 3241      656E7454 
 3241      626C00
 3242              	.LASF67:
 3243 0029 705F6172 		.ascii	"p_arg\000"
 3243      6700
 3244              	.LASF98:
 3245 002f 4F535F54 		.ascii	"OS_TaskReturn\000"
 3245      61736B52 
 3245      65747572 
 3245      6E00
 3246              	.LASF13:
 3247 003d 494E5438 		.ascii	"INT8U\000"
 3247      5500
 3248              	.LASF7:
 3249 0043 6C6F6E67 		.ascii	"long long unsigned int\000"
 3249      206C6F6E 
 3249      6720756E 
 3249      7369676E 
 3249      65642069 
 3250              	.LASF28:
 3251 005a 6F735F73 		.ascii	"os_stk_data\000"
 3251      746B5F64 
 3251      61746100 
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 82


 3252              	.LASF74:
 3253 0066 4F535461 		.ascii	"OSTaskResume\000"
 3253      736B5265 
 3253      73756D65 
 3253      00
 3254              	.LASF83:
 3255 0073 70657272 		.ascii	"perr\000"
 3255      00
 3256              	.LASF14:
 3257 0078 494E5431 		.ascii	"INT16U\000"
 3257      365500
 3258              	.LASF22:
 3259 007f 4F534576 		.ascii	"OSEventPtr\000"
 3259      656E7450 
 3259      747200
 3260              	.LASF6:
 3261 008a 6C6F6E67 		.ascii	"long long int\000"
 3261      206C6F6E 
 3261      6720696E 
 3261      7400
 3262              	.LASF0:
 3263 0098 7369676E 		.ascii	"signed char\000"
 3263      65642063 
 3263      68617200 
 3264              	.LASF75:
 3265 00a4 4F535461 		.ascii	"OSTaskStkChk\000"
 3265      736B5374 
 3265      6B43686B 
 3265      00
 3266              	.LASF87:
 3267 00b1 4F535F54 		.ascii	"OS_TaskStkClr\000"
 3267      61736B53 
 3267      746B436C 
 3267      7200
 3268              	.LASF59:
 3269 00bf 62697479 		.ascii	"bity_new\000"
 3269      5F6E6577 
 3269      00
 3270              	.LASF18:
 3271 00c8 4F535F53 		.ascii	"OS_STK\000"
 3271      544B00
 3272              	.LASF4:
 3273 00cf 6C6F6E67 		.ascii	"long int\000"
 3273      20696E74 
 3273      00
 3274              	.LASF42:
 3275 00d8 4F535443 		.ascii	"OSTCBDly\000"
 3275      42446C79 
 3275      00
 3276              	.LASF43:
 3277 00e1 4F535443 		.ascii	"OSTCBStat\000"
 3277      42537461 
 3277      7400
 3278              	.LASF63:
 3279 00eb 6370755F 		.ascii	"cpu_sr\000"
 3279      737200
 3280              	.LASF17:
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 83


 3281 00f2 646F7562 		.ascii	"double\000"
 3281      6C6500
 3282              	.LASF78:
 3283 00f9 6E667265 		.ascii	"nfree\000"
 3283      6500
 3284              	.LASF15:
 3285 00ff 494E5433 		.ascii	"INT32U\000"
 3285      325500
 3286              	.LASF38:
 3287 0106 4F535443 		.ascii	"OSTCBId\000"
 3287      42496400 
 3288              	.LASF71:
 3289 010e 70626F73 		.ascii	"pbos\000"
 3289      00
 3290              	.LASF54:
 3291 0113 70657665 		.ascii	"pevent\000"
 3291      6E7400
 3292              	.LASF81:
 3293 011a 73656C66 		.ascii	"self\000"
 3293      00
 3294              	.LASF32:
 3295 011f 6F735F74 		.ascii	"os_tcb\000"
 3295      636200
 3296              	.LASF76:
 3297 0126 705F7374 		.ascii	"p_stk_data\000"
 3297      6B5F6461 
 3297      746100
 3298              	.LASF70:
 3299 0131 4F535461 		.ascii	"OSTaskCreateExt\000"
 3299      736B4372 
 3299      65617465 
 3299      45787400 
 3300              	.LASF64:
 3301 0141 4F535461 		.ascii	"OSTaskChangePrio\000"
 3301      736B4368 
 3301      616E6765 
 3301      5072696F 
 3301      00
 3302              	.LASF84:
 3303 0152 76616C75 		.ascii	"value\000"
 3303      6500
 3304              	.LASF27:
 3305 0158 6F735F65 		.ascii	"os_event\000"
 3305      76656E74 
 3305      00
 3306              	.LASF36:
 3307 0161 4F535443 		.ascii	"OSTCBStkSize\000"
 3307      4253746B 
 3307      53697A65 
 3307      00
 3308              	.LASF44:
 3309 016e 4F535443 		.ascii	"OSTCBStatPend\000"
 3309      42537461 
 3309      7450656E 
 3309      6400
 3310              	.LASF8:
 3311 017c 756E7369 		.ascii	"unsigned int\000"
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 84


 3311      676E6564 
 3311      20696E74 
 3311      00
 3312              	.LASF96:
 3313 0189 2E2E5C2E 		.ascii	"..\\..\\..\\..\\..\\..\\Software\\uCOS-II\\Source\\"
 3313      2E5C2E2E 
 3313      5C2E2E5C 
 3313      2E2E5C2E 
 3313      2E5C536F 
 3314 01b3 6F735F74 		.ascii	"os_task.c\000"
 3314      61736B2E 
 3314      6300
 3315              	.LASF5:
 3316 01bd 6C6F6E67 		.ascii	"long unsigned int\000"
 3316      20756E73 
 3316      69676E65 
 3316      6420696E 
 3316      7400
 3317              	.LASF57:
 3318 01cf 785F6E65 		.ascii	"x_new\000"
 3318      7700
 3319              	.LASF79:
 3320 01d5 73697A65 		.ascii	"size\000"
 3320      00
 3321              	.LASF3:
 3322 01da 73686F72 		.ascii	"short unsigned int\000"
 3322      7420756E 
 3322      7369676E 
 3322      65642069 
 3322      6E7400
 3323              	.LASF55:
 3324 01ed 70746362 		.ascii	"ptcb\000"
 3324      00
 3325              	.LASF53:
 3326 01f2 6E657770 		.ascii	"newprio\000"
 3326      72696F00 
 3327              	.LASF90:
 3328 01fa 4F535264 		.ascii	"OSRdyTbl\000"
 3328      7954626C 
 3328      00
 3329              	.LASF33:
 3330 0203 4F535443 		.ascii	"OSTCBStkPtr\000"
 3330      4253746B 
 3330      50747200 
 3331              	.LASF95:
 3332 020f 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3332      43313120 
 3332      352E342E 
 3332      31203230 
 3332      31363036 
 3333 0242 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 3333      20726576 
 3333      6973696F 
 3333      6E203233 
 3333      37373135 
 3334 0275 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3334      66756E63 
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 85


 3334      74696F6E 
 3334      2D736563 
 3334      74696F6E 
 3335              	.LASF52:
 3336 029d 6F6C6470 		.ascii	"oldprio\000"
 3336      72696F00 
 3337              	.LASF21:
 3338 02a5 4F534576 		.ascii	"OSEventType\000"
 3338      656E7454 
 3338      79706500 
 3339              	.LASF91:
 3340 02b1 4F535275 		.ascii	"OSRunning\000"
 3340      6E6E696E 
 3340      6700
 3341              	.LASF24:
 3342 02bb 4F534576 		.ascii	"OSEventGrp\000"
 3342      656E7447 
 3342      727000
 3343              	.LASF10:
 3344 02c6 73697A65 		.ascii	"sizetype\000"
 3344      74797065 
 3344      00
 3345              	.LASF9:
 3346 02cf 6C6F6E67 		.ascii	"long double\000"
 3346      20646F75 
 3346      626C6500 
 3347              	.LASF39:
 3348 02db 4F535443 		.ascii	"OSTCBNext\000"
 3348      424E6578 
 3348      7400
 3349              	.LASF94:
 3350 02e5 4F535461 		.ascii	"OSTaskRegNextAvailID\000"
 3350      736B5265 
 3350      674E6578 
 3350      74417661 
 3350      696C4944 
 3351              	.LASF48:
 3352 02fa 4F535443 		.ascii	"OSTCBBitX\000"
 3352      42426974 
 3352      5800
 3353              	.LASF49:
 3354 0304 4F535443 		.ascii	"OSTCBBitY\000"
 3354      42426974 
 3354      5900
 3355              	.LASF60:
 3356 030e 62697478 		.ascii	"bitx_new\000"
 3356      5F6E6577 
 3356      00
 3357              	.LASF93:
 3358 0317 4F535443 		.ascii	"OSTCBPrioTbl\000"
 3358      42507269 
 3358      6F54626C 
 3358      00
 3359              	.LASF86:
 3360 0324 4F535461 		.ascii	"OSTaskRegSet\000"
 3360      736B5265 
 3360      67536574 
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 86


 3360      00
 3361              	.LASF92:
 3362 0331 4F535443 		.ascii	"OSTCBCur\000"
 3362      42437572 
 3362      00
 3363              	.LASF69:
 3364 033a 7072696F 		.ascii	"prio\000"
 3364      00
 3365              	.LASF16:
 3366 033f 666C6F61 		.ascii	"float\000"
 3366      7400
 3367              	.LASF29:
 3368 0345 4F534672 		.ascii	"OSFree\000"
 3368      656500
 3369              	.LASF26:
 3370 034c 4F535F45 		.ascii	"OS_EVENT\000"
 3370      56454E54 
 3370      00
 3371              	.LASF1:
 3372 0355 756E7369 		.ascii	"unsigned char\000"
 3372      676E6564 
 3372      20636861 
 3372      7200
 3373              	.LASF62:
 3374 0363 62697478 		.ascii	"bitx_old\000"
 3374      5F6F6C64 
 3374      00
 3375              	.LASF77:
 3376 036c 7063686B 		.ascii	"pchk\000"
 3376      00
 3377              	.LASF19:
 3378 0371 4F535F43 		.ascii	"OS_CPU_SR\000"
 3378      50555F53 
 3378      5200
 3379              	.LASF2:
 3380 037b 73686F72 		.ascii	"short int\000"
 3380      7420696E 
 3380      7400
 3381              	.LASF72:
 3382 0385 73746B5F 		.ascii	"stk_size\000"
 3382      73697A65 
 3382      00
 3383              	.LASF58:
 3384 038e 795F6F6C 		.ascii	"y_old\000"
 3384      6400
 3385              	.LASF12:
 3386 0394 424F4F4C 		.ascii	"BOOLEAN\000"
 3386      45414E00 
 3387              	.LASF23:
 3388 039c 4F534576 		.ascii	"OSEventCnt\000"
 3388      656E7443 
 3388      6E7400
 3389              	.LASF82:
 3390 03a7 4F535461 		.ascii	"OSTaskRegGet\000"
 3390      736B5265 
 3390      67476574 
 3390      00
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 87


 3391              	.LASF34:
 3392 03b4 4F535443 		.ascii	"OSTCBExtPtr\000"
 3392      42457874 
 3392      50747200 
 3393              	.LASF37:
 3394 03c0 4F535443 		.ascii	"OSTCBOpt\000"
 3394      424F7074 
 3394      00
 3395              	.LASF51:
 3396 03c9 4F535F54 		.ascii	"OS_TCB\000"
 3396      434200
 3397              	.LASF80:
 3398 03d0 4F535461 		.ascii	"OSTaskSuspend\000"
 3398      736B5375 
 3398      7370656E 
 3398      6400
 3399              	.LASF11:
 3400 03de 63686172 		.ascii	"char\000"
 3400      00
 3401              	.LASF30:
 3402 03e3 4F535573 		.ascii	"OSUsed\000"
 3402      656400
 3403              	.LASF20:
 3404 03ea 4F535F50 		.ascii	"OS_PRIO\000"
 3404      52494F00 
 3405              	.LASF85:
 3406 03f2 4F535461 		.ascii	"OSTaskRegGetID\000"
 3406      736B5265 
 3406      67476574 
 3406      494400
 3407              	.LASF66:
 3408 0401 7461736B 		.ascii	"task\000"
 3408      00
 3409              	.LASF35:
 3410 0406 4F535443 		.ascii	"OSTCBStkBottom\000"
 3410      4253746B 
 3410      426F7474 
 3410      6F6D00
 3411              	.LASF40:
 3412 0415 4F535443 		.ascii	"OSTCBPrev\000"
 3412      42507265 
 3412      7600
 3413              	.LASF61:
 3414 041f 62697479 		.ascii	"bity_old\000"
 3414      5F6F6C64 
 3414      00
 3415              	.LASF88:
 3416 0428 4F53496E 		.ascii	"OSIntNesting\000"
 3416      744E6573 
 3416      74696E67 
 3416      00
 3417              	.LASF89:
 3418 0435 4F535264 		.ascii	"OSRdyGrp\000"
 3418      79477270 
 3418      00
 3419              	.LASF73:
 3420 043e 70657874 		.ascii	"pext\000"
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccR1SIMg.s 			page 88


 3420      00
 3421              	.LASF50:
 3422 0443 4F535443 		.ascii	"OSTCBRegTbl\000"
 3422      42526567 
 3422      54626C00 
 3423              	.LASF97:
 3424 044f 433A5C55 		.ascii	"C:\\Users\\edulu.DESKTOP-961TG4K\\Documents\\PSoC C"
 3424      73657273 
 3424      5C656475 
 3424      6C752E44 
 3424      45534B54 
 3425 047e 72656174 		.ascii	"reator\\Micrium\\Examples\\Cypress\\CY8CKIT-044\\OS"
 3425      6F725C4D 
 3425      69637269 
 3425      756D5C45 
 3425      78616D70 
 3426 04ac 325C5053 		.ascii	"2\\PSoC\\OS2.cydsn\000"
 3426      6F435C4F 
 3426      53322E63 
 3426      7964736E 
 3426      00
 3427              	.LASF46:
 3428 04bd 4F535443 		.ascii	"OSTCBX\000"
 3428      425800
 3429              	.LASF47:
 3430 04c4 4F535443 		.ascii	"OSTCBY\000"
 3430      425900
 3431              	.LASF41:
 3432 04cb 4F535443 		.ascii	"OSTCBEventPtr\000"
 3432      42457665 
 3432      6E745074 
 3432      7200
 3433              	.LASF45:
 3434 04d9 4F535443 		.ascii	"OSTCBPrio\000"
 3434      42507269 
 3434      6F00
 3435              	.LASF56:
 3436 04e3 795F6E65 		.ascii	"y_new\000"
 3436      7700
 3437              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
