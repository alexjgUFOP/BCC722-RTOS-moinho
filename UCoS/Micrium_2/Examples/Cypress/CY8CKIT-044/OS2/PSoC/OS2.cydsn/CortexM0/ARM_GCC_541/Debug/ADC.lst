ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ADC_initVar
  20              		.bss
  21              		.type	ADC_initVar, %object
  22              		.size	ADC_initVar, 1
  23              	ADC_initVar:
  24 0000 00       		.space	1
  25              		.comm	ADC_offset,2,4
  26              		.comm	ADC_countsPer10Volt,4,4
  27              		.section	.rodata
  28              		.align	2
  29              		.type	ADC_channelsConfig, %object
  30              		.size	ADC_channelsConfig, 4
  31              	ADC_channelsConfig:
  32 0000 00010000 		.word	256
  33              		.section	.text.ADC_Start,"ax",%progbits
  34              		.align	2
  35              		.global	ADC_Start
  36              		.code	16
  37              		.thumb_func
  38              		.type	ADC_Start, %function
  39              	ADC_Start:
  40              	.LFB0:
  41              		.file 1 "Generated_Source\\PSoC4\\ADC.c"
   1:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/ADC.c **** * File Name: ADC.c
   3:Generated_Source\PSoC4/ADC.c **** * Version 2.50
   4:Generated_Source\PSoC4/ADC.c **** *
   5:Generated_Source\PSoC4/ADC.c **** * Description:
   6:Generated_Source\PSoC4/ADC.c **** *  This file provides the source code to the API for the Sequencing Successive
   7:Generated_Source\PSoC4/ADC.c **** *  Approximation ADC Component Component.
   8:Generated_Source\PSoC4/ADC.c **** *
   9:Generated_Source\PSoC4/ADC.c **** * Note:
  10:Generated_Source\PSoC4/ADC.c **** *
  11:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  12:Generated_Source\PSoC4/ADC.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/ADC.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 2


  17:Generated_Source\PSoC4/ADC.c **** 
  18:Generated_Source\PSoC4/ADC.c **** #include "ADC.h"
  19:Generated_Source\PSoC4/ADC.c **** 
  20:Generated_Source\PSoC4/ADC.c **** 
  21:Generated_Source\PSoC4/ADC.c **** /***************************************
  22:Generated_Source\PSoC4/ADC.c **** * Global data allocation
  23:Generated_Source\PSoC4/ADC.c **** ***************************************/
  24:Generated_Source\PSoC4/ADC.c **** uint8 ADC_initVar = 0u;
  25:Generated_Source\PSoC4/ADC.c **** volatile int16 ADC_offset[ADC_TOTAL_CHANNELS_NUM];
  26:Generated_Source\PSoC4/ADC.c **** volatile int32 ADC_countsPer10Volt[ADC_TOTAL_CHANNELS_NUM];   /* Gain compensation */
  27:Generated_Source\PSoC4/ADC.c **** 
  28:Generated_Source\PSoC4/ADC.c **** 
  29:Generated_Source\PSoC4/ADC.c **** /***************************************
  30:Generated_Source\PSoC4/ADC.c **** * Local data allocation
  31:Generated_Source\PSoC4/ADC.c **** ***************************************/
  32:Generated_Source\PSoC4/ADC.c **** /* Channels configuration generated by customiser */
  33:Generated_Source\PSoC4/ADC.c **** static const uint32 CYCODE ADC_channelsConfig[] = { 0x00000100u };
  34:Generated_Source\PSoC4/ADC.c **** 
  35:Generated_Source\PSoC4/ADC.c **** 
  36:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  37:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Start
  38:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  39:Generated_Source\PSoC4/ADC.c **** *
  40:Generated_Source\PSoC4/ADC.c **** * Summary:
  41:Generated_Source\PSoC4/ADC.c **** *  Performs all required initialization for this component
  42:Generated_Source\PSoC4/ADC.c **** *  and enables the power. The power will be set to the appropriate
  43:Generated_Source\PSoC4/ADC.c **** *  power based on the clock frequency.
  44:Generated_Source\PSoC4/ADC.c **** *
  45:Generated_Source\PSoC4/ADC.c **** * Parameters:
  46:Generated_Source\PSoC4/ADC.c **** *  None.
  47:Generated_Source\PSoC4/ADC.c **** *
  48:Generated_Source\PSoC4/ADC.c **** * Return:
  49:Generated_Source\PSoC4/ADC.c **** *  None.
  50:Generated_Source\PSoC4/ADC.c **** *
  51:Generated_Source\PSoC4/ADC.c **** * Global variables:
  52:Generated_Source\PSoC4/ADC.c **** *  The ADC_initVar variable is used to indicate when/if initial
  53:Generated_Source\PSoC4/ADC.c **** *  configuration of this component has happened. The variable is initialized to
  54:Generated_Source\PSoC4/ADC.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  55:Generated_Source\PSoC4/ADC.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  56:Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  57:Generated_Source\PSoC4/ADC.c **** *  If re-initialization of the component is required the variable should be set
  58:Generated_Source\PSoC4/ADC.c **** *  to zero before call of ADC_Start() routine, or the user may call
  59:Generated_Source\PSoC4/ADC.c **** *  ADC_Init() and ADC_Enable() as done in the
  60:Generated_Source\PSoC4/ADC.c **** *  ADC_Start() routine.
  61:Generated_Source\PSoC4/ADC.c **** *
  62:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  63:Generated_Source\PSoC4/ADC.c **** void ADC_Start(void)
  64:Generated_Source\PSoC4/ADC.c **** {
  42              		.loc 1 64 0
  43              		.cfi_startproc
  44              		@ args = 0, pretend = 0, frame = 0
  45              		@ frame_needed = 1, uses_anonymous_args = 0
  46 0000 80B5     		push	{r7, lr}
  47              		.cfi_def_cfa_offset 8
  48              		.cfi_offset 7, -8
  49              		.cfi_offset 14, -4
  50 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 3


  51              		.cfi_def_cfa_register 7
  65:Generated_Source\PSoC4/ADC.c ****     /* If not Initialized then initialize all required hardware and software */
  66:Generated_Source\PSoC4/ADC.c ****     if(ADC_initVar == 0u)
  52              		.loc 1 66 0
  53 0004 064B     		ldr	r3, .L3
  54 0006 1B78     		ldrb	r3, [r3]
  55 0008 002B     		cmp	r3, #0
  56 000a 04D1     		bne	.L2
  67:Generated_Source\PSoC4/ADC.c ****     {
  68:Generated_Source\PSoC4/ADC.c ****         ADC_Init();
  57              		.loc 1 68 0
  58 000c FFF7FEFF 		bl	ADC_Init
  69:Generated_Source\PSoC4/ADC.c ****         ADC_initVar = 1u;
  59              		.loc 1 69 0
  60 0010 034B     		ldr	r3, .L3
  61 0012 0122     		movs	r2, #1
  62 0014 1A70     		strb	r2, [r3]
  63              	.L2:
  70:Generated_Source\PSoC4/ADC.c ****     }
  71:Generated_Source\PSoC4/ADC.c ****     ADC_Enable();
  64              		.loc 1 71 0
  65 0016 FFF7FEFF 		bl	ADC_Enable
  72:Generated_Source\PSoC4/ADC.c **** }
  66              		.loc 1 72 0
  67 001a C046     		nop
  68 001c BD46     		mov	sp, r7
  69              		@ sp needed
  70 001e 80BD     		pop	{r7, pc}
  71              	.L4:
  72              		.align	2
  73              	.L3:
  74 0020 00000000 		.word	ADC_initVar
  75              		.cfi_endproc
  76              	.LFE0:
  77              		.size	ADC_Start, .-ADC_Start
  78              		.section	.text.ADC_Init,"ax",%progbits
  79              		.align	2
  80              		.global	ADC_Init
  81              		.code	16
  82              		.thumb_func
  83              		.type	ADC_Init, %function
  84              	ADC_Init:
  85              	.LFB1:
  73:Generated_Source\PSoC4/ADC.c **** 
  74:Generated_Source\PSoC4/ADC.c **** 
  75:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
  76:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Init
  77:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
  78:Generated_Source\PSoC4/ADC.c **** *
  79:Generated_Source\PSoC4/ADC.c **** * Summary:
  80:Generated_Source\PSoC4/ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  81:Generated_Source\PSoC4/ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  82:Generated_Source\PSoC4/ADC.c **** *  ADC_Start().
  83:Generated_Source\PSoC4/ADC.c **** *
  84:Generated_Source\PSoC4/ADC.c **** * Parameters:
  85:Generated_Source\PSoC4/ADC.c **** *  None.
  86:Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 4


  87:Generated_Source\PSoC4/ADC.c **** * Return:
  88:Generated_Source\PSoC4/ADC.c **** *  None.
  89:Generated_Source\PSoC4/ADC.c **** *
  90:Generated_Source\PSoC4/ADC.c **** * Global variables:
  91:Generated_Source\PSoC4/ADC.c **** *  The ADC_offset variable is initialized.
  92:Generated_Source\PSoC4/ADC.c **** *
  93:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
  94:Generated_Source\PSoC4/ADC.c **** void ADC_Init(void)
  95:Generated_Source\PSoC4/ADC.c **** {
  86              		.loc 1 95 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 16
  89              		@ frame_needed = 1, uses_anonymous_args = 0
  90 0000 80B5     		push	{r7, lr}
  91              		.cfi_def_cfa_offset 8
  92              		.cfi_offset 7, -8
  93              		.cfi_offset 14, -4
  94 0002 84B0     		sub	sp, sp, #16
  95              		.cfi_def_cfa_offset 24
  96 0004 00AF     		add	r7, sp, #0
  97              		.cfi_def_cfa_register 7
  96:Generated_Source\PSoC4/ADC.c ****     uint32 chNum;
  97:Generated_Source\PSoC4/ADC.c ****     uint32 tmpRegVal;
  98:Generated_Source\PSoC4/ADC.c ****     int32 counts;
  99:Generated_Source\PSoC4/ADC.c **** 
 100:Generated_Source\PSoC4/ADC.c ****     #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 101:Generated_Source\PSoC4/ADC.c ****         static const uint8 CYCODE ADC_InputsPlacement[] =
 102:Generated_Source\PSoC4/ADC.c ****         {
 103:Generated_Source\PSoC4/ADC.c ****             (uint8)(ADC_cy_psoc4_sarmux_8__CH_0_PORT << 4u) |
 104:Generated_Source\PSoC4/ADC.c ****             (uint8)ADC_cy_psoc4_sarmux_8__CH_0_PIN
 105:Generated_Source\PSoC4/ADC.c ****             ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_1_PORT << 4u) |
 106:Generated_Source\PSoC4/ADC.c ****              (uint8)ADC_cy_psoc4_sarmux_8__CH_1_PIN
 107:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 2u)
 108:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_2_PORT << 4u) |
 109:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_2_PIN
 110:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 2u */
 111:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 3u)
 112:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_3_PORT << 4u) |
 113:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_3_PIN
 114:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 3u */
 115:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 4u)
 116:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_4_PORT << 4u) |
 117:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_4_PIN
 118:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 4u */
 119:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 5u)
 120:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_5_PORT << 4u) |
 121:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_5_PIN
 122:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 5u */
 123:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 6u)
 124:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_6_PORT << 4u) |
 125:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_6_PIN
 126:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 6u */
 127:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 7u)
 128:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_7_PORT << 4u) |
 129:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_7_PIN
 130:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 7u */
 131:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 8u)
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 5


 132:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_8_PORT << 4u) |
 133:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_8_PIN
 134:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 8u */
 135:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 9u)
 136:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_9_PORT << 4u) |
 137:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_9_PIN
 138:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 9u */
 139:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 10u)
 140:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_10_PORT << 4u) |
 141:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_10_PIN
 142:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 10u */
 143:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 11u)
 144:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_11_PORT << 4u) |
 145:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_11_PIN
 146:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 11u */
 147:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 12u)
 148:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_12_PORT << 4u) |
 149:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_12_PIN
 150:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 12u */
 151:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 13u)
 152:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_13_PORT << 4u) |
 153:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_13_PIN
 154:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 13u */
 155:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 14u)
 156:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_14_PORT << 4u) |
 157:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_14_PIN
 158:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 14u */
 159:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 15u)
 160:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_15_PORT << 4u) |
 161:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_15_PIN
 162:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 15u */
 163:Generated_Source\PSoC4/ADC.c ****             #if(ADC_TOTAL_CHANNELS_NUM > 16u)
 164:Generated_Source\PSoC4/ADC.c ****                 ,(uint8)(ADC_cy_psoc4_sarmux_8__CH_16_PORT << 4u) |
 165:Generated_Source\PSoC4/ADC.c ****                  (uint8)ADC_cy_psoc4_sarmux_8__CH_16_PIN
 166:Generated_Source\PSoC4/ADC.c ****             #endif /* End ADC_TOTAL_CHANNELS_NUM > 16u */
 167:Generated_Source\PSoC4/ADC.c ****         };
 168:Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 169:Generated_Source\PSoC4/ADC.c **** 
 170:Generated_Source\PSoC4/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 171:Generated_Source\PSoC4/ADC.c ****         /* Start and set interrupt vector */
 172:Generated_Source\PSoC4/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
  98              		.loc 1 172 0
  99 0006 0321     		movs	r1, #3
 100 0008 0E20     		movs	r0, #14
 101 000a FFF7FEFF 		bl	CyIntSetPriority
 173:Generated_Source\PSoC4/ADC.c ****         (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR);
 102              		.loc 1 173 0
 103 000e 544B     		ldr	r3, .L17
 104 0010 1900     		movs	r1, r3
 105 0012 0E20     		movs	r0, #14
 106 0014 FFF7FEFF 		bl	CyIntSetVector
 174:Generated_Source\PSoC4/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 175:Generated_Source\PSoC4/ADC.c **** 
 176:Generated_Source\PSoC4/ADC.c ****     /* Init SAR and MUX registers */
 177:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = ADC_DEFAULT_EN_CHANNELS;
 107              		.loc 1 177 0
 108 0018 524B     		ldr	r3, .L17+4
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 6


 109 001a 0122     		movs	r2, #1
 110 001c 1A60     		str	r2, [r3]
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 179:Generated_Source\PSoC4/ADC.c ****         /* Enable the SAR internal pump when global pump is enabled */
 180:Generated_Source\PSoC4/ADC.c ****         (((ADC_PUMP_CTRL_REG & ADC_PUMP_CTRL_ENABLED) != 0u) ? 
 111              		.loc 1 180 0
 112 001e 524B     		ldr	r3, .L17+8
 113 0020 1B68     		ldr	r3, [r3]
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 114              		.loc 1 178 0
 115 0022 002B     		cmp	r3, #0
 116 0024 01DA     		bge	.L6
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 117              		.loc 1 178 0 is_stmt 0 discriminator 1
 118 0026 5149     		ldr	r1, .L17+12
 119 0028 00E0     		b	.L7
 120              	.L6:
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 121              		.loc 1 178 0 discriminator 2
 122 002a 5149     		ldr	r1, .L17+16
 123              	.L7:
 178:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG |= ADC_DEFAULT_CTRL_REG_CFG | 
 124              		.loc 1 178 0 discriminator 4
 125 002c 514B     		ldr	r3, .L17+20
 126 002e 514A     		ldr	r2, .L17+20
 127 0030 1268     		ldr	r2, [r2]
 128 0032 0A43     		orrs	r2, r1
 129 0034 1A60     		str	r2, [r3]
 181:Generated_Source\PSoC4/ADC.c ****         ADC_BOOSTPUMP_EN : 0u);
 182:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_CTRL_REG = ADC_DEFAULT_SAMPLE_CTRL_REG_CFG;
 130              		.loc 1 182 0 is_stmt 1 discriminator 4
 131 0036 504B     		ldr	r3, .L17+24
 132 0038 504A     		ldr	r2, .L17+28
 133 003a 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG = ADC_DEFAULT_RANGE_THRES_REG_CFG;
 134              		.loc 1 183 0 discriminator 4
 135 003c 504B     		ldr	r3, .L17+32
 136 003e 514A     		ldr	r2, .L17+36
 137 0040 1A60     		str	r2, [r3]
 184:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_COND_REG  = ADC_COMPARE_MODE;
 138              		.loc 1 184 0 discriminator 4
 139 0042 514B     		ldr	r3, .L17+40
 140 0044 0022     		movs	r2, #0
 141 0046 1A60     		str	r2, [r3]
 185:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME01_REG = ADC_DEFAULT_SAMPLE_TIME01_REG_CFG;
 142              		.loc 1 185 0 discriminator 4
 143 0048 504B     		ldr	r3, .L17+44
 144 004a 514A     		ldr	r2, .L17+48
 145 004c 1A60     		str	r2, [r3]
 186:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SAMPLE_TIME23_REG = ADC_DEFAULT_SAMPLE_TIME23_REG_CFG;
 146              		.loc 1 186 0 discriminator 4
 147 004e 514B     		ldr	r3, .L17+52
 148 0050 514A     		ldr	r2, .L17+56
 149 0052 1A60     		str	r2, [r3]
 187:Generated_Source\PSoC4/ADC.c ****     
 188:Generated_Source\PSoC4/ADC.c ****     /* Connect Vm to VSSA when even one channel is single-ended or multiple channels configured */
 189:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_MUX_SWITCH0 != 0u)
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 7


 190:Generated_Source\PSoC4/ADC.c ****         ADC_MUX_SWITCH0_REG |= ADC_DEFAULT_MUX_SWITCH0;
 191:Generated_Source\PSoC4/ADC.c ****         /* Set MUX_HW_CTRL_VSSA in MUX_SWITCH_HW_CTRL when multiple channels enabled */
 192:Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 193:Generated_Source\PSoC4/ADC.c ****             ADC_MUX_SWITCH_HW_CTRL_REG |= ADC_DEFAULT_MUX_SWITCH0;
 194:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_TOTAL_CHANNELS_NUM > 1u */
 195:Generated_Source\PSoC4/ADC.c ****     #endif /*ADC_CHANNELS_MODE !=0 */
 196:Generated_Source\PSoC4/ADC.c **** 
 197:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = 0u;
 150              		.loc 1 197 0 discriminator 4
 151 0054 514B     		ldr	r3, .L17+60
 152 0056 0022     		movs	r2, #0
 153 0058 1A60     		str	r2, [r3]
 198:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = 0u;
 154              		.loc 1 198 0 discriminator 4
 155 005a 514B     		ldr	r3, .L17+64
 156 005c 0022     		movs	r2, #0
 157 005e 1A60     		str	r2, [r3]
 199:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_INTR_MASK_REG = ADC_SAR_INTR_MASK;
 158              		.loc 1 199 0 discriminator 4
 159 0060 504B     		ldr	r3, .L17+68
 160 0062 0122     		movs	r2, #1
 161 0064 1A60     		str	r2, [r3]
 200:Generated_Source\PSoC4/ADC.c **** 
 201:Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 202:Generated_Source\PSoC4/ADC.c ****         ADC_ANA_TRIM_REG = ADC_TRIM_COEF;
 162              		.loc 1 202 0 discriminator 4
 163 0066 504B     		ldr	r3, .L17+72
 164 0068 0222     		movs	r2, #2
 165 006a 1A60     		str	r2, [r3]
 203:Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 204:Generated_Source\PSoC4/ADC.c **** 
 205:Generated_Source\PSoC4/ADC.c ****     /* Read and modify default configuration based on characterization */
 206:Generated_Source\PSoC4/ADC.c ****     tmpRegVal = ADC_SAR_DFT_CTRL_REG;
 166              		.loc 1 206 0 discriminator 4
 167 006c 4F4B     		ldr	r3, .L17+76
 168 006e 1B68     		ldr	r3, [r3]
 169 0070 7B60     		str	r3, [r7, #4]
 207:Generated_Source\PSoC4/ADC.c ****     tmpRegVal &= (uint32)~ADC_DCEN;
 170              		.loc 1 207 0 discriminator 4
 171 0072 7B68     		ldr	r3, [r7, #4]
 172 0074 4E4A     		ldr	r2, .L17+80
 173 0076 1340     		ands	r3, r2
 174 0078 7B60     		str	r3, [r7, #4]
 208:Generated_Source\PSoC4/ADC.c ****     
 209:Generated_Source\PSoC4/ADC.c ****     #if(ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0)
 210:Generated_Source\PSoC4/ADC.c ****         #if(ADC_NOMINAL_CLOCK_FREQ > (ADC_MAX_FREQUENCY / 2))
 211:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_SEL_CSEL_DFT_CHAR;
 212:Generated_Source\PSoC4/ADC.c ****         #else  /* clock speed < 9 Mhz */
 213:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 175              		.loc 1 213 0 discriminator 4
 176 007a 7B68     		ldr	r3, [r7, #4]
 177 007c 0122     		movs	r2, #1
 178 007e 1343     		orrs	r3, r2
 179 0080 7B60     		str	r3, [r7, #4]
 214:Generated_Source\PSoC4/ADC.c ****         #endif /* clock speed > 9 Mhz */
 215:Generated_Source\PSoC4/ADC.c ****     #else
 216:Generated_Source\PSoC4/ADC.c ****         #if ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 8


 217:Generated_Source\PSoC4/ADC.c ****              (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF))
 218:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DLY_INC;
 219:Generated_Source\PSoC4/ADC.c ****         #else
 220:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_DCEN;
 221:Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)~ADC_DLY_INC;
 222:Generated_Source\PSoC4/ADC.c ****         #endif /* ((ADC_DEFAULT_VREF_SEL == ADC__INTERNAL1024) || \
 223:Generated_Source\PSoC4/ADC.c ****                    (ADC_DEFAULT_VREF_SEL == ADC__INTERNALVREF)) */
 224:Generated_Source\PSoC4/ADC.c ****     #endif /* (ADC_CY_SAR_IP_VER == ADC_CY_SAR_IP_VER0) */
 225:Generated_Source\PSoC4/ADC.c ****     
 226:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_DFT_CTRL_REG = tmpRegVal;
 180              		.loc 1 226 0 discriminator 4
 181 0082 4A4B     		ldr	r3, .L17+76
 182 0084 7A68     		ldr	r2, [r7, #4]
 183 0086 1A60     		str	r2, [r3]
 227:Generated_Source\PSoC4/ADC.c **** 
 228:Generated_Source\PSoC4/ADC.c ****     #if(ADC_MAX_RESOLUTION != ADC_RESOLUTION_12)
 229:Generated_Source\PSoC4/ADC.c ****         ADC_WOUNDING_REG = ADC_ALT_WOUNDING;
 230:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 231:Generated_Source\PSoC4/ADC.c **** 
 232:Generated_Source\PSoC4/ADC.c ****     for(chNum = 0u; chNum < ADC_TOTAL_CHANNELS_NUM; chNum++)
 184              		.loc 1 232 0 discriminator 4
 185 0088 0023     		movs	r3, #0
 186 008a FB60     		str	r3, [r7, #12]
 187 008c 60E0     		b	.L8
 188              	.L16:
 233:Generated_Source\PSoC4/ADC.c ****     {
 234:Generated_Source\PSoC4/ADC.c ****         tmpRegVal = (ADC_channelsConfig[chNum] & ADC_CHANNEL_CONFIG_MASK);
 189              		.loc 1 234 0
 190 008e 8023     		movs	r3, #128
 191 0090 5A00     		lsls	r2, r3, #1
 192 0092 DC23     		movs	r3, #220
 193 0094 9B01     		lsls	r3, r3, #6
 194 0096 1340     		ands	r3, r2
 195 0098 7B60     		str	r3, [r7, #4]
 235:Generated_Source\PSoC4/ADC.c ****         #if(ADC_TOTAL_CHANNELS_NUM > 1u)
 236:Generated_Source\PSoC4/ADC.c ****             tmpRegVal |= ADC_InputsPlacement[chNum];
 237:Generated_Source\PSoC4/ADC.c ****         #endif /* End ADC_TOTAL_CHANNELS_NUM > 1u */
 238:Generated_Source\PSoC4/ADC.c ****         
 239:Generated_Source\PSoC4/ADC.c ****         
 240:Generated_Source\PSoC4/ADC.c ****         /* When the part is limited to 10-bit then the SUB_RESOLUTION bit
 241:Generated_Source\PSoC4/ADC.c ****         *  will be ignored and the RESOLUTION bit selects between 10-bit
 242:Generated_Source\PSoC4/ADC.c ****         *  (0) and 8-bit (1) resolution.
 243:Generated_Source\PSoC4/ADC.c ****         */
 244:Generated_Source\PSoC4/ADC.c ****         #if((ADC_MAX_RESOLUTION != ADC_RESOLUTION_12) && \
 245:Generated_Source\PSoC4/ADC.c ****             (ADC_ALT_WOUNDING == ADC_WOUNDING_10BIT))
 246:Generated_Source\PSoC4/ADC.c ****             tmpRegVal &= (uint32)(~ADC_ALT_RESOLUTION_ON);
 247:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_MAX_RESOLUTION != ADC_RESOLUTION_12 */
 248:Generated_Source\PSoC4/ADC.c **** 
 249:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 250:Generated_Source\PSoC4/ADC.c ****         if(chNum < ADC_SEQUENCED_CHANNELS_NUM)
 251:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 252:Generated_Source\PSoC4/ADC.c ****         {
 253:Generated_Source\PSoC4/ADC.c ****             CY_SET_REG32((reg32 *)(ADC_SAR_CHAN_CONFIG_IND + (uint32)(chNum << 2)), tmpRegVal);
 196              		.loc 1 253 0
 197 009a FB68     		ldr	r3, [r7, #12]
 198 009c 9B00     		lsls	r3, r3, #2
 199 009e 454A     		ldr	r2, .L17+84
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 9


 200 00a0 9446     		mov	ip, r2
 201 00a2 6344     		add	r3, r3, ip
 202 00a4 7A68     		ldr	r2, [r7, #4]
 203 00a6 1A60     		str	r2, [r3]
 254:Generated_Source\PSoC4/ADC.c **** 
 255:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 204              		.loc 1 255 0
 205 00a8 8023     		movs	r3, #128
 206 00aa 5B00     		lsls	r3, r3, #1
 207 00ac 0122     		movs	r2, #1
 208 00ae 1340     		ands	r3, r2
 209 00b0 0AD0     		beq	.L9
 256:Generated_Source\PSoC4/ADC.c ****             {
 257:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_SATURATE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 210              		.loc 1 257 0
 211 00b2 3A4B     		ldr	r3, .L17+60
 212 00b4 394A     		ldr	r2, .L17+60
 213 00b6 1168     		ldr	r1, [r2]
 214 00b8 0120     		movs	r0, #1
 215 00ba FA68     		ldr	r2, [r7, #12]
 216 00bc 9040     		lsls	r0, r0, r2
 217 00be 0200     		movs	r2, r0
 218 00c0 1204     		lsls	r2, r2, #16
 219 00c2 120C     		lsrs	r2, r2, #16
 220 00c4 0A43     		orrs	r2, r1
 221 00c6 1A60     		str	r2, [r3]
 222              	.L9:
 258:Generated_Source\PSoC4/ADC.c ****             }
 259:Generated_Source\PSoC4/ADC.c **** 
 260:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 223              		.loc 1 260 0
 224 00c8 8023     		movs	r3, #128
 225 00ca 5B00     		lsls	r3, r3, #1
 226 00cc 0222     		movs	r2, #2
 227 00ce 1340     		ands	r3, r2
 228 00d0 0AD0     		beq	.L10
 261:Generated_Source\PSoC4/ADC.c ****             {
 262:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_RANGE_INTR_MASK_REG |= (uint16)((uint16)1 << chNum);
 229              		.loc 1 262 0
 230 00d2 334B     		ldr	r3, .L17+64
 231 00d4 324A     		ldr	r2, .L17+64
 232 00d6 1168     		ldr	r1, [r2]
 233 00d8 0120     		movs	r0, #1
 234 00da FA68     		ldr	r2, [r7, #12]
 235 00dc 9040     		lsls	r0, r0, r2
 236 00de 0200     		movs	r2, r0
 237 00e0 1204     		lsls	r2, r2, #16
 238 00e2 120C     		lsrs	r2, r2, #16
 239 00e4 0A43     		orrs	r2, r1
 240 00e6 1A60     		str	r2, [r3]
 241              	.L10:
 263:Generated_Source\PSoC4/ADC.c ****             }
 264:Generated_Source\PSoC4/ADC.c ****         }
 265:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 266:Generated_Source\PSoC4/ADC.c ****             else
 267:Generated_Source\PSoC4/ADC.c ****             {
 268:Generated_Source\PSoC4/ADC.c ****                 CY_SET_REG32(ADC_SAR_INJ_CHAN_CONFIG_PTR, tmpRegVal | ADC_INJ_TAILGATING);
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 10


 269:Generated_Source\PSoC4/ADC.c **** 
 270:Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_SATURATE_EN_MASK) != 0u)
 271:Generated_Source\PSoC4/ADC.c ****                 {
 272:Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_SATURATE_MASK;
 273:Generated_Source\PSoC4/ADC.c ****                 }
 274:Generated_Source\PSoC4/ADC.c **** 
 275:Generated_Source\PSoC4/ADC.c ****                 if((ADC_channelsConfig[chNum] & ADC_IS_RANGE_CTRL_EN_MASK) != 0u)
 276:Generated_Source\PSoC4/ADC.c ****                 {
 277:Generated_Source\PSoC4/ADC.c ****                     ADC_SAR_INTR_MASK_REG |= ADC_INJ_RANGE_MASK;
 278:Generated_Source\PSoC4/ADC.c ****                 }
 279:Generated_Source\PSoC4/ADC.c ****             }
 280:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 281:Generated_Source\PSoC4/ADC.c **** 
 282:Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_ALT_RESOLUTION_ON) != 0u)
 242              		.loc 1 282 0
 243 00e8 8023     		movs	r3, #128
 244 00ea 5A00     		lsls	r2, r3, #1
 245 00ec 8023     		movs	r3, #128
 246 00ee 9B00     		lsls	r3, r3, #2
 247 00f0 1340     		ands	r3, r2
 248 00f2 03D0     		beq	.L11
 283:Generated_Source\PSoC4/ADC.c ****         {
 284:Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_DEFAULT_MAX_WRK_ALT;
 249              		.loc 1 284 0
 250 00f4 8023     		movs	r3, #128
 251 00f6 5B00     		lsls	r3, r3, #1
 252 00f8 BB60     		str	r3, [r7, #8]
 253 00fa 02E0     		b	.L12
 254              	.L11:
 285:Generated_Source\PSoC4/ADC.c ****         }
 286:Generated_Source\PSoC4/ADC.c ****         else
 287:Generated_Source\PSoC4/ADC.c ****         {
 288:Generated_Source\PSoC4/ADC.c ****                counts = (int32)ADC_SAR_WRK_MAX_12BIT;
 255              		.loc 1 288 0
 256 00fc 8023     		movs	r3, #128
 257 00fe 5B01     		lsls	r3, r3, #5
 258 0100 BB60     		str	r3, [r7, #8]
 259              	.L12:
 289:Generated_Source\PSoC4/ADC.c ****         }
 290:Generated_Source\PSoC4/ADC.c **** 
 291:Generated_Source\PSoC4/ADC.c ****         if((ADC_channelsConfig[chNum] & ADC_DIFFERENTIAL_EN) == 0u)
 260              		.loc 1 291 0
 261 0102 8023     		movs	r3, #128
 262 0104 5A00     		lsls	r2, r3, #1
 263 0106 8023     		movs	r3, #128
 264 0108 5B00     		lsls	r3, r3, #1
 265 010a 1340     		ands	r3, r2
 266 010c 05D1     		bne	.L13
 292:Generated_Source\PSoC4/ADC.c ****         {
 293:Generated_Source\PSoC4/ADC.c ****             #if((ADC_DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED) && \
 294:Generated_Source\PSoC4/ADC.c ****                 (ADC_DEFAULT_NEG_INPUT_SEL == ADC__VREF))
 295:Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the minus half scale to convert results to unsigned format */
 296:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / -2);
 297:Generated_Source\PSoC4/ADC.c ****             #else
 298:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 267              		.loc 1 298 0
 268 010e 2A4B     		ldr	r3, .L17+88
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 11


 269 0110 FA68     		ldr	r2, [r7, #12]
 270 0112 5200     		lsls	r2, r2, #1
 271 0114 0021     		movs	r1, #0
 272 0116 D152     		strh	r1, [r2, r3]
 273 0118 04E0     		b	.L14
 274              	.L13:
 299:Generated_Source\PSoC4/ADC.c ****             #endif /* end DEFAULT_SE_RESULT_FORMAT_SEL == ADC__FSIGNED */
 300:Generated_Source\PSoC4/ADC.c ****         }
 301:Generated_Source\PSoC4/ADC.c ****         else    /* Differential channel */
 302:Generated_Source\PSoC4/ADC.c ****         {
 303:Generated_Source\PSoC4/ADC.c ****             #if(ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED)
 304:Generated_Source\PSoC4/ADC.c ****                 /* Set offset to the half scale to convert results to signed format */
 305:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = (int16)(counts / 2);
 306:Generated_Source\PSoC4/ADC.c ****             #else
 307:Generated_Source\PSoC4/ADC.c ****                 ADC_offset[chNum] = 0;
 275              		.loc 1 307 0
 276 011a 274B     		ldr	r3, .L17+88
 277 011c FA68     		ldr	r2, [r7, #12]
 278 011e 5200     		lsls	r2, r2, #1
 279 0120 0021     		movs	r1, #0
 280 0122 D152     		strh	r1, [r2, r3]
 281              	.L14:
 308:Generated_Source\PSoC4/ADC.c ****             #endif /* end ADC_DEFAULT_DIFF_RESULT_FORMAT_SEL == ADC__FUNSIGNED */
 309:Generated_Source\PSoC4/ADC.c ****         }
 310:Generated_Source\PSoC4/ADC.c ****         /* Calculate gain in counts per 10 volts with rounding */
 311:Generated_Source\PSoC4/ADC.c ****         ADC_countsPer10Volt[chNum] = (int16)(((counts * ADC_10MV_COUNTS) +
 282              		.loc 1 311 0 discriminator 2
 283 0124 BB68     		ldr	r3, [r7, #8]
 284 0126 254A     		ldr	r2, .L17+92
 285 0128 5343     		muls	r3, r2
 286 012a 8022     		movs	r2, #128
 287 012c D200     		lsls	r2, r2, #3
 288 012e 9446     		mov	ip, r2
 289 0130 6344     		add	r3, r3, ip
 312:Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 290              		.loc 1 312 0 discriminator 2
 291 0132 002B     		cmp	r3, #0
 292 0134 02DA     		bge	.L15
 293 0136 224A     		ldr	r2, .L17+96
 294 0138 9446     		mov	ip, r2
 295 013a 6344     		add	r3, r3, ip
 296              	.L15:
 297 013c DB12     		asrs	r3, r3, #11
 311:Generated_Source\PSoC4/ADC.c ****                             ADC_DEFAULT_VREF_MV_VALUE) / (ADC_DEFAULT_VREF_MV_VALUE * 2));
 298              		.loc 1 311 0 discriminator 2
 299 013e 1BB2     		sxth	r3, r3
 300 0140 1900     		movs	r1, r3
 301 0142 204B     		ldr	r3, .L17+100
 302 0144 FA68     		ldr	r2, [r7, #12]
 303 0146 9200     		lsls	r2, r2, #2
 304 0148 D150     		str	r1, [r2, r3]
 232:Generated_Source\PSoC4/ADC.c ****     {
 305              		.loc 1 232 0 discriminator 2
 306 014a FB68     		ldr	r3, [r7, #12]
 307 014c 0133     		adds	r3, r3, #1
 308 014e FB60     		str	r3, [r7, #12]
 309              	.L8:
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 12


 232:Generated_Source\PSoC4/ADC.c ****     {
 310              		.loc 1 232 0 is_stmt 0 discriminator 1
 311 0150 FB68     		ldr	r3, [r7, #12]
 312 0152 002B     		cmp	r3, #0
 313 0154 9BD0     		beq	.L16
 313:Generated_Source\PSoC4/ADC.c ****     }
 314:Generated_Source\PSoC4/ADC.c **** }
 314              		.loc 1 314 0 is_stmt 1
 315 0156 C046     		nop
 316 0158 BD46     		mov	sp, r7
 317 015a 04B0     		add	sp, sp, #16
 318              		@ sp needed
 319 015c 80BD     		pop	{r7, pc}
 320              	.L18:
 321 015e C046     		.align	2
 322              	.L17:
 323 0160 00000000 		.word	ADC_ISR
 324 0164 20001A40 		.word	1075445792
 325 0168 80031A40 		.word	1075446656
 326 016c 40021053 		.word	1393558080
 327 0170 40020053 		.word	1392509504
 328 0174 00001A40 		.word	1075445760
 329 0178 04001A40 		.word	1075445764
 330 017c 8C000080 		.word	-2147483508
 331 0180 18001A40 		.word	1075445784
 332 0184 0000FF07 		.word	134152192
 333 0188 1C001A40 		.word	1075445788
 334 018c 10001A40 		.word	1075445776
 335 0190 F4010200 		.word	131572
 336 0194 14001A40 		.word	1075445780
 337 0198 02000200 		.word	131074
 338 019c 28021A40 		.word	1075446312
 339 01a0 38021A40 		.word	1075446328
 340 01a4 18021A40 		.word	1075446296
 341 01a8 000F1A40 		.word	1075449600
 342 01ac 30001A40 		.word	1075445808
 343 01b0 FFFFFFDF 		.word	-536870913
 344 01b4 80001A40 		.word	1075445888
 345 01b8 00000000 		.word	ADC_offset
 346 01bc 10270000 		.word	10000
 347 01c0 FF070000 		.word	2047
 348 01c4 00000000 		.word	ADC_countsPer10Volt
 349              		.cfi_endproc
 350              	.LFE1:
 351              		.size	ADC_Init, .-ADC_Init
 352              		.section	.text.ADC_Enable,"ax",%progbits
 353              		.align	2
 354              		.global	ADC_Enable
 355              		.code	16
 356              		.thumb_func
 357              		.type	ADC_Enable, %function
 358              	ADC_Enable:
 359              	.LFB2:
 315:Generated_Source\PSoC4/ADC.c **** 
 316:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 317:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SAR_1_Enable
 318:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 13


 319:Generated_Source\PSoC4/ADC.c **** *
 320:Generated_Source\PSoC4/ADC.c **** * Summary:
 321:Generated_Source\PSoC4/ADC.c **** *  Enables the clock and analog power for SAR ADC.
 322:Generated_Source\PSoC4/ADC.c **** *
 323:Generated_Source\PSoC4/ADC.c **** * Parameters:
 324:Generated_Source\PSoC4/ADC.c **** *  None.
 325:Generated_Source\PSoC4/ADC.c **** *
 326:Generated_Source\PSoC4/ADC.c **** * Return:
 327:Generated_Source\PSoC4/ADC.c **** *  None.
 328:Generated_Source\PSoC4/ADC.c **** *
 329:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 330:Generated_Source\PSoC4/ADC.c **** void ADC_Enable(void)
 331:Generated_Source\PSoC4/ADC.c **** {
 360              		.loc 1 331 0
 361              		.cfi_startproc
 362              		@ args = 0, pretend = 0, frame = 0
 363              		@ frame_needed = 1, uses_anonymous_args = 0
 364 0000 80B5     		push	{r7, lr}
 365              		.cfi_def_cfa_offset 8
 366              		.cfi_offset 7, -8
 367              		.cfi_offset 14, -4
 368 0002 00AF     		add	r7, sp, #0
 369              		.cfi_def_cfa_register 7
 332:Generated_Source\PSoC4/ADC.c ****     if (0u == (ADC_SAR_CTRL_REG & ADC_ENABLE))
 370              		.loc 1 332 0
 371 0004 084B     		ldr	r3, .L22
 372 0006 1B68     		ldr	r3, [r3]
 373 0008 002B     		cmp	r3, #0
 374 000a 09DB     		blt	.L21
 333:Generated_Source\PSoC4/ADC.c ****     {
 334:Generated_Source\PSoC4/ADC.c ****         #if(ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0)
 335:Generated_Source\PSoC4/ADC.c **** 
 336:Generated_Source\PSoC4/ADC.c ****             while (0u != (ADC_SAR_STATUS_REG & ADC_STATUS_BUSY))
 337:Generated_Source\PSoC4/ADC.c ****             {
 338:Generated_Source\PSoC4/ADC.c ****                 /* wait for SAR to go idle to avoid deadlock */
 339:Generated_Source\PSoC4/ADC.c ****             }
 340:Generated_Source\PSoC4/ADC.c ****         #endif /* (ADC_CY_SAR_IP_VER != ADC_CY_SAR_IP_VER0) */
 341:Generated_Source\PSoC4/ADC.c ****         
 342:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_CTRL_REG |= ADC_ENABLE;
 375              		.loc 1 342 0
 376 000c 064B     		ldr	r3, .L22
 377 000e 064A     		ldr	r2, .L22
 378 0010 1268     		ldr	r2, [r2]
 379 0012 8021     		movs	r1, #128
 380 0014 0906     		lsls	r1, r1, #24
 381 0016 0A43     		orrs	r2, r1
 382 0018 1A60     		str	r2, [r3]
 343:Generated_Source\PSoC4/ADC.c ****         
 344:Generated_Source\PSoC4/ADC.c ****         /* The block is ready to use 10 us after the enable signal is set high. */
 345:Generated_Source\PSoC4/ADC.c ****         CyDelayUs(ADC_10US_DELAY);         
 383              		.loc 1 345 0
 384 001a 0A20     		movs	r0, #10
 385 001c FFF7FEFF 		bl	CyDelayUs
 386              	.L21:
 346:Generated_Source\PSoC4/ADC.c ****     }
 347:Generated_Source\PSoC4/ADC.c **** }
 387              		.loc 1 347 0
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 14


 388 0020 C046     		nop
 389 0022 BD46     		mov	sp, r7
 390              		@ sp needed
 391 0024 80BD     		pop	{r7, pc}
 392              	.L23:
 393 0026 C046     		.align	2
 394              	.L22:
 395 0028 00001A40 		.word	1075445760
 396              		.cfi_endproc
 397              	.LFE2:
 398              		.size	ADC_Enable, .-ADC_Enable
 399              		.section	.text.ADC_Stop,"ax",%progbits
 400              		.align	2
 401              		.global	ADC_Stop
 402              		.code	16
 403              		.thumb_func
 404              		.type	ADC_Stop, %function
 405              	ADC_Stop:
 406              	.LFB3:
 348:Generated_Source\PSoC4/ADC.c **** 
 349:Generated_Source\PSoC4/ADC.c **** 
 350:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 351:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_Stop
 352:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 353:Generated_Source\PSoC4/ADC.c **** *
 354:Generated_Source\PSoC4/ADC.c **** * Summary:
 355:Generated_Source\PSoC4/ADC.c **** *  This function stops ADC conversions and puts the ADC into its lowest power
 356:Generated_Source\PSoC4/ADC.c **** *  mode.
 357:Generated_Source\PSoC4/ADC.c **** *
 358:Generated_Source\PSoC4/ADC.c **** * Parameters:
 359:Generated_Source\PSoC4/ADC.c **** *  None.
 360:Generated_Source\PSoC4/ADC.c **** *
 361:Generated_Source\PSoC4/ADC.c **** * Return:
 362:Generated_Source\PSoC4/ADC.c **** *  None.
 363:Generated_Source\PSoC4/ADC.c **** *
 364:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 365:Generated_Source\PSoC4/ADC.c **** void ADC_Stop(void)
 366:Generated_Source\PSoC4/ADC.c **** {
 407              		.loc 1 366 0
 408              		.cfi_startproc
 409              		@ args = 0, pretend = 0, frame = 0
 410              		@ frame_needed = 1, uses_anonymous_args = 0
 411 0000 80B5     		push	{r7, lr}
 412              		.cfi_def_cfa_offset 8
 413              		.cfi_offset 7, -8
 414              		.cfi_offset 14, -4
 415 0002 00AF     		add	r7, sp, #0
 416              		.cfi_def_cfa_register 7
 367:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CTRL_REG &= (uint32)~ADC_ENABLE;
 417              		.loc 1 367 0
 418 0004 044B     		ldr	r3, .L25
 419 0006 044A     		ldr	r2, .L25
 420 0008 1268     		ldr	r2, [r2]
 421 000a 5200     		lsls	r2, r2, #1
 422 000c 5208     		lsrs	r2, r2, #1
 423 000e 1A60     		str	r2, [r3]
 368:Generated_Source\PSoC4/ADC.c **** }
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 15


 424              		.loc 1 368 0
 425 0010 C046     		nop
 426 0012 BD46     		mov	sp, r7
 427              		@ sp needed
 428 0014 80BD     		pop	{r7, pc}
 429              	.L26:
 430 0016 C046     		.align	2
 431              	.L25:
 432 0018 00001A40 		.word	1075445760
 433              		.cfi_endproc
 434              	.LFE3:
 435              		.size	ADC_Stop, .-ADC_Stop
 436              		.section	.text.ADC_StartConvert,"ax",%progbits
 437              		.align	2
 438              		.global	ADC_StartConvert
 439              		.code	16
 440              		.thumb_func
 441              		.type	ADC_StartConvert, %function
 442              	ADC_StartConvert:
 443              	.LFB4:
 369:Generated_Source\PSoC4/ADC.c **** 
 370:Generated_Source\PSoC4/ADC.c **** 
 371:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 372:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StartConvert
 373:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 374:Generated_Source\PSoC4/ADC.c **** *
 375:Generated_Source\PSoC4/ADC.c **** * Summary:
 376:Generated_Source\PSoC4/ADC.c **** *  Description:
 377:Generated_Source\PSoC4/ADC.c **** *  For free running mode, this API starts the conversion process and it
 378:Generated_Source\PSoC4/ADC.c **** *  runs continuously.
 379:Generated_Source\PSoC4/ADC.c **** *
 380:Generated_Source\PSoC4/ADC.c **** *  In a triggered mode, this routine triggers every conversion by
 381:Generated_Source\PSoC4/ADC.c **** *  writing into the FW_TRIGGER bit in SAR_START_CTRL reg. In triggered mode,
 382:Generated_Source\PSoC4/ADC.c **** *  every conversion has to start by this API.
 383:Generated_Source\PSoC4/ADC.c **** *
 384:Generated_Source\PSoC4/ADC.c **** * Parameters:
 385:Generated_Source\PSoC4/ADC.c **** *  None.
 386:Generated_Source\PSoC4/ADC.c **** *
 387:Generated_Source\PSoC4/ADC.c **** * Return:
 388:Generated_Source\PSoC4/ADC.c **** *  None.
 389:Generated_Source\PSoC4/ADC.c **** *
 390:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 391:Generated_Source\PSoC4/ADC.c **** void ADC_StartConvert(void)
 392:Generated_Source\PSoC4/ADC.c **** {
 444              		.loc 1 392 0
 445              		.cfi_startproc
 446              		@ args = 0, pretend = 0, frame = 0
 447              		@ frame_needed = 1, uses_anonymous_args = 0
 448 0000 80B5     		push	{r7, lr}
 449              		.cfi_def_cfa_offset 8
 450              		.cfi_offset 7, -8
 451              		.cfi_offset 14, -4
 452 0002 00AF     		add	r7, sp, #0
 453              		.cfi_def_cfa_register 7
 393:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 394:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG |= ADC_CONTINUOUS_EN;
 454              		.loc 1 394 0
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 16


 455 0004 044B     		ldr	r3, .L28
 456 0006 044A     		ldr	r2, .L28
 457 0008 1268     		ldr	r2, [r2]
 458 000a 8021     		movs	r1, #128
 459 000c 4902     		lsls	r1, r1, #9
 460 000e 0A43     		orrs	r2, r1
 461 0010 1A60     		str	r2, [r3]
 395:Generated_Source\PSoC4/ADC.c ****     #else /* Firmware trigger */
 396:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_START_CTRL_REG = ADC_FW_TRIGGER;
 397:Generated_Source\PSoC4/ADC.c ****     #endif /* End ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 398:Generated_Source\PSoC4/ADC.c **** 
 399:Generated_Source\PSoC4/ADC.c **** }
 462              		.loc 1 399 0
 463 0012 C046     		nop
 464 0014 BD46     		mov	sp, r7
 465              		@ sp needed
 466 0016 80BD     		pop	{r7, pc}
 467              	.L29:
 468              		.align	2
 469              	.L28:
 470 0018 04001A40 		.word	1075445764
 471              		.cfi_endproc
 472              	.LFE4:
 473              		.size	ADC_StartConvert, .-ADC_StartConvert
 474              		.section	.text.ADC_StopConvert,"ax",%progbits
 475              		.align	2
 476              		.global	ADC_StopConvert
 477              		.code	16
 478              		.thumb_func
 479              		.type	ADC_StopConvert, %function
 480              	ADC_StopConvert:
 481              	.LFB5:
 400:Generated_Source\PSoC4/ADC.c **** 
 401:Generated_Source\PSoC4/ADC.c **** 
 402:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 403:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_StopConvert
 404:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 405:Generated_Source\PSoC4/ADC.c **** *
 406:Generated_Source\PSoC4/ADC.c **** * Summary:
 407:Generated_Source\PSoC4/ADC.c **** *  Forces the ADC to stop all conversions.
 408:Generated_Source\PSoC4/ADC.c **** *
 409:Generated_Source\PSoC4/ADC.c **** * Parameters:
 410:Generated_Source\PSoC4/ADC.c **** *  None.
 411:Generated_Source\PSoC4/ADC.c **** *
 412:Generated_Source\PSoC4/ADC.c **** * Return:
 413:Generated_Source\PSoC4/ADC.c **** *  None.
 414:Generated_Source\PSoC4/ADC.c **** *
 415:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 416:Generated_Source\PSoC4/ADC.c **** void ADC_StopConvert(void)
 417:Generated_Source\PSoC4/ADC.c **** {
 482              		.loc 1 417 0
 483              		.cfi_startproc
 484              		@ args = 0, pretend = 0, frame = 0
 485              		@ frame_needed = 1, uses_anonymous_args = 0
 486 0000 80B5     		push	{r7, lr}
 487              		.cfi_def_cfa_offset 8
 488              		.cfi_offset 7, -8
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 17


 489              		.cfi_offset 14, -4
 490 0002 00AF     		add	r7, sp, #0
 491              		.cfi_def_cfa_register 7
 418:Generated_Source\PSoC4/ADC.c ****     #if(ADC_DEFAULT_SAMPLE_MODE_SEL == ADC__FREERUNNING)
 419:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_SAMPLE_CTRL_REG &= (uint32)(~ADC_CONTINUOUS_EN);
 492              		.loc 1 419 0
 493 0004 044B     		ldr	r3, .L31
 494 0006 044A     		ldr	r2, .L31
 495 0008 1268     		ldr	r2, [r2]
 496 000a 0449     		ldr	r1, .L31+4
 497 000c 0A40     		ands	r2, r1
 498 000e 1A60     		str	r2, [r3]
 420:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_DEFAULT_SAMPLE_MODE == ADC__FREERUNNING */
 421:Generated_Source\PSoC4/ADC.c **** }
 499              		.loc 1 421 0
 500 0010 C046     		nop
 501 0012 BD46     		mov	sp, r7
 502              		@ sp needed
 503 0014 80BD     		pop	{r7, pc}
 504              	.L32:
 505 0016 C046     		.align	2
 506              	.L31:
 507 0018 04001A40 		.word	1075445764
 508 001c FFFFFEFF 		.word	-65537
 509              		.cfi_endproc
 510              	.LFE5:
 511              		.size	ADC_StopConvert, .-ADC_StopConvert
 512              		.section	.text.ADC_IsEndConversion,"ax",%progbits
 513              		.align	2
 514              		.global	ADC_IsEndConversion
 515              		.code	16
 516              		.thumb_func
 517              		.type	ADC_IsEndConversion, %function
 518              	ADC_IsEndConversion:
 519              	.LFB6:
 422:Generated_Source\PSoC4/ADC.c **** 
 423:Generated_Source\PSoC4/ADC.c **** 
 424:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 425:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_IsEndConversion
 426:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 427:Generated_Source\PSoC4/ADC.c **** *
 428:Generated_Source\PSoC4/ADC.c **** * Summary:
 429:Generated_Source\PSoC4/ADC.c **** *  Description: Checks for ADC end of conversion for the case one
 430:Generated_Source\PSoC4/ADC.c **** *  channel and end of scan for the case of multiple channels. It acts
 431:Generated_Source\PSoC4/ADC.c **** *  as a software version of the EOC. This function provides the
 432:Generated_Source\PSoC4/ADC.c **** *  programmer with two options. In one mode this function
 433:Generated_Source\PSoC4/ADC.c **** *  immediately returns with the conversion status. In the other mode,
 434:Generated_Source\PSoC4/ADC.c **** *  the function does not return (blocking) until the conversion has
 435:Generated_Source\PSoC4/ADC.c **** *  completed.
 436:Generated_Source\PSoC4/ADC.c **** *
 437:Generated_Source\PSoC4/ADC.c **** * Parameters:
 438:Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS        -> Immediately returns conversion result status
 439:Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT      -> Does not return until ADC complete
 440:Generated_Source\PSoC4/ADC.c **** *  ADC_RETURN_STATUS_INJ    -> Immediately returns conversion result status
 441:Generated_Source\PSoC4/ADC.c **** *                              for injection channel
 442:Generated_Source\PSoC4/ADC.c **** *  ADC_WAIT_FOR_RESULT_INJ  -> Does not return until ADC completes injection
 443:Generated_Source\PSoC4/ADC.c **** *                              channel conversion
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 18


 444:Generated_Source\PSoC4/ADC.c **** *
 445:Generated_Source\PSoC4/ADC.c **** * Return:
 446:Generated_Source\PSoC4/ADC.c **** *  If a non-zero value is returned, the last conversion or scan has completed.
 447:Generated_Source\PSoC4/ADC.c **** *  If the returned value is zero, the ADC is still in the process of a scan.
 448:Generated_Source\PSoC4/ADC.c **** *
 449:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 450:Generated_Source\PSoC4/ADC.c **** uint32 ADC_IsEndConversion(uint32 retMode)
 451:Generated_Source\PSoC4/ADC.c **** {
 520              		.loc 1 451 0
 521              		.cfi_startproc
 522              		@ args = 0, pretend = 0, frame = 16
 523              		@ frame_needed = 1, uses_anonymous_args = 0
 524 0000 80B5     		push	{r7, lr}
 525              		.cfi_def_cfa_offset 8
 526              		.cfi_offset 7, -8
 527              		.cfi_offset 14, -4
 528 0002 84B0     		sub	sp, sp, #16
 529              		.cfi_def_cfa_offset 24
 530 0004 00AF     		add	r7, sp, #0
 531              		.cfi_def_cfa_register 7
 532 0006 7860     		str	r0, [r7, #4]
 452:Generated_Source\PSoC4/ADC.c ****     uint32 status = 0u;
 533              		.loc 1 452 0
 534 0008 0023     		movs	r3, #0
 535 000a FB60     		str	r3, [r7, #12]
 453:Generated_Source\PSoC4/ADC.c **** 
 454:Generated_Source\PSoC4/ADC.c ****     if((retMode & (ADC_RETURN_STATUS | ADC_WAIT_FOR_RESULT)) != 0u)
 536              		.loc 1 454 0
 537 000c 7B68     		ldr	r3, [r7, #4]
 538 000e 0322     		movs	r2, #3
 539 0010 1340     		ands	r3, r2
 540 0012 11D0     		beq	.L34
 541              	.L36:
 455:Generated_Source\PSoC4/ADC.c ****     {
 456:Generated_Source\PSoC4/ADC.c ****         do
 457:Generated_Source\PSoC4/ADC.c ****         {
 458:Generated_Source\PSoC4/ADC.c ****             status = ADC_SAR_INTR_REG & ADC_EOS_MASK;
 542              		.loc 1 458 0 discriminator 2
 543 0014 0B4B     		ldr	r3, .L38
 544 0016 1B68     		ldr	r3, [r3]
 545 0018 0122     		movs	r2, #1
 546 001a 1340     		ands	r3, r2
 547 001c FB60     		str	r3, [r7, #12]
 459:Generated_Source\PSoC4/ADC.c ****         }while((status == 0u) && ((retMode & ADC_WAIT_FOR_RESULT) != 0u));
 548              		.loc 1 459 0 discriminator 2
 549 001e FB68     		ldr	r3, [r7, #12]
 550 0020 002B     		cmp	r3, #0
 551 0022 03D1     		bne	.L35
 552              		.loc 1 459 0 is_stmt 0 discriminator 1
 553 0024 7B68     		ldr	r3, [r7, #4]
 554 0026 0222     		movs	r2, #2
 555 0028 1340     		ands	r3, r2
 556 002a F3D1     		bne	.L36
 557              	.L35:
 460:Generated_Source\PSoC4/ADC.c **** 
 461:Generated_Source\PSoC4/ADC.c ****         if(status != 0u)
 558              		.loc 1 461 0 is_stmt 1
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 19


 559 002c FB68     		ldr	r3, [r7, #12]
 560 002e 002B     		cmp	r3, #0
 561 0030 02D0     		beq	.L34
 462:Generated_Source\PSoC4/ADC.c ****         {
 463:Generated_Source\PSoC4/ADC.c ****             /* Clear EOS bit */
 464:Generated_Source\PSoC4/ADC.c ****             ADC_SAR_INTR_REG = ADC_EOS_MASK;
 562              		.loc 1 464 0
 563 0032 044B     		ldr	r3, .L38
 564 0034 0122     		movs	r2, #1
 565 0036 1A60     		str	r2, [r3]
 566              	.L34:
 465:Generated_Source\PSoC4/ADC.c ****         }
 466:Generated_Source\PSoC4/ADC.c ****     }
 467:Generated_Source\PSoC4/ADC.c **** 
 468:Generated_Source\PSoC4/ADC.c ****     #if(ADC_INJ_CHANNEL_ENABLED)
 469:Generated_Source\PSoC4/ADC.c ****         if((retMode & (ADC_RETURN_STATUS_INJ | ADC_WAIT_FOR_RESULT_INJ)) != 0u)
 470:Generated_Source\PSoC4/ADC.c ****         {
 471:Generated_Source\PSoC4/ADC.c ****             do
 472:Generated_Source\PSoC4/ADC.c ****             {
 473:Generated_Source\PSoC4/ADC.c ****                 status |= ADC_SAR_INTR_REG & ADC_INJ_EOC_MASK;
 474:Generated_Source\PSoC4/ADC.c ****             }while(((status & ADC_INJ_EOC_MASK) == 0u) &&
 475:Generated_Source\PSoC4/ADC.c ****                    ((retMode & ADC_WAIT_FOR_RESULT_INJ) != 0u));
 476:Generated_Source\PSoC4/ADC.c **** 
 477:Generated_Source\PSoC4/ADC.c ****             if((status & ADC_INJ_EOC_MASK) != 0u)
 478:Generated_Source\PSoC4/ADC.c ****             {
 479:Generated_Source\PSoC4/ADC.c ****                 /* Clear Injection EOS bit */
 480:Generated_Source\PSoC4/ADC.c ****                 ADC_SAR_INTR_REG = ADC_INJ_EOC_MASK;
 481:Generated_Source\PSoC4/ADC.c ****             }
 482:Generated_Source\PSoC4/ADC.c ****         }
 483:Generated_Source\PSoC4/ADC.c ****     #endif /* ADC_INJ_CHANNEL_ENABLED */
 484:Generated_Source\PSoC4/ADC.c **** 
 485:Generated_Source\PSoC4/ADC.c ****     return (status);
 567              		.loc 1 485 0
 568 0038 FB68     		ldr	r3, [r7, #12]
 486:Generated_Source\PSoC4/ADC.c **** }
 569              		.loc 1 486 0
 570 003a 1800     		movs	r0, r3
 571 003c BD46     		mov	sp, r7
 572 003e 04B0     		add	sp, sp, #16
 573              		@ sp needed
 574 0040 80BD     		pop	{r7, pc}
 575              	.L39:
 576 0042 C046     		.align	2
 577              	.L38:
 578 0044 10021A40 		.word	1075446288
 579              		.cfi_endproc
 580              	.LFE6:
 581              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 582              		.section	.text.ADC_GetResult16,"ax",%progbits
 583              		.align	2
 584              		.global	ADC_GetResult16
 585              		.code	16
 586              		.thumb_func
 587              		.type	ADC_GetResult16, %function
 588              	ADC_GetResult16:
 589              	.LFB7:
 487:Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 20


 488:Generated_Source\PSoC4/ADC.c **** 
 489:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 490:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_GetResult16
 491:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 492:Generated_Source\PSoC4/ADC.c **** *
 493:Generated_Source\PSoC4/ADC.c **** * Summary:
 494:Generated_Source\PSoC4/ADC.c **** *  Gets the data available in the SAR DATA register.
 495:Generated_Source\PSoC4/ADC.c **** *
 496:Generated_Source\PSoC4/ADC.c **** * Parameters:
 497:Generated_Source\PSoC4/ADC.c **** *  chan: The ADC channel in which to return the result. The first channel
 498:Generated_Source\PSoC4/ADC.c **** *  is 0 and the injection channel if enabled is the number of valid channels.
 499:Generated_Source\PSoC4/ADC.c **** *
 500:Generated_Source\PSoC4/ADC.c **** * Return:
 501:Generated_Source\PSoC4/ADC.c **** *  Returns converted data as a signed 16-bit integer
 502:Generated_Source\PSoC4/ADC.c **** *
 503:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 504:Generated_Source\PSoC4/ADC.c **** int16 ADC_GetResult16(uint32 chan)
 505:Generated_Source\PSoC4/ADC.c **** {
 590              		.loc 1 505 0
 591              		.cfi_startproc
 592              		@ args = 0, pretend = 0, frame = 16
 593              		@ frame_needed = 1, uses_anonymous_args = 0
 594 0000 80B5     		push	{r7, lr}
 595              		.cfi_def_cfa_offset 8
 596              		.cfi_offset 7, -8
 597              		.cfi_offset 14, -4
 598 0002 84B0     		sub	sp, sp, #16
 599              		.cfi_def_cfa_offset 24
 600 0004 00AF     		add	r7, sp, #0
 601              		.cfi_def_cfa_register 7
 602 0006 7860     		str	r0, [r7, #4]
 506:Generated_Source\PSoC4/ADC.c ****     uint32 result;
 507:Generated_Source\PSoC4/ADC.c **** 
 508:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 509:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 603              		.loc 1 509 0
 604 0008 7B68     		ldr	r3, [r7, #4]
 605 000a 002B     		cmp	r3, #0
 606 000c 02D0     		beq	.L41
 607              		.loc 1 509 0 is_stmt 0 discriminator 1
 608 000e 0020     		movs	r0, #0
 609 0010 FFF7FEFF 		bl	CyHalt
 610              	.L41:
 510:Generated_Source\PSoC4/ADC.c **** 
 511:Generated_Source\PSoC4/ADC.c ****     if(chan < ADC_SEQUENCED_CHANNELS_NUM)
 611              		.loc 1 511 0 is_stmt 1
 612 0014 7B68     		ldr	r3, [r7, #4]
 613 0016 002B     		cmp	r3, #0
 614 0018 09D1     		bne	.L42
 512:Generated_Source\PSoC4/ADC.c ****     {
 513:Generated_Source\PSoC4/ADC.c ****         result = CY_GET_REG32((reg32 *)(ADC_SAR_CHAN_RESULT_IND + (uint32)(chan << 2u))) &
 615              		.loc 1 513 0
 616 001a 7B68     		ldr	r3, [r7, #4]
 617 001c 9B00     		lsls	r3, r3, #2
 618 001e 084A     		ldr	r2, .L45
 619 0020 9446     		mov	ip, r2
 620 0022 6344     		add	r3, r3, ip
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 21


 621 0024 1B68     		ldr	r3, [r3]
 622 0026 1B04     		lsls	r3, r3, #16
 623 0028 1B0C     		lsrs	r3, r3, #16
 624 002a FB60     		str	r3, [r7, #12]
 625 002c 01E0     		b	.L43
 626              	.L42:
 514:Generated_Source\PSoC4/ADC.c ****                 ADC_RESULT_MASK;
 515:Generated_Source\PSoC4/ADC.c ****     }
 516:Generated_Source\PSoC4/ADC.c ****     else
 517:Generated_Source\PSoC4/ADC.c ****     {
 518:Generated_Source\PSoC4/ADC.c ****         #if(ADC_INJ_CHANNEL_ENABLED)
 519:Generated_Source\PSoC4/ADC.c ****             result = ADC_SAR_INJ_RESULT_REG & ADC_RESULT_MASK;
 520:Generated_Source\PSoC4/ADC.c ****         #else
 521:Generated_Source\PSoC4/ADC.c ****             result = 0u;
 627              		.loc 1 521 0
 628 002e 0023     		movs	r3, #0
 629 0030 FB60     		str	r3, [r7, #12]
 630              	.L43:
 522:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_INJ_CHANNEL_ENABLED */
 523:Generated_Source\PSoC4/ADC.c ****     }
 524:Generated_Source\PSoC4/ADC.c **** 
 525:Generated_Source\PSoC4/ADC.c ****     return ( (int16)result );
 631              		.loc 1 525 0
 632 0032 FB68     		ldr	r3, [r7, #12]
 633 0034 1BB2     		sxth	r3, r3
 526:Generated_Source\PSoC4/ADC.c **** }
 634              		.loc 1 526 0
 635 0036 1800     		movs	r0, r3
 636 0038 BD46     		mov	sp, r7
 637 003a 04B0     		add	sp, sp, #16
 638              		@ sp needed
 639 003c 80BD     		pop	{r7, pc}
 640              	.L46:
 641 003e C046     		.align	2
 642              	.L45:
 643 0040 80011A40 		.word	1075446144
 644              		.cfi_endproc
 645              	.LFE7:
 646              		.size	ADC_GetResult16, .-ADC_GetResult16
 647              		.section	.text.ADC_SetChanMask,"ax",%progbits
 648              		.align	2
 649              		.global	ADC_SetChanMask
 650              		.code	16
 651              		.thumb_func
 652              		.type	ADC_SetChanMask, %function
 653              	ADC_SetChanMask:
 654              	.LFB8:
 527:Generated_Source\PSoC4/ADC.c **** 
 528:Generated_Source\PSoC4/ADC.c **** 
 529:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 530:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetChanMask
 531:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 532:Generated_Source\PSoC4/ADC.c **** *
 533:Generated_Source\PSoC4/ADC.c **** * Summary:
 534:Generated_Source\PSoC4/ADC.c **** *  Sets the channel enable mask.
 535:Generated_Source\PSoC4/ADC.c **** *
 536:Generated_Source\PSoC4/ADC.c **** * Parameters:
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 22


 537:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that will be
 538:Generated_Source\PSoC4/ADC.c **** *  scanned. Setting bits for channels that do not exist will have no
 539:Generated_Source\PSoC4/ADC.c **** *  effect. For example, if only 6 channels were enabled, setting a
 540:Generated_Source\PSoC4/ADC.c **** *  mask of 0x0103 would only enable the last two channels (0 and 1).
 541:Generated_Source\PSoC4/ADC.c **** *  This API will not enable the injection channel.
 542:Generated_Source\PSoC4/ADC.c **** *  Examples: If the component is setup to sequence through 8
 543:Generated_Source\PSoC4/ADC.c **** *  channels, a mask of 0x000F would enable channels 0, 1, 2, and 3.
 544:Generated_Source\PSoC4/ADC.c **** *
 545:Generated_Source\PSoC4/ADC.c **** * Return:
 546:Generated_Source\PSoC4/ADC.c **** *  None.
 547:Generated_Source\PSoC4/ADC.c **** *
 548:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 549:Generated_Source\PSoC4/ADC.c **** void ADC_SetChanMask(uint32 mask)
 550:Generated_Source\PSoC4/ADC.c **** {
 655              		.loc 1 550 0
 656              		.cfi_startproc
 657              		@ args = 0, pretend = 0, frame = 8
 658              		@ frame_needed = 1, uses_anonymous_args = 0
 659 0000 80B5     		push	{r7, lr}
 660              		.cfi_def_cfa_offset 8
 661              		.cfi_offset 7, -8
 662              		.cfi_offset 14, -4
 663 0002 82B0     		sub	sp, sp, #8
 664              		.cfi_def_cfa_offset 16
 665 0004 00AF     		add	r7, sp, #0
 666              		.cfi_def_cfa_register 7
 667 0006 7860     		str	r0, [r7, #4]
 551:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_CHAN_EN_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 668              		.loc 1 551 0
 669 0008 044B     		ldr	r3, .L48
 670 000a 7A68     		ldr	r2, [r7, #4]
 671 000c 0121     		movs	r1, #1
 672 000e 0A40     		ands	r2, r1
 673 0010 1A60     		str	r2, [r3]
 552:Generated_Source\PSoC4/ADC.c **** }
 674              		.loc 1 552 0
 675 0012 C046     		nop
 676 0014 BD46     		mov	sp, r7
 677 0016 02B0     		add	sp, sp, #8
 678              		@ sp needed
 679 0018 80BD     		pop	{r7, pc}
 680              	.L49:
 681 001a C046     		.align	2
 682              	.L48:
 683 001c 20001A40 		.word	1075445792
 684              		.cfi_endproc
 685              	.LFE8:
 686              		.size	ADC_SetChanMask, .-ADC_SetChanMask
 687              		.section	.text.ADC_SetLowLimit,"ax",%progbits
 688              		.align	2
 689              		.global	ADC_SetLowLimit
 690              		.code	16
 691              		.thumb_func
 692              		.type	ADC_SetLowLimit, %function
 693              	ADC_SetLowLimit:
 694              	.LFB9:
 553:Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 23


 554:Generated_Source\PSoC4/ADC.c **** #if(ADC_INJ_CHANNEL_ENABLED)
 555:Generated_Source\PSoC4/ADC.c **** 
 556:Generated_Source\PSoC4/ADC.c **** 
 557:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 558:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_EnableInjection
 559:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 560:Generated_Source\PSoC4/ADC.c ****     *
 561:Generated_Source\PSoC4/ADC.c ****     * Summary:
 562:Generated_Source\PSoC4/ADC.c ****     *  Enables the injection channel for the next scan only.
 563:Generated_Source\PSoC4/ADC.c ****     *
 564:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 565:Generated_Source\PSoC4/ADC.c ****     *  None.
 566:Generated_Source\PSoC4/ADC.c ****     *
 567:Generated_Source\PSoC4/ADC.c ****     * Return:
 568:Generated_Source\PSoC4/ADC.c ****     *  None.
 569:Generated_Source\PSoC4/ADC.c ****     *
 570:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 571:Generated_Source\PSoC4/ADC.c ****     void ADC_EnableInjection(void)
 572:Generated_Source\PSoC4/ADC.c ****     {
 573:Generated_Source\PSoC4/ADC.c ****         ADC_SAR_INJ_CHAN_CONFIG_REG |= ADC_INJ_CHAN_EN;
 574:Generated_Source\PSoC4/ADC.c ****     }
 575:Generated_Source\PSoC4/ADC.c **** 
 576:Generated_Source\PSoC4/ADC.c **** #endif /* ADC_INJ_CHANNEL_ENABLED */
 577:Generated_Source\PSoC4/ADC.c **** 
 578:Generated_Source\PSoC4/ADC.c **** 
 579:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 580:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLowLimit
 581:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 582:Generated_Source\PSoC4/ADC.c **** *
 583:Generated_Source\PSoC4/ADC.c **** * Summary:
 584:Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 585:Generated_Source\PSoC4/ADC.c **** *
 586:Generated_Source\PSoC4/ADC.c **** * Parameters:
 587:Generated_Source\PSoC4/ADC.c **** *  lowLimit: The low limit for a limit condition.
 588:Generated_Source\PSoC4/ADC.c **** *
 589:Generated_Source\PSoC4/ADC.c **** * Return:
 590:Generated_Source\PSoC4/ADC.c **** *  None.
 591:Generated_Source\PSoC4/ADC.c **** *
 592:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 593:Generated_Source\PSoC4/ADC.c **** void ADC_SetLowLimit(uint32 lowLimit)
 594:Generated_Source\PSoC4/ADC.c **** {
 695              		.loc 1 594 0
 696              		.cfi_startproc
 697              		@ args = 0, pretend = 0, frame = 8
 698              		@ frame_needed = 1, uses_anonymous_args = 0
 699 0000 80B5     		push	{r7, lr}
 700              		.cfi_def_cfa_offset 8
 701              		.cfi_offset 7, -8
 702              		.cfi_offset 14, -4
 703 0002 82B0     		sub	sp, sp, #8
 704              		.cfi_def_cfa_offset 16
 705 0004 00AF     		add	r7, sp, #0
 706              		.cfi_def_cfa_register 7
 707 0006 7860     		str	r0, [r7, #4]
 595:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_LOW_MASK);
 708              		.loc 1 595 0
 709 0008 084B     		ldr	r3, .L51
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 24


 710 000a 084A     		ldr	r2, .L51
 711 000c 1268     		ldr	r2, [r2]
 712 000e 120C     		lsrs	r2, r2, #16
 713 0010 1204     		lsls	r2, r2, #16
 714 0012 1A60     		str	r2, [r3]
 596:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= lowLimit & ADC_RANGE_LOW_MASK;
 715              		.loc 1 596 0
 716 0014 054B     		ldr	r3, .L51
 717 0016 054A     		ldr	r2, .L51
 718 0018 1168     		ldr	r1, [r2]
 719 001a 7A68     		ldr	r2, [r7, #4]
 720 001c 1204     		lsls	r2, r2, #16
 721 001e 120C     		lsrs	r2, r2, #16
 722 0020 0A43     		orrs	r2, r1
 723 0022 1A60     		str	r2, [r3]
 597:Generated_Source\PSoC4/ADC.c **** }
 724              		.loc 1 597 0
 725 0024 C046     		nop
 726 0026 BD46     		mov	sp, r7
 727 0028 02B0     		add	sp, sp, #8
 728              		@ sp needed
 729 002a 80BD     		pop	{r7, pc}
 730              	.L52:
 731              		.align	2
 732              	.L51:
 733 002c 18001A40 		.word	1075445784
 734              		.cfi_endproc
 735              	.LFE9:
 736              		.size	ADC_SetLowLimit, .-ADC_SetLowLimit
 737              		.section	.text.ADC_SetHighLimit,"ax",%progbits
 738              		.align	2
 739              		.global	ADC_SetHighLimit
 740              		.code	16
 741              		.thumb_func
 742              		.type	ADC_SetHighLimit, %function
 743              	ADC_SetHighLimit:
 744              	.LFB10:
 598:Generated_Source\PSoC4/ADC.c **** 
 599:Generated_Source\PSoC4/ADC.c **** 
 600:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 601:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetHighLimit
 602:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 603:Generated_Source\PSoC4/ADC.c **** *
 604:Generated_Source\PSoC4/ADC.c **** * Summary:
 605:Generated_Source\PSoC4/ADC.c **** *  Sets the low limit parameter for a limit condition.
 606:Generated_Source\PSoC4/ADC.c **** *
 607:Generated_Source\PSoC4/ADC.c **** * Parameters:
 608:Generated_Source\PSoC4/ADC.c **** *  highLimit: The high limit for a limit condition.
 609:Generated_Source\PSoC4/ADC.c **** *
 610:Generated_Source\PSoC4/ADC.c **** * Return:
 611:Generated_Source\PSoC4/ADC.c **** *  None.
 612:Generated_Source\PSoC4/ADC.c **** *
 613:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 614:Generated_Source\PSoC4/ADC.c **** void ADC_SetHighLimit(uint32 highLimit)
 615:Generated_Source\PSoC4/ADC.c **** {
 745              		.loc 1 615 0
 746              		.cfi_startproc
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 25


 747              		@ args = 0, pretend = 0, frame = 8
 748              		@ frame_needed = 1, uses_anonymous_args = 0
 749 0000 80B5     		push	{r7, lr}
 750              		.cfi_def_cfa_offset 8
 751              		.cfi_offset 7, -8
 752              		.cfi_offset 14, -4
 753 0002 82B0     		sub	sp, sp, #8
 754              		.cfi_def_cfa_offset 16
 755 0004 00AF     		add	r7, sp, #0
 756              		.cfi_def_cfa_register 7
 757 0006 7860     		str	r0, [r7, #4]
 616:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG &= (uint32)(~ADC_RANGE_HIGH_MASK);
 758              		.loc 1 616 0
 759 0008 084B     		ldr	r3, .L54
 760 000a 084A     		ldr	r2, .L54
 761 000c 1268     		ldr	r2, [r2]
 762 000e 1204     		lsls	r2, r2, #16
 763 0010 120C     		lsrs	r2, r2, #16
 764 0012 1A60     		str	r2, [r3]
 617:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_THRES_REG |= (uint32)(highLimit << ADC_RANGE_HIGH_OFFSET);
 765              		.loc 1 617 0
 766 0014 054B     		ldr	r3, .L54
 767 0016 054A     		ldr	r2, .L54
 768 0018 1168     		ldr	r1, [r2]
 769 001a 7A68     		ldr	r2, [r7, #4]
 770 001c 1204     		lsls	r2, r2, #16
 771 001e 0A43     		orrs	r2, r1
 772 0020 1A60     		str	r2, [r3]
 618:Generated_Source\PSoC4/ADC.c **** }
 773              		.loc 1 618 0
 774 0022 C046     		nop
 775 0024 BD46     		mov	sp, r7
 776 0026 02B0     		add	sp, sp, #8
 777              		@ sp needed
 778 0028 80BD     		pop	{r7, pc}
 779              	.L55:
 780 002a C046     		.align	2
 781              	.L54:
 782 002c 18001A40 		.word	1075445784
 783              		.cfi_endproc
 784              	.LFE10:
 785              		.size	ADC_SetHighLimit, .-ADC_SetHighLimit
 786              		.section	.text.ADC_SetLimitMask,"ax",%progbits
 787              		.align	2
 788              		.global	ADC_SetLimitMask
 789              		.code	16
 790              		.thumb_func
 791              		.type	ADC_SetLimitMask, %function
 792              	ADC_SetLimitMask:
 793              	.LFB11:
 619:Generated_Source\PSoC4/ADC.c **** 
 620:Generated_Source\PSoC4/ADC.c **** 
 621:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetLimitMask
 623:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 624:Generated_Source\PSoC4/ADC.c **** *
 625:Generated_Source\PSoC4/ADC.c **** * Summary:
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 26


 626:Generated_Source\PSoC4/ADC.c **** *  Sets the channel limit condition mask.
 627:Generated_Source\PSoC4/ADC.c **** *
 628:Generated_Source\PSoC4/ADC.c **** * Parameters:
 629:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 630:Generated_Source\PSoC4/ADC.c **** *  limit condition interrupt. Setting bits for channels that do not exist
 631:Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 6 channels were enabled,
 632:Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x0103 would only enable the last two channels (0 and 1).
 633:Generated_Source\PSoC4/ADC.c **** *
 634:Generated_Source\PSoC4/ADC.c **** * Return:
 635:Generated_Source\PSoC4/ADC.c **** *  None.
 636:Generated_Source\PSoC4/ADC.c **** *
 637:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 638:Generated_Source\PSoC4/ADC.c **** void ADC_SetLimitMask(uint32 mask)
 639:Generated_Source\PSoC4/ADC.c **** {
 794              		.loc 1 639 0
 795              		.cfi_startproc
 796              		@ args = 0, pretend = 0, frame = 8
 797              		@ frame_needed = 1, uses_anonymous_args = 0
 798 0000 80B5     		push	{r7, lr}
 799              		.cfi_def_cfa_offset 8
 800              		.cfi_offset 7, -8
 801              		.cfi_offset 14, -4
 802 0002 82B0     		sub	sp, sp, #8
 803              		.cfi_def_cfa_offset 16
 804 0004 00AF     		add	r7, sp, #0
 805              		.cfi_def_cfa_register 7
 806 0006 7860     		str	r0, [r7, #4]
 640:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_RANGE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 807              		.loc 1 640 0
 808 0008 044B     		ldr	r3, .L57
 809 000a 7A68     		ldr	r2, [r7, #4]
 810 000c 0121     		movs	r1, #1
 811 000e 0A40     		ands	r2, r1
 812 0010 1A60     		str	r2, [r3]
 641:Generated_Source\PSoC4/ADC.c **** }
 813              		.loc 1 641 0
 814 0012 C046     		nop
 815 0014 BD46     		mov	sp, r7
 816 0016 02B0     		add	sp, sp, #8
 817              		@ sp needed
 818 0018 80BD     		pop	{r7, pc}
 819              	.L58:
 820 001a C046     		.align	2
 821              	.L57:
 822 001c 38021A40 		.word	1075446328
 823              		.cfi_endproc
 824              	.LFE11:
 825              		.size	ADC_SetLimitMask, .-ADC_SetLimitMask
 826              		.section	.text.ADC_SetSatMask,"ax",%progbits
 827              		.align	2
 828              		.global	ADC_SetSatMask
 829              		.code	16
 830              		.thumb_func
 831              		.type	ADC_SetSatMask, %function
 832              	ADC_SetSatMask:
 833              	.LFB12:
 642:Generated_Source\PSoC4/ADC.c **** 
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 27


 643:Generated_Source\PSoC4/ADC.c **** 
 644:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 645:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetSatMask
 646:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 647:Generated_Source\PSoC4/ADC.c **** *
 648:Generated_Source\PSoC4/ADC.c **** * Summary:
 649:Generated_Source\PSoC4/ADC.c **** *  Sets the channel saturation event mask.
 650:Generated_Source\PSoC4/ADC.c **** *
 651:Generated_Source\PSoC4/ADC.c **** * Parameters:
 652:Generated_Source\PSoC4/ADC.c **** *  mask: Sets which channels that may cause a
 653:Generated_Source\PSoC4/ADC.c **** *  saturation event interrupt. Setting bits for channels that do not exist
 654:Generated_Source\PSoC4/ADC.c **** *  will have no effect. For example, if only 8 channels were enabled,
 655:Generated_Source\PSoC4/ADC.c **** *  setting a mask of 0x01C0 would only enable two channels (6 and 7).
 656:Generated_Source\PSoC4/ADC.c **** *
 657:Generated_Source\PSoC4/ADC.c **** * Return:
 658:Generated_Source\PSoC4/ADC.c **** *  None.
 659:Generated_Source\PSoC4/ADC.c **** *
 660:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 661:Generated_Source\PSoC4/ADC.c **** void ADC_SetSatMask(uint32 mask)
 662:Generated_Source\PSoC4/ADC.c **** {
 834              		.loc 1 662 0
 835              		.cfi_startproc
 836              		@ args = 0, pretend = 0, frame = 8
 837              		@ frame_needed = 1, uses_anonymous_args = 0
 838 0000 80B5     		push	{r7, lr}
 839              		.cfi_def_cfa_offset 8
 840              		.cfi_offset 7, -8
 841              		.cfi_offset 14, -4
 842 0002 82B0     		sub	sp, sp, #8
 843              		.cfi_def_cfa_offset 16
 844 0004 00AF     		add	r7, sp, #0
 845              		.cfi_def_cfa_register 7
 846 0006 7860     		str	r0, [r7, #4]
 663:Generated_Source\PSoC4/ADC.c ****     ADC_SAR_SATURATE_INTR_MASK_REG = mask & ADC_MAX_CHANNELS_EN_MASK;
 847              		.loc 1 663 0
 848 0008 044B     		ldr	r3, .L60
 849 000a 7A68     		ldr	r2, [r7, #4]
 850 000c 0121     		movs	r1, #1
 851 000e 0A40     		ands	r2, r1
 852 0010 1A60     		str	r2, [r3]
 664:Generated_Source\PSoC4/ADC.c **** }
 853              		.loc 1 664 0
 854 0012 C046     		nop
 855 0014 BD46     		mov	sp, r7
 856 0016 02B0     		add	sp, sp, #8
 857              		@ sp needed
 858 0018 80BD     		pop	{r7, pc}
 859              	.L61:
 860 001a C046     		.align	2
 861              	.L60:
 862 001c 28021A40 		.word	1075446312
 863              		.cfi_endproc
 864              	.LFE12:
 865              		.size	ADC_SetSatMask, .-ADC_SetSatMask
 866              		.section	.text.ADC_SetOffset,"ax",%progbits
 867              		.align	2
 868              		.global	ADC_SetOffset
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 28


 869              		.code	16
 870              		.thumb_func
 871              		.type	ADC_SetOffset, %function
 872              	ADC_SetOffset:
 873              	.LFB13:
 665:Generated_Source\PSoC4/ADC.c **** 
 666:Generated_Source\PSoC4/ADC.c **** 
 667:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 668:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetOffset
 669:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 670:Generated_Source\PSoC4/ADC.c **** *
 671:Generated_Source\PSoC4/ADC.c **** * Summary:
 672:Generated_Source\PSoC4/ADC.c **** *   Description: Sets the ADC offset which is used by the functions
 673:Generated_Source\PSoC4/ADC.c **** *   ADC_CountsTo_uVolts, ADC_CountsTo_mVolts and ADC_CountsTo_Volts
 674:Generated_Source\PSoC4/ADC.c **** *   to substract the offset from the given reading
 675:Generated_Source\PSoC4/ADC.c **** *   before calculating the voltage conversion.
 676:Generated_Source\PSoC4/ADC.c **** *
 677:Generated_Source\PSoC4/ADC.c **** * Parameters:
 678:Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 679:Generated_Source\PSoC4/ADC.c **** *  offset: This value is a measured value when the
 680:Generated_Source\PSoC4/ADC.c **** *          inputs are shorted or connected to the same input voltage.
 681:Generated_Source\PSoC4/ADC.c **** *
 682:Generated_Source\PSoC4/ADC.c **** * Return:
 683:Generated_Source\PSoC4/ADC.c **** *  None.
 684:Generated_Source\PSoC4/ADC.c **** *
 685:Generated_Source\PSoC4/ADC.c **** * Global variables:
 686:Generated_Source\PSoC4/ADC.c **** *  ADC_Offset:  Modified to set the user provided offset.
 687:Generated_Source\PSoC4/ADC.c **** *
 688:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 689:Generated_Source\PSoC4/ADC.c **** void ADC_SetOffset(uint32 chan, int16 offset)
 690:Generated_Source\PSoC4/ADC.c **** {
 874              		.loc 1 690 0
 875              		.cfi_startproc
 876              		@ args = 0, pretend = 0, frame = 8
 877              		@ frame_needed = 1, uses_anonymous_args = 0
 878 0000 80B5     		push	{r7, lr}
 879              		.cfi_def_cfa_offset 8
 880              		.cfi_offset 7, -8
 881              		.cfi_offset 14, -4
 882 0002 82B0     		sub	sp, sp, #8
 883              		.cfi_def_cfa_offset 16
 884 0004 00AF     		add	r7, sp, #0
 885              		.cfi_def_cfa_register 7
 886 0006 7860     		str	r0, [r7, #4]
 887 0008 0A00     		movs	r2, r1
 888 000a BB1C     		adds	r3, r7, #2
 889 000c 1A80     		strh	r2, [r3]
 691:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 692:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 890              		.loc 1 692 0
 891 000e 7B68     		ldr	r3, [r7, #4]
 892 0010 002B     		cmp	r3, #0
 893 0012 02D0     		beq	.L63
 894              		.loc 1 692 0 is_stmt 0 discriminator 1
 895 0014 0020     		movs	r0, #0
 896 0016 FFF7FEFF 		bl	CyHalt
 897              	.L63:
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 29


 693:Generated_Source\PSoC4/ADC.c **** 
 694:Generated_Source\PSoC4/ADC.c ****     ADC_offset[chan] = offset;
 898              		.loc 1 694 0 is_stmt 1
 899 001a 054B     		ldr	r3, .L64
 900 001c 7A68     		ldr	r2, [r7, #4]
 901 001e 5200     		lsls	r2, r2, #1
 902 0020 B91C     		adds	r1, r7, #2
 903 0022 0988     		ldrh	r1, [r1]
 904 0024 D152     		strh	r1, [r2, r3]
 695:Generated_Source\PSoC4/ADC.c **** }
 905              		.loc 1 695 0
 906 0026 C046     		nop
 907 0028 BD46     		mov	sp, r7
 908 002a 02B0     		add	sp, sp, #8
 909              		@ sp needed
 910 002c 80BD     		pop	{r7, pc}
 911              	.L65:
 912 002e C046     		.align	2
 913              	.L64:
 914 0030 00000000 		.word	ADC_offset
 915              		.cfi_endproc
 916              	.LFE13:
 917              		.size	ADC_SetOffset, .-ADC_SetOffset
 918              		.section	.text.ADC_SetGain,"ax",%progbits
 919              		.align	2
 920              		.global	ADC_SetGain
 921              		.code	16
 922              		.thumb_func
 923              		.type	ADC_SetGain, %function
 924              	ADC_SetGain:
 925              	.LFB14:
 696:Generated_Source\PSoC4/ADC.c **** 
 697:Generated_Source\PSoC4/ADC.c **** 
 698:Generated_Source\PSoC4/ADC.c **** /*******************************************************************************
 699:Generated_Source\PSoC4/ADC.c **** * Function Name: ADC_SetGain
 700:Generated_Source\PSoC4/ADC.c **** ********************************************************************************
 701:Generated_Source\PSoC4/ADC.c **** *
 702:Generated_Source\PSoC4/ADC.c **** * Summary:
 703:Generated_Source\PSoC4/ADC.c **** *  Description: Sets the ADC gain in counts per 10 volt for the voltage
 704:Generated_Source\PSoC4/ADC.c **** *  conversion functions below. This value is set by default by the
 705:Generated_Source\PSoC4/ADC.c **** *  reference and input range settings. It should only be used to further
 706:Generated_Source\PSoC4/ADC.c **** *  calibrate the ADC with a known input or if an external reference is
 707:Generated_Source\PSoC4/ADC.c **** *  used. Affects the ADC_CountsTo_uVolts, ADC_CountsTo_mVolts
 708:Generated_Source\PSoC4/ADC.c **** *  and ADC_CountsTo_Volts functions by supplying the correct
 709:Generated_Source\PSoC4/ADC.c **** *  conversion between ADC counts and voltage.
 710:Generated_Source\PSoC4/ADC.c **** *
 711:Generated_Source\PSoC4/ADC.c **** * Parameters:
 712:Generated_Source\PSoC4/ADC.c **** *  chan: ADC channel number.
 713:Generated_Source\PSoC4/ADC.c **** *  adcGain: ADC gain in counts per 10 volts.
 714:Generated_Source\PSoC4/ADC.c **** *
 715:Generated_Source\PSoC4/ADC.c **** * Return:
 716:Generated_Source\PSoC4/ADC.c **** *  None.
 717:Generated_Source\PSoC4/ADC.c **** *
 718:Generated_Source\PSoC4/ADC.c **** * Global variables:
 719:Generated_Source\PSoC4/ADC.c **** *  ADC_CountsPer10Volt:  modified to set the ADC gain in counts
 720:Generated_Source\PSoC4/ADC.c **** *   per 10 volt.
 721:Generated_Source\PSoC4/ADC.c **** *
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 30


 722:Generated_Source\PSoC4/ADC.c **** *******************************************************************************/
 723:Generated_Source\PSoC4/ADC.c **** void ADC_SetGain(uint32 chan, int32 adcGain)
 724:Generated_Source\PSoC4/ADC.c **** {
 926              		.loc 1 724 0
 927              		.cfi_startproc
 928              		@ args = 0, pretend = 0, frame = 8
 929              		@ frame_needed = 1, uses_anonymous_args = 0
 930 0000 80B5     		push	{r7, lr}
 931              		.cfi_def_cfa_offset 8
 932              		.cfi_offset 7, -8
 933              		.cfi_offset 14, -4
 934 0002 82B0     		sub	sp, sp, #8
 935              		.cfi_def_cfa_offset 16
 936 0004 00AF     		add	r7, sp, #0
 937              		.cfi_def_cfa_register 7
 938 0006 7860     		str	r0, [r7, #4]
 939 0008 3960     		str	r1, [r7]
 725:Generated_Source\PSoC4/ADC.c ****     /* Halt CPU in debug mode if channel is out of valid range */
 726:Generated_Source\PSoC4/ADC.c ****     CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 940              		.loc 1 726 0
 941 000a 7B68     		ldr	r3, [r7, #4]
 942 000c 002B     		cmp	r3, #0
 943 000e 02D0     		beq	.L67
 944              		.loc 1 726 0 is_stmt 0 discriminator 1
 945 0010 0020     		movs	r0, #0
 946 0012 FFF7FEFF 		bl	CyHalt
 947              	.L67:
 727:Generated_Source\PSoC4/ADC.c **** 
 728:Generated_Source\PSoC4/ADC.c ****     ADC_countsPer10Volt[chan] = adcGain;
 948              		.loc 1 728 0 is_stmt 1
 949 0016 044B     		ldr	r3, .L68
 950 0018 7A68     		ldr	r2, [r7, #4]
 951 001a 9200     		lsls	r2, r2, #2
 952 001c 3968     		ldr	r1, [r7]
 953 001e D150     		str	r1, [r2, r3]
 729:Generated_Source\PSoC4/ADC.c **** }
 954              		.loc 1 729 0
 955 0020 C046     		nop
 956 0022 BD46     		mov	sp, r7
 957 0024 02B0     		add	sp, sp, #8
 958              		@ sp needed
 959 0026 80BD     		pop	{r7, pc}
 960              	.L69:
 961              		.align	2
 962              	.L68:
 963 0028 00000000 		.word	ADC_countsPer10Volt
 964              		.cfi_endproc
 965              	.LFE14:
 966              		.size	ADC_SetGain, .-ADC_SetGain
 967              		.global	__aeabi_idiv
 968              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 969              		.align	2
 970              		.global	ADC_CountsTo_mVolts
 971              		.code	16
 972              		.thumb_func
 973              		.type	ADC_CountsTo_mVolts, %function
 974              	ADC_CountsTo_mVolts:
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 31


 975              	.LFB15:
 730:Generated_Source\PSoC4/ADC.c **** 
 731:Generated_Source\PSoC4/ADC.c **** 
 732:Generated_Source\PSoC4/ADC.c **** #if(ADC_DEFAULT_JUSTIFICATION_SEL == ADC__RIGHT)
 733:Generated_Source\PSoC4/ADC.c **** 
 734:Generated_Source\PSoC4/ADC.c **** 
 735:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 736:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_mVolts
 737:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 738:Generated_Source\PSoC4/ADC.c ****     *
 739:Generated_Source\PSoC4/ADC.c ****     * Summary:
 740:Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to mVolts
 741:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 742:Generated_Source\PSoC4/ADC.c ****     *
 743:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 744:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 745:Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 746:Generated_Source\PSoC4/ADC.c ****     *
 747:Generated_Source\PSoC4/ADC.c ****     * Return:
 748:Generated_Source\PSoC4/ADC.c ****     *  Results in mVolts
 749:Generated_Source\PSoC4/ADC.c ****     *
 750:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 751:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to mVolts.
 752:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 753:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 754:Generated_Source\PSoC4/ADC.c ****     *
 755:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 756:Generated_Source\PSoC4/ADC.c ****     int16 ADC_CountsTo_mVolts(uint32 chan, int16 adcCounts)
 757:Generated_Source\PSoC4/ADC.c ****     {
 976              		.loc 1 757 0
 977              		.cfi_startproc
 978              		@ args = 0, pretend = 0, frame = 16
 979              		@ frame_needed = 1, uses_anonymous_args = 0
 980 0000 80B5     		push	{r7, lr}
 981              		.cfi_def_cfa_offset 8
 982              		.cfi_offset 7, -8
 983              		.cfi_offset 14, -4
 984 0002 84B0     		sub	sp, sp, #16
 985              		.cfi_def_cfa_offset 24
 986 0004 00AF     		add	r7, sp, #0
 987              		.cfi_def_cfa_register 7
 988 0006 7860     		str	r0, [r7, #4]
 989 0008 0A00     		movs	r2, r1
 990 000a BB1C     		adds	r3, r7, #2
 991 000c 1A80     		strh	r2, [r3]
 758:Generated_Source\PSoC4/ADC.c ****         int16 mVolts;
 759:Generated_Source\PSoC4/ADC.c **** 
 760:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 761:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 992              		.loc 1 761 0
 993 000e 7B68     		ldr	r3, [r7, #4]
 994 0010 002B     		cmp	r3, #0
 995 0012 02D0     		beq	.L71
 996              		.loc 1 761 0 is_stmt 0 discriminator 1
 997 0014 0020     		movs	r0, #0
 998 0016 FFF7FEFF 		bl	CyHalt
 999              	.L71:
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 32


 762:Generated_Source\PSoC4/ADC.c **** 
 763:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 764:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 765:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 766:Generated_Source\PSoC4/ADC.c ****             {
 767:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 768:Generated_Source\PSoC4/ADC.c ****             }
 769:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 770:Generated_Source\PSoC4/ADC.c **** 
 771:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 772:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1000              		.loc 1 772 0 is_stmt 1
 1001 001a 1E4B     		ldr	r3, .L77
 1002 001c 7A68     		ldr	r2, [r7, #4]
 1003 001e 5200     		lsls	r2, r2, #1
 1004 0020 D35A     		ldrh	r3, [r2, r3]
 1005 0022 19B2     		sxth	r1, r3
 1006 0024 BB1C     		adds	r3, r7, #2
 1007 0026 1A88     		ldrh	r2, [r3]
 1008 0028 8BB2     		uxth	r3, r1
 1009 002a D31A     		subs	r3, r2, r3
 1010 002c 9AB2     		uxth	r2, r3
 1011 002e BB1C     		adds	r3, r7, #2
 1012 0030 1A80     		strh	r2, [r3]
 773:Generated_Source\PSoC4/ADC.c **** 
 774:Generated_Source\PSoC4/ADC.c ****         mVolts = (int16)((((int32)adcCounts * ADC_10MV_COUNTS) + ( (adcCounts > 0) ?
 1013              		.loc 1 774 0
 1014 0032 BB1C     		adds	r3, r7, #2
 1015 0034 0022     		movs	r2, #0
 1016 0036 9B5E     		ldrsh	r3, [r3, r2]
 1017 0038 174A     		ldr	r2, .L77+4
 1018 003a 5A43     		muls	r2, r3
 775:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 1019              		.loc 1 775 0
 1020 003c BB1C     		adds	r3, r7, #2
 1021 003e 0021     		movs	r1, #0
 1022 0040 5B5E     		ldrsh	r3, [r3, r1]
 1023 0042 002B     		cmp	r3, #0
 1024 0044 08DD     		ble	.L72
 1025              		.loc 1 775 0 is_stmt 0 discriminator 1
 1026 0046 154B     		ldr	r3, .L77+8
 1027 0048 7968     		ldr	r1, [r7, #4]
 1028 004a 8900     		lsls	r1, r1, #2
 1029 004c CB58     		ldr	r3, [r1, r3]
 1030 004e 002B     		cmp	r3, #0
 1031 0050 00DA     		bge	.L73
 1032 0052 0133     		adds	r3, r3, #1
 1033              	.L73:
 1034 0054 5B10     		asrs	r3, r3, #1
 1035 0056 08E0     		b	.L74
 1036              	.L72:
 1037              		.loc 1 775 0 discriminator 2
 1038 0058 104B     		ldr	r3, .L77+8
 1039 005a 7968     		ldr	r1, [r7, #4]
 1040 005c 8900     		lsls	r1, r1, #2
 1041 005e CB58     		ldr	r3, [r1, r3]
 1042 0060 002B     		cmp	r3, #0
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 33


 1043 0062 00DA     		bge	.L75
 1044 0064 0133     		adds	r3, r3, #1
 1045              	.L75:
 1046 0066 5B10     		asrs	r3, r3, #1
 1047 0068 5B42     		rsbs	r3, r3, #0
 1048              	.L74:
 774:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 1049              		.loc 1 774 0 is_stmt 1
 1050 006a D018     		adds	r0, r2, r3
 776:Generated_Source\PSoC4/ADC.c ****                  / ADC_countsPer10Volt[chan]);
 1051              		.loc 1 776 0
 1052 006c 0B4B     		ldr	r3, .L77+8
 1053 006e 7A68     		ldr	r2, [r7, #4]
 1054 0070 9200     		lsls	r2, r2, #2
 1055 0072 D358     		ldr	r3, [r2, r3]
 1056 0074 1900     		movs	r1, r3
 1057 0076 FFF7FEFF 		bl	__aeabi_idiv
 1058 007a 0300     		movs	r3, r0
 1059 007c 1A00     		movs	r2, r3
 774:Generated_Source\PSoC4/ADC.c ****                  (ADC_countsPer10Volt[chan] / 2) : (-(ADC_countsPer10Volt[chan] / 2)) ))
 1060              		.loc 1 774 0
 1061 007e 0E23     		movs	r3, #14
 1062 0080 FB18     		adds	r3, r7, r3
 1063 0082 1A80     		strh	r2, [r3]
 777:Generated_Source\PSoC4/ADC.c **** 
 778:Generated_Source\PSoC4/ADC.c ****         return( mVolts );
 1064              		.loc 1 778 0
 1065 0084 0E23     		movs	r3, #14
 1066 0086 FB18     		adds	r3, r7, r3
 1067 0088 0022     		movs	r2, #0
 1068 008a 9B5E     		ldrsh	r3, [r3, r2]
 779:Generated_Source\PSoC4/ADC.c ****     }
 1069              		.loc 1 779 0
 1070 008c 1800     		movs	r0, r3
 1071 008e BD46     		mov	sp, r7
 1072 0090 04B0     		add	sp, sp, #16
 1073              		@ sp needed
 1074 0092 80BD     		pop	{r7, pc}
 1075              	.L78:
 1076              		.align	2
 1077              	.L77:
 1078 0094 00000000 		.word	ADC_offset
 1079 0098 10270000 		.word	10000
 1080 009c 00000000 		.word	ADC_countsPer10Volt
 1081              		.cfi_endproc
 1082              	.LFE15:
 1083              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 1084              		.global	__aeabi_lmul
 1085              		.global	__aeabi_ldivmod
 1086              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
 1087              		.align	2
 1088              		.global	ADC_CountsTo_uVolts
 1089              		.code	16
 1090              		.thumb_func
 1091              		.type	ADC_CountsTo_uVolts, %function
 1092              	ADC_CountsTo_uVolts:
 1093              	.LFB16:
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 34


 780:Generated_Source\PSoC4/ADC.c **** 
 781:Generated_Source\PSoC4/ADC.c **** 
 782:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 783:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_uVolts
 784:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 785:Generated_Source\PSoC4/ADC.c ****     *
 786:Generated_Source\PSoC4/ADC.c ****     * Summary:
 787:Generated_Source\PSoC4/ADC.c ****     *  This function converts ADC counts to micro Volts
 788:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 789:Generated_Source\PSoC4/ADC.c ****     *
 790:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 791:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 792:Generated_Source\PSoC4/ADC.c ****     *  adcCounts: Result from the ADC conversion
 793:Generated_Source\PSoC4/ADC.c ****     *
 794:Generated_Source\PSoC4/ADC.c ****     * Return:
 795:Generated_Source\PSoC4/ADC.c ****     *  Results in uVolts
 796:Generated_Source\PSoC4/ADC.c ****     *
 797:Generated_Source\PSoC4/ADC.c ****     * Global variables:
 798:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to uVolts.
 799:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 800:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 801:Generated_Source\PSoC4/ADC.c ****     *
 802:Generated_Source\PSoC4/ADC.c ****     * Theory:
 803:Generated_Source\PSoC4/ADC.c ****     *  Care must be taken to not exceed the maximum value for a 31 bit signed
 804:Generated_Source\PSoC4/ADC.c ****     *  number in the conversion to uVolts and at the same time not loose
 805:Generated_Source\PSoC4/ADC.c ****     *  resolution.
 806:Generated_Source\PSoC4/ADC.c ****     *  To convert adcCounts to microVolts it is required to be multiplied
 807:Generated_Source\PSoC4/ADC.c ****     *  on 10 million and later divide on gain in counts per 10V.
 808:Generated_Source\PSoC4/ADC.c ****     *
 809:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 810:Generated_Source\PSoC4/ADC.c ****     int32 ADC_CountsTo_uVolts(uint32 chan, int16 adcCounts)
 811:Generated_Source\PSoC4/ADC.c ****     {
 1094              		.loc 1 811 0
 1095              		.cfi_startproc
 1096              		@ args = 0, pretend = 0, frame = 24
 1097              		@ frame_needed = 1, uses_anonymous_args = 0
 1098 0000 B0B5     		push	{r4, r5, r7, lr}
 1099              		.cfi_def_cfa_offset 16
 1100              		.cfi_offset 4, -16
 1101              		.cfi_offset 5, -12
 1102              		.cfi_offset 7, -8
 1103              		.cfi_offset 14, -4
 1104 0002 86B0     		sub	sp, sp, #24
 1105              		.cfi_def_cfa_offset 40
 1106 0004 00AF     		add	r7, sp, #0
 1107              		.cfi_def_cfa_register 7
 1108 0006 F860     		str	r0, [r7, #12]
 1109 0008 0A00     		movs	r2, r1
 1110 000a 0A23     		movs	r3, #10
 1111 000c FB18     		adds	r3, r7, r3
 1112 000e 1A80     		strh	r2, [r3]
 812:Generated_Source\PSoC4/ADC.c ****         int64 uVolts;
 813:Generated_Source\PSoC4/ADC.c **** 
 814:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 815:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 1113              		.loc 1 815 0
 1114 0010 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 35


 1115 0012 002B     		cmp	r3, #0
 1116 0014 02D0     		beq	.L80
 1117              		.loc 1 815 0 is_stmt 0 discriminator 1
 1118 0016 0020     		movs	r0, #0
 1119 0018 FFF7FEFF 		bl	CyHalt
 1120              	.L80:
 816:Generated_Source\PSoC4/ADC.c **** 
 817:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 818:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 819:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 820:Generated_Source\PSoC4/ADC.c ****             {
 821:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 822:Generated_Source\PSoC4/ADC.c ****             }
 823:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 824:Generated_Source\PSoC4/ADC.c **** 
 825:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 826:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1121              		.loc 1 826 0 is_stmt 1
 1122 001c 194B     		ldr	r3, .L82
 1123 001e FA68     		ldr	r2, [r7, #12]
 1124 0020 5200     		lsls	r2, r2, #1
 1125 0022 D35A     		ldrh	r3, [r2, r3]
 1126 0024 19B2     		sxth	r1, r3
 1127 0026 0A23     		movs	r3, #10
 1128 0028 FB18     		adds	r3, r7, r3
 1129 002a 1A88     		ldrh	r2, [r3]
 1130 002c 8BB2     		uxth	r3, r1
 1131 002e D31A     		subs	r3, r2, r3
 1132 0030 9AB2     		uxth	r2, r3
 1133 0032 0A23     		movs	r3, #10
 1134 0034 FB18     		adds	r3, r7, r3
 1135 0036 1A80     		strh	r2, [r3]
 827:Generated_Source\PSoC4/ADC.c **** 
 828:Generated_Source\PSoC4/ADC.c ****         uVolts = ((int64)adcCounts * ADC_10UV_COUNTS) / ADC_countsPer10Volt[chan];
 1136              		.loc 1 828 0
 1137 0038 0A23     		movs	r3, #10
 1138 003a FB18     		adds	r3, r7, r3
 1139 003c 1B88     		ldrh	r3, [r3]
 1140 003e 1BB2     		sxth	r3, r3
 1141 0040 3B60     		str	r3, [r7]
 1142 0042 DB17     		asrs	r3, r3, #31
 1143 0044 7B60     		str	r3, [r7, #4]
 1144 0046 104A     		ldr	r2, .L82+4
 1145 0048 0023     		movs	r3, #0
 1146 004a 3868     		ldr	r0, [r7]
 1147 004c 7968     		ldr	r1, [r7, #4]
 1148 004e FFF7FEFF 		bl	__aeabi_lmul
 1149 0052 0200     		movs	r2, r0
 1150 0054 0B00     		movs	r3, r1
 1151 0056 1000     		movs	r0, r2
 1152 0058 1900     		movs	r1, r3
 1153 005a 0C4B     		ldr	r3, .L82+8
 1154 005c FA68     		ldr	r2, [r7, #12]
 1155 005e 9200     		lsls	r2, r2, #2
 1156 0060 D358     		ldr	r3, [r2, r3]
 1157 0062 1C00     		movs	r4, r3
 1158 0064 DB17     		asrs	r3, r3, #31
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 36


 1159 0066 1D00     		movs	r5, r3
 1160 0068 2200     		movs	r2, r4
 1161 006a 2B00     		movs	r3, r5
 1162 006c FFF7FEFF 		bl	__aeabi_ldivmod
 1163 0070 0300     		movs	r3, r0
 1164 0072 0C00     		movs	r4, r1
 1165 0074 3B61     		str	r3, [r7, #16]
 1166 0076 7C61     		str	r4, [r7, #20]
 829:Generated_Source\PSoC4/ADC.c **** 
 830:Generated_Source\PSoC4/ADC.c ****         return( (int32)uVolts );
 1167              		.loc 1 830 0
 1168 0078 3B69     		ldr	r3, [r7, #16]
 831:Generated_Source\PSoC4/ADC.c ****     }
 1169              		.loc 1 831 0
 1170 007a 1800     		movs	r0, r3
 1171 007c BD46     		mov	sp, r7
 1172 007e 06B0     		add	sp, sp, #24
 1173              		@ sp needed
 1174 0080 B0BD     		pop	{r4, r5, r7, pc}
 1175              	.L83:
 1176 0082 C046     		.align	2
 1177              	.L82:
 1178 0084 00000000 		.word	ADC_offset
 1179 0088 80969800 		.word	10000000
 1180 008c 00000000 		.word	ADC_countsPer10Volt
 1181              		.cfi_endproc
 1182              	.LFE16:
 1183              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 1184              		.global	__aeabi_i2f
 1185              		.global	__aeabi_fmul
 1186              		.global	__aeabi_fdiv
 1187              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 1188              		.align	2
 1189              		.global	ADC_CountsTo_Volts
 1190              		.code	16
 1191              		.thumb_func
 1192              		.type	ADC_CountsTo_Volts, %function
 1193              	ADC_CountsTo_Volts:
 1194              	.LFB17:
 832:Generated_Source\PSoC4/ADC.c **** 
 833:Generated_Source\PSoC4/ADC.c **** 
 834:Generated_Source\PSoC4/ADC.c ****     /*******************************************************************************
 835:Generated_Source\PSoC4/ADC.c ****     * Function Name: ADC_CountsTo_Volts
 836:Generated_Source\PSoC4/ADC.c ****     ********************************************************************************
 837:Generated_Source\PSoC4/ADC.c ****     *
 838:Generated_Source\PSoC4/ADC.c ****     * Summary:
 839:Generated_Source\PSoC4/ADC.c ****     *  Converts the ADC output to Volts as a floating point number.
 840:Generated_Source\PSoC4/ADC.c ****     *  This function is not available when left data format justification selected.
 841:Generated_Source\PSoC4/ADC.c ****     *
 842:Generated_Source\PSoC4/ADC.c ****     * Parameters:
 843:Generated_Source\PSoC4/ADC.c ****     *  chan: The ADC channel number.
 844:Generated_Source\PSoC4/ADC.c ****     *  Result from the ADC conversion
 845:Generated_Source\PSoC4/ADC.c ****     *
 846:Generated_Source\PSoC4/ADC.c ****     * Return:
 847:Generated_Source\PSoC4/ADC.c ****     *  Results in Volts
 848:Generated_Source\PSoC4/ADC.c ****     *
 849:Generated_Source\PSoC4/ADC.c ****     * Global variables:
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 37


 850:Generated_Source\PSoC4/ADC.c ****     *  ADC_countsPer10Volt:  used to convert ADC counts to Volts.
 851:Generated_Source\PSoC4/ADC.c ****     *  ADC_Offset:  Used as the offset while converting ADC counts
 852:Generated_Source\PSoC4/ADC.c ****     *   to mVolts.
 853:Generated_Source\PSoC4/ADC.c ****     *
 854:Generated_Source\PSoC4/ADC.c ****     *******************************************************************************/
 855:Generated_Source\PSoC4/ADC.c ****     float32 ADC_CountsTo_Volts(uint32 chan, int16 adcCounts)
 856:Generated_Source\PSoC4/ADC.c ****     {
 1195              		.loc 1 856 0
 1196              		.cfi_startproc
 1197              		@ args = 0, pretend = 0, frame = 16
 1198              		@ frame_needed = 1, uses_anonymous_args = 0
 1199 0000 90B5     		push	{r4, r7, lr}
 1200              		.cfi_def_cfa_offset 12
 1201              		.cfi_offset 4, -12
 1202              		.cfi_offset 7, -8
 1203              		.cfi_offset 14, -4
 1204 0002 85B0     		sub	sp, sp, #20
 1205              		.cfi_def_cfa_offset 32
 1206 0004 00AF     		add	r7, sp, #0
 1207              		.cfi_def_cfa_register 7
 1208 0006 7860     		str	r0, [r7, #4]
 1209 0008 0A00     		movs	r2, r1
 1210 000a BB1C     		adds	r3, r7, #2
 1211 000c 1A80     		strh	r2, [r3]
 857:Generated_Source\PSoC4/ADC.c ****         float32 volts;
 858:Generated_Source\PSoC4/ADC.c **** 
 859:Generated_Source\PSoC4/ADC.c ****         /* Halt CPU in debug mode if channel is out of valid range */
 860:Generated_Source\PSoC4/ADC.c ****         CYASSERT(chan < ADC_TOTAL_CHANNELS_NUM);
 1212              		.loc 1 860 0
 1213 000e 7B68     		ldr	r3, [r7, #4]
 1214 0010 002B     		cmp	r3, #0
 1215 0012 02D0     		beq	.L85
 1216              		.loc 1 860 0 is_stmt 0 discriminator 1
 1217 0014 0020     		movs	r0, #0
 1218 0016 FFF7FEFF 		bl	CyHalt
 1219              	.L85:
 861:Generated_Source\PSoC4/ADC.c **** 
 862:Generated_Source\PSoC4/ADC.c ****         /* Divide the adcCount when accumulate averaging mode selected */
 863:Generated_Source\PSoC4/ADC.c ****         #if(ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE)
 864:Generated_Source\PSoC4/ADC.c ****             if((ADC_channelsConfig[chan] & ADC_AVERAGING_EN) != 0u)
 865:Generated_Source\PSoC4/ADC.c ****             {
 866:Generated_Source\PSoC4/ADC.c ****                 adcCounts /= ADC_DEFAULT_AVG_SAMPLES_DIV;
 867:Generated_Source\PSoC4/ADC.c ****             }
 868:Generated_Source\PSoC4/ADC.c ****         #endif /* ADC_DEFAULT_AVG_MODE == ADC__ACCUMULATE */
 869:Generated_Source\PSoC4/ADC.c **** 
 870:Generated_Source\PSoC4/ADC.c ****         /* Subtract ADC offset */
 871:Generated_Source\PSoC4/ADC.c ****         adcCounts -= ADC_offset[chan];
 1220              		.loc 1 871 0 is_stmt 1
 1221 001a 164B     		ldr	r3, .L87
 1222 001c 7A68     		ldr	r2, [r7, #4]
 1223 001e 5200     		lsls	r2, r2, #1
 1224 0020 D35A     		ldrh	r3, [r2, r3]
 1225 0022 19B2     		sxth	r1, r3
 1226 0024 BB1C     		adds	r3, r7, #2
 1227 0026 1A88     		ldrh	r2, [r3]
 1228 0028 8BB2     		uxth	r3, r1
 1229 002a D31A     		subs	r3, r2, r3
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 38


 1230 002c 9AB2     		uxth	r2, r3
 1231 002e BB1C     		adds	r3, r7, #2
 1232 0030 1A80     		strh	r2, [r3]
 872:Generated_Source\PSoC4/ADC.c **** 
 873:Generated_Source\PSoC4/ADC.c ****         volts = ((float32)adcCounts * ADC_10V_COUNTS) / (float32)ADC_countsPer10Volt[chan];
 1233              		.loc 1 873 0
 1234 0032 BB1C     		adds	r3, r7, #2
 1235 0034 0022     		movs	r2, #0
 1236 0036 9B5E     		ldrsh	r3, [r3, r2]
 1237 0038 1800     		movs	r0, r3
 1238 003a FFF7FEFF 		bl	__aeabi_i2f
 1239 003e 031C     		adds	r3, r0, #0
 1240 0040 0D49     		ldr	r1, .L87+4
 1241 0042 181C     		adds	r0, r3, #0
 1242 0044 FFF7FEFF 		bl	__aeabi_fmul
 1243 0048 031C     		adds	r3, r0, #0
 1244 004a 1C1C     		adds	r4, r3, #0
 1245 004c 0B4B     		ldr	r3, .L87+8
 1246 004e 7A68     		ldr	r2, [r7, #4]
 1247 0050 9200     		lsls	r2, r2, #2
 1248 0052 D358     		ldr	r3, [r2, r3]
 1249 0054 1800     		movs	r0, r3
 1250 0056 FFF7FEFF 		bl	__aeabi_i2f
 1251 005a 031C     		adds	r3, r0, #0
 1252 005c 191C     		adds	r1, r3, #0
 1253 005e 201C     		adds	r0, r4, #0
 1254 0060 FFF7FEFF 		bl	__aeabi_fdiv
 1255 0064 031C     		adds	r3, r0, #0
 1256 0066 FB60     		str	r3, [r7, #12]
 874:Generated_Source\PSoC4/ADC.c **** 
 875:Generated_Source\PSoC4/ADC.c ****         return( volts );
 1257              		.loc 1 875 0
 1258 0068 FB68     		ldr	r3, [r7, #12]
 876:Generated_Source\PSoC4/ADC.c ****     }
 1259              		.loc 1 876 0
 1260 006a 181C     		adds	r0, r3, #0
 1261 006c BD46     		mov	sp, r7
 1262 006e 05B0     		add	sp, sp, #20
 1263              		@ sp needed
 1264 0070 90BD     		pop	{r4, r7, pc}
 1265              	.L88:
 1266 0072 C046     		.align	2
 1267              	.L87:
 1268 0074 00000000 		.word	ADC_offset
 1269 0078 00002041 		.word	1092616192
 1270 007c 00000000 		.word	ADC_countsPer10Volt
 1271              		.cfi_endproc
 1272              	.LFE17:
 1273              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 1274              		.text
 1275              	.Letext0:
 1276              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1277              		.section	.debug_info,"",%progbits
 1278              	.Ldebug_info0:
 1279 0000 8D040000 		.4byte	0x48d
 1280 0004 0400     		.2byte	0x4
 1281 0006 00000000 		.4byte	.Ldebug_abbrev0
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 39


 1282 000a 04       		.byte	0x4
 1283 000b 01       		.uleb128 0x1
 1284 000c 62010000 		.4byte	.LASF60
 1285 0010 0C       		.byte	0xc
 1286 0011 5E020000 		.4byte	.LASF61
 1287 0015 2C030000 		.4byte	.LASF62
 1288 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1289 001d 00000000 		.4byte	0
 1290 0021 00000000 		.4byte	.Ldebug_line0
 1291 0025 02       		.uleb128 0x2
 1292 0026 01       		.byte	0x1
 1293 0027 06       		.byte	0x6
 1294 0028 68000000 		.4byte	.LASF0
 1295 002c 02       		.uleb128 0x2
 1296 002d 01       		.byte	0x1
 1297 002e 08       		.byte	0x8
 1298 002f BB020000 		.4byte	.LASF1
 1299 0033 02       		.uleb128 0x2
 1300 0034 02       		.byte	0x2
 1301 0035 05       		.byte	0x5
 1302 0036 D4020000 		.4byte	.LASF2
 1303 003a 02       		.uleb128 0x2
 1304 003b 02       		.byte	0x2
 1305 003c 07       		.byte	0x7
 1306 003d 3F010000 		.4byte	.LASF3
 1307 0041 02       		.uleb128 0x2
 1308 0042 04       		.byte	0x4
 1309 0043 05       		.byte	0x5
 1310 0044 8B000000 		.4byte	.LASF4
 1311 0048 02       		.uleb128 0x2
 1312 0049 04       		.byte	0x4
 1313 004a 07       		.byte	0x7
 1314 004b 0E010000 		.4byte	.LASF5
 1315 004f 02       		.uleb128 0x2
 1316 0050 08       		.byte	0x8
 1317 0051 05       		.byte	0x5
 1318 0052 5A000000 		.4byte	.LASF6
 1319 0056 02       		.uleb128 0x2
 1320 0057 08       		.byte	0x8
 1321 0058 07       		.byte	0x7
 1322 0059 32000000 		.4byte	.LASF7
 1323 005d 03       		.uleb128 0x3
 1324 005e 04       		.byte	0x4
 1325 005f 05       		.byte	0x5
 1326 0060 696E7400 		.ascii	"int\000"
 1327 0064 02       		.uleb128 0x2
 1328 0065 04       		.byte	0x4
 1329 0066 07       		.byte	0x7
 1330 0067 FA000000 		.4byte	.LASF8
 1331 006b 04       		.uleb128 0x4
 1332 006c BC000000 		.4byte	.LASF9
 1333 0070 02       		.byte	0x2
 1334 0071 E401     		.2byte	0x1e4
 1335 0073 2C000000 		.4byte	0x2c
 1336 0077 04       		.uleb128 0x4
 1337 0078 00000000 		.4byte	.LASF10
 1338 007c 02       		.byte	0x2
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 40


 1339 007d E501     		.2byte	0x1e5
 1340 007f 3A000000 		.4byte	0x3a
 1341 0083 04       		.uleb128 0x4
 1342 0084 C9000000 		.4byte	.LASF11
 1343 0088 02       		.byte	0x2
 1344 0089 E601     		.2byte	0x1e6
 1345 008b 48000000 		.4byte	0x48
 1346 008f 04       		.uleb128 0x4
 1347 0090 26030000 		.4byte	.LASF12
 1348 0094 02       		.byte	0x2
 1349 0095 E801     		.2byte	0x1e8
 1350 0097 33000000 		.4byte	0x33
 1351 009b 04       		.uleb128 0x4
 1352 009c 7B000000 		.4byte	.LASF13
 1353 00a0 02       		.byte	0x2
 1354 00a1 E901     		.2byte	0x1e9
 1355 00a3 41000000 		.4byte	0x41
 1356 00a7 04       		.uleb128 0x4
 1357 00a8 FD010000 		.4byte	.LASF14
 1358 00ac 02       		.byte	0x2
 1359 00ad EA01     		.2byte	0x1ea
 1360 00af B3000000 		.4byte	0xb3
 1361 00b3 02       		.uleb128 0x2
 1362 00b4 04       		.byte	0x4
 1363 00b5 04       		.byte	0x4
 1364 00b6 87020000 		.4byte	.LASF15
 1365 00ba 02       		.uleb128 0x2
 1366 00bb 08       		.byte	0x8
 1367 00bc 04       		.byte	0x4
 1368 00bd C2000000 		.4byte	.LASF16
 1369 00c1 04       		.uleb128 0x4
 1370 00c2 48020000 		.4byte	.LASF17
 1371 00c6 02       		.byte	0x2
 1372 00c7 EF01     		.2byte	0x1ef
 1373 00c9 4F000000 		.4byte	0x4f
 1374 00cd 02       		.uleb128 0x2
 1375 00ce 01       		.byte	0x1
 1376 00cf 08       		.byte	0x8
 1377 00d0 F2020000 		.4byte	.LASF18
 1378 00d4 04       		.uleb128 0x4
 1379 00d5 F7010000 		.4byte	.LASF19
 1380 00d9 02       		.byte	0x2
 1381 00da 9002     		.2byte	0x290
 1382 00dc E0000000 		.4byte	0xe0
 1383 00e0 05       		.uleb128 0x5
 1384 00e1 83000000 		.4byte	0x83
 1385 00e5 02       		.uleb128 0x2
 1386 00e6 08       		.byte	0x8
 1387 00e7 04       		.byte	0x4
 1388 00e8 17020000 		.4byte	.LASF20
 1389 00ec 02       		.uleb128 0x2
 1390 00ed 04       		.byte	0x4
 1391 00ee 07       		.byte	0x7
 1392 00ef 05020000 		.4byte	.LASF21
 1393 00f3 06       		.uleb128 0x6
 1394 00f4 81000000 		.4byte	.LASF25
 1395 00f8 01       		.byte	0x1
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 41


 1396 00f9 3F       		.byte	0x3f
 1397 00fa 00000000 		.4byte	.LFB0
 1398 00fe 24000000 		.4byte	.LFE0-.LFB0
 1399 0102 01       		.uleb128 0x1
 1400 0103 9C       		.byte	0x9c
 1401 0104 07       		.uleb128 0x7
 1402 0105 29000000 		.4byte	.LASF36
 1403 0109 01       		.byte	0x1
 1404 010a 5E       		.byte	0x5e
 1405 010b 00000000 		.4byte	.LFB1
 1406 010f C8010000 		.4byte	.LFE1-.LFB1
 1407 0113 01       		.uleb128 0x1
 1408 0114 9C       		.byte	0x9c
 1409 0115 44010000 		.4byte	0x144
 1410 0119 08       		.uleb128 0x8
 1411 011a E7020000 		.4byte	.LASF22
 1412 011e 01       		.byte	0x1
 1413 011f 60       		.byte	0x60
 1414 0120 83000000 		.4byte	0x83
 1415 0124 02       		.uleb128 0x2
 1416 0125 91       		.byte	0x91
 1417 0126 74       		.sleb128 -12
 1418 0127 08       		.uleb128 0x8
 1419 0128 35010000 		.4byte	.LASF23
 1420 012c 01       		.byte	0x1
 1421 012d 61       		.byte	0x61
 1422 012e 83000000 		.4byte	0x83
 1423 0132 02       		.uleb128 0x2
 1424 0133 91       		.byte	0x91
 1425 0134 6C       		.sleb128 -20
 1426 0135 08       		.uleb128 0x8
 1427 0136 0F000000 		.4byte	.LASF24
 1428 013a 01       		.byte	0x1
 1429 013b 62       		.byte	0x62
 1430 013c 9B000000 		.4byte	0x9b
 1431 0140 02       		.uleb128 0x2
 1432 0141 91       		.byte	0x91
 1433 0142 70       		.sleb128 -16
 1434 0143 00       		.byte	0
 1435 0144 09       		.uleb128 0x9
 1436 0145 1B030000 		.4byte	.LASF26
 1437 0149 01       		.byte	0x1
 1438 014a 4A01     		.2byte	0x14a
 1439 014c 00000000 		.4byte	.LFB2
 1440 0150 2C000000 		.4byte	.LFE2-.LFB2
 1441 0154 01       		.uleb128 0x1
 1442 0155 9C       		.byte	0x9c
 1443 0156 0A       		.uleb128 0xa
 1444 0157 DE020000 		.4byte	.LASF27
 1445 015b 01       		.byte	0x1
 1446 015c 6D01     		.2byte	0x16d
 1447 015e 00000000 		.4byte	.LFB3
 1448 0162 1C000000 		.4byte	.LFE3-.LFB3
 1449 0166 01       		.uleb128 0x1
 1450 0167 9C       		.byte	0x9c
 1451 0168 0A       		.uleb128 0xa
 1452 0169 49000000 		.4byte	.LASF28
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 42


 1453 016d 01       		.byte	0x1
 1454 016e 8701     		.2byte	0x187
 1455 0170 00000000 		.4byte	.LFB4
 1456 0174 1C000000 		.4byte	.LFE4-.LFB4
 1457 0178 01       		.uleb128 0x1
 1458 0179 9C       		.byte	0x9c
 1459 017a 0A       		.uleb128 0xa
 1460 017b 52010000 		.4byte	.LASF29
 1461 017f 01       		.byte	0x1
 1462 0180 A001     		.2byte	0x1a0
 1463 0182 00000000 		.4byte	.LFB5
 1464 0186 20000000 		.4byte	.LFE5-.LFB5
 1465 018a 01       		.uleb128 0x1
 1466 018b 9C       		.byte	0x9c
 1467 018c 0B       		.uleb128 0xb
 1468 018d 34020000 		.4byte	.LASF31
 1469 0191 01       		.byte	0x1
 1470 0192 C201     		.2byte	0x1c2
 1471 0194 83000000 		.4byte	0x83
 1472 0198 00000000 		.4byte	.LFB6
 1473 019c 48000000 		.4byte	.LFE6-.LFB6
 1474 01a0 01       		.uleb128 0x1
 1475 01a1 9C       		.byte	0x9c
 1476 01a2 C5010000 		.4byte	0x1c5
 1477 01a6 0C       		.uleb128 0xc
 1478 01a7 E1000000 		.4byte	.LASF33
 1479 01ab 01       		.byte	0x1
 1480 01ac C201     		.2byte	0x1c2
 1481 01ae 83000000 		.4byte	0x83
 1482 01b2 02       		.uleb128 0x2
 1483 01b3 91       		.byte	0x91
 1484 01b4 6C       		.sleb128 -20
 1485 01b5 0D       		.uleb128 0xd
 1486 01b6 74000000 		.4byte	.LASF30
 1487 01ba 01       		.byte	0x1
 1488 01bb C401     		.2byte	0x1c4
 1489 01bd 83000000 		.4byte	0x83
 1490 01c1 02       		.uleb128 0x2
 1491 01c2 91       		.byte	0x91
 1492 01c3 74       		.sleb128 -12
 1493 01c4 00       		.byte	0
 1494 01c5 0E       		.uleb128 0xe
 1495 01c6 AF030000 		.4byte	.LASF32
 1496 01ca 01       		.byte	0x1
 1497 01cb F801     		.2byte	0x1f8
 1498 01cd 8F000000 		.4byte	0x8f
 1499 01d1 00000000 		.4byte	.LFB7
 1500 01d5 44000000 		.4byte	.LFE7-.LFB7
 1501 01d9 01       		.uleb128 0x1
 1502 01da 9C       		.byte	0x9c
 1503 01db FE010000 		.4byte	0x1fe
 1504 01df 0C       		.uleb128 0xc
 1505 01e0 ED020000 		.4byte	.LASF34
 1506 01e4 01       		.byte	0x1
 1507 01e5 F801     		.2byte	0x1f8
 1508 01e7 83000000 		.4byte	0x83
 1509 01eb 02       		.uleb128 0x2
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 43


 1510 01ec 91       		.byte	0x91
 1511 01ed 6C       		.sleb128 -20
 1512 01ee 0D       		.uleb128 0xd
 1513 01ef A8030000 		.4byte	.LASF35
 1514 01f3 01       		.byte	0x1
 1515 01f4 FA01     		.2byte	0x1fa
 1516 01f6 83000000 		.4byte	0x83
 1517 01fa 02       		.uleb128 0x2
 1518 01fb 91       		.byte	0x91
 1519 01fc 74       		.sleb128 -12
 1520 01fd 00       		.byte	0
 1521 01fe 0F       		.uleb128 0xf
 1522 01ff 4E020000 		.4byte	.LASF37
 1523 0203 01       		.byte	0x1
 1524 0204 2502     		.2byte	0x225
 1525 0206 00000000 		.4byte	.LFB8
 1526 020a 20000000 		.4byte	.LFE8-.LFB8
 1527 020e 01       		.uleb128 0x1
 1528 020f 9C       		.byte	0x9c
 1529 0210 24020000 		.4byte	0x224
 1530 0214 0C       		.uleb128 0xc
 1531 0215 D0000000 		.4byte	.LASF38
 1532 0219 01       		.byte	0x1
 1533 021a 2502     		.2byte	0x225
 1534 021c 83000000 		.4byte	0x83
 1535 0220 02       		.uleb128 0x2
 1536 0221 91       		.byte	0x91
 1537 0222 74       		.sleb128 -12
 1538 0223 00       		.byte	0
 1539 0224 0F       		.uleb128 0xf
 1540 0225 AB020000 		.4byte	.LASF39
 1541 0229 01       		.byte	0x1
 1542 022a 5102     		.2byte	0x251
 1543 022c 00000000 		.4byte	.LFB9
 1544 0230 30000000 		.4byte	.LFE9-.LFB9
 1545 0234 01       		.uleb128 0x1
 1546 0235 9C       		.byte	0x9c
 1547 0236 4A020000 		.4byte	0x24a
 1548 023a 0C       		.uleb128 0xc
 1549 023b 0E020000 		.4byte	.LASF40
 1550 023f 01       		.byte	0x1
 1551 0240 5102     		.2byte	0x251
 1552 0242 83000000 		.4byte	0x83
 1553 0246 02       		.uleb128 0x2
 1554 0247 91       		.byte	0x91
 1555 0248 74       		.sleb128 -12
 1556 0249 00       		.byte	0
 1557 024a 0F       		.uleb128 0xf
 1558 024b 23020000 		.4byte	.LASF41
 1559 024f 01       		.byte	0x1
 1560 0250 6602     		.2byte	0x266
 1561 0252 00000000 		.4byte	.LFB10
 1562 0256 30000000 		.4byte	.LFE10-.LFB10
 1563 025a 01       		.uleb128 0x1
 1564 025b 9C       		.byte	0x9c
 1565 025c 70020000 		.4byte	0x270
 1566 0260 0C       		.uleb128 0xc
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 44


 1567 0261 8D020000 		.4byte	.LASF42
 1568 0265 01       		.byte	0x1
 1569 0266 6602     		.2byte	0x266
 1570 0268 83000000 		.4byte	0x83
 1571 026c 02       		.uleb128 0x2
 1572 026d 91       		.byte	0x91
 1573 026e 74       		.sleb128 -12
 1574 026f 00       		.byte	0
 1575 0270 0F       		.uleb128 0xf
 1576 0271 E9000000 		.4byte	.LASF43
 1577 0275 01       		.byte	0x1
 1578 0276 7E02     		.2byte	0x27e
 1579 0278 00000000 		.4byte	.LFB11
 1580 027c 20000000 		.4byte	.LFE11-.LFB11
 1581 0280 01       		.uleb128 0x1
 1582 0281 9C       		.byte	0x9c
 1583 0282 96020000 		.4byte	0x296
 1584 0286 0C       		.uleb128 0xc
 1585 0287 D0000000 		.4byte	.LASF38
 1586 028b 01       		.byte	0x1
 1587 028c 7E02     		.2byte	0x27e
 1588 028e 83000000 		.4byte	0x83
 1589 0292 02       		.uleb128 0x2
 1590 0293 91       		.byte	0x91
 1591 0294 74       		.sleb128 -12
 1592 0295 00       		.byte	0
 1593 0296 0F       		.uleb128 0xf
 1594 0297 20010000 		.4byte	.LASF44
 1595 029b 01       		.byte	0x1
 1596 029c 9502     		.2byte	0x295
 1597 029e 00000000 		.4byte	.LFB12
 1598 02a2 20000000 		.4byte	.LFE12-.LFB12
 1599 02a6 01       		.uleb128 0x1
 1600 02a7 9C       		.byte	0x9c
 1601 02a8 BC020000 		.4byte	0x2bc
 1602 02ac 0C       		.uleb128 0xc
 1603 02ad D0000000 		.4byte	.LASF38
 1604 02b1 01       		.byte	0x1
 1605 02b2 9502     		.2byte	0x295
 1606 02b4 83000000 		.4byte	0x83
 1607 02b8 02       		.uleb128 0x2
 1608 02b9 91       		.byte	0x91
 1609 02ba 74       		.sleb128 -12
 1610 02bb 00       		.byte	0
 1611 02bc 10       		.uleb128 0x10
 1612 02bd 9A030000 		.4byte	.LASF45
 1613 02c1 01       		.byte	0x1
 1614 02c2 B102     		.2byte	0x2b1
 1615 02c4 00000000 		.4byte	.LFB13
 1616 02c8 34000000 		.4byte	.LFE13-.LFB13
 1617 02cc 01       		.uleb128 0x1
 1618 02cd 9C       		.byte	0x9c
 1619 02ce F1020000 		.4byte	0x2f1
 1620 02d2 0C       		.uleb128 0xc
 1621 02d3 ED020000 		.4byte	.LASF34
 1622 02d7 01       		.byte	0x1
 1623 02d8 B102     		.2byte	0x2b1
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 45


 1624 02da 83000000 		.4byte	0x83
 1625 02de 02       		.uleb128 0x2
 1626 02df 91       		.byte	0x91
 1627 02e0 74       		.sleb128 -12
 1628 02e1 0C       		.uleb128 0xc
 1629 02e2 0A030000 		.4byte	.LASF46
 1630 02e6 01       		.byte	0x1
 1631 02e7 B102     		.2byte	0x2b1
 1632 02e9 8F000000 		.4byte	0x8f
 1633 02ed 02       		.uleb128 0x2
 1634 02ee 91       		.byte	0x91
 1635 02ef 72       		.sleb128 -14
 1636 02f0 00       		.byte	0
 1637 02f1 10       		.uleb128 0x10
 1638 02f2 7B020000 		.4byte	.LASF47
 1639 02f6 01       		.byte	0x1
 1640 02f7 D302     		.2byte	0x2d3
 1641 02f9 00000000 		.4byte	.LFB14
 1642 02fd 2C000000 		.4byte	.LFE14-.LFB14
 1643 0301 01       		.uleb128 0x1
 1644 0302 9C       		.byte	0x9c
 1645 0303 26030000 		.4byte	0x326
 1646 0307 0C       		.uleb128 0xc
 1647 0308 ED020000 		.4byte	.LASF34
 1648 030c 01       		.byte	0x1
 1649 030d D302     		.2byte	0x2d3
 1650 030f 83000000 		.4byte	0x83
 1651 0313 02       		.uleb128 0x2
 1652 0314 91       		.byte	0x91
 1653 0315 74       		.sleb128 -12
 1654 0316 0C       		.uleb128 0xc
 1655 0317 07000000 		.4byte	.LASF48
 1656 031b 01       		.byte	0x1
 1657 031c D302     		.2byte	0x2d3
 1658 031e 9B000000 		.4byte	0x9b
 1659 0322 02       		.uleb128 0x2
 1660 0323 91       		.byte	0x91
 1661 0324 70       		.sleb128 -16
 1662 0325 00       		.byte	0
 1663 0326 0E       		.uleb128 0xe
 1664 0327 97020000 		.4byte	.LASF49
 1665 032b 01       		.byte	0x1
 1666 032c F402     		.2byte	0x2f4
 1667 032e 8F000000 		.4byte	0x8f
 1668 0332 00000000 		.4byte	.LFB15
 1669 0336 A0000000 		.4byte	.LFE15-.LFB15
 1670 033a 01       		.uleb128 0x1
 1671 033b 9C       		.byte	0x9c
 1672 033c 6E030000 		.4byte	0x36e
 1673 0340 0C       		.uleb128 0xc
 1674 0341 ED020000 		.4byte	.LASF34
 1675 0345 01       		.byte	0x1
 1676 0346 F402     		.2byte	0x2f4
 1677 0348 83000000 		.4byte	0x83
 1678 034c 02       		.uleb128 0x2
 1679 034d 91       		.byte	0x91
 1680 034e 6C       		.sleb128 -20
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 46


 1681 034f 0C       		.uleb128 0xc
 1682 0350 11030000 		.4byte	.LASF50
 1683 0354 01       		.byte	0x1
 1684 0355 F402     		.2byte	0x2f4
 1685 0357 8F000000 		.4byte	0x8f
 1686 035b 02       		.uleb128 0x2
 1687 035c 91       		.byte	0x91
 1688 035d 6A       		.sleb128 -22
 1689 035e 0D       		.uleb128 0xd
 1690 035f F0010000 		.4byte	.LASF51
 1691 0363 01       		.byte	0x1
 1692 0364 F602     		.2byte	0x2f6
 1693 0366 8F000000 		.4byte	0x8f
 1694 036a 02       		.uleb128 0x2
 1695 036b 91       		.byte	0x91
 1696 036c 76       		.sleb128 -10
 1697 036d 00       		.byte	0
 1698 036e 0E       		.uleb128 0xe
 1699 036f 94000000 		.4byte	.LASF52
 1700 0373 01       		.byte	0x1
 1701 0374 2A03     		.2byte	0x32a
 1702 0376 9B000000 		.4byte	0x9b
 1703 037a 00000000 		.4byte	.LFB16
 1704 037e 90000000 		.4byte	.LFE16-.LFB16
 1705 0382 01       		.uleb128 0x1
 1706 0383 9C       		.byte	0x9c
 1707 0384 B6030000 		.4byte	0x3b6
 1708 0388 0C       		.uleb128 0xc
 1709 0389 ED020000 		.4byte	.LASF34
 1710 038d 01       		.byte	0x1
 1711 038e 2A03     		.2byte	0x32a
 1712 0390 83000000 		.4byte	0x83
 1713 0394 02       		.uleb128 0x2
 1714 0395 91       		.byte	0x91
 1715 0396 64       		.sleb128 -28
 1716 0397 0C       		.uleb128 0xc
 1717 0398 11030000 		.4byte	.LASF50
 1718 039c 01       		.byte	0x1
 1719 039d 2A03     		.2byte	0x32a
 1720 039f 8F000000 		.4byte	0x8f
 1721 03a3 02       		.uleb128 0x2
 1722 03a4 91       		.byte	0x91
 1723 03a5 62       		.sleb128 -30
 1724 03a6 0D       		.uleb128 0xd
 1725 03a7 07010000 		.4byte	.LASF53
 1726 03ab 01       		.byte	0x1
 1727 03ac 2C03     		.2byte	0x32c
 1728 03ae C1000000 		.4byte	0xc1
 1729 03b2 02       		.uleb128 0x2
 1730 03b3 91       		.byte	0x91
 1731 03b4 68       		.sleb128 -24
 1732 03b5 00       		.byte	0
 1733 03b6 0E       		.uleb128 0xe
 1734 03b7 16000000 		.4byte	.LASF54
 1735 03bb 01       		.byte	0x1
 1736 03bc 5703     		.2byte	0x357
 1737 03be A7000000 		.4byte	0xa7
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 47


 1738 03c2 00000000 		.4byte	.LFB17
 1739 03c6 80000000 		.4byte	.LFE17-.LFB17
 1740 03ca 01       		.uleb128 0x1
 1741 03cb 9C       		.byte	0x9c
 1742 03cc FE030000 		.4byte	0x3fe
 1743 03d0 0C       		.uleb128 0xc
 1744 03d1 ED020000 		.4byte	.LASF34
 1745 03d5 01       		.byte	0x1
 1746 03d6 5703     		.2byte	0x357
 1747 03d8 83000000 		.4byte	0x83
 1748 03dc 02       		.uleb128 0x2
 1749 03dd 91       		.byte	0x91
 1750 03de 64       		.sleb128 -28
 1751 03df 0C       		.uleb128 0xc
 1752 03e0 11030000 		.4byte	.LASF50
 1753 03e4 01       		.byte	0x1
 1754 03e5 5703     		.2byte	0x357
 1755 03e7 8F000000 		.4byte	0x8f
 1756 03eb 02       		.uleb128 0x2
 1757 03ec 91       		.byte	0x91
 1758 03ed 62       		.sleb128 -30
 1759 03ee 0D       		.uleb128 0xd
 1760 03ef 2F010000 		.4byte	.LASF55
 1761 03f3 01       		.byte	0x1
 1762 03f4 5903     		.2byte	0x359
 1763 03f6 A7000000 		.4byte	0xa7
 1764 03fa 02       		.uleb128 0x2
 1765 03fb 91       		.byte	0x91
 1766 03fc 6C       		.sleb128 -20
 1767 03fd 00       		.byte	0
 1768 03fe 11       		.uleb128 0x11
 1769 03ff 0E040000 		.4byte	0x40e
 1770 0403 0E040000 		.4byte	0x40e
 1771 0407 12       		.uleb128 0x12
 1772 0408 EC000000 		.4byte	0xec
 1773 040c 00       		.byte	0
 1774 040d 00       		.byte	0
 1775 040e 13       		.uleb128 0x13
 1776 040f 83000000 		.4byte	0x83
 1777 0413 08       		.uleb128 0x8
 1778 0414 F7020000 		.4byte	.LASF56
 1779 0418 01       		.byte	0x1
 1780 0419 21       		.byte	0x21
 1781 041a 24040000 		.4byte	0x424
 1782 041e 05       		.uleb128 0x5
 1783 041f 03       		.byte	0x3
 1784 0420 00000000 		.4byte	ADC_channelsConfig
 1785 0424 13       		.uleb128 0x13
 1786 0425 FE030000 		.4byte	0x3fe
 1787 0429 14       		.uleb128 0x14
 1788 042a D5000000 		.4byte	.LASF57
 1789 042e 01       		.byte	0x1
 1790 042f 18       		.byte	0x18
 1791 0430 6B000000 		.4byte	0x6b
 1792 0434 05       		.uleb128 0x5
 1793 0435 03       		.byte	0x3
 1794 0436 00000000 		.4byte	ADC_initVar
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 48


 1795 043a 11       		.uleb128 0x11
 1796 043b 4A040000 		.4byte	0x44a
 1797 043f 4A040000 		.4byte	0x44a
 1798 0443 12       		.uleb128 0x12
 1799 0444 EC000000 		.4byte	0xec
 1800 0448 00       		.byte	0
 1801 0449 00       		.byte	0
 1802 044a 05       		.uleb128 0x5
 1803 044b 8F000000 		.4byte	0x8f
 1804 044f 14       		.uleb128 0x14
 1805 0450 C9020000 		.4byte	.LASF58
 1806 0454 01       		.byte	0x1
 1807 0455 19       		.byte	0x19
 1808 0456 60040000 		.4byte	0x460
 1809 045a 05       		.uleb128 0x5
 1810 045b 03       		.byte	0x3
 1811 045c 00000000 		.4byte	ADC_offset
 1812 0460 05       		.uleb128 0x5
 1813 0461 3A040000 		.4byte	0x43a
 1814 0465 11       		.uleb128 0x11
 1815 0466 75040000 		.4byte	0x475
 1816 046a 75040000 		.4byte	0x475
 1817 046e 12       		.uleb128 0x12
 1818 046f EC000000 		.4byte	0xec
 1819 0473 00       		.byte	0
 1820 0474 00       		.byte	0
 1821 0475 05       		.uleb128 0x5
 1822 0476 9B000000 		.4byte	0x9b
 1823 047a 14       		.uleb128 0x14
 1824 047b A8000000 		.4byte	.LASF59
 1825 047f 01       		.byte	0x1
 1826 0480 1A       		.byte	0x1a
 1827 0481 8B040000 		.4byte	0x48b
 1828 0485 05       		.uleb128 0x5
 1829 0486 03       		.byte	0x3
 1830 0487 00000000 		.4byte	ADC_countsPer10Volt
 1831 048b 05       		.uleb128 0x5
 1832 048c 65040000 		.4byte	0x465
 1833 0490 00       		.byte	0
 1834              		.section	.debug_abbrev,"",%progbits
 1835              	.Ldebug_abbrev0:
 1836 0000 01       		.uleb128 0x1
 1837 0001 11       		.uleb128 0x11
 1838 0002 01       		.byte	0x1
 1839 0003 25       		.uleb128 0x25
 1840 0004 0E       		.uleb128 0xe
 1841 0005 13       		.uleb128 0x13
 1842 0006 0B       		.uleb128 0xb
 1843 0007 03       		.uleb128 0x3
 1844 0008 0E       		.uleb128 0xe
 1845 0009 1B       		.uleb128 0x1b
 1846 000a 0E       		.uleb128 0xe
 1847 000b 55       		.uleb128 0x55
 1848 000c 17       		.uleb128 0x17
 1849 000d 11       		.uleb128 0x11
 1850 000e 01       		.uleb128 0x1
 1851 000f 10       		.uleb128 0x10
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 49


 1852 0010 17       		.uleb128 0x17
 1853 0011 00       		.byte	0
 1854 0012 00       		.byte	0
 1855 0013 02       		.uleb128 0x2
 1856 0014 24       		.uleb128 0x24
 1857 0015 00       		.byte	0
 1858 0016 0B       		.uleb128 0xb
 1859 0017 0B       		.uleb128 0xb
 1860 0018 3E       		.uleb128 0x3e
 1861 0019 0B       		.uleb128 0xb
 1862 001a 03       		.uleb128 0x3
 1863 001b 0E       		.uleb128 0xe
 1864 001c 00       		.byte	0
 1865 001d 00       		.byte	0
 1866 001e 03       		.uleb128 0x3
 1867 001f 24       		.uleb128 0x24
 1868 0020 00       		.byte	0
 1869 0021 0B       		.uleb128 0xb
 1870 0022 0B       		.uleb128 0xb
 1871 0023 3E       		.uleb128 0x3e
 1872 0024 0B       		.uleb128 0xb
 1873 0025 03       		.uleb128 0x3
 1874 0026 08       		.uleb128 0x8
 1875 0027 00       		.byte	0
 1876 0028 00       		.byte	0
 1877 0029 04       		.uleb128 0x4
 1878 002a 16       		.uleb128 0x16
 1879 002b 00       		.byte	0
 1880 002c 03       		.uleb128 0x3
 1881 002d 0E       		.uleb128 0xe
 1882 002e 3A       		.uleb128 0x3a
 1883 002f 0B       		.uleb128 0xb
 1884 0030 3B       		.uleb128 0x3b
 1885 0031 05       		.uleb128 0x5
 1886 0032 49       		.uleb128 0x49
 1887 0033 13       		.uleb128 0x13
 1888 0034 00       		.byte	0
 1889 0035 00       		.byte	0
 1890 0036 05       		.uleb128 0x5
 1891 0037 35       		.uleb128 0x35
 1892 0038 00       		.byte	0
 1893 0039 49       		.uleb128 0x49
 1894 003a 13       		.uleb128 0x13
 1895 003b 00       		.byte	0
 1896 003c 00       		.byte	0
 1897 003d 06       		.uleb128 0x6
 1898 003e 2E       		.uleb128 0x2e
 1899 003f 00       		.byte	0
 1900 0040 3F       		.uleb128 0x3f
 1901 0041 19       		.uleb128 0x19
 1902 0042 03       		.uleb128 0x3
 1903 0043 0E       		.uleb128 0xe
 1904 0044 3A       		.uleb128 0x3a
 1905 0045 0B       		.uleb128 0xb
 1906 0046 3B       		.uleb128 0x3b
 1907 0047 0B       		.uleb128 0xb
 1908 0048 27       		.uleb128 0x27
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 50


 1909 0049 19       		.uleb128 0x19
 1910 004a 11       		.uleb128 0x11
 1911 004b 01       		.uleb128 0x1
 1912 004c 12       		.uleb128 0x12
 1913 004d 06       		.uleb128 0x6
 1914 004e 40       		.uleb128 0x40
 1915 004f 18       		.uleb128 0x18
 1916 0050 9642     		.uleb128 0x2116
 1917 0052 19       		.uleb128 0x19
 1918 0053 00       		.byte	0
 1919 0054 00       		.byte	0
 1920 0055 07       		.uleb128 0x7
 1921 0056 2E       		.uleb128 0x2e
 1922 0057 01       		.byte	0x1
 1923 0058 3F       		.uleb128 0x3f
 1924 0059 19       		.uleb128 0x19
 1925 005a 03       		.uleb128 0x3
 1926 005b 0E       		.uleb128 0xe
 1927 005c 3A       		.uleb128 0x3a
 1928 005d 0B       		.uleb128 0xb
 1929 005e 3B       		.uleb128 0x3b
 1930 005f 0B       		.uleb128 0xb
 1931 0060 27       		.uleb128 0x27
 1932 0061 19       		.uleb128 0x19
 1933 0062 11       		.uleb128 0x11
 1934 0063 01       		.uleb128 0x1
 1935 0064 12       		.uleb128 0x12
 1936 0065 06       		.uleb128 0x6
 1937 0066 40       		.uleb128 0x40
 1938 0067 18       		.uleb128 0x18
 1939 0068 9642     		.uleb128 0x2116
 1940 006a 19       		.uleb128 0x19
 1941 006b 01       		.uleb128 0x1
 1942 006c 13       		.uleb128 0x13
 1943 006d 00       		.byte	0
 1944 006e 00       		.byte	0
 1945 006f 08       		.uleb128 0x8
 1946 0070 34       		.uleb128 0x34
 1947 0071 00       		.byte	0
 1948 0072 03       		.uleb128 0x3
 1949 0073 0E       		.uleb128 0xe
 1950 0074 3A       		.uleb128 0x3a
 1951 0075 0B       		.uleb128 0xb
 1952 0076 3B       		.uleb128 0x3b
 1953 0077 0B       		.uleb128 0xb
 1954 0078 49       		.uleb128 0x49
 1955 0079 13       		.uleb128 0x13
 1956 007a 02       		.uleb128 0x2
 1957 007b 18       		.uleb128 0x18
 1958 007c 00       		.byte	0
 1959 007d 00       		.byte	0
 1960 007e 09       		.uleb128 0x9
 1961 007f 2E       		.uleb128 0x2e
 1962 0080 00       		.byte	0
 1963 0081 3F       		.uleb128 0x3f
 1964 0082 19       		.uleb128 0x19
 1965 0083 03       		.uleb128 0x3
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 51


 1966 0084 0E       		.uleb128 0xe
 1967 0085 3A       		.uleb128 0x3a
 1968 0086 0B       		.uleb128 0xb
 1969 0087 3B       		.uleb128 0x3b
 1970 0088 05       		.uleb128 0x5
 1971 0089 27       		.uleb128 0x27
 1972 008a 19       		.uleb128 0x19
 1973 008b 11       		.uleb128 0x11
 1974 008c 01       		.uleb128 0x1
 1975 008d 12       		.uleb128 0x12
 1976 008e 06       		.uleb128 0x6
 1977 008f 40       		.uleb128 0x40
 1978 0090 18       		.uleb128 0x18
 1979 0091 9642     		.uleb128 0x2116
 1980 0093 19       		.uleb128 0x19
 1981 0094 00       		.byte	0
 1982 0095 00       		.byte	0
 1983 0096 0A       		.uleb128 0xa
 1984 0097 2E       		.uleb128 0x2e
 1985 0098 00       		.byte	0
 1986 0099 3F       		.uleb128 0x3f
 1987 009a 19       		.uleb128 0x19
 1988 009b 03       		.uleb128 0x3
 1989 009c 0E       		.uleb128 0xe
 1990 009d 3A       		.uleb128 0x3a
 1991 009e 0B       		.uleb128 0xb
 1992 009f 3B       		.uleb128 0x3b
 1993 00a0 05       		.uleb128 0x5
 1994 00a1 27       		.uleb128 0x27
 1995 00a2 19       		.uleb128 0x19
 1996 00a3 11       		.uleb128 0x11
 1997 00a4 01       		.uleb128 0x1
 1998 00a5 12       		.uleb128 0x12
 1999 00a6 06       		.uleb128 0x6
 2000 00a7 40       		.uleb128 0x40
 2001 00a8 18       		.uleb128 0x18
 2002 00a9 9742     		.uleb128 0x2117
 2003 00ab 19       		.uleb128 0x19
 2004 00ac 00       		.byte	0
 2005 00ad 00       		.byte	0
 2006 00ae 0B       		.uleb128 0xb
 2007 00af 2E       		.uleb128 0x2e
 2008 00b0 01       		.byte	0x1
 2009 00b1 3F       		.uleb128 0x3f
 2010 00b2 19       		.uleb128 0x19
 2011 00b3 03       		.uleb128 0x3
 2012 00b4 0E       		.uleb128 0xe
 2013 00b5 3A       		.uleb128 0x3a
 2014 00b6 0B       		.uleb128 0xb
 2015 00b7 3B       		.uleb128 0x3b
 2016 00b8 05       		.uleb128 0x5
 2017 00b9 27       		.uleb128 0x27
 2018 00ba 19       		.uleb128 0x19
 2019 00bb 49       		.uleb128 0x49
 2020 00bc 13       		.uleb128 0x13
 2021 00bd 11       		.uleb128 0x11
 2022 00be 01       		.uleb128 0x1
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 52


 2023 00bf 12       		.uleb128 0x12
 2024 00c0 06       		.uleb128 0x6
 2025 00c1 40       		.uleb128 0x40
 2026 00c2 18       		.uleb128 0x18
 2027 00c3 9742     		.uleb128 0x2117
 2028 00c5 19       		.uleb128 0x19
 2029 00c6 01       		.uleb128 0x1
 2030 00c7 13       		.uleb128 0x13
 2031 00c8 00       		.byte	0
 2032 00c9 00       		.byte	0
 2033 00ca 0C       		.uleb128 0xc
 2034 00cb 05       		.uleb128 0x5
 2035 00cc 00       		.byte	0
 2036 00cd 03       		.uleb128 0x3
 2037 00ce 0E       		.uleb128 0xe
 2038 00cf 3A       		.uleb128 0x3a
 2039 00d0 0B       		.uleb128 0xb
 2040 00d1 3B       		.uleb128 0x3b
 2041 00d2 05       		.uleb128 0x5
 2042 00d3 49       		.uleb128 0x49
 2043 00d4 13       		.uleb128 0x13
 2044 00d5 02       		.uleb128 0x2
 2045 00d6 18       		.uleb128 0x18
 2046 00d7 00       		.byte	0
 2047 00d8 00       		.byte	0
 2048 00d9 0D       		.uleb128 0xd
 2049 00da 34       		.uleb128 0x34
 2050 00db 00       		.byte	0
 2051 00dc 03       		.uleb128 0x3
 2052 00dd 0E       		.uleb128 0xe
 2053 00de 3A       		.uleb128 0x3a
 2054 00df 0B       		.uleb128 0xb
 2055 00e0 3B       		.uleb128 0x3b
 2056 00e1 05       		.uleb128 0x5
 2057 00e2 49       		.uleb128 0x49
 2058 00e3 13       		.uleb128 0x13
 2059 00e4 02       		.uleb128 0x2
 2060 00e5 18       		.uleb128 0x18
 2061 00e6 00       		.byte	0
 2062 00e7 00       		.byte	0
 2063 00e8 0E       		.uleb128 0xe
 2064 00e9 2E       		.uleb128 0x2e
 2065 00ea 01       		.byte	0x1
 2066 00eb 3F       		.uleb128 0x3f
 2067 00ec 19       		.uleb128 0x19
 2068 00ed 03       		.uleb128 0x3
 2069 00ee 0E       		.uleb128 0xe
 2070 00ef 3A       		.uleb128 0x3a
 2071 00f0 0B       		.uleb128 0xb
 2072 00f1 3B       		.uleb128 0x3b
 2073 00f2 05       		.uleb128 0x5
 2074 00f3 27       		.uleb128 0x27
 2075 00f4 19       		.uleb128 0x19
 2076 00f5 49       		.uleb128 0x49
 2077 00f6 13       		.uleb128 0x13
 2078 00f7 11       		.uleb128 0x11
 2079 00f8 01       		.uleb128 0x1
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 53


 2080 00f9 12       		.uleb128 0x12
 2081 00fa 06       		.uleb128 0x6
 2082 00fb 40       		.uleb128 0x40
 2083 00fc 18       		.uleb128 0x18
 2084 00fd 9642     		.uleb128 0x2116
 2085 00ff 19       		.uleb128 0x19
 2086 0100 01       		.uleb128 0x1
 2087 0101 13       		.uleb128 0x13
 2088 0102 00       		.byte	0
 2089 0103 00       		.byte	0
 2090 0104 0F       		.uleb128 0xf
 2091 0105 2E       		.uleb128 0x2e
 2092 0106 01       		.byte	0x1
 2093 0107 3F       		.uleb128 0x3f
 2094 0108 19       		.uleb128 0x19
 2095 0109 03       		.uleb128 0x3
 2096 010a 0E       		.uleb128 0xe
 2097 010b 3A       		.uleb128 0x3a
 2098 010c 0B       		.uleb128 0xb
 2099 010d 3B       		.uleb128 0x3b
 2100 010e 05       		.uleb128 0x5
 2101 010f 27       		.uleb128 0x27
 2102 0110 19       		.uleb128 0x19
 2103 0111 11       		.uleb128 0x11
 2104 0112 01       		.uleb128 0x1
 2105 0113 12       		.uleb128 0x12
 2106 0114 06       		.uleb128 0x6
 2107 0115 40       		.uleb128 0x40
 2108 0116 18       		.uleb128 0x18
 2109 0117 9742     		.uleb128 0x2117
 2110 0119 19       		.uleb128 0x19
 2111 011a 01       		.uleb128 0x1
 2112 011b 13       		.uleb128 0x13
 2113 011c 00       		.byte	0
 2114 011d 00       		.byte	0
 2115 011e 10       		.uleb128 0x10
 2116 011f 2E       		.uleb128 0x2e
 2117 0120 01       		.byte	0x1
 2118 0121 3F       		.uleb128 0x3f
 2119 0122 19       		.uleb128 0x19
 2120 0123 03       		.uleb128 0x3
 2121 0124 0E       		.uleb128 0xe
 2122 0125 3A       		.uleb128 0x3a
 2123 0126 0B       		.uleb128 0xb
 2124 0127 3B       		.uleb128 0x3b
 2125 0128 05       		.uleb128 0x5
 2126 0129 27       		.uleb128 0x27
 2127 012a 19       		.uleb128 0x19
 2128 012b 11       		.uleb128 0x11
 2129 012c 01       		.uleb128 0x1
 2130 012d 12       		.uleb128 0x12
 2131 012e 06       		.uleb128 0x6
 2132 012f 40       		.uleb128 0x40
 2133 0130 18       		.uleb128 0x18
 2134 0131 9642     		.uleb128 0x2116
 2135 0133 19       		.uleb128 0x19
 2136 0134 01       		.uleb128 0x1
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 54


 2137 0135 13       		.uleb128 0x13
 2138 0136 00       		.byte	0
 2139 0137 00       		.byte	0
 2140 0138 11       		.uleb128 0x11
 2141 0139 01       		.uleb128 0x1
 2142 013a 01       		.byte	0x1
 2143 013b 49       		.uleb128 0x49
 2144 013c 13       		.uleb128 0x13
 2145 013d 01       		.uleb128 0x1
 2146 013e 13       		.uleb128 0x13
 2147 013f 00       		.byte	0
 2148 0140 00       		.byte	0
 2149 0141 12       		.uleb128 0x12
 2150 0142 21       		.uleb128 0x21
 2151 0143 00       		.byte	0
 2152 0144 49       		.uleb128 0x49
 2153 0145 13       		.uleb128 0x13
 2154 0146 2F       		.uleb128 0x2f
 2155 0147 0B       		.uleb128 0xb
 2156 0148 00       		.byte	0
 2157 0149 00       		.byte	0
 2158 014a 13       		.uleb128 0x13
 2159 014b 26       		.uleb128 0x26
 2160 014c 00       		.byte	0
 2161 014d 49       		.uleb128 0x49
 2162 014e 13       		.uleb128 0x13
 2163 014f 00       		.byte	0
 2164 0150 00       		.byte	0
 2165 0151 14       		.uleb128 0x14
 2166 0152 34       		.uleb128 0x34
 2167 0153 00       		.byte	0
 2168 0154 03       		.uleb128 0x3
 2169 0155 0E       		.uleb128 0xe
 2170 0156 3A       		.uleb128 0x3a
 2171 0157 0B       		.uleb128 0xb
 2172 0158 3B       		.uleb128 0x3b
 2173 0159 0B       		.uleb128 0xb
 2174 015a 49       		.uleb128 0x49
 2175 015b 13       		.uleb128 0x13
 2176 015c 3F       		.uleb128 0x3f
 2177 015d 19       		.uleb128 0x19
 2178 015e 02       		.uleb128 0x2
 2179 015f 18       		.uleb128 0x18
 2180 0160 00       		.byte	0
 2181 0161 00       		.byte	0
 2182 0162 00       		.byte	0
 2183              		.section	.debug_aranges,"",%progbits
 2184 0000 A4000000 		.4byte	0xa4
 2185 0004 0200     		.2byte	0x2
 2186 0006 00000000 		.4byte	.Ldebug_info0
 2187 000a 04       		.byte	0x4
 2188 000b 00       		.byte	0
 2189 000c 0000     		.2byte	0
 2190 000e 0000     		.2byte	0
 2191 0010 00000000 		.4byte	.LFB0
 2192 0014 24000000 		.4byte	.LFE0-.LFB0
 2193 0018 00000000 		.4byte	.LFB1
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 55


 2194 001c C8010000 		.4byte	.LFE1-.LFB1
 2195 0020 00000000 		.4byte	.LFB2
 2196 0024 2C000000 		.4byte	.LFE2-.LFB2
 2197 0028 00000000 		.4byte	.LFB3
 2198 002c 1C000000 		.4byte	.LFE3-.LFB3
 2199 0030 00000000 		.4byte	.LFB4
 2200 0034 1C000000 		.4byte	.LFE4-.LFB4
 2201 0038 00000000 		.4byte	.LFB5
 2202 003c 20000000 		.4byte	.LFE5-.LFB5
 2203 0040 00000000 		.4byte	.LFB6
 2204 0044 48000000 		.4byte	.LFE6-.LFB6
 2205 0048 00000000 		.4byte	.LFB7
 2206 004c 44000000 		.4byte	.LFE7-.LFB7
 2207 0050 00000000 		.4byte	.LFB8
 2208 0054 20000000 		.4byte	.LFE8-.LFB8
 2209 0058 00000000 		.4byte	.LFB9
 2210 005c 30000000 		.4byte	.LFE9-.LFB9
 2211 0060 00000000 		.4byte	.LFB10
 2212 0064 30000000 		.4byte	.LFE10-.LFB10
 2213 0068 00000000 		.4byte	.LFB11
 2214 006c 20000000 		.4byte	.LFE11-.LFB11
 2215 0070 00000000 		.4byte	.LFB12
 2216 0074 20000000 		.4byte	.LFE12-.LFB12
 2217 0078 00000000 		.4byte	.LFB13
 2218 007c 34000000 		.4byte	.LFE13-.LFB13
 2219 0080 00000000 		.4byte	.LFB14
 2220 0084 2C000000 		.4byte	.LFE14-.LFB14
 2221 0088 00000000 		.4byte	.LFB15
 2222 008c A0000000 		.4byte	.LFE15-.LFB15
 2223 0090 00000000 		.4byte	.LFB16
 2224 0094 90000000 		.4byte	.LFE16-.LFB16
 2225 0098 00000000 		.4byte	.LFB17
 2226 009c 80000000 		.4byte	.LFE17-.LFB17
 2227 00a0 00000000 		.4byte	0
 2228 00a4 00000000 		.4byte	0
 2229              		.section	.debug_ranges,"",%progbits
 2230              	.Ldebug_ranges0:
 2231 0000 00000000 		.4byte	.LFB0
 2232 0004 24000000 		.4byte	.LFE0
 2233 0008 00000000 		.4byte	.LFB1
 2234 000c C8010000 		.4byte	.LFE1
 2235 0010 00000000 		.4byte	.LFB2
 2236 0014 2C000000 		.4byte	.LFE2
 2237 0018 00000000 		.4byte	.LFB3
 2238 001c 1C000000 		.4byte	.LFE3
 2239 0020 00000000 		.4byte	.LFB4
 2240 0024 1C000000 		.4byte	.LFE4
 2241 0028 00000000 		.4byte	.LFB5
 2242 002c 20000000 		.4byte	.LFE5
 2243 0030 00000000 		.4byte	.LFB6
 2244 0034 48000000 		.4byte	.LFE6
 2245 0038 00000000 		.4byte	.LFB7
 2246 003c 44000000 		.4byte	.LFE7
 2247 0040 00000000 		.4byte	.LFB8
 2248 0044 20000000 		.4byte	.LFE8
 2249 0048 00000000 		.4byte	.LFB9
 2250 004c 30000000 		.4byte	.LFE9
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 56


 2251 0050 00000000 		.4byte	.LFB10
 2252 0054 30000000 		.4byte	.LFE10
 2253 0058 00000000 		.4byte	.LFB11
 2254 005c 20000000 		.4byte	.LFE11
 2255 0060 00000000 		.4byte	.LFB12
 2256 0064 20000000 		.4byte	.LFE12
 2257 0068 00000000 		.4byte	.LFB13
 2258 006c 34000000 		.4byte	.LFE13
 2259 0070 00000000 		.4byte	.LFB14
 2260 0074 2C000000 		.4byte	.LFE14
 2261 0078 00000000 		.4byte	.LFB15
 2262 007c A0000000 		.4byte	.LFE15
 2263 0080 00000000 		.4byte	.LFB16
 2264 0084 90000000 		.4byte	.LFE16
 2265 0088 00000000 		.4byte	.LFB17
 2266 008c 80000000 		.4byte	.LFE17
 2267 0090 00000000 		.4byte	0
 2268 0094 00000000 		.4byte	0
 2269              		.section	.debug_line,"",%progbits
 2270              	.Ldebug_line0:
 2271 0000 8F020000 		.section	.debug_str,"MS",%progbits,1
 2271      02004000 
 2271      00000201 
 2271      FB0E0D00 
 2271      01010101 
 2272              	.LASF10:
 2273 0000 75696E74 		.ascii	"uint16\000"
 2273      313600
 2274              	.LASF48:
 2275 0007 61646347 		.ascii	"adcGain\000"
 2275      61696E00 
 2276              	.LASF24:
 2277 000f 636F756E 		.ascii	"counts\000"
 2277      747300
 2278              	.LASF54:
 2279 0016 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 2279      436F756E 
 2279      7473546F 
 2279      5F566F6C 
 2279      747300
 2280              	.LASF36:
 2281 0029 4144435F 		.ascii	"ADC_Init\000"
 2281      496E6974 
 2281      00
 2282              	.LASF7:
 2283 0032 6C6F6E67 		.ascii	"long long unsigned int\000"
 2283      206C6F6E 
 2283      6720756E 
 2283      7369676E 
 2283      65642069 
 2284              	.LASF28:
 2285 0049 4144435F 		.ascii	"ADC_StartConvert\000"
 2285      53746172 
 2285      74436F6E 
 2285      76657274 
 2285      00
 2286              	.LASF6:
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 57


 2287 005a 6C6F6E67 		.ascii	"long long int\000"
 2287      206C6F6E 
 2287      6720696E 
 2287      7400
 2288              	.LASF0:
 2289 0068 7369676E 		.ascii	"signed char\000"
 2289      65642063 
 2289      68617200 
 2290              	.LASF30:
 2291 0074 73746174 		.ascii	"status\000"
 2291      757300
 2292              	.LASF13:
 2293 007b 696E7433 		.ascii	"int32\000"
 2293      3200
 2294              	.LASF25:
 2295 0081 4144435F 		.ascii	"ADC_Start\000"
 2295      53746172 
 2295      7400
 2296              	.LASF4:
 2297 008b 6C6F6E67 		.ascii	"long int\000"
 2297      20696E74 
 2297      00
 2298              	.LASF52:
 2299 0094 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 2299      436F756E 
 2299      7473546F 
 2299      5F75566F 
 2299      6C747300 
 2300              	.LASF59:
 2301 00a8 4144435F 		.ascii	"ADC_countsPer10Volt\000"
 2301      636F756E 
 2301      74735065 
 2301      72313056 
 2301      6F6C7400 
 2302              	.LASF9:
 2303 00bc 75696E74 		.ascii	"uint8\000"
 2303      3800
 2304              	.LASF16:
 2305 00c2 646F7562 		.ascii	"double\000"
 2305      6C6500
 2306              	.LASF11:
 2307 00c9 75696E74 		.ascii	"uint32\000"
 2307      333200
 2308              	.LASF38:
 2309 00d0 6D61736B 		.ascii	"mask\000"
 2309      00
 2310              	.LASF57:
 2311 00d5 4144435F 		.ascii	"ADC_initVar\000"
 2311      696E6974 
 2311      56617200 
 2312              	.LASF33:
 2313 00e1 7265744D 		.ascii	"retMode\000"
 2313      6F646500 
 2314              	.LASF43:
 2315 00e9 4144435F 		.ascii	"ADC_SetLimitMask\000"
 2315      5365744C 
 2315      696D6974 
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 58


 2315      4D61736B 
 2315      00
 2316              	.LASF8:
 2317 00fa 756E7369 		.ascii	"unsigned int\000"
 2317      676E6564 
 2317      20696E74 
 2317      00
 2318              	.LASF53:
 2319 0107 75566F6C 		.ascii	"uVolts\000"
 2319      747300
 2320              	.LASF5:
 2321 010e 6C6F6E67 		.ascii	"long unsigned int\000"
 2321      20756E73 
 2321      69676E65 
 2321      6420696E 
 2321      7400
 2322              	.LASF44:
 2323 0120 4144435F 		.ascii	"ADC_SetSatMask\000"
 2323      53657453 
 2323      61744D61 
 2323      736B00
 2324              	.LASF55:
 2325 012f 766F6C74 		.ascii	"volts\000"
 2325      7300
 2326              	.LASF23:
 2327 0135 746D7052 		.ascii	"tmpRegVal\000"
 2327      65675661 
 2327      6C00
 2328              	.LASF3:
 2329 013f 73686F72 		.ascii	"short unsigned int\000"
 2329      7420756E 
 2329      7369676E 
 2329      65642069 
 2329      6E7400
 2330              	.LASF29:
 2331 0152 4144435F 		.ascii	"ADC_StopConvert\000"
 2331      53746F70 
 2331      436F6E76 
 2331      65727400 
 2332              	.LASF60:
 2333 0162 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2333      43313120 
 2333      352E342E 
 2333      31203230 
 2333      31363036 
 2334 0195 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 2334      20726576 
 2334      6973696F 
 2334      6E203233 
 2334      37373135 
 2335 01c8 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2335      66756E63 
 2335      74696F6E 
 2335      2D736563 
 2335      74696F6E 
 2336              	.LASF51:
 2337 01f0 6D566F6C 		.ascii	"mVolts\000"
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 59


 2337      747300
 2338              	.LASF19:
 2339 01f7 72656733 		.ascii	"reg32\000"
 2339      3200
 2340              	.LASF14:
 2341 01fd 666C6F61 		.ascii	"float32\000"
 2341      74333200 
 2342              	.LASF21:
 2343 0205 73697A65 		.ascii	"sizetype\000"
 2343      74797065 
 2343      00
 2344              	.LASF40:
 2345 020e 6C6F774C 		.ascii	"lowLimit\000"
 2345      696D6974 
 2345      00
 2346              	.LASF20:
 2347 0217 6C6F6E67 		.ascii	"long double\000"
 2347      20646F75 
 2347      626C6500 
 2348              	.LASF41:
 2349 0223 4144435F 		.ascii	"ADC_SetHighLimit\000"
 2349      53657448 
 2349      6967684C 
 2349      696D6974 
 2349      00
 2350              	.LASF31:
 2351 0234 4144435F 		.ascii	"ADC_IsEndConversion\000"
 2351      4973456E 
 2351      64436F6E 
 2351      76657273 
 2351      696F6E00 
 2352              	.LASF17:
 2353 0248 696E7436 		.ascii	"int64\000"
 2353      3400
 2354              	.LASF37:
 2355 024e 4144435F 		.ascii	"ADC_SetChanMask\000"
 2355      53657443 
 2355      68616E4D 
 2355      61736B00 
 2356              	.LASF61:
 2357 025e 47656E65 		.ascii	"Generated_Source\\PSoC4\\ADC.c\000"
 2357      72617465 
 2357      645F536F 
 2357      75726365 
 2357      5C50536F 
 2358              	.LASF47:
 2359 027b 4144435F 		.ascii	"ADC_SetGain\000"
 2359      53657447 
 2359      61696E00 
 2360              	.LASF15:
 2361 0287 666C6F61 		.ascii	"float\000"
 2361      7400
 2362              	.LASF42:
 2363 028d 68696768 		.ascii	"highLimit\000"
 2363      4C696D69 
 2363      7400
 2364              	.LASF49:
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 60


 2365 0297 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 2365      436F756E 
 2365      7473546F 
 2365      5F6D566F 
 2365      6C747300 
 2366              	.LASF39:
 2367 02ab 4144435F 		.ascii	"ADC_SetLowLimit\000"
 2367      5365744C 
 2367      6F774C69 
 2367      6D697400 
 2368              	.LASF1:
 2369 02bb 756E7369 		.ascii	"unsigned char\000"
 2369      676E6564 
 2369      20636861 
 2369      7200
 2370              	.LASF58:
 2371 02c9 4144435F 		.ascii	"ADC_offset\000"
 2371      6F666673 
 2371      657400
 2372              	.LASF2:
 2373 02d4 73686F72 		.ascii	"short int\000"
 2373      7420696E 
 2373      7400
 2374              	.LASF27:
 2375 02de 4144435F 		.ascii	"ADC_Stop\000"
 2375      53746F70 
 2375      00
 2376              	.LASF22:
 2377 02e7 63684E75 		.ascii	"chNum\000"
 2377      6D00
 2378              	.LASF34:
 2379 02ed 6368616E 		.ascii	"chan\000"
 2379      00
 2380              	.LASF18:
 2381 02f2 63686172 		.ascii	"char\000"
 2381      00
 2382              	.LASF56:
 2383 02f7 4144435F 		.ascii	"ADC_channelsConfig\000"
 2383      6368616E 
 2383      6E656C73 
 2383      436F6E66 
 2383      696700
 2384              	.LASF46:
 2385 030a 6F666673 		.ascii	"offset\000"
 2385      657400
 2386              	.LASF50:
 2387 0311 61646343 		.ascii	"adcCounts\000"
 2387      6F756E74 
 2387      7300
 2388              	.LASF26:
 2389 031b 4144435F 		.ascii	"ADC_Enable\000"
 2389      456E6162 
 2389      6C6500
 2390              	.LASF12:
 2391 0326 696E7431 		.ascii	"int16\000"
 2391      3600
 2392              	.LASF62:
ARM GAS  C:\Users\EDULU~1.DES\AppData\Local\Temp\ccpYHLly.s 			page 61


 2393 032c 433A5C55 		.ascii	"C:\\Users\\edulu.DESKTOP-961TG4K\\Documents\\PSoC C"
 2393      73657273 
 2393      5C656475 
 2393      6C752E44 
 2393      45534B54 
 2394 035b 72656174 		.ascii	"reator\\Micrium\\Examples\\Cypress\\CY8CKIT-044\\OS"
 2394      6F725C4D 
 2394      69637269 
 2394      756D5C45 
 2394      78616D70 
 2395 0389 325C5053 		.ascii	"2\\PSoC\\OS2.cydsn\000"
 2395      6F435C4F 
 2395      53322E63 
 2395      7964736E 
 2395      00
 2396              	.LASF45:
 2397 039a 4144435F 		.ascii	"ADC_SetOffset\000"
 2397      5365744F 
 2397      66667365 
 2397      7400
 2398              	.LASF35:
 2399 03a8 72657375 		.ascii	"result\000"
 2399      6C7400
 2400              	.LASF32:
 2401 03af 4144435F 		.ascii	"ADC_GetResult16\000"
 2401      47657452 
 2401      6573756C 
 2401      74313600 
 2402              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
