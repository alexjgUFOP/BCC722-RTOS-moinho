Loading plugins phase: Elapsed time ==> 0s.201ms
<CYPRESSTAG name="CyDsfit arguments...">
cydsfit arguments: -.fdsnotice -.fdswarpdepfile=warp_dependencies.txt -.fdselabdepfile=elab_dependencies.txt -.fdsbldfile=generated_files.txt -.fdsreffile=referenced_files.txt -p H:\BCC722-RTOS-moinho\UCoS\Micrium_2\Software\EvalBoards\Cypress\CY8CKIT-050\PSoC\uCOS-III-Probe\BCC722-RTOS-MOINHO.cydsn\BCC722-RTOS-MOINHO.cyprj -d CY8C5868AXI-LP032 -s H:\BCC722-RTOS-moinho\UCoS\Micrium_2\Software\EvalBoards\Cypress\CY8CKIT-050\PSoC\uCOS-III-Probe\BCC722-RTOS-MOINHO.cydsn\Generated_Source\PSoC5 -- -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE
</CYPRESSTAG>
<CYPRESSTAG name="Design elaboration results...">
ADD: sdb.M0065: information: Analog terminal "vdac_ref" on ADC_SAR_SEQ_v2_10 is unconnected.
 * C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_10\PSoC5\ADC_SAR_SEQ_v2_10.cysch (Signal: vdac_ref)
 * C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_10\PSoC5\ADC_SAR_SEQ_v2_10.cysch (Shape_798)
 * C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_10\PSoC5\ADC_SAR_SEQ_v2_10.cysch (Shape_885)

</CYPRESSTAG>
Elaboration phase: Elapsed time ==> 2s.321ms
<CYPRESSTAG name="HDL generation results...">
</CYPRESSTAG>
HDL generation phase: Elapsed time ==> 0s.070ms
<CYPRESSTAG name="Synthesis results...">

     | | | | | | |
   _________________
  -|               |-
  -|               |-
  -|               |-
  -|    CYPRESS    |-
  -|               |-
  -|               |-   Warp Verilog Synthesis Compiler: Version 6.3 IR 41
  -|               |-   Copyright (C) 1991-2001 Cypress Semiconductor
   |_______________|
     | | | | | | |

======================================================================
Compiling:  BCC722-RTOS-MOINHO.v
Program  :   C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\bin\warp.exe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=H:\BCC722-RTOS-moinho\UCoS\Micrium_2\Software\EvalBoards\Cypress\CY8CKIT-050\PSoC\uCOS-III-Probe\BCC722-RTOS-MOINHO.cydsn\BCC722-RTOS-MOINHO.cyprj -dcpsoc3 BCC722-RTOS-MOINHO.v -verilog
======================================================================

======================================================================
Compiling:  BCC722-RTOS-MOINHO.v
Program  :   C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\bin\warp.exe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=H:\BCC722-RTOS-moinho\UCoS\Micrium_2\Software\EvalBoards\Cypress\CY8CKIT-050\PSoC\uCOS-III-Probe\BCC722-RTOS-MOINHO.cydsn\BCC722-RTOS-MOINHO.cyprj -dcpsoc3 BCC722-RTOS-MOINHO.v -verilog
======================================================================

======================================================================
Compiling:  BCC722-RTOS-MOINHO.v
Program  :   vlogfe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=H:\BCC722-RTOS-moinho\UCoS\Micrium_2\Software\EvalBoards\Cypress\CY8CKIT-050\PSoC\uCOS-III-Probe\BCC722-RTOS-MOINHO.cydsn\BCC722-RTOS-MOINHO.cyprj -dcpsoc3 -verilog BCC722-RTOS-MOINHO.v
======================================================================

vlogfe V6.3 IR 41:  Verilog parser
Sat Oct 22 21:36:09 2022


======================================================================
Compiling:  BCC722-RTOS-MOINHO.v
Program  :   vpp
Options  :    -yv2 -q10 BCC722-RTOS-MOINHO.v
======================================================================

vpp V6.3 IR 41:  Verilog Pre-Processor
Sat Oct 22 21:36:10 2022

Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\CyControlReg_v1_80\CyControlReg_v1_80.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\ZeroTerminal\ZeroTerminal.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_vref_v1_70\cy_vref_v1_70.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\or_v1_0\or_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cypress.v'

vpp:  No errors.

Library 'work' => directory 'lcpsoc3'
General_symbol_table
General_symbol_table
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Using control file 'BCC722-RTOS-MOINHO.ctl'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1113, col 55):  Note: Substituting module 'add_vv_vv' for '+'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1122, col 48):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1122, col 77):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1389, col 59):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1424, col 61):  Note: Substituting module 'cmp_vv_vv' for '/='.
C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1547, col 106):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1603, col 68):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1604, col 68):  Note: Substituting module 'cmp_vv_vv' for '<'.
BCC722-RTOS-MOINHO.v (line 942, col 82):  Note: Substituting module 'cmp_vv_vv' for '='.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.

vlogfe:  No errors.


======================================================================
Compiling:  BCC722-RTOS-MOINHO.v
Program  :   tovif
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=H:\BCC722-RTOS-moinho\UCoS\Micrium_2\Software\EvalBoards\Cypress\CY8CKIT-050\PSoC\uCOS-III-Probe\BCC722-RTOS-MOINHO.cydsn\BCC722-RTOS-MOINHO.cyprj -dcpsoc3 -verilog BCC722-RTOS-MOINHO.v
======================================================================

tovif V6.3 IR 41:  High-level synthesis
Sat Oct 22 21:36:10 2022

Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Linking 'H:\BCC722-RTOS-moinho\UCoS\Micrium_2\Software\EvalBoards\Cypress\CY8CKIT-050\PSoC\uCOS-III-Probe\BCC722-RTOS-MOINHO.cydsn\codegentemp\BCC722-RTOS-MOINHO.ctl'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\CyControlReg_v1_80\CyControlReg_v1_80.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cypress.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'.
Linking 'H:\BCC722-RTOS-moinho\UCoS\Micrium_2\Software\EvalBoards\Cypress\CY8CKIT-050\PSoC\uCOS-III-Probe\BCC722-RTOS-MOINHO.cydsn\codegentemp\BCC722-RTOS-MOINHO.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\ZeroTerminal\ZeroTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_vref_v1_70\cy_vref_v1_70.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\or_v1_0\or_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mcompare.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\lcpsoc3\stdlogic\mod_cnst.vif'.

tovif:  No errors.


======================================================================
Compiling:  BCC722-RTOS-MOINHO.v
Program  :   topld
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=H:\BCC722-RTOS-moinho\UCoS\Micrium_2\Software\EvalBoards\Cypress\CY8CKIT-050\PSoC\uCOS-III-Probe\BCC722-RTOS-MOINHO.cydsn\BCC722-RTOS-MOINHO.cyprj -dcpsoc3 -verilog BCC722-RTOS-MOINHO.v
======================================================================

topld V6.3 IR 41:  Synthesis and optimization
Sat Oct 22 21:36:10 2022

Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Linking 'H:\BCC722-RTOS-moinho\UCoS\Micrium_2\Software\EvalBoards\Cypress\CY8CKIT-050\PSoC\uCOS-III-Probe\BCC722-RTOS-MOINHO.cydsn\codegentemp\BCC722-RTOS-MOINHO.ctl'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\CyControlReg_v1_80\CyControlReg_v1_80.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cypress.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'.
Linking 'H:\BCC722-RTOS-moinho\UCoS\Micrium_2\Software\EvalBoards\Cypress\CY8CKIT-050\PSoC\uCOS-III-Probe\BCC722-RTOS-MOINHO.cydsn\codegentemp\BCC722-RTOS-MOINHO.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\ZeroTerminal\ZeroTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_vref_v1_70\cy_vref_v1_70.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\or_v1_0\or_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mcompare.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\lcpsoc3\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\lcpsoc3\stdlogic\cpsoc3.vif'.

----------------------------------------------------------
Detecting unused logic.
----------------------------------------------------------
    User names
	Net_251
	Net_252
	Net_253
	Net_254
	Net_255
	Net_256
	\ProbeUART:BUART:reset_sr\
	\ProbeUART:BUART:sRX:s23Poll:MODULE_2:g2:a0:b_1\
	\ProbeUART:BUART:sRX:s23Poll:MODULE_2:g2:a0:b_0\
	\ProbeUART:BUART:sRX:s23Poll:MODULE_3:g2:a0:gta_0\
	\ProbeUART:BUART:sRX:s23Poll:MODULE_4:g2:a0:gta_0\
	Net_260
	\ProbeUART:BUART:sRX:MODULE_5:g2:a0:gta_0\
	\ProbeUART:BUART:sRX:MODULE_6:g1:a0:gx:u0:albi_1\
	\ProbeUART:BUART:sRX:MODULE_6:g1:a0:gx:u0:agbi_1\
	\ProbeUART:BUART:sRX:MODULE_6:g1:a0:gx:u0:lt_0\
	\ProbeUART:BUART:sRX:MODULE_6:g1:a0:gx:u0:gt_0\
	\ProbeUART:BUART:sRX:MODULE_6:g1:a0:gx:u0:lti_0\
	\ProbeUART:BUART:sRX:MODULE_6:g1:a0:gx:u0:gti_0\
	\ProbeUART:BUART:sRX:MODULE_6:g1:a0:gx:u0:albi_0\
	\ProbeUART:BUART:sRX:MODULE_6:g1:a0:gx:u0:agbi_0\
	\ProbeUART:BUART:sRX:MODULE_6:g1:a0:xeq\
	\ProbeUART:BUART:sRX:MODULE_6:g1:a0:xlt\
	\ProbeUART:BUART:sRX:MODULE_6:g1:a0:xlte\
	\ProbeUART:BUART:sRX:MODULE_6:g1:a0:xgt\
	\ProbeUART:BUART:sRX:MODULE_6:g1:a0:xgte\
	\ProbeUART:BUART:sRX:MODULE_6:lt\
	\ProbeUART:BUART:sRX:MODULE_6:eq\
	\ProbeUART:BUART:sRX:MODULE_6:gt\
	\ProbeUART:BUART:sRX:MODULE_6:gte\
	\ProbeUART:BUART:sRX:MODULE_6:lte\
	\ADC_SAR_Seq:SAR:Net_221\
	\ADC_SAR_Seq:SAR:Net_383\
	\ADC_SAR_Seq:bSAR_SEQ:sw_soc\
	\ADC_SAR_Seq:soc_out\
	\ADC_SAR_Seq:Net_3905\
	\ADC_SAR_Seq:Net_3867\
	\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:albi_2\
	\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:agbi_2\
	\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:albi_1\
	\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:agbi_1\
	\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:albi_0\
	\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:agbi_0\
	\ADC_SAR_Seq:MODULE_1:g1:a0:xneq\
	\ADC_SAR_Seq:MODULE_1:g1:a0:xlt\
	\ADC_SAR_Seq:MODULE_1:g1:a0:xlte\
	\ADC_SAR_Seq:MODULE_1:g1:a0:xgt\
	\ADC_SAR_Seq:MODULE_1:g1:a0:xgte\
	\ADC_SAR_Seq:MODULE_1:lt\
	\ADC_SAR_Seq:MODULE_1:gt\
	\ADC_SAR_Seq:MODULE_1:gte\
	\ADC_SAR_Seq:MODULE_1:lte\
	\ADC_SAR_Seq:MODULE_1:neq\


Deleted 53 User equations/components.
Deleted 0 Synthesized equations/components.

------------------------------------------------------
Alias Detection
------------------------------------------------------
Aliasing \LED_Status:rst\ to \LED_Status:clk\
Aliasing tmpOE__LED_net_0 to tmpOE__LED_net_1
Aliasing zero to \LED_Status:clk\
Aliasing one to tmpOE__LED_net_1
Aliasing \LCD_Disp:tmpOE__LCDPort_net_6\ to tmpOE__LED_net_1
Aliasing \LCD_Disp:tmpOE__LCDPort_net_5\ to tmpOE__LED_net_1
Aliasing \LCD_Disp:tmpOE__LCDPort_net_4\ to tmpOE__LED_net_1
Aliasing \LCD_Disp:tmpOE__LCDPort_net_3\ to tmpOE__LED_net_1
Aliasing \LCD_Disp:tmpOE__LCDPort_net_2\ to tmpOE__LED_net_1
Aliasing \LCD_Disp:tmpOE__LCDPort_net_1\ to tmpOE__LED_net_1
Aliasing \LCD_Disp:tmpOE__LCDPort_net_0\ to tmpOE__LED_net_1
Aliasing tmpOE__PB_2_net_0 to tmpOE__LED_net_1
Aliasing Net_238 to \LED_Status:clk\
Aliasing \ProbeUART:BUART:tx_hd_send_break\ to \LED_Status:clk\
Aliasing \ProbeUART:BUART:HalfDuplexSend\ to \LED_Status:clk\
Aliasing \ProbeUART:BUART:FinalParityType_1\ to \LED_Status:clk\
Aliasing \ProbeUART:BUART:FinalParityType_0\ to \LED_Status:clk\
Aliasing \ProbeUART:BUART:FinalAddrMode_2\ to \LED_Status:clk\
Aliasing \ProbeUART:BUART:FinalAddrMode_1\ to \LED_Status:clk\
Aliasing \ProbeUART:BUART:FinalAddrMode_0\ to \LED_Status:clk\
Aliasing \ProbeUART:BUART:tx_ctrl_mark\ to \LED_Status:clk\
Aliasing \ProbeUART:BUART:tx_status_6\ to \LED_Status:clk\
Aliasing \ProbeUART:BUART:tx_status_5\ to \LED_Status:clk\
Aliasing \ProbeUART:BUART:tx_status_4\ to \LED_Status:clk\
Aliasing \ProbeUART:BUART:rx_count7_bit8_wire\ to \LED_Status:clk\
Aliasing \ProbeUART:BUART:sRX:s23Poll:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\ to tmpOE__LED_net_1
Aliasing \ProbeUART:BUART:sRX:s23Poll:MODIN4_1\ to \ProbeUART:BUART:sRX:s23Poll:MODIN3_1\
Aliasing \ProbeUART:BUART:sRX:s23Poll:MODIN4_0\ to \ProbeUART:BUART:sRX:s23Poll:MODIN3_0\
Aliasing \ProbeUART:BUART:sRX:s23Poll:MODULE_3:g2:a0:newb_1\ to \LED_Status:clk\
Aliasing \ProbeUART:BUART:sRX:s23Poll:MODULE_3:g2:a0:newb_0\ to tmpOE__LED_net_1
Aliasing \ProbeUART:BUART:sRX:s23Poll:MODIN5_1\ to \ProbeUART:BUART:sRX:s23Poll:MODIN3_1\
Aliasing \ProbeUART:BUART:sRX:s23Poll:MODIN5_0\ to \ProbeUART:BUART:sRX:s23Poll:MODIN3_0\
Aliasing \ProbeUART:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_1\ to tmpOE__LED_net_1
Aliasing \ProbeUART:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_0\ to \LED_Status:clk\
Aliasing \ProbeUART:BUART:rx_status_1\ to \LED_Status:clk\
Aliasing \ProbeUART:BUART:sRX:MODULE_5:g2:a0:newa_6\ to \LED_Status:clk\
Aliasing \ProbeUART:BUART:sRX:MODULE_5:g2:a0:newa_5\ to \LED_Status:clk\
Aliasing \ProbeUART:BUART:sRX:MODULE_5:g2:a0:newa_4\ to \LED_Status:clk\
Aliasing \ProbeUART:BUART:sRX:MODULE_5:g2:a0:newb_6\ to \LED_Status:clk\
Aliasing \ProbeUART:BUART:sRX:MODULE_5:g2:a0:newb_5\ to \LED_Status:clk\
Aliasing \ProbeUART:BUART:sRX:MODULE_5:g2:a0:newb_4\ to \LED_Status:clk\
Aliasing \ProbeUART:BUART:sRX:MODULE_5:g2:a0:newb_3\ to \LED_Status:clk\
Aliasing \ProbeUART:BUART:sRX:MODULE_5:g2:a0:newb_2\ to tmpOE__LED_net_1
Aliasing \ProbeUART:BUART:sRX:MODULE_5:g2:a0:newb_1\ to tmpOE__LED_net_1
Aliasing \ProbeUART:BUART:sRX:MODULE_5:g2:a0:newb_0\ to \LED_Status:clk\
Aliasing \ProbeUART:BUART:sRX:MODULE_6:g1:a0:gx:u0:aeqb_0\ to tmpOE__LED_net_1
Aliasing tmpOE__ProbeUART_Rx_net_0 to tmpOE__LED_net_1
Aliasing tmpOE__ProbeUART_Tx_net_0 to tmpOE__LED_net_1
Aliasing tmpOE__PB_3_net_0 to tmpOE__LED_net_1
Aliasing tmpOE__se_indut_motor_net_0 to tmpOE__LED_net_1
Aliasing tmpOE__se_indut_porta_net_0 to tmpOE__LED_net_1
Aliasing tmpOE__bt_liga_net_0 to tmpOE__LED_net_1
Aliasing tmpOE__si_liga_net_0 to tmpOE__LED_net_1
Aliasing tmpOE__si_desl_net_0 to tmpOE__LED_net_1
Aliasing tmpOE__si_rearme_net_0 to tmpOE__LED_net_1
Aliasing tmpOE__si_emerg_net_0 to tmpOE__LED_net_1
Aliasing tmpOE__si_alerta_net_0 to tmpOE__LED_net_1
Aliasing tmpOE__al_sonoro_net_0 to tmpOE__LED_net_1
Aliasing tmpOE__bt_desl_net_0 to tmpOE__LED_net_1
Aliasing tmpOE__bt_rearme_net_0 to tmpOE__LED_net_1
Aliasing tmpOE__bt_emerg_net_0 to tmpOE__LED_net_1
Aliasing tmpOE__ct_motor_net_0 to tmpOE__LED_net_1
Aliasing tmpOE__se_temp_motor_net_0 to tmpOE__LED_net_1
Aliasing \ADC_SAR_Seq:AMuxHw_2_Decoder_enable\ to tmpOE__LED_net_1
Aliasing \ADC_SAR_Seq:SAR:vp_ctl_0\ to \LED_Status:clk\
Aliasing \ADC_SAR_Seq:SAR:vp_ctl_2\ to \LED_Status:clk\
Aliasing \ADC_SAR_Seq:SAR:vn_ctl_1\ to \LED_Status:clk\
Aliasing \ADC_SAR_Seq:SAR:vn_ctl_3\ to \LED_Status:clk\
Aliasing \ADC_SAR_Seq:SAR:vp_ctl_1\ to \LED_Status:clk\
Aliasing \ADC_SAR_Seq:SAR:vp_ctl_3\ to \LED_Status:clk\
Aliasing \ADC_SAR_Seq:SAR:vn_ctl_0\ to \LED_Status:clk\
Aliasing \ADC_SAR_Seq:SAR:vn_ctl_2\ to \LED_Status:clk\
Aliasing \ADC_SAR_Seq:SAR:soc\ to \LED_Status:clk\
Aliasing \ADC_SAR_Seq:bSAR_SEQ:status_7\ to \LED_Status:clk\
Aliasing \ADC_SAR_Seq:bSAR_SEQ:status_6\ to \LED_Status:clk\
Aliasing \ADC_SAR_Seq:bSAR_SEQ:status_5\ to \LED_Status:clk\
Aliasing \ADC_SAR_Seq:bSAR_SEQ:status_4\ to \LED_Status:clk\
Aliasing \ADC_SAR_Seq:bSAR_SEQ:status_3\ to \LED_Status:clk\
Aliasing \ADC_SAR_Seq:bSAR_SEQ:status_2\ to \LED_Status:clk\
Aliasing \ADC_SAR_Seq:bSAR_SEQ:status_1\ to \LED_Status:clk\
Aliasing Net_2813 to \ADC_SAR_Seq:bSAR_SEQ:status_0\
Aliasing \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:aeqb_0\ to tmpOE__LED_net_1
Aliasing tmpOE__se_temp_quadro_net_0 to tmpOE__LED_net_1
Aliasing tmpOE__bt_test_net_0 to tmpOE__LED_net_1
Aliasing Net_265D to \LED_Status:clk\
Aliasing \ProbeUART:BUART:rx_break_status\\D\ to \LED_Status:clk\
Aliasing \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\\D\ to \ADC_SAR_Seq:MODIN1_5\
Aliasing \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\\D\ to \ADC_SAR_Seq:MODIN1_4\
Aliasing \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\\D\ to \ADC_SAR_Seq:MODIN1_3\
Aliasing \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\\D\ to \ADC_SAR_Seq:MODIN1_2\
Aliasing \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\\D\ to \ADC_SAR_Seq:MODIN1_1\
Aliasing \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\\D\ to \ADC_SAR_Seq:MODIN1_0\
Removing Lhs of wire \LED_Status:rst\[1] = \LED_Status:clk\[0]
Removing Rhs of wire Net_167[2] = \LED_Status:control_out_0\[3]
Removing Rhs of wire Net_167[2] = \LED_Status:control_0\[26]
Removing Rhs of wire Net_213[4] = \LED_Status:control_out_1\[5]
Removing Rhs of wire Net_213[4] = \LED_Status:control_1\[25]
Removing Lhs of wire tmpOE__LED_net_0[29] = tmpOE__LED_net_1[28]
Removing Rhs of wire zero[35] = \LED_Status:clk\[0]
Removing Lhs of wire one[36] = tmpOE__LED_net_1[28]
Removing Lhs of wire \LCD_Disp:tmpOE__LCDPort_net_6\[39] = tmpOE__LED_net_1[28]
Removing Lhs of wire \LCD_Disp:tmpOE__LCDPort_net_5\[40] = tmpOE__LED_net_1[28]
Removing Lhs of wire \LCD_Disp:tmpOE__LCDPort_net_4\[41] = tmpOE__LED_net_1[28]
Removing Lhs of wire \LCD_Disp:tmpOE__LCDPort_net_3\[42] = tmpOE__LED_net_1[28]
Removing Lhs of wire \LCD_Disp:tmpOE__LCDPort_net_2\[43] = tmpOE__LED_net_1[28]
Removing Lhs of wire \LCD_Disp:tmpOE__LCDPort_net_1\[44] = tmpOE__LED_net_1[28]
Removing Lhs of wire \LCD_Disp:tmpOE__LCDPort_net_0\[45] = tmpOE__LED_net_1[28]
Removing Lhs of wire tmpOE__PB_2_net_0[63] = tmpOE__LED_net_1[28]
Removing Lhs of wire \ProbeUART:Net_61\[70] = \ProbeUART:Net_9\[69]
Removing Lhs of wire Net_238[74] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:tx_hd_send_break\[75] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:HalfDuplexSend\[76] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:FinalParityType_1\[77] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:FinalParityType_0\[78] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:FinalAddrMode_2\[79] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:FinalAddrMode_1\[80] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:FinalAddrMode_0\[81] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:tx_ctrl_mark\[82] = zero[35]
Removing Rhs of wire Net_239[87] = \ProbeUART:BUART:tx_interrupt_out\[88]
Removing Rhs of wire Net_240[89] = \ProbeUART:BUART:rx_interrupt_out\[90]
Removing Rhs of wire \ProbeUART:BUART:tx_bitclk_enable_pre\[94] = \ProbeUART:BUART:tx_bitclk_dp\[130]
Removing Lhs of wire \ProbeUART:BUART:tx_counter_tc\[140] = \ProbeUART:BUART:tx_counter_dp\[131]
Removing Lhs of wire \ProbeUART:BUART:tx_status_6\[141] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:tx_status_5\[142] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:tx_status_4\[143] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:tx_status_1\[145] = \ProbeUART:BUART:tx_fifo_empty\[108]
Removing Lhs of wire \ProbeUART:BUART:tx_status_3\[147] = \ProbeUART:BUART:tx_fifo_notfull\[107]
Removing Lhs of wire \ProbeUART:BUART:rx_count7_bit8_wire\[207] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:add_vv_vv_MODGEN_2_1\[215] = \ProbeUART:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_1\[226]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:add_vv_vv_MODGEN_2_0\[217] = \ProbeUART:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_0\[227]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:cmp_vv_vv_MODGEN_3\[218] = \ProbeUART:BUART:sRX:s23Poll:MODULE_3:g2:a0:lta_0\[243]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:cmp_vv_vv_MODGEN_4\[219] = \ProbeUART:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_0\[257]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:MODULE_2:g2:a0:a_1\[220] = \ProbeUART:BUART:sRX:s23Poll:MODIN3_1\[221]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:MODIN3_1\[221] = \ProbeUART:BUART:pollcount_1\[213]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:MODULE_2:g2:a0:a_0\[222] = \ProbeUART:BUART:sRX:s23Poll:MODIN3_0\[223]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:MODIN3_0\[223] = \ProbeUART:BUART:pollcount_0\[216]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_0\[229] = tmpOE__LED_net_1[28]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\[230] = tmpOE__LED_net_1[28]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:MODULE_3:g2:a0:newa_1\[231] = \ProbeUART:BUART:pollcount_1\[213]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:MODIN4_1\[232] = \ProbeUART:BUART:pollcount_1\[213]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:MODULE_3:g2:a0:newa_0\[233] = \ProbeUART:BUART:pollcount_0\[216]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:MODIN4_0\[234] = \ProbeUART:BUART:pollcount_0\[216]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:MODULE_3:g2:a0:newb_1\[235] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:MODULE_3:g2:a0:newb_0\[236] = tmpOE__LED_net_1[28]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:MODULE_3:g2:a0:dataa_1\[237] = \ProbeUART:BUART:pollcount_1\[213]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:MODULE_3:g2:a0:dataa_0\[238] = \ProbeUART:BUART:pollcount_0\[216]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:MODULE_3:g2:a0:datab_1\[239] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:MODULE_3:g2:a0:datab_0\[240] = tmpOE__LED_net_1[28]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:MODULE_4:g2:a0:newa_1\[245] = \ProbeUART:BUART:pollcount_1\[213]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:MODIN5_1\[246] = \ProbeUART:BUART:pollcount_1\[213]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:MODULE_4:g2:a0:newa_0\[247] = \ProbeUART:BUART:pollcount_0\[216]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:MODIN5_0\[248] = \ProbeUART:BUART:pollcount_0\[216]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_1\[249] = tmpOE__LED_net_1[28]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_0\[250] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:MODULE_4:g2:a0:dataa_1\[251] = \ProbeUART:BUART:pollcount_1\[213]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:MODULE_4:g2:a0:dataa_0\[252] = \ProbeUART:BUART:pollcount_0\[216]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:MODULE_4:g2:a0:datab_1\[253] = tmpOE__LED_net_1[28]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:MODULE_4:g2:a0:datab_0\[254] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:rx_status_1\[261] = zero[35]
Removing Rhs of wire \ProbeUART:BUART:rx_status_2\[262] = \ProbeUART:BUART:rx_parity_error_status\[263]
Removing Rhs of wire \ProbeUART:BUART:rx_status_3\[264] = \ProbeUART:BUART:rx_stop_bit_error\[265]
Removing Lhs of wire \ProbeUART:BUART:sRX:cmp_vv_vv_MODGEN_5\[275] = \ProbeUART:BUART:sRX:MODULE_5:g2:a0:lta_0\[324]
Removing Lhs of wire \ProbeUART:BUART:sRX:cmp_vv_vv_MODGEN_6\[279] = \ProbeUART:BUART:sRX:MODULE_6:g1:a0:xneq\[346]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:newa_6\[280] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:newa_5\[281] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:newa_4\[282] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:newa_3\[283] = \ProbeUART:BUART:sRX:MODIN6_6\[284]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODIN6_6\[284] = \ProbeUART:BUART:rx_count_6\[202]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:newa_2\[285] = \ProbeUART:BUART:sRX:MODIN6_5\[286]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODIN6_5\[286] = \ProbeUART:BUART:rx_count_5\[203]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:newa_1\[287] = \ProbeUART:BUART:sRX:MODIN6_4\[288]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODIN6_4\[288] = \ProbeUART:BUART:rx_count_4\[204]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:newa_0\[289] = \ProbeUART:BUART:sRX:MODIN6_3\[290]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODIN6_3\[290] = \ProbeUART:BUART:rx_count_3\[205]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:newb_6\[291] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:newb_5\[292] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:newb_4\[293] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:newb_3\[294] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:newb_2\[295] = tmpOE__LED_net_1[28]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:newb_1\[296] = tmpOE__LED_net_1[28]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:newb_0\[297] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:dataa_6\[298] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:dataa_5\[299] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:dataa_4\[300] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:dataa_3\[301] = \ProbeUART:BUART:rx_count_6\[202]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:dataa_2\[302] = \ProbeUART:BUART:rx_count_5\[203]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:dataa_1\[303] = \ProbeUART:BUART:rx_count_4\[204]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:dataa_0\[304] = \ProbeUART:BUART:rx_count_3\[205]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:datab_6\[305] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:datab_5\[306] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:datab_4\[307] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:datab_3\[308] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:datab_2\[309] = tmpOE__LED_net_1[28]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:datab_1\[310] = tmpOE__LED_net_1[28]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:datab_0\[311] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_6:g1:a0:newa_0\[326] = \ProbeUART:BUART:rx_postpoll\[161]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_6:g1:a0:newb_0\[327] = \ProbeUART:BUART:rx_parity_bit\[278]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_6:g1:a0:dataa_0\[328] = \ProbeUART:BUART:rx_postpoll\[161]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_6:g1:a0:datab_0\[329] = \ProbeUART:BUART:rx_parity_bit\[278]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_6:g1:a0:gx:u0:a_0\[330] = \ProbeUART:BUART:rx_postpoll\[161]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_6:g1:a0:gx:u0:b_0\[331] = \ProbeUART:BUART:rx_parity_bit\[278]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_6:g1:a0:gx:u0:aeqb_0\[333] = tmpOE__LED_net_1[28]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_6:g1:a0:gx:u0:eq_0\[334] = \ProbeUART:BUART:sRX:MODULE_6:g1:a0:gx:u0:xnor_array_0\[332]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_6:g1:a0:gx:u0:eqi_0\[335] = \ProbeUART:BUART:sRX:MODULE_6:g1:a0:gx:u0:xnor_array_0\[332]
Removing Lhs of wire tmpOE__ProbeUART_Rx_net_0[357] = tmpOE__LED_net_1[28]
Removing Lhs of wire tmpOE__ProbeUART_Tx_net_0[362] = tmpOE__LED_net_1[28]
Removing Lhs of wire tmpOE__PB_3_net_0[370] = tmpOE__LED_net_1[28]
Removing Lhs of wire tmpOE__se_indut_motor_net_0[376] = tmpOE__LED_net_1[28]
Removing Lhs of wire tmpOE__se_indut_porta_net_0[382] = tmpOE__LED_net_1[28]
Removing Lhs of wire tmpOE__bt_liga_net_0[388] = tmpOE__LED_net_1[28]
Removing Lhs of wire tmpOE__si_liga_net_0[394] = tmpOE__LED_net_1[28]
Removing Lhs of wire tmpOE__si_desl_net_0[400] = tmpOE__LED_net_1[28]
Removing Lhs of wire tmpOE__si_rearme_net_0[406] = tmpOE__LED_net_1[28]
Removing Lhs of wire tmpOE__si_emerg_net_0[412] = tmpOE__LED_net_1[28]
Removing Lhs of wire tmpOE__si_alerta_net_0[418] = tmpOE__LED_net_1[28]
Removing Lhs of wire tmpOE__al_sonoro_net_0[424] = tmpOE__LED_net_1[28]
Removing Lhs of wire tmpOE__bt_desl_net_0[430] = tmpOE__LED_net_1[28]
Removing Lhs of wire tmpOE__bt_rearme_net_0[436] = tmpOE__LED_net_1[28]
Removing Lhs of wire tmpOE__bt_emerg_net_0[442] = tmpOE__LED_net_1[28]
Removing Lhs of wire tmpOE__ct_motor_net_0[451] = tmpOE__LED_net_1[28]
Removing Lhs of wire tmpOE__se_temp_motor_net_0[457] = tmpOE__LED_net_1[28]
Removing Lhs of wire \ADC_SAR_Seq:AMuxHw_2_Decoder_enable\[463] = tmpOE__LED_net_1[28]
Removing Lhs of wire \ADC_SAR_Seq:cmp_vv_vv_MODGEN_1\[465] = \ADC_SAR_Seq:MODULE_1:g1:a0:xeq\[799]
Removing Rhs of wire \ADC_SAR_Seq:clock\[466] = \ADC_SAR_Seq:Net_3874\[699]
Removing Rhs of wire \ADC_SAR_Seq:ch_addr_5\[468] = \ADC_SAR_Seq:bSAR_SEQ:count_5\[666]
Removing Rhs of wire \ADC_SAR_Seq:ch_addr_4\[470] = \ADC_SAR_Seq:bSAR_SEQ:count_4\[667]
Removing Rhs of wire \ADC_SAR_Seq:ch_addr_3\[472] = \ADC_SAR_Seq:bSAR_SEQ:count_3\[668]
Removing Rhs of wire \ADC_SAR_Seq:ch_addr_2\[474] = \ADC_SAR_Seq:bSAR_SEQ:count_2\[669]
Removing Rhs of wire \ADC_SAR_Seq:ch_addr_1\[476] = \ADC_SAR_Seq:bSAR_SEQ:count_1\[670]
Removing Rhs of wire \ADC_SAR_Seq:ch_addr_0\[478] = \ADC_SAR_Seq:bSAR_SEQ:count_0\[671]
Removing Lhs of wire \ADC_SAR_Seq:SAR:vp_ctl_0\[611] = zero[35]
Removing Lhs of wire \ADC_SAR_Seq:SAR:vp_ctl_2\[612] = zero[35]
Removing Lhs of wire \ADC_SAR_Seq:SAR:vn_ctl_1\[613] = zero[35]
Removing Lhs of wire \ADC_SAR_Seq:SAR:vn_ctl_3\[614] = zero[35]
Removing Lhs of wire \ADC_SAR_Seq:SAR:vp_ctl_1\[615] = zero[35]
Removing Lhs of wire \ADC_SAR_Seq:SAR:vp_ctl_3\[616] = zero[35]
Removing Lhs of wire \ADC_SAR_Seq:SAR:vn_ctl_0\[617] = zero[35]
Removing Lhs of wire \ADC_SAR_Seq:SAR:vn_ctl_2\[618] = zero[35]
Removing Lhs of wire \ADC_SAR_Seq:SAR:Net_188\[619] = \ADC_SAR_Seq:clock\[466]
Removing Lhs of wire \ADC_SAR_Seq:SAR:soc\[625] = zero[35]
Removing Rhs of wire \ADC_SAR_Seq:bSAR_SEQ:enable\[656] = \ADC_SAR_Seq:bSAR_SEQ:control_0\[657]
Removing Rhs of wire \ADC_SAR_Seq:bSAR_SEQ:load_period\[658] = \ADC_SAR_Seq:bSAR_SEQ:control_1\[659]
Removing Lhs of wire \ADC_SAR_Seq:bSAR_SEQ:status_7\[672] = zero[35]
Removing Lhs of wire \ADC_SAR_Seq:bSAR_SEQ:status_6\[673] = zero[35]
Removing Lhs of wire \ADC_SAR_Seq:bSAR_SEQ:status_5\[674] = zero[35]
Removing Lhs of wire \ADC_SAR_Seq:bSAR_SEQ:status_4\[675] = zero[35]
Removing Lhs of wire \ADC_SAR_Seq:bSAR_SEQ:status_3\[676] = zero[35]
Removing Lhs of wire \ADC_SAR_Seq:bSAR_SEQ:status_2\[677] = zero[35]
Removing Lhs of wire \ADC_SAR_Seq:bSAR_SEQ:status_1\[678] = zero[35]
Removing Rhs of wire \ADC_SAR_Seq:bSAR_SEQ:status_0\[679] = \ADC_SAR_Seq:bSAR_SEQ:nrq_edge_detect_reg\[680]
Removing Rhs of wire Net_2813[687] = \ADC_SAR_Seq:bSAR_SEQ:status_0\[679]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:newa_5\[710] = \ADC_SAR_Seq:MODIN1_5\[711]
Removing Lhs of wire \ADC_SAR_Seq:MODIN1_5\[711] = \ADC_SAR_Seq:ch_addr_5\[468]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:newa_4\[712] = \ADC_SAR_Seq:MODIN1_4\[713]
Removing Lhs of wire \ADC_SAR_Seq:MODIN1_4\[713] = \ADC_SAR_Seq:ch_addr_4\[470]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:newa_3\[714] = \ADC_SAR_Seq:MODIN1_3\[715]
Removing Lhs of wire \ADC_SAR_Seq:MODIN1_3\[715] = \ADC_SAR_Seq:ch_addr_3\[472]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:newa_2\[716] = \ADC_SAR_Seq:MODIN1_2\[717]
Removing Lhs of wire \ADC_SAR_Seq:MODIN1_2\[717] = \ADC_SAR_Seq:ch_addr_2\[474]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:newa_1\[718] = \ADC_SAR_Seq:MODIN1_1\[719]
Removing Lhs of wire \ADC_SAR_Seq:MODIN1_1\[719] = \ADC_SAR_Seq:ch_addr_1\[476]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:newa_0\[720] = \ADC_SAR_Seq:MODIN1_0\[721]
Removing Lhs of wire \ADC_SAR_Seq:MODIN1_0\[721] = \ADC_SAR_Seq:ch_addr_0\[478]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:newb_5\[722] = \ADC_SAR_Seq:MODIN2_5\[723]
Removing Lhs of wire \ADC_SAR_Seq:MODIN2_5\[723] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\[467]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:newb_4\[724] = \ADC_SAR_Seq:MODIN2_4\[725]
Removing Lhs of wire \ADC_SAR_Seq:MODIN2_4\[725] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\[469]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:newb_3\[726] = \ADC_SAR_Seq:MODIN2_3\[727]
Removing Lhs of wire \ADC_SAR_Seq:MODIN2_3\[727] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\[471]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:newb_2\[728] = \ADC_SAR_Seq:MODIN2_2\[729]
Removing Lhs of wire \ADC_SAR_Seq:MODIN2_2\[729] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\[473]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:newb_1\[730] = \ADC_SAR_Seq:MODIN2_1\[731]
Removing Lhs of wire \ADC_SAR_Seq:MODIN2_1\[731] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\[475]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:newb_0\[732] = \ADC_SAR_Seq:MODIN2_0\[733]
Removing Lhs of wire \ADC_SAR_Seq:MODIN2_0\[733] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\[477]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:dataa_5\[734] = \ADC_SAR_Seq:ch_addr_5\[468]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:dataa_4\[735] = \ADC_SAR_Seq:ch_addr_4\[470]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:dataa_3\[736] = \ADC_SAR_Seq:ch_addr_3\[472]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:dataa_2\[737] = \ADC_SAR_Seq:ch_addr_2\[474]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:dataa_1\[738] = \ADC_SAR_Seq:ch_addr_1\[476]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:dataa_0\[739] = \ADC_SAR_Seq:ch_addr_0\[478]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:datab_5\[740] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\[467]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:datab_4\[741] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\[469]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:datab_3\[742] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\[471]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:datab_2\[743] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\[473]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:datab_1\[744] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\[475]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:datab_0\[745] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\[477]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:a_5\[746] = \ADC_SAR_Seq:ch_addr_5\[468]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:a_4\[747] = \ADC_SAR_Seq:ch_addr_4\[470]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:a_3\[748] = \ADC_SAR_Seq:ch_addr_3\[472]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:a_2\[749] = \ADC_SAR_Seq:ch_addr_2\[474]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:a_1\[750] = \ADC_SAR_Seq:ch_addr_1\[476]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:a_0\[751] = \ADC_SAR_Seq:ch_addr_0\[478]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:b_5\[752] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\[467]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:b_4\[753] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\[469]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:b_3\[754] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\[471]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:b_2\[755] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\[473]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:b_1\[756] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\[475]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:b_0\[757] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\[477]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:aeqb_0\[764] = tmpOE__LED_net_1[28]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:eq_0\[765] = \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:xnor_array_0\[763]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:eqi_0\[771] = \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:eq_5\[770]
Removing Rhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:xeq\[799] = \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:aeqb_1\[772]
Removing Lhs of wire tmpOE__se_temp_quadro_net_0[811] = tmpOE__LED_net_1[28]
Removing Lhs of wire tmpOE__bt_test_net_0[817] = tmpOE__LED_net_1[28]
Removing Lhs of wire \ProbeUART:BUART:reset_reg\\D\[822] = zero[35]
Removing Lhs of wire Net_265D[827] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:rx_bitclk\\D\[837] = \ProbeUART:BUART:rx_bitclk_pre\[196]
Removing Lhs of wire \ProbeUART:BUART:rx_parity_error_pre\\D\[846] = \ProbeUART:BUART:rx_parity_error_pre\[273]
Removing Lhs of wire \ProbeUART:BUART:rx_break_status\\D\[847] = zero[35]
Removing Lhs of wire \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\\D\[851] = \ADC_SAR_Seq:ch_addr_5\[468]
Removing Lhs of wire \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\\D\[852] = \ADC_SAR_Seq:ch_addr_4\[470]
Removing Lhs of wire \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\\D\[853] = \ADC_SAR_Seq:ch_addr_3\[472]
Removing Lhs of wire \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\\D\[854] = \ADC_SAR_Seq:ch_addr_2\[474]
Removing Lhs of wire \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\\D\[855] = \ADC_SAR_Seq:ch_addr_1\[476]
Removing Lhs of wire \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\\D\[856] = \ADC_SAR_Seq:ch_addr_0\[478]
Removing Lhs of wire \ADC_SAR_Seq:bSAR_SEQ:nrq_edge_detect_reg\\D\[921] = \ADC_SAR_Seq:bSAR_SEQ:nrq_edge_detect\[686]
Removing Lhs of wire \ADC_SAR_Seq:bSAR_SEQ:nrq_reg\\D\[923] = \ADC_SAR_Seq:bSAR_SEQ:bus_clk_nrq_reg\[683]

------------------------------------------------------
Aliased 0 equations, 226 wires.
------------------------------------------------------

----------------------------------------------------------
Circuit simplification
----------------------------------------------------------

Substituting virtuals - pass 1:

Note:  Expanding virtual equation for 'zero' (cost = 0):
zero <=  ('0') ;

Note:  Expanding virtual equation for 'tmpOE__LED_net_1' (cost = 0):
tmpOE__LED_net_1 <=  ('1') ;

Note:  Expanding virtual equation for '\ProbeUART:BUART:rx_addressmatch\' (cost = 0):
\ProbeUART:BUART:rx_addressmatch\ <= (\ProbeUART:BUART:rx_addressmatch2\
	OR \ProbeUART:BUART:rx_addressmatch1\);

Note:  Expanding virtual equation for '\ProbeUART:BUART:rx_bitclk_pre\' (cost = 1):
\ProbeUART:BUART:rx_bitclk_pre\ <= ((not \ProbeUART:BUART:rx_count_2\ and not \ProbeUART:BUART:rx_count_1\ and not \ProbeUART:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\ProbeUART:BUART:rx_bitclk_pre16x\' (cost = 0):
\ProbeUART:BUART:rx_bitclk_pre16x\ <= ((not \ProbeUART:BUART:rx_count_2\ and \ProbeUART:BUART:rx_count_1\ and \ProbeUART:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\ProbeUART:BUART:rx_poll_bit1\' (cost = 1):
\ProbeUART:BUART:rx_poll_bit1\ <= ((not \ProbeUART:BUART:rx_count_2\ and not \ProbeUART:BUART:rx_count_1\ and \ProbeUART:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\ProbeUART:BUART:rx_poll_bit2\' (cost = 1):
\ProbeUART:BUART:rx_poll_bit2\ <= ((not \ProbeUART:BUART:rx_count_2\ and not \ProbeUART:BUART:rx_count_1\ and not \ProbeUART:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\ProbeUART:BUART:pollingrange\' (cost = 4):
\ProbeUART:BUART:pollingrange\ <= ((not \ProbeUART:BUART:rx_count_2\ and not \ProbeUART:BUART:rx_count_1\));

Note:  Expanding virtual equation for '\ProbeUART:BUART:sRX:s23Poll:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\' (cost = 0):
\ProbeUART:BUART:sRX:s23Poll:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\ <= (\ProbeUART:BUART:pollcount_0\);

Note:  Expanding virtual equation for '\ProbeUART:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_0\' (cost = 0):
\ProbeUART:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_0\ <= (not \ProbeUART:BUART:pollcount_0\);

Note:  Expanding virtual equation for '\ProbeUART:BUART:sRX:s23Poll:MODULE_3:g2:a0:lta_1\' (cost = 0):
\ProbeUART:BUART:sRX:s23Poll:MODULE_3:g2:a0:lta_1\ <=  ('0') ;

Note:  Expanding virtual equation for '\ProbeUART:BUART:sRX:s23Poll:MODULE_3:g2:a0:gta_1\' (cost = 0):
\ProbeUART:BUART:sRX:s23Poll:MODULE_3:g2:a0:gta_1\ <= (\ProbeUART:BUART:pollcount_1\);

Note:  Expanding virtual equation for '\ProbeUART:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_1\' (cost = 0):
\ProbeUART:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_1\ <= (not \ProbeUART:BUART:pollcount_1\);

Note:  Expanding virtual equation for '\ProbeUART:BUART:sRX:s23Poll:MODULE_4:g2:a0:gta_1\' (cost = 0):
\ProbeUART:BUART:sRX:s23Poll:MODULE_4:g2:a0:gta_1\ <=  ('0') ;

Note:  Expanding virtual equation for '\ProbeUART:BUART:sRX:MODULE_5:g2:a0:lta_6\' (cost = 0):
\ProbeUART:BUART:sRX:MODULE_5:g2:a0:lta_6\ <=  ('0') ;

Note:  Expanding virtual equation for '\ProbeUART:BUART:sRX:MODULE_5:g2:a0:gta_6\' (cost = 0):
\ProbeUART:BUART:sRX:MODULE_5:g2:a0:gta_6\ <=  ('0') ;

Note:  Expanding virtual equation for '\ProbeUART:BUART:sRX:MODULE_5:g2:a0:lta_5\' (cost = 0):
\ProbeUART:BUART:sRX:MODULE_5:g2:a0:lta_5\ <=  ('0') ;

Note:  Expanding virtual equation for '\ProbeUART:BUART:sRX:MODULE_5:g2:a0:gta_5\' (cost = 0):
\ProbeUART:BUART:sRX:MODULE_5:g2:a0:gta_5\ <=  ('0') ;

Note:  Expanding virtual equation for '\ProbeUART:BUART:sRX:MODULE_5:g2:a0:lta_4\' (cost = 0):
\ProbeUART:BUART:sRX:MODULE_5:g2:a0:lta_4\ <=  ('0') ;

Note:  Expanding virtual equation for '\ProbeUART:BUART:sRX:MODULE_5:g2:a0:gta_4\' (cost = 0):
\ProbeUART:BUART:sRX:MODULE_5:g2:a0:gta_4\ <=  ('0') ;

Note:  Expanding virtual equation for '\ProbeUART:BUART:sRX:MODULE_5:g2:a0:lta_3\' (cost = 0):
\ProbeUART:BUART:sRX:MODULE_5:g2:a0:lta_3\ <=  ('0') ;

Note:  Expanding virtual equation for '\ProbeUART:BUART:sRX:MODULE_5:g2:a0:gta_3\' (cost = 0):
\ProbeUART:BUART:sRX:MODULE_5:g2:a0:gta_3\ <= (\ProbeUART:BUART:rx_count_6\);

Note:  Expanding virtual equation for '\ProbeUART:BUART:sRX:MODULE_5:g2:a0:lta_2\' (cost = 1):
\ProbeUART:BUART:sRX:MODULE_5:g2:a0:lta_2\ <= ((not \ProbeUART:BUART:rx_count_6\ and not \ProbeUART:BUART:rx_count_5\));

Note:  Expanding virtual equation for '\ProbeUART:BUART:sRX:MODULE_5:g2:a0:gta_2\' (cost = 0):
\ProbeUART:BUART:sRX:MODULE_5:g2:a0:gta_2\ <= (\ProbeUART:BUART:rx_count_6\);

Note:  Expanding virtual equation for '\ProbeUART:BUART:sRX:MODULE_5:g2:a0:lta_1\' (cost = 2):
\ProbeUART:BUART:sRX:MODULE_5:g2:a0:lta_1\ <= ((not \ProbeUART:BUART:rx_count_6\ and not \ProbeUART:BUART:rx_count_4\)
	OR (not \ProbeUART:BUART:rx_count_6\ and not \ProbeUART:BUART:rx_count_5\));

Note:  Expanding virtual equation for '\ProbeUART:BUART:sRX:MODULE_5:g2:a0:gta_1\' (cost = 0):
\ProbeUART:BUART:sRX:MODULE_5:g2:a0:gta_1\ <= (\ProbeUART:BUART:rx_count_6\);

Note:  Expanding virtual equation for '\ProbeUART:BUART:sRX:MODULE_5:g2:a0:lta_0\' (cost = 8):
\ProbeUART:BUART:sRX:MODULE_5:g2:a0:lta_0\ <= ((not \ProbeUART:BUART:rx_count_6\ and not \ProbeUART:BUART:rx_count_4\)
	OR (not \ProbeUART:BUART:rx_count_6\ and not \ProbeUART:BUART:rx_count_5\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:xnor_array_5\' (cost = 6):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:xnor_array_5\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\)
	OR (\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:xnor_array_4\' (cost = 6):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:xnor_array_4\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\)
	OR (\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:xnor_array_3\' (cost = 2):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:xnor_array_3\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\)
	OR (\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:xnor_array_2\' (cost = 6):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:xnor_array_2\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\)
	OR (\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:xnor_array_1\' (cost = 6):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:xnor_array_1\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\)
	OR (\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:xnor_array_0\' (cost = 4):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:xnor_array_0\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\)
	OR (\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:eq_1\' (cost = 8):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:eq_1\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:eq_2\' (cost = 16):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:eq_2\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:eq_3\' (cost = 32):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:eq_3\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:eq_4\' (cost = 64):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:eq_4\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:eq_5\' (cost = 64):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:eq_5\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:lt_3\' (cost = 2):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:lt_3\ <= ((not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:gt_3\' (cost = 2):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:gt_3\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:lt_4\' (cost = 6):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:lt_4\ <= ((not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\)
	OR (not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\)
	OR (not \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:gt_4\' (cost = 6):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:gt_4\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:lt_0\' (cost = 2):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:lt_0\ <= ((not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:gt_0\' (cost = 2):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:gt_0\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:lt_1\' (cost = 6):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:lt_1\ <= ((not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\)
	OR (not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\)
	OR (not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:gt_1\' (cost = 6):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:gt_1\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\));


Substituting virtuals - pass 2:

Note:  Expanding virtual equation for '\ProbeUART:BUART:sRX:s23Poll:MODULE_3:g2:a0:lta_0\' (cost = 4):
\ProbeUART:BUART:sRX:s23Poll:MODULE_3:g2:a0:lta_0\ <= ((not \ProbeUART:BUART:pollcount_1\ and not \ProbeUART:BUART:pollcount_0\));

Note:  Expanding virtual equation for '\ProbeUART:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_0\' (cost = 0):
\ProbeUART:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_0\ <= (not \ProbeUART:BUART:pollcount_1\);

Note:  Expanding virtual equation for '\ProbeUART:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_1\' (cost = 2):
\ProbeUART:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_1\ <= ((not \ProbeUART:BUART:pollcount_0\ and \ProbeUART:BUART:pollcount_1\)
	OR (not \ProbeUART:BUART:pollcount_1\ and \ProbeUART:BUART:pollcount_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:xeq\' (cost = 64):
\ADC_SAR_Seq:MODULE_1:g1:a0:xeq\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\));


Substituting virtuals - pass 3:

Note:  Expanding virtual equation for '\ProbeUART:BUART:rx_postpoll\' (cost = 72):
\ProbeUART:BUART:rx_postpoll\ <= (\ProbeUART:BUART:pollcount_1\
	OR (Net_227 and \ProbeUART:BUART:pollcount_0\));

Note:  Expanding virtual equation for '\ProbeUART:BUART:sRX:MODULE_6:g1:a0:gx:u0:xnor_array_0\' (cost = 4):
\ProbeUART:BUART:sRX:MODULE_6:g1:a0:gx:u0:xnor_array_0\ <= ((not \ProbeUART:BUART:pollcount_1\ and not Net_227 and not \ProbeUART:BUART:rx_parity_bit\)
	OR (not \ProbeUART:BUART:pollcount_1\ and not \ProbeUART:BUART:pollcount_0\ and not \ProbeUART:BUART:rx_parity_bit\)
	OR (\ProbeUART:BUART:pollcount_1\ and \ProbeUART:BUART:rx_parity_bit\)
	OR (Net_227 and \ProbeUART:BUART:pollcount_0\ and \ProbeUART:BUART:rx_parity_bit\));

Note:  Expanding virtual equation for '\ProbeUART:BUART:sRX:MODULE_6:g1:a0:gx:u0:aeqb_1\' (cost = 4):
\ProbeUART:BUART:sRX:MODULE_6:g1:a0:gx:u0:aeqb_1\ <= ((not \ProbeUART:BUART:pollcount_1\ and not Net_227 and not \ProbeUART:BUART:rx_parity_bit\)
	OR (not \ProbeUART:BUART:pollcount_1\ and not \ProbeUART:BUART:pollcount_0\ and not \ProbeUART:BUART:rx_parity_bit\)
	OR (\ProbeUART:BUART:pollcount_1\ and \ProbeUART:BUART:rx_parity_bit\)
	OR (Net_227 and \ProbeUART:BUART:pollcount_0\ and \ProbeUART:BUART:rx_parity_bit\));

Note:  Virtual signal \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ with ( cost: 128 or cost_inv: -1)  > 90 or with size: 64 > 102 has been made a (soft) node.
\ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\));


Substituting virtuals - pass 4:


----------------------------------------------------------
Circuit simplification results:

	Expanded 53 signals.
	Turned 1 signals into soft nodes.
	Maximum default expansion cost was set at 3.
----------------------------------------------------------

------------------------------------------------------
Alias Detection
------------------------------------------------------
Aliasing \ProbeUART:BUART:rx_status_0\ to zero
Aliasing \ProbeUART:BUART:rx_status_6\ to zero
Aliasing \ProbeUART:BUART:rx_markspace_status\\D\ to zero
Aliasing \ProbeUART:BUART:rx_parity_error_status\\D\ to zero
Aliasing \ProbeUART:BUART:rx_addr_match_status\\D\ to zero
Removing Rhs of wire \ProbeUART:BUART:rx_bitclk_enable\[160] = \ProbeUART:BUART:rx_bitclk\[208]
Removing Lhs of wire \ProbeUART:BUART:rx_status_0\[259] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:rx_status_6\[268] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:tx_ctrl_mark_last\\D\[829] = \ProbeUART:BUART:tx_ctrl_mark_last\[151]
Removing Lhs of wire \ProbeUART:BUART:rx_markspace_status\\D\[841] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:rx_parity_error_status\\D\[842] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:rx_addr_match_status\\D\[844] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:rx_markspace_pre\\D\[845] = \ProbeUART:BUART:rx_markspace_pre\[272]
Removing Lhs of wire \ProbeUART:BUART:rx_parity_bit\\D\[850] = \ProbeUART:BUART:rx_parity_bit\[278]

------------------------------------------------------
Aliased 0 equations, 9 wires.
------------------------------------------------------

----------------------------------------------------------
Circuit simplification
----------------------------------------------------------

Eliminating unused logic - pass 1:

Note:  Deleted unused equation:
\ProbeUART:BUART:sRX:MODULE_6:g1:a0:xneq\ <= ((not \ProbeUART:BUART:rx_parity_bit\ and Net_227 and \ProbeUART:BUART:pollcount_0\)
	OR (not \ProbeUART:BUART:pollcount_1\ and not \ProbeUART:BUART:pollcount_0\ and \ProbeUART:BUART:rx_parity_bit\)
	OR (not \ProbeUART:BUART:pollcount_1\ and not Net_227 and \ProbeUART:BUART:rx_parity_bit\)
	OR (not \ProbeUART:BUART:rx_parity_bit\ and \ProbeUART:BUART:pollcount_1\));


Eliminating unused logic - pass 2:


Substituting virtuals - pass 1:


----------------------------------------------------------
Circuit simplification results:

	Expanded 0 signals.
	Turned 0 signals into soft nodes.
	Maximum default expansion cost was set at 3.
----------------------------------------------------------

topld:  No errors.

CYPRESS_DIR    : C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp
Warp Program   : C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\bin\warp.exe
Warp Arguments : -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=H:\BCC722-RTOS-moinho\UCoS\Micrium_2\Software\EvalBoards\Cypress\CY8CKIT-050\PSoC\uCOS-III-Probe\BCC722-RTOS-MOINHO.cydsn\BCC722-RTOS-MOINHO.cyprj -dcpsoc3 BCC722-RTOS-MOINHO.v -verilog
</CYPRESSTAG>
Warp synthesis phase: Elapsed time ==> 1s.807ms
<CYPRESSTAG name="Fitter results...">
<CYPRESSTAG name="Fitter startup details...">
cyp3fit: V4.4.0.80, Family: PSoC3, Started at: Saturday, 22 October 2022 21:36:11
Options: -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=H:\BCC722-RTOS-moinho\UCoS\Micrium_2\Software\EvalBoards\Cypress\CY8CKIT-050\PSoC\uCOS-III-Probe\BCC722-RTOS-MOINHO.cydsn\BCC722-RTOS-MOINHO.cyprj -d CY8C5868AXI-LP032 BCC722-RTOS-MOINHO.v -verilog
</CYPRESSTAG>
<CYPRESSTAG name="Design parsing">
Design parsing phase: Elapsed time ==> 0s.032ms
</CYPRESSTAG>
<CYPRESSTAG name="Tech Mapping">
<CYPRESSTAG name="Initial Mapping" icon="FILE_RPT_TECHM">
    Removed wire end \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:lti_1\ kept \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:lt_5\
    Removed wire end \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:gti_1\ kept \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:gt_5\
    Removed wire end \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:lti_0\ kept \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:lt_2\
    Removed wire end \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:gti_0\ kept \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:gt_2\
    Converted constant MacroCell: \ProbeUART:BUART:reset_reg\ from registered to combinatorial
    Converted constant MacroCell: Net_265 from registered to combinatorial
    Converted constant MacroCell: \ProbeUART:BUART:rx_markspace_status\ from registered to combinatorial
    Converted constant MacroCell: \ProbeUART:BUART:rx_status_2\ from registered to combinatorial
    Converted constant MacroCell: \ProbeUART:BUART:rx_addr_match_status\ from registered to combinatorial
    Converted constant MacroCell: \ProbeUART:BUART:rx_break_status\ from registered to combinatorial
Assigning clock ADC_SAR_Seq_BusClock to clock BUS_CLK because it is a pass-through
<CYPRESSTAG name="Global Clock Selection" icon="FILE_RPT_TECHM">
    Digital Clock 0: Automatic-assigning  clock 'ADC_SAR_Seq_IntClock'. Fanout=73, Signal=\ADC_SAR_Seq:clock\
    Digital Clock 1: Automatic-assigning  clock 'ProbeUART_IntClock'. Fanout=1, Signal=\ProbeUART:Net_9\
</CYPRESSTAG>

Removing unused cells resulting from optimization
Done removing unused cells.
<CYPRESSTAG name="UDB Clock/Enable Remapping Results">
    UDB Clk/Enable \ProbeUART:BUART:ClkSync\: with output requested to be synchronous
        ClockIn: ProbeUART_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: ProbeUART_IntClock, EnableOut: Constant 1
    UDB Clk/Enable \ADC_SAR_Seq:bSAR_SEQ:ClkEn\: with output requested to be synchronous
        ClockIn: ADC_SAR_Seq_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: \ADC_SAR_Seq:bSAR_SEQ:CtrlReg\:controlcell.control_0 was determined to be synchronous to ClockIn
        ClockOut: ADC_SAR_Seq_IntClock, EnableOut: \ADC_SAR_Seq:bSAR_SEQ:CtrlReg\:controlcell.control_0
    UDB Clk/Enable \ADC_SAR_Seq:bSAR_SEQ:ClkCtrl\: with output requested to be synchronous
        ClockIn: ADC_SAR_Seq_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: ADC_SAR_Seq_IntClock, EnableOut: Constant 1
</CYPRESSTAG>
ADD: pft.M0040: information: The following 4 pin(s) will be assigned a location by the fitter: LED(0), LED(1), ProbeUART_Rx(0), ProbeUART_Tx(0)


Removing unused cells resulting from optimization
Done removing unused cells.
<CYPRESSTAG name="Duplicate Macrocell detection">
</CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Duplicate Macrocell detection">

Removing duplicate macrocells
    Removing \ProbeUART:BUART:rx_parity_bit\, Duplicate of \ProbeUART:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\ProbeUART:BUART:rx_parity_bit\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \ProbeUART:BUART:rx_parity_bit\ (fanout=0)

    Removing \ProbeUART:BUART:rx_address_detected\, Duplicate of \ProbeUART:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\ProbeUART:BUART:rx_address_detected\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \ProbeUART:BUART:rx_address_detected\ (fanout=0)

    Removing \ProbeUART:BUART:rx_parity_error_pre\, Duplicate of \ProbeUART:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\ProbeUART:BUART:rx_parity_error_pre\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \ProbeUART:BUART:rx_parity_error_pre\ (fanout=0)

    Removing \ProbeUART:BUART:rx_markspace_pre\, Duplicate of \ProbeUART:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\ProbeUART:BUART:rx_markspace_pre\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \ProbeUART:BUART:rx_markspace_pre\ (fanout=0)

    Removing \ProbeUART:BUART:rx_state_1\, Duplicate of \ProbeUART:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\ProbeUART:BUART:rx_state_1\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \ProbeUART:BUART:rx_state_1\ (fanout=8)

    Removing \ProbeUART:BUART:tx_parity_bit\, Duplicate of \ProbeUART:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\ProbeUART:BUART:tx_parity_bit\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \ProbeUART:BUART:tx_parity_bit\ (fanout=0)

    Removing \ProbeUART:BUART:tx_mark\, Duplicate of \ProbeUART:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\ProbeUART:BUART:tx_mark\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \ProbeUART:BUART:tx_mark\ (fanout=0)

End removing duplicate macrocells: used 1 pass
</CYPRESSTAG>
<CYPRESSTAG name="Design Equations" icon="FILE_RPT_EQUATION">

------------------------------------------------------------
Design Equations
------------------------------------------------------------
    <CYPRESSTAG name="Pin listing">

    ------------------------------------------------------------
    Pin listing
    ------------------------------------------------------------

    Pin : Name = LED(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => LED(0)__PA ,
            pin_input => Net_167 ,
            pad => LED(0)_PAD );

    Pin : Name = LED(1)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => LED(1)__PA ,
            pin_input => Net_213 ,
            pad => LED(1)_PAD );

    Pin : Name = \LCD_Disp:LCDPort(0)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD_Disp:LCDPort(0)\__PA ,
            pad => \LCD_Disp:LCDPort(0)_PAD\ );
        Properties:
        {
        }

    Pin : Name = \LCD_Disp:LCDPort(1)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD_Disp:LCDPort(1)\__PA ,
            pad => \LCD_Disp:LCDPort(1)_PAD\ );
        Properties:
        {
        }

    Pin : Name = \LCD_Disp:LCDPort(2)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD_Disp:LCDPort(2)\__PA ,
            pad => \LCD_Disp:LCDPort(2)_PAD\ );
        Properties:
        {
        }

    Pin : Name = \LCD_Disp:LCDPort(3)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD_Disp:LCDPort(3)\__PA ,
            pad => \LCD_Disp:LCDPort(3)_PAD\ );
        Properties:
        {
        }

    Pin : Name = \LCD_Disp:LCDPort(4)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD_Disp:LCDPort(4)\__PA ,
            pad => \LCD_Disp:LCDPort(4)_PAD\ );
        Properties:
        {
        }

    Pin : Name = \LCD_Disp:LCDPort(5)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD_Disp:LCDPort(5)\__PA ,
            pad => \LCD_Disp:LCDPort(5)_PAD\ );
        Properties:
        {
        }

    Pin : Name = \LCD_Disp:LCDPort(6)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD_Disp:LCDPort(6)\__PA ,
            pad => \LCD_Disp:LCDPort(6)_PAD\ );
        Properties:
        {
        }

    Pin : Name = PB_2(0)
        Attributes:
            In Group/Port: True
            In Sync Option: SYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: RES_PULL_UP
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: True
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => PB_2(0)__PA ,
            pad => PB_2(0)_PAD );
        Properties:
        {
        }

    Pin : Name = ProbeUART_Rx(0)
        Attributes:
            In Group/Port: True
            In Sync Option: SYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_DIGITAL
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => ProbeUART_Rx(0)__PA ,
            fb => Net_227 ,
            pad => ProbeUART_Rx(0)_PAD );

    Pin : Name = ProbeUART_Tx(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => ProbeUART_Tx(0)__PA ,
            pin_input => Net_222 ,
            pad => ProbeUART_Tx(0)_PAD );

    Pin : Name = PB_3(0)
        Attributes:
            In Group/Port: True
            In Sync Option: SYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: RES_PULL_UP
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: True
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => PB_3(0)__PA ,
            pad => PB_3(0)_PAD );
        Properties:
        {
        }

    Pin : Name = se_indut_motor(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: AUTO
            Interrupt generated: True
            Interrupt mode: FALLING
            Drive mode: RES_PULL_UP
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, PORT_INTERRUPT
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => se_indut_motor(0)__PA ,
            pad => se_indut_motor(0)_PAD );
        Properties:
        {
        }

    Pin : Name = se_indut_porta(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: AUTO
            Interrupt generated: True
            Interrupt mode: FALLING
            Drive mode: RES_PULL_UP
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, PORT_INTERRUPT
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => se_indut_porta(0)__PA ,
            pad => se_indut_porta(0)_PAD );
        Properties:
        {
        }

    Pin : Name = bt_liga(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: RES_PULL_UP
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => bt_liga(0)__PA ,
            pad => bt_liga(0)_PAD );
        Properties:
        {
        }

    Pin : Name = si_liga(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => si_liga(0)__PA ,
            pad => si_liga(0)_PAD );
        Properties:
        {
        }

    Pin : Name = si_desl(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => si_desl(0)__PA ,
            pad => si_desl(0)_PAD );
        Properties:
        {
        }

    Pin : Name = si_rearme(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => si_rearme(0)__PA ,
            pad => si_rearme(0)_PAD );
        Properties:
        {
        }

    Pin : Name = si_emerg(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => si_emerg(0)__PA ,
            pad => si_emerg(0)_PAD );
        Properties:
        {
        }

    Pin : Name = si_alerta(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => si_alerta(0)__PA ,
            pad => si_alerta(0)_PAD );
        Properties:
        {
        }

    Pin : Name = al_sonoro(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => al_sonoro(0)__PA ,
            pad => al_sonoro(0)_PAD );
        Properties:
        {
        }

    Pin : Name = bt_desl(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: RES_PULL_UP
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => bt_desl(0)__PA ,
            pad => bt_desl(0)_PAD );
        Properties:
        {
        }

    Pin : Name = bt_rearme(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: RES_PULL_UP
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => bt_rearme(0)__PA ,
            pad => bt_rearme(0)_PAD );
        Properties:
        {
        }

    Pin : Name = bt_emerg(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: AUTO
            Interrupt generated: True
            Interrupt mode: FALLING
            Drive mode: RES_PULL_UP
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, PORT_INTERRUPT
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => bt_emerg(0)__PA ,
            pad => bt_emerg(0)_PAD );
        Properties:
        {
        }

    Pin : Name = ct_motor(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => ct_motor(0)__PA ,
            pad => ct_motor(0)_PAD );
        Properties:
        {
        }

    Pin : Name = se_temp_motor(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => se_temp_motor(0)__PA ,
            analog_term => Net_2517 ,
            pad => se_temp_motor(0)_PAD ,
            pin_input => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_0\ );
        Properties:
        {
        }

    Pin : Name = se_temp_quadro(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => se_temp_quadro(0)__PA ,
            analog_term => Net_2718 ,
            pad => se_temp_quadro(0)_PAD ,
            pin_input => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_1\ );
        Properties:
        {
        }

    Pin : Name = bt_test(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: RES_PULL_UP
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => bt_test(0)__PA ,
            pad => bt_test(0)_PAD );
        Properties:
        {
        }
    </CYPRESSTAG>
    <CYPRESSTAG name="Macrocell listing" icon="FILE_RPT_EQUATION">

    ------------------------------------------------------------
    Macrocell listing
    ------------------------------------------------------------

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_is_active_split\, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:ch_addr_5\
            + \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:ch_addr_4\
            + \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:ch_addr_3\
            + \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:ch_addr_2\
            + !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:ch_addr_1\
            + \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:ch_addr_1\
            + !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ * 
              \ADC_SAR_Seq:ch_addr_0\
            + \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ * 
              !\ADC_SAR_Seq:ch_addr_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active_split\ (fanout=1)

    MacroCell: Name=Net_222, Mode=(Combinatorial)
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\ProbeUART:BUART:txn\
        );
        Output = Net_222 (fanout=1)

    MacroCell: Name=\ProbeUART:BUART:counter_load_not\, Mode=(Combinatorial)
        Total # of inputs        : 4
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\ProbeUART:BUART:tx_state_1\ * !\ProbeUART:BUART:tx_state_0\ * 
              \ProbeUART:BUART:tx_bitclk_enable_pre\
            + !\ProbeUART:BUART:tx_state_1\ * !\ProbeUART:BUART:tx_state_0\ * 
              !\ProbeUART:BUART:tx_state_2\
        );
        Output = \ProbeUART:BUART:counter_load_not\ (fanout=1)

    MacroCell: Name=\ProbeUART:BUART:tx_status_0\, Mode=(Combinatorial)
        Total # of inputs        : 5
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\ProbeUART:BUART:tx_state_1\ * !\ProbeUART:BUART:tx_state_0\ * 
              \ProbeUART:BUART:tx_bitclk_enable_pre\ * 
              \ProbeUART:BUART:tx_fifo_empty\ * \ProbeUART:BUART:tx_state_2\
        );
        Output = \ProbeUART:BUART:tx_status_0\ (fanout=1)

    MacroCell: Name=\ProbeUART:BUART:tx_status_2\, Mode=(Combinatorial)
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\ProbeUART:BUART:tx_fifo_notfull\
        );
        Output = \ProbeUART:BUART:tx_status_2\ (fanout=1)

    MacroCell: Name=\ProbeUART:BUART:rx_counter_load\, Mode=(Combinatorial)
        Total # of inputs        : 4
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              !\ProbeUART:BUART:rx_state_0\ * !\ProbeUART:BUART:rx_state_3\ * 
              !\ProbeUART:BUART:rx_state_2\
        );
        Output = \ProbeUART:BUART:rx_counter_load\ (fanout=1)

    MacroCell: Name=\ProbeUART:BUART:rx_postpoll\, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \ProbeUART:BUART:pollcount_1\
            + \ProbeUART:BUART:pollcount_0\ * Net_227_SYNCOUT
        );
        Output = \ProbeUART:BUART:rx_postpoll\ (fanout=1)

    MacroCell: Name=\ProbeUART:BUART:rx_status_4\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ProbeUART:BUART:rx_load_fifo\ * \ProbeUART:BUART:rx_fifofull\
        );
        Output = \ProbeUART:BUART:rx_status_4\ (fanout=1)

    MacroCell: Name=\ProbeUART:BUART:rx_status_5\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ProbeUART:BUART:rx_fifonotempty\ * 
              \ProbeUART:BUART:rx_state_stop1_reg\
        );
        Output = \ProbeUART:BUART:rx_status_5\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\, Mode=(Combinatorial)
        Total # of inputs        : 9
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        !(
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:ch_addr_5\
            + !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:ch_addr_4\
            + !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:ch_addr_3\
            + !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:ch_addr_2\
            + \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active_split\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ (fanout=64)
        Properties               : 
        {
            soft = 1
        }

    MacroCell: Name=\ADC_SAR_Seq:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_2814 * !\ADC_SAR_Seq:bSAR_SEQ:load_period\
        );
        Output = \ADC_SAR_Seq:bSAR_SEQ:cnt_enable\ (fanout=1)

    MacroCell: Name=\ProbeUART:BUART:txn\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              \ProbeUART:BUART:txn\ * \ProbeUART:BUART:tx_state_1\ * 
              !\ProbeUART:BUART:tx_bitclk\
            + \ProbeUART:BUART:txn\ * \ProbeUART:BUART:tx_state_2\
            + !\ProbeUART:BUART:tx_state_1\ * \ProbeUART:BUART:tx_state_0\ * 
              !\ProbeUART:BUART:tx_shift_out\ * !\ProbeUART:BUART:tx_state_2\
            + !\ProbeUART:BUART:tx_state_1\ * \ProbeUART:BUART:tx_state_0\ * 
              !\ProbeUART:BUART:tx_state_2\ * !\ProbeUART:BUART:tx_bitclk\
            + \ProbeUART:BUART:tx_state_1\ * !\ProbeUART:BUART:tx_state_0\ * 
              !\ProbeUART:BUART:tx_shift_out\ * !\ProbeUART:BUART:tx_state_2\ * 
              !\ProbeUART:BUART:tx_counter_dp\ * \ProbeUART:BUART:tx_bitclk\
        );
        Output = \ProbeUART:BUART:txn\ (fanout=2)

    MacroCell: Name=\ProbeUART:BUART:tx_state_1\, Mode=(T-Register)
        Total # of inputs        : 6
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              \ProbeUART:BUART:tx_state_1\ * \ProbeUART:BUART:tx_state_0\ * 
              \ProbeUART:BUART:tx_bitclk_enable_pre\ * 
              \ProbeUART:BUART:tx_state_2\
            + \ProbeUART:BUART:tx_state_1\ * !\ProbeUART:BUART:tx_state_2\ * 
              \ProbeUART:BUART:tx_counter_dp\ * \ProbeUART:BUART:tx_bitclk\
            + \ProbeUART:BUART:tx_state_0\ * !\ProbeUART:BUART:tx_state_2\ * 
              \ProbeUART:BUART:tx_bitclk\
        );
        Output = \ProbeUART:BUART:tx_state_1\ (fanout=8)

    MacroCell: Name=\ProbeUART:BUART:tx_state_0\, Mode=(T-Register)
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\ProbeUART:BUART:tx_state_1\ * !\ProbeUART:BUART:tx_state_0\ * 
              \ProbeUART:BUART:tx_bitclk_enable_pre\ * 
              !\ProbeUART:BUART:tx_fifo_empty\
            + !\ProbeUART:BUART:tx_state_1\ * !\ProbeUART:BUART:tx_state_0\ * 
              !\ProbeUART:BUART:tx_fifo_empty\ * 
              !\ProbeUART:BUART:tx_state_2\
            + \ProbeUART:BUART:tx_state_1\ * \ProbeUART:BUART:tx_state_0\ * 
              \ProbeUART:BUART:tx_bitclk_enable_pre\ * 
              \ProbeUART:BUART:tx_fifo_empty\ * \ProbeUART:BUART:tx_state_2\
            + \ProbeUART:BUART:tx_state_0\ * !\ProbeUART:BUART:tx_state_2\ * 
              \ProbeUART:BUART:tx_bitclk\
        );
        Output = \ProbeUART:BUART:tx_state_0\ (fanout=8)

    MacroCell: Name=\ProbeUART:BUART:tx_state_2\, Mode=(T-Register)
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\ProbeUART:BUART:tx_state_1\ * !\ProbeUART:BUART:tx_state_0\ * 
              \ProbeUART:BUART:tx_bitclk_enable_pre\ * 
              \ProbeUART:BUART:tx_state_2\
            + \ProbeUART:BUART:tx_state_1\ * \ProbeUART:BUART:tx_state_0\ * 
              \ProbeUART:BUART:tx_bitclk_enable_pre\ * 
              \ProbeUART:BUART:tx_state_2\
            + \ProbeUART:BUART:tx_state_1\ * \ProbeUART:BUART:tx_state_0\ * 
              !\ProbeUART:BUART:tx_state_2\ * \ProbeUART:BUART:tx_bitclk\
            + \ProbeUART:BUART:tx_state_1\ * !\ProbeUART:BUART:tx_state_2\ * 
              \ProbeUART:BUART:tx_counter_dp\ * \ProbeUART:BUART:tx_bitclk\
        );
        Output = \ProbeUART:BUART:tx_state_2\ (fanout=7)

    MacroCell: Name=\ProbeUART:BUART:tx_bitclk\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\ProbeUART:BUART:tx_state_1\ * !\ProbeUART:BUART:tx_state_0\ * 
              \ProbeUART:BUART:tx_state_2\
            + !\ProbeUART:BUART:tx_bitclk_enable_pre\
        );
        Output = \ProbeUART:BUART:tx_bitclk\ (fanout=4)

    MacroCell: Name=\ProbeUART:BUART:tx_ctrl_mark_last\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \ProbeUART:BUART:tx_ctrl_mark_last\ (fanout=8)

    MacroCell: Name=\ProbeUART:BUART:rx_state_0\, Mode=(T-Register)
        Total # of inputs        : 11
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              !\ProbeUART:BUART:rx_state_0\ * 
              \ProbeUART:BUART:rx_bitclk_enable\ * 
              !\ProbeUART:BUART:rx_state_3\ * \ProbeUART:BUART:rx_state_2\ * 
              !\ProbeUART:BUART:pollcount_1\ * !\ProbeUART:BUART:pollcount_0\
            + !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              !\ProbeUART:BUART:rx_state_0\ * 
              \ProbeUART:BUART:rx_bitclk_enable\ * 
              !\ProbeUART:BUART:rx_state_3\ * \ProbeUART:BUART:rx_state_2\ * 
              !\ProbeUART:BUART:pollcount_1\ * !Net_227_SYNCOUT
            + !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              \ProbeUART:BUART:rx_state_0\ * !\ProbeUART:BUART:rx_state_3\ * 
              !\ProbeUART:BUART:rx_state_2\ * !\ProbeUART:BUART:rx_count_6\ * 
              !\ProbeUART:BUART:rx_count_5\
            + !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              \ProbeUART:BUART:rx_state_0\ * !\ProbeUART:BUART:rx_state_3\ * 
              !\ProbeUART:BUART:rx_state_2\ * !\ProbeUART:BUART:rx_count_6\ * 
              !\ProbeUART:BUART:rx_count_4\
        );
        Output = \ProbeUART:BUART:rx_state_0\ (fanout=8)

    MacroCell: Name=\ProbeUART:BUART:rx_load_fifo\, Mode=(D-Register)
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              !\ProbeUART:BUART:rx_state_0\ * 
              \ProbeUART:BUART:rx_bitclk_enable\ * 
              \ProbeUART:BUART:rx_state_3\ * !\ProbeUART:BUART:rx_state_2\
            + !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              \ProbeUART:BUART:rx_state_0\ * !\ProbeUART:BUART:rx_state_3\ * 
              !\ProbeUART:BUART:rx_state_2\ * !\ProbeUART:BUART:rx_count_6\ * 
              !\ProbeUART:BUART:rx_count_5\
            + !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              \ProbeUART:BUART:rx_state_0\ * !\ProbeUART:BUART:rx_state_3\ * 
              !\ProbeUART:BUART:rx_state_2\ * !\ProbeUART:BUART:rx_count_6\ * 
              !\ProbeUART:BUART:rx_count_4\
        );
        Output = \ProbeUART:BUART:rx_load_fifo\ (fanout=2)

    MacroCell: Name=\ProbeUART:BUART:rx_state_3\, Mode=(T-Register)
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              !\ProbeUART:BUART:rx_state_0\ * 
              \ProbeUART:BUART:rx_bitclk_enable\ * 
              \ProbeUART:BUART:rx_state_3\ * \ProbeUART:BUART:rx_state_2\
            + !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              \ProbeUART:BUART:rx_state_0\ * !\ProbeUART:BUART:rx_state_3\ * 
              !\ProbeUART:BUART:rx_state_2\ * !\ProbeUART:BUART:rx_count_6\ * 
              !\ProbeUART:BUART:rx_count_5\
            + !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              \ProbeUART:BUART:rx_state_0\ * !\ProbeUART:BUART:rx_state_3\ * 
              !\ProbeUART:BUART:rx_state_2\ * !\ProbeUART:BUART:rx_count_6\ * 
              !\ProbeUART:BUART:rx_count_4\
        );
        Output = \ProbeUART:BUART:rx_state_3\ (fanout=7)

    MacroCell: Name=\ProbeUART:BUART:rx_state_2\, Mode=(T-Register)
        Total # of inputs        : 10
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              !\ProbeUART:BUART:rx_state_0\ * 
              \ProbeUART:BUART:rx_bitclk_enable\ * 
              \ProbeUART:BUART:rx_state_3\
            + !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              !\ProbeUART:BUART:rx_state_0\ * 
              \ProbeUART:BUART:rx_bitclk_enable\ * 
              \ProbeUART:BUART:rx_state_2\
            + !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              !\ProbeUART:BUART:rx_state_0\ * !\ProbeUART:BUART:rx_state_3\ * 
              !\ProbeUART:BUART:rx_state_2\ * \ProbeUART:BUART:rx_last\ * 
              !Net_227_SYNCOUT
            + !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              \ProbeUART:BUART:rx_state_0\ * !\ProbeUART:BUART:rx_state_3\ * 
              !\ProbeUART:BUART:rx_state_2\ * !\ProbeUART:BUART:rx_count_6\ * 
              !\ProbeUART:BUART:rx_count_5\
            + !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              \ProbeUART:BUART:rx_state_0\ * !\ProbeUART:BUART:rx_state_3\ * 
              !\ProbeUART:BUART:rx_state_2\ * !\ProbeUART:BUART:rx_count_6\ * 
              !\ProbeUART:BUART:rx_count_4\
        );
        Output = \ProbeUART:BUART:rx_state_2\ (fanout=7)

    MacroCell: Name=\ProbeUART:BUART:rx_bitclk_enable\, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\ProbeUART:BUART:rx_count_2\ * !\ProbeUART:BUART:rx_count_1\ * 
              !\ProbeUART:BUART:rx_count_0\
        );
        Output = \ProbeUART:BUART:rx_bitclk_enable\ (fanout=6)

    MacroCell: Name=\ProbeUART:BUART:rx_state_stop1_reg\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              !\ProbeUART:BUART:rx_state_0\ * \ProbeUART:BUART:rx_state_3\ * 
              \ProbeUART:BUART:rx_state_2\
        );
        Output = \ProbeUART:BUART:rx_state_stop1_reg\ (fanout=1)

    MacroCell: Name=\ProbeUART:BUART:pollcount_1\, Mode=(D-Register)
        Total # of inputs        : 5
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\ProbeUART:BUART:rx_count_2\ * !\ProbeUART:BUART:rx_count_1\ * 
              !\ProbeUART:BUART:pollcount_1\ * \ProbeUART:BUART:pollcount_0\ * 
              Net_227_SYNCOUT
            + !\ProbeUART:BUART:rx_count_2\ * !\ProbeUART:BUART:rx_count_1\ * 
              \ProbeUART:BUART:pollcount_1\ * !\ProbeUART:BUART:pollcount_0\
            + !\ProbeUART:BUART:rx_count_2\ * !\ProbeUART:BUART:rx_count_1\ * 
              \ProbeUART:BUART:pollcount_1\ * !Net_227_SYNCOUT
        );
        Output = \ProbeUART:BUART:pollcount_1\ (fanout=4)

    MacroCell: Name=\ProbeUART:BUART:pollcount_0\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\ProbeUART:BUART:rx_count_2\ * !\ProbeUART:BUART:rx_count_1\ * 
              !\ProbeUART:BUART:pollcount_0\ * Net_227_SYNCOUT
            + !\ProbeUART:BUART:rx_count_2\ * !\ProbeUART:BUART:rx_count_1\ * 
              \ProbeUART:BUART:pollcount_0\ * !Net_227_SYNCOUT
        );
        Output = \ProbeUART:BUART:pollcount_0\ (fanout=5)

    MacroCell: Name=\ProbeUART:BUART:rx_status_3\, Mode=(D-Register)
        Total # of inputs        : 8
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              !\ProbeUART:BUART:rx_state_0\ * 
              \ProbeUART:BUART:rx_bitclk_enable\ * 
              \ProbeUART:BUART:rx_state_3\ * \ProbeUART:BUART:rx_state_2\ * 
              !\ProbeUART:BUART:pollcount_1\ * !\ProbeUART:BUART:pollcount_0\
            + !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              !\ProbeUART:BUART:rx_state_0\ * 
              \ProbeUART:BUART:rx_bitclk_enable\ * 
              \ProbeUART:BUART:rx_state_3\ * \ProbeUART:BUART:rx_state_2\ * 
              !\ProbeUART:BUART:pollcount_1\ * !Net_227_SYNCOUT
        );
        Output = \ProbeUART:BUART:rx_status_3\ (fanout=1)

    MacroCell: Name=\ProbeUART:BUART:rx_last\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_227_SYNCOUT
        );
        Output = \ProbeUART:BUART:rx_last\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:ch_addr_5\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ (fanout=66)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:ch_addr_4\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ (fanout=66)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:ch_addr_3\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ (fanout=66)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:ch_addr_2\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ (fanout=66)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:ch_addr_1\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ (fanout=65)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:ch_addr_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ (fanout=65)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_0\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_0\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_1\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_1\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_2\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_2\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_3\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_3\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_4\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_4\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_5\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_5\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_6\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_6\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_7\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_7\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_8\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_8\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_9\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_9\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_10\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_10\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_11\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_11\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_12\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_12\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_13\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_13\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_14\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_14\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_15\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_15\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_16\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_16\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_17\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_17\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_18\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_18\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_19\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_19\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_20\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_20\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_21\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_21\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_22\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_22\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_23\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_23\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_24\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_24\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_25\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_25\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_26\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_26\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_27\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_27\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_28\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_28\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_29\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_29\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_30\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_30\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_31\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_31\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_32\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_32\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_33\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_33\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_34\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_34\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_35\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_35\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_36\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_36\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_37\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_37\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_38\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_38\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_39\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_39\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_40\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_40\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_41\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_41\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_42\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_42\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_43\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_43\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_44\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_44\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_45\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_45\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_46\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_46\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_47\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_47\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_48\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_48\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_49\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_49\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_50\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_50\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_51\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_51\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_52\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_52\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_53\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_53\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_54\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_54\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_55\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_55\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_56\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_56\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_57\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_57\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_58\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_58\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_59\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_59\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_60\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_60\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_61\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_61\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_62\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_62\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_63\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_63\ (fanout=1)

    MacroCell: Name=Net_2813, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: PosEdge(\ADC_SAR_Seq:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:bSAR_SEQ:bus_clk_nrq_reg\ * 
              !\ADC_SAR_Seq:bSAR_SEQ:nrq_reg\
        );
        Output = Net_2813 (fanout=3)

    MacroCell: Name=\ADC_SAR_Seq:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \ADC_SAR_Seq:bSAR_SEQ:bus_clk_nrq_reg\ * !Net_2813
            + \ADC_SAR_Seq:Net_3935\
        );
        Output = \ADC_SAR_Seq:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)

    MacroCell: Name=\ADC_SAR_Seq:bSAR_SEQ:nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: PosEdge(\ADC_SAR_Seq:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \ADC_SAR_Seq:bSAR_SEQ:nrq_reg\ (fanout=1)
    </CYPRESSTAG>
    <CYPRESSTAG name="Datapath listing">

    ------------------------------------------------------------
    Datapath listing
    ------------------------------------------------------------

    datapathcell: Name =\ProbeUART:BUART:sTX:TxShifter:u0\
        PORT MAP (
            clock => \ProbeUART:Net_9\ ,
            cs_addr_2 => \ProbeUART:BUART:tx_state_1\ ,
            cs_addr_1 => \ProbeUART:BUART:tx_state_0\ ,
            cs_addr_0 => \ProbeUART:BUART:tx_bitclk_enable_pre\ ,
            so_comb => \ProbeUART:BUART:tx_shift_out\ ,
            f0_bus_stat_comb => \ProbeUART:BUART:tx_fifo_notfull\ ,
            f0_blk_stat_comb => \ProbeUART:BUART:tx_fifo_empty\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000000000000000000000000000000000000000000000000000011000000000000000000000000000010010000000000000000000000000000000000000011111111000000001111111111111111000000000000000001000100111100000000000000001100"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    datapathcell: Name =\ProbeUART:BUART:sTX:sCLOCK:TxBitClkGen\
        PORT MAP (
            clock => \ProbeUART:Net_9\ ,
            cs_addr_0 => \ProbeUART:BUART:counter_load_not\ ,
            ce0_reg => \ProbeUART:BUART:tx_bitclk_enable_pre\ ,
            ce1_reg => \ProbeUART:BUART:tx_counter_dp\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "1010100001000000001000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111000000001111111100000111001000000100000000000101111100000000000000001000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    datapathcell: Name =\ProbeUART:BUART:sRX:RxShifter:u0\
        PORT MAP (
            clock => \ProbeUART:Net_9\ ,
            cs_addr_2 => \ProbeUART:BUART:tx_ctrl_mark_last\ ,
            cs_addr_1 => \ProbeUART:BUART:rx_state_0\ ,
            cs_addr_0 => \ProbeUART:BUART:rx_bitclk_enable\ ,
            route_si => \ProbeUART:BUART:rx_postpoll\ ,
            f0_load => \ProbeUART:BUART:rx_load_fifo\ ,
            f0_bus_stat_comb => \ProbeUART:BUART:rx_fifonotempty\ ,
            f0_blk_stat_comb => \ProbeUART:BUART:rx_fifofull\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000000000000000000000000000000000000000000000000001001000000000100000000000000010000001100000001000000000000000100100001000011111111000000001111111111111111101000000110001001000001111100000000000000001100"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Status register listing">

    ------------------------------------------------------------
    Status register listing
    ------------------------------------------------------------

    statuscell: Name =\ADC_SAR_Seq:bSAR_SEQ:EOCSts\
        PORT MAP (
            clock => \ADC_SAR_Seq:clock\ ,
            status_0 => Net_2813 ,
            clk_en => \ADC_SAR_Seq:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_force_order = 1
            cy_md_select = "00000001"
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\ADC_SAR_Seq:bSAR_SEQ:enable\)
    </CYPRESSTAG>
    <CYPRESSTAG name="StatusI register listing">

    ------------------------------------------------------------
    StatusI register listing
    ------------------------------------------------------------

    statusicell: Name =\ProbeUART:BUART:sTX:TxSts\
        PORT MAP (
            clock => \ProbeUART:Net_9\ ,
            status_3 => \ProbeUART:BUART:tx_fifo_notfull\ ,
            status_2 => \ProbeUART:BUART:tx_status_2\ ,
            status_1 => \ProbeUART:BUART:tx_fifo_empty\ ,
            status_0 => \ProbeUART:BUART:tx_status_0\ ,
            interrupt => Net_239 );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "0000001"
        }
        Clock Polarity: Active High
        Clock Enable: True

    statusicell: Name =\ProbeUART:BUART:sRX:RxSts\
        PORT MAP (
            clock => \ProbeUART:Net_9\ ,
            status_5 => \ProbeUART:BUART:rx_status_5\ ,
            status_4 => \ProbeUART:BUART:rx_status_4\ ,
            status_3 => \ProbeUART:BUART:rx_status_3\ ,
            interrupt => Net_240 );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "1011111"
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Sync listing">

    ------------------------------------------------------------
    Sync listing
    ------------------------------------------------------------

    synccell: Name =\ADC_SAR_Seq:Sync:genblk1[0]:INST\
        PORT MAP (
            clock => ClockBlock_BUS_CLK ,
            in => \ADC_SAR_Seq:nrq\ ,
            out => \ADC_SAR_Seq:Net_3935\ );
        Clock Polarity: Active High
        Clock Enable: True

    synccell: Name =ProbeUART_Rx(0)_SYNC
        PORT MAP (
            in => Net_227 ,
            out => Net_227_SYNCOUT ,
            clock => ClockBlock_BUS_CLK );
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Control register listing">

    ------------------------------------------------------------
    Control register listing
    ------------------------------------------------------------

    controlcell: Name =\LED_Status:Sync:ctrl_reg\
        PORT MAP (
            control_7 => \LED_Status:control_7\ ,
            control_6 => \LED_Status:control_6\ ,
            control_5 => \LED_Status:control_5\ ,
            control_4 => \LED_Status:control_4\ ,
            control_3 => \LED_Status:control_3\ ,
            control_2 => \LED_Status:control_2\ ,
            control_1 => Net_213 ,
            control_0 => Net_167 );
        Properties:
        {
            cy_ctrl_mode_0 = "00000000"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Enable: True

    controlcell: Name =\ADC_SAR_Seq:bSAR_SEQ:CtrlReg\
        PORT MAP (
            clock => \ADC_SAR_Seq:clock\ ,
            control_7 => \ADC_SAR_Seq:bSAR_SEQ:control_7\ ,
            control_6 => \ADC_SAR_Seq:bSAR_SEQ:control_6\ ,
            control_5 => \ADC_SAR_Seq:bSAR_SEQ:control_5\ ,
            control_4 => \ADC_SAR_Seq:bSAR_SEQ:control_4\ ,
            control_3 => \ADC_SAR_Seq:bSAR_SEQ:control_3\ ,
            control_2 => \ADC_SAR_Seq:bSAR_SEQ:control_2\ ,
            control_1 => \ADC_SAR_Seq:bSAR_SEQ:load_period\ ,
            control_0 => \ADC_SAR_Seq:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_ctrl_mode_0 = "00000111"
            cy_ctrl_mode_1 = "00000110"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Count7 listing">

    ------------------------------------------------------------
    Count7 listing
    ------------------------------------------------------------

    count7cell: Name =\ProbeUART:BUART:sRX:RxBitCounter\
        PORT MAP (
            clock => \ProbeUART:Net_9\ ,
            load => \ProbeUART:BUART:rx_counter_load\ ,
            count_6 => \ProbeUART:BUART:rx_count_6\ ,
            count_5 => \ProbeUART:BUART:rx_count_5\ ,
            count_4 => \ProbeUART:BUART:rx_count_4\ ,
            count_3 => \ProbeUART:BUART:rx_count_3\ ,
            count_2 => \ProbeUART:BUART:rx_count_2\ ,
            count_1 => \ProbeUART:BUART:rx_count_1\ ,
            count_0 => \ProbeUART:BUART:rx_count_0\ ,
            tc => \ProbeUART:BUART:rx_count7_tc\ );
        Properties:
        {
            cy_alt_mode = 0
            cy_init_value = "0000000"
            cy_period = "1110010"
            cy_route_en = 1
            cy_route_ld = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    count7cell: Name =\ADC_SAR_Seq:bSAR_SEQ:ChannelCounter\
        PORT MAP (
            clock => \ADC_SAR_Seq:clock\ ,
            load => \ADC_SAR_Seq:bSAR_SEQ:load_period\ ,
            enable => \ADC_SAR_Seq:bSAR_SEQ:cnt_enable\ ,
            count_6 => \ADC_SAR_Seq:bSAR_SEQ:count_6\ ,
            count_5 => \ADC_SAR_Seq:ch_addr_5\ ,
            count_4 => \ADC_SAR_Seq:ch_addr_4\ ,
            count_3 => \ADC_SAR_Seq:ch_addr_3\ ,
            count_2 => \ADC_SAR_Seq:ch_addr_2\ ,
            count_1 => \ADC_SAR_Seq:ch_addr_1\ ,
            count_0 => \ADC_SAR_Seq:ch_addr_0\ ,
            tc => \ADC_SAR_Seq:bSAR_SEQ:cnt_tc\ ,
            clk_en => \ADC_SAR_Seq:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_alt_mode = 0
            cy_init_value = "0000000"
            cy_period = "0000001"
            cy_route_en = 1
            cy_route_ld = 1
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\ADC_SAR_Seq:bSAR_SEQ:enable\)
    </CYPRESSTAG>
    <CYPRESSTAG name="DRQ listing">

    ------------------------------------------------------------
    DRQ listing
    ------------------------------------------------------------

    drqcell: Name =\ADC_SAR_Seq:TempBuf\
        PORT MAP (
            dmareq => \ADC_SAR_Seq:Net_3830\ ,
            termin => zero ,
            termout => \ADC_SAR_Seq:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }

    drqcell: Name =\ADC_SAR_Seq:FinalBuf\
        PORT MAP (
            dmareq => \ADC_SAR_Seq:Net_3698\ ,
            termin => zero ,
            termout => \ADC_SAR_Seq:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
    </CYPRESSTAG>
    <CYPRESSTAG name="Interrupt listing">

    ------------------------------------------------------------
    Interrupt listing
    ------------------------------------------------------------

    interrupt: Name =ProbeUART_TxISR
        PORT MAP (
            interrupt => Net_239 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =ProbeUART_RxISR
        PORT MAP (
            interrupt => Net_240 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =bt_emerg_int
        PORT MAP (
            interrupt => Net_1748 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =se_indut_porta_int
        PORT MAP (
            interrupt => Net_1732 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =se_indut_motor_int
        PORT MAP (
            interrupt => Net_1733 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\ADC_SAR_Seq:IRQ\
        PORT MAP (
            interrupt => Net_2813 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
    </CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Technology mapping summary" expanded>

------------------------------------------------------------
Technology mapping summary
------------------------------------------------------------

Resource Type                 : Used : Free :  Max :  % Used
============================================================
Digital Clocks                :    2 :    6 :    8 : 25.00 %
Analog Clocks                 :    0 :    4 :    4 :  0.00 %
CapSense Buffers              :    0 :    2 :    2 :  0.00 %
Digital Filter Block          :    0 :    1 :    1 :  0.00 %
Interrupts                    :    6 :   26 :   32 : 18.75 %
IO                            :   32 :   40 :   72 : 44.44 %
Segment LCD                   :    0 :    1 :    1 :  0.00 %
I2C                           :    0 :    1 :    1 :  0.00 %
USB                           :    0 :    1 :    1 :  0.00 %
DMA Channels                  :    2 :   22 :   24 :  8.33 %
Timer                         :    0 :    4 :    4 :  0.00 %
UDB                           :      :      :      :        
  Macrocells                  :  100 :   92 :  192 : 52.08 %
  Unique P-terms              :  132 :  252 :  384 : 34.38 %
  Total P-terms               :  141 :      :      :        
  Datapath Cells              :    3 :   21 :   24 : 12.50 %
  Status Cells                :    6 :   18 :   24 : 25.00 %
    Status Registers          :    1 :      :      :        
    StatusI Registers         :    2 :      :      :        
    Sync Cells (x2)           :    1 :      :      :        
    Routed Count7 Load/Enable :    2 :      :      :        
  Control Cells               :    4 :   20 :   24 : 16.67 %
    Control Registers         :    2 :      :      :        
    Count7 Cells              :    2 :      :      :        
Opamp                         :    0 :    4 :    4 :  0.00 %
Comparator                    :    0 :    4 :    4 :  0.00 %
Delta-Sigma ADC               :    0 :    1 :    1 :  0.00 %
LPF                           :    0 :    2 :    2 :  0.00 %
SAR ADC                       :    1 :    1 :    2 : 50.00 %
Analog (SC/CT) Blocks         :    0 :    4 :    4 :  0.00 %
DAC                           :      :      :      :        
  VIDAC                       :    0 :    4 :    4 :  0.00 %
</CYPRESSTAG>
Technology Mapping: Elapsed time ==> 0s.341ms
Tech Mapping phase: Elapsed time ==> 0s.442ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Placement">
Info: apr.M0002: Analog signal "Net_2743" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2762" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2792" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2771" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2772" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2795" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2775" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2776" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2811" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2779" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2780" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2812" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2721" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2722" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2782" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2725" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2726" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2783" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2729" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2730" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2784" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2733" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2734" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2785" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2737" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2738" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2786" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2742" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2744" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2787" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2747" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2748" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2788" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2751" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2752" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2789" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2755" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2756" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2790" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2759" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2760" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2791" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2764" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2766" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2793" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2769" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2794" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2796" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2797" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2798" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2799" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2800" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2801" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2802" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2803" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2804" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2805" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2806" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2807" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2808" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2809" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_2810" is connected to one terminal only. (App=cydsfit)
Initial Analog Placement Results:
IO_5@[IOP=(15)][IoId=(5)] : PB_2(0) (fixed)
IO_2@[IOP=(6)][IoId=(2)] : PB_3(0) (fixed)
IO_0@[IOP=(2)][IoId=(0)] : \LCD_Disp:LCDPort(0)\ (fixed)
IO_1@[IOP=(2)][IoId=(1)] : \LCD_Disp:LCDPort(1)\ (fixed)
IO_2@[IOP=(2)][IoId=(2)] : \LCD_Disp:LCDPort(2)\ (fixed)
IO_3@[IOP=(2)][IoId=(3)] : \LCD_Disp:LCDPort(3)\ (fixed)
IO_4@[IOP=(2)][IoId=(4)] : \LCD_Disp:LCDPort(4)\ (fixed)
IO_5@[IOP=(2)][IoId=(5)] : \LCD_Disp:LCDPort(5)\ (fixed)
IO_6@[IOP=(2)][IoId=(6)] : \LCD_Disp:LCDPort(6)\ (fixed)
IO_5@[IOP=(0)][IoId=(5)] : al_sonoro(0) (fixed)
IO_1@[IOP=(3)][IoId=(1)] : bt_desl(0) (fixed)
IO_3@[IOP=(3)][IoId=(3)] : bt_emerg(0) (fixed)
IO_0@[IOP=(3)][IoId=(0)] : bt_liga(0) (fixed)
IO_2@[IOP=(3)][IoId=(2)] : bt_rearme(0) (fixed)
IO_1@[IOP=(6)][IoId=(1)] : bt_test(0) (fixed)
IO_0@[IOP=(4)][IoId=(0)] : ct_motor(0) (fixed)
IO_2@[IOP=(1)][IoId=(2)] : se_indut_motor(0) (fixed)
IO_7@[IOP=(2)][IoId=(7)] : se_indut_porta(0) (fixed)
IO_6@[IOP=(3)][IoId=(6)] : se_temp_motor(0) (fixed)
IO_7@[IOP=(3)][IoId=(7)] : se_temp_quadro(0) (fixed)
IO_4@[IOP=(0)][IoId=(4)] : si_alerta(0) (fixed)
IO_1@[IOP=(0)][IoId=(1)] : si_desl(0) (fixed)
IO_3@[IOP=(0)][IoId=(3)] : si_emerg(0) (fixed)
IO_0@[IOP=(0)][IoId=(0)] : si_liga(0) (fixed)
IO_2@[IOP=(0)][IoId=(2)] : si_rearme(0) (fixed)
SAR[1]@[FFB(SAR,1)] : \ADC_SAR_Seq:SAR:ADC_SAR\
Vref[13]@[FFB(Vref,13)] : \ADC_SAR_Seq:SAR:vRef_Vdda_1\
Log: apr.M0058: The analog placement iterative improvement is 35% done. (App=cydsfit)
Log: apr.M0058: The analog placement iterative improvement is 93% done. (App=cydsfit)
Analog Placement Results:
IO_5@[IOP=(15)][IoId=(5)] : PB_2(0) (fixed)
IO_2@[IOP=(6)][IoId=(2)] : PB_3(0) (fixed)
IO_0@[IOP=(2)][IoId=(0)] : \LCD_Disp:LCDPort(0)\ (fixed)
IO_1@[IOP=(2)][IoId=(1)] : \LCD_Disp:LCDPort(1)\ (fixed)
IO_2@[IOP=(2)][IoId=(2)] : \LCD_Disp:LCDPort(2)\ (fixed)
IO_3@[IOP=(2)][IoId=(3)] : \LCD_Disp:LCDPort(3)\ (fixed)
IO_4@[IOP=(2)][IoId=(4)] : \LCD_Disp:LCDPort(4)\ (fixed)
IO_5@[IOP=(2)][IoId=(5)] : \LCD_Disp:LCDPort(5)\ (fixed)
IO_6@[IOP=(2)][IoId=(6)] : \LCD_Disp:LCDPort(6)\ (fixed)
IO_5@[IOP=(0)][IoId=(5)] : al_sonoro(0) (fixed)
IO_1@[IOP=(3)][IoId=(1)] : bt_desl(0) (fixed)
IO_3@[IOP=(3)][IoId=(3)] : bt_emerg(0) (fixed)
IO_0@[IOP=(3)][IoId=(0)] : bt_liga(0) (fixed)
IO_2@[IOP=(3)][IoId=(2)] : bt_rearme(0) (fixed)
IO_1@[IOP=(6)][IoId=(1)] : bt_test(0) (fixed)
IO_0@[IOP=(4)][IoId=(0)] : ct_motor(0) (fixed)
IO_2@[IOP=(1)][IoId=(2)] : se_indut_motor(0) (fixed)
IO_7@[IOP=(2)][IoId=(7)] : se_indut_porta(0) (fixed)
IO_6@[IOP=(3)][IoId=(6)] : se_temp_motor(0) (fixed)
IO_7@[IOP=(3)][IoId=(7)] : se_temp_quadro(0) (fixed)
IO_4@[IOP=(0)][IoId=(4)] : si_alerta(0) (fixed)
IO_1@[IOP=(0)][IoId=(1)] : si_desl(0) (fixed)
IO_3@[IOP=(0)][IoId=(3)] : si_emerg(0) (fixed)
IO_0@[IOP=(0)][IoId=(0)] : si_liga(0) (fixed)
IO_2@[IOP=(0)][IoId=(2)] : si_rearme(0) (fixed)
SAR[1]@[FFB(SAR,1)] : \ADC_SAR_Seq:SAR:ADC_SAR\
Vref[13]@[FFB(Vref,13)] : \ADC_SAR_Seq:SAR:vRef_Vdda_1\

Analog Placement phase: Elapsed time ==> 2s.565ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Routing">
Analog Routing phase: Elapsed time ==> 0s.004ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Code Generation">
============ Analog Final Answer Routes ============
Dump of CyAnalogRoutingResultsDB
Map of net to items {
  Net: \ADC_SAR_Seq:Net_2803\ {
    sar_1_vplus
  }
  Net: Net_2517 {
    p3_6
  }
  Net: Net_2718 {
    p3_7
  }
  Net: Net_2743 {
  }
  Net: Net_2762 {
  }
  Net: Net_2792 {
  }
  Net: Net_2771 {
  }
  Net: Net_2772 {
  }
  Net: Net_2795 {
  }
  Net: Net_2775 {
  }
  Net: Net_2776 {
  }
  Net: Net_2811 {
  }
  Net: Net_2779 {
  }
  Net: Net_2780 {
  }
  Net: Net_2812 {
  }
  Net: Net_2721 {
  }
  Net: Net_2722 {
  }
  Net: Net_2782 {
  }
  Net: Net_2725 {
  }
  Net: Net_2726 {
  }
  Net: Net_2783 {
  }
  Net: Net_2729 {
  }
  Net: Net_2730 {
  }
  Net: Net_2784 {
  }
  Net: Net_2733 {
  }
  Net: Net_2734 {
  }
  Net: Net_2785 {
  }
  Net: Net_2737 {
  }
  Net: Net_2738 {
  }
  Net: Net_2786 {
  }
  Net: Net_2742 {
  }
  Net: Net_2744 {
  }
  Net: Net_2787 {
  }
  Net: Net_2747 {
  }
  Net: Net_2748 {
  }
  Net: Net_2788 {
  }
  Net: Net_2751 {
  }
  Net: Net_2752 {
  }
  Net: Net_2789 {
  }
  Net: Net_2755 {
  }
  Net: Net_2756 {
  }
  Net: Net_2790 {
  }
  Net: Net_2759 {
  }
  Net: Net_2760 {
  }
  Net: Net_2791 {
  }
  Net: Net_2764 {
  }
  Net: Net_2766 {
  }
  Net: Net_2793 {
  }
  Net: Net_2769 {
  }
  Net: Net_2794 {
  }
  Net: Net_2796 {
  }
  Net: Net_2797 {
  }
  Net: Net_2798 {
  }
  Net: Net_2799 {
  }
  Net: Net_2800 {
  }
  Net: Net_2801 {
  }
  Net: Net_2802 {
  }
  Net: Net_2803 {
  }
  Net: Net_2804 {
  }
  Net: Net_2805 {
  }
  Net: Net_2806 {
  }
  Net: Net_2807 {
  }
  Net: Net_2808 {
  }
  Net: Net_2809 {
  }
  Net: Net_2810 {
  }
  Net: \ADC_SAR_Seq:SAR:Net_126\ {
    sar_1_vrefhi
    sar_1_vminus_x_sar_1_vrefhi
    sar_1_vminus
  }
  Net: \ADC_SAR_Seq:SAR:Net_209\ {
  }
  Net: \ADC_SAR_Seq:SAR:Net_235\ {
    common_sar_vref_vdda/2
    common_sar_vref_vdda/2_x_sar_1_vref_vdda_vdda_2
    sar_1_vref_vdda_vdda_2
    sar_1_vref_x_sar_1_vref_vdda_vdda_2
    sar_1_vref
  }
  Net: AmuxNet::\ADC_SAR_Seq:AMuxHw_2\ {
    sar_1_vplus
    agr7_x_sar_1_vplus
    agr7
    agr7_x_p3_7
    agr6_x_sar_1_vplus
    agr6
    agr6_x_p3_6
    p3_7
    p3_6
  }
}
Map of item to net {
  sar_1_vrefhi                                     -> \ADC_SAR_Seq:SAR:Net_126\
  sar_1_vminus_x_sar_1_vrefhi                      -> \ADC_SAR_Seq:SAR:Net_126\
  sar_1_vminus                                     -> \ADC_SAR_Seq:SAR:Net_126\
  common_sar_vref_vdda/2                           -> \ADC_SAR_Seq:SAR:Net_235\
  common_sar_vref_vdda/2_x_sar_1_vref_vdda_vdda_2  -> \ADC_SAR_Seq:SAR:Net_235\
  sar_1_vref_vdda_vdda_2                           -> \ADC_SAR_Seq:SAR:Net_235\
  sar_1_vref_x_sar_1_vref_vdda_vdda_2              -> \ADC_SAR_Seq:SAR:Net_235\
  sar_1_vref                                       -> \ADC_SAR_Seq:SAR:Net_235\
  sar_1_vplus                                      -> \ADC_SAR_Seq:Net_2803\
  p3_6                                             -> Net_2517
  p3_7                                             -> Net_2718
  agr7_x_sar_1_vplus                               -> AmuxNet::\ADC_SAR_Seq:AMuxHw_2\
  agr7                                             -> AmuxNet::\ADC_SAR_Seq:AMuxHw_2\
  agr7_x_p3_7                                      -> AmuxNet::\ADC_SAR_Seq:AMuxHw_2\
  agr6_x_sar_1_vplus                               -> AmuxNet::\ADC_SAR_Seq:AMuxHw_2\
  agr6                                             -> AmuxNet::\ADC_SAR_Seq:AMuxHw_2\
  agr6_x_p3_6                                      -> AmuxNet::\ADC_SAR_Seq:AMuxHw_2\
}
Mux Info {
  Mux: \ADC_SAR_Seq:AMuxHw_2\ {
     Mouth: \ADC_SAR_Seq:Net_2803\
     Guts:  AmuxNet::\ADC_SAR_Seq:AMuxHw_2\
     IsSingleSwitching: False
     IsStaticSwitching: True
     IsAtMostOneSwitch: True
    Arm: 0 {
      Net:   Net_2517
      Outer: agr6_x_p3_6
      Inner: agr6_x_sar_1_vplus
      Path {
        p3_6
        agr6_x_p3_6
        agr6
        agr6_x_sar_1_vplus
        sar_1_vplus
      }
    }
    Arm: 1 {
      Net:   Net_2718
      Outer: agr7_x_p3_7
      Inner: agr7_x_sar_1_vplus
      Path {
        p3_7
        agr7_x_p3_7
        agr7
        agr7_x_sar_1_vplus
        sar_1_vplus
      }
    }
    Arm: 2 {
      Net:   Net_2743
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 3 {
      Net:   Net_2762
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 4 {
      Net:   Net_2792
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 5 {
      Net:   Net_2771
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 6 {
      Net:   Net_2772
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 7 {
      Net:   Net_2795
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 8 {
      Net:   Net_2775
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 9 {
      Net:   Net_2776
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 10 {
      Net:   Net_2811
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 11 {
      Net:   Net_2779
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 12 {
      Net:   Net_2780
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 13 {
      Net:   Net_2812
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 14 {
      Net:   Net_2721
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 15 {
      Net:   Net_2722
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 16 {
      Net:   Net_2782
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 17 {
      Net:   Net_2725
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 18 {
      Net:   Net_2726
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 19 {
      Net:   Net_2783
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 20 {
      Net:   Net_2729
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 21 {
      Net:   Net_2730
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 22 {
      Net:   Net_2784
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 23 {
      Net:   Net_2733
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 24 {
      Net:   Net_2734
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 25 {
      Net:   Net_2785
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 26 {
      Net:   Net_2737
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 27 {
      Net:   Net_2738
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 28 {
      Net:   Net_2786
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 29 {
      Net:   Net_2742
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 30 {
      Net:   Net_2744
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 31 {
      Net:   Net_2787
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 32 {
      Net:   Net_2747
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 33 {
      Net:   Net_2748
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 34 {
      Net:   Net_2788
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 35 {
      Net:   Net_2751
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 36 {
      Net:   Net_2752
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 37 {
      Net:   Net_2789
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 38 {
      Net:   Net_2755
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 39 {
      Net:   Net_2756
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 40 {
      Net:   Net_2790
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 41 {
      Net:   Net_2759
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 42 {
      Net:   Net_2760
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 43 {
      Net:   Net_2791
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 44 {
      Net:   Net_2764
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 45 {
      Net:   Net_2766
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 46 {
      Net:   Net_2793
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 47 {
      Net:   Net_2769
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 48 {
      Net:   Net_2794
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 49 {
      Net:   Net_2796
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 50 {
      Net:   Net_2797
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 51 {
      Net:   Net_2798
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 52 {
      Net:   Net_2799
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 53 {
      Net:   Net_2800
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 54 {
      Net:   Net_2801
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 55 {
      Net:   Net_2802
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 56 {
      Net:   Net_2803
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 57 {
      Net:   Net_2804
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 58 {
      Net:   Net_2805
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 59 {
      Net:   Net_2806
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 60 {
      Net:   Net_2807
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 61 {
      Net:   Net_2808
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 62 {
      Net:   Net_2809
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
    Arm: 63 {
      Net:   Net_2810
      Outer: __open__
      Inner: __open__
      Path {
      }
    }
  }
}
Dump of CyP35AnalogRoutingResultsDB
IsVddaHalfUsedForComp = False
IsVddaHalfUsedForSar0 = False
IsVddaHalfUsedForSar1 = True
Analog Code Generation phase: Elapsed time ==> 0s.306ms
</CYPRESSTAG>
<CYPRESSTAG name="Digital Placement">
<CYPRESSTAG name="Detailed placement messages">
I2076: Total run-time: 6.2 sec.

</CYPRESSTAG>
<CYPRESSTAG name="PLD Packing">
<CYPRESSTAG name="PLD Packing Summary" expanded>

------------------------------------------------------------
PLD Packing Summary
------------------------------------------------------------
            Resource Type : Used : Free :  Max :  % Used
    ====================================================
                     PLDs :   32 :   16 :   48 :  66.67%

<CYPRESSTAG name="PLD Statistics">

        PLD Resource Type :     Average/LAB
    =======================================
                   Inputs :            7.56
                   Pterms :            4.28
               Macrocells :            3.13
</CYPRESSTAG>
<CYPRESSTAG name="Packed PLD Contents">
Packed PLD Contents not displayed at this verbose level.</CYPRESSTAG>
</CYPRESSTAG>
PLD Packing: Elapsed time ==> 0s.000ms
</CYPRESSTAG>
<CYPRESSTAG name="Partitioning">
<CYPRESSTAG name="Initial Partitioning Summary">
Initial Partitioning Summary not displayed at this verbose level.</CYPRESSTAG>
<CYPRESSTAG name="Final Partitioning Summary">
Final Partitioning Summary not displayed at this verbose level.</CYPRESSTAG>
Partitioning: Elapsed time ==> 0s.129ms
</CYPRESSTAG>
<CYPRESSTAG name="Final Placement Summary">

------------------------------------------------------------
Final Placement Summary
------------------------------------------------------------

       Resource Type :      Count : Avg Inputs : Avg Outputs
    ========================================================
                 UDB :         16 :      10.25 :       6.25
<CYPRESSTAG name="Final Placement Details">
<CYPRESSTAG name="Component Details">

------------------------------------------------------------
Component Placement Details
------------------------------------------------------------
UDB [UDB=(0,0)] is empty.
UDB [UDB=(0,1)] contents:
LAB@[UDB=(0,1)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_28\, Mode=(D-Register) @ [UDB=(0,1)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_28\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_33\, Mode=(D-Register) @ [UDB=(0,1)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_33\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_19\, Mode=(D-Register) @ [UDB=(0,1)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_19\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_42\, Mode=(D-Register) @ [UDB=(0,1)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_42\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,1)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_32\, Mode=(D-Register) @ [UDB=(0,1)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_32\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_26\, Mode=(D-Register) @ [UDB=(0,1)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_26\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_37\, Mode=(D-Register) @ [UDB=(0,1)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_37\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_18\, Mode=(D-Register) @ [UDB=(0,1)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_18\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(0,2)] contents:
LAB@[UDB=(0,2)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_16\, Mode=(D-Register) @ [UDB=(0,2)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_16\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_39\, Mode=(D-Register) @ [UDB=(0,2)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_39\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_40\, Mode=(D-Register) @ [UDB=(0,2)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_40\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_31\, Mode=(D-Register) @ [UDB=(0,2)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_31\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(0,2)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_38\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_38\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_44\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_44\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_22\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_22\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_53\, Mode=(D-Register) @ [UDB=(0,2)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_53\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(0,3)] is empty.
UDB [UDB=(0,4)] is empty.
UDB [UDB=(0,5)] is empty.
UDB [UDB=(1,0)] is empty.
UDB [UDB=(1,1)] contents:
LAB@[UDB=(1,1)][LB=0] #macrocells=3, #inputs=7, #pterms=7
{
    [McSlotId=0]:     MacroCell: Name=\ProbeUART:BUART:tx_state_2\, Mode=(T-Register) @ [UDB=(1,1)][LB=0][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\ProbeUART:BUART:tx_state_1\ * !\ProbeUART:BUART:tx_state_0\ * 
              \ProbeUART:BUART:tx_bitclk_enable_pre\ * 
              \ProbeUART:BUART:tx_state_2\
            + \ProbeUART:BUART:tx_state_1\ * \ProbeUART:BUART:tx_state_0\ * 
              \ProbeUART:BUART:tx_bitclk_enable_pre\ * 
              \ProbeUART:BUART:tx_state_2\
            + \ProbeUART:BUART:tx_state_1\ * \ProbeUART:BUART:tx_state_0\ * 
              !\ProbeUART:BUART:tx_state_2\ * \ProbeUART:BUART:tx_bitclk\
            + \ProbeUART:BUART:tx_state_1\ * !\ProbeUART:BUART:tx_state_2\ * 
              \ProbeUART:BUART:tx_counter_dp\ * \ProbeUART:BUART:tx_bitclk\
        );
        Output = \ProbeUART:BUART:tx_state_2\ (fanout=7)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ProbeUART:BUART:tx_bitclk\, Mode=(D-Register) @ [UDB=(1,1)][LB=0][MC=1]
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\ProbeUART:BUART:tx_state_1\ * !\ProbeUART:BUART:tx_state_0\ * 
              \ProbeUART:BUART:tx_state_2\
            + !\ProbeUART:BUART:tx_bitclk_enable_pre\
        );
        Output = \ProbeUART:BUART:tx_bitclk\ (fanout=4)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ProbeUART:BUART:tx_status_0\, Mode=(Combinatorial) @ [UDB=(1,1)][LB=0][MC=2]
        Total # of inputs        : 5
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\ProbeUART:BUART:tx_state_1\ * !\ProbeUART:BUART:tx_state_0\ * 
              \ProbeUART:BUART:tx_bitclk_enable_pre\ * 
              \ProbeUART:BUART:tx_fifo_empty\ * \ProbeUART:BUART:tx_state_2\
        );
        Output = \ProbeUART:BUART:tx_status_0\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

LAB@[UDB=(1,1)][LB=1] #macrocells=1, #inputs=6, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ProbeUART:BUART:tx_state_0\, Mode=(T-Register) @ [UDB=(1,1)][LB=1][MC=0]
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\ProbeUART:BUART:tx_state_1\ * !\ProbeUART:BUART:tx_state_0\ * 
              \ProbeUART:BUART:tx_bitclk_enable_pre\ * 
              !\ProbeUART:BUART:tx_fifo_empty\
            + !\ProbeUART:BUART:tx_state_1\ * !\ProbeUART:BUART:tx_state_0\ * 
              !\ProbeUART:BUART:tx_fifo_empty\ * 
              !\ProbeUART:BUART:tx_state_2\
            + \ProbeUART:BUART:tx_state_1\ * \ProbeUART:BUART:tx_state_0\ * 
              \ProbeUART:BUART:tx_bitclk_enable_pre\ * 
              \ProbeUART:BUART:tx_fifo_empty\ * \ProbeUART:BUART:tx_state_2\
            + \ProbeUART:BUART:tx_state_0\ * !\ProbeUART:BUART:tx_state_2\ * 
              \ProbeUART:BUART:tx_bitclk\
        );
        Output = \ProbeUART:BUART:tx_state_0\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

datapathcell: Name =\ProbeUART:BUART:sTX:TxShifter:u0\
    PORT MAP (
        clock => \ProbeUART:Net_9\ ,
        cs_addr_2 => \ProbeUART:BUART:tx_state_1\ ,
        cs_addr_1 => \ProbeUART:BUART:tx_state_0\ ,
        cs_addr_0 => \ProbeUART:BUART:tx_bitclk_enable_pre\ ,
        so_comb => \ProbeUART:BUART:tx_shift_out\ ,
        f0_bus_stat_comb => \ProbeUART:BUART:tx_fifo_notfull\ ,
        f0_blk_stat_comb => \ProbeUART:BUART:tx_fifo_empty\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000000000000000000000000000000000000000000000000000011000000000000000000000000000010010000000000000000000000000000000000000011111111000000001111111111111111000000000000000001000100111100000000000000001100"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

statusicell: Name =\ProbeUART:BUART:sTX:TxSts\
    PORT MAP (
        clock => \ProbeUART:Net_9\ ,
        status_3 => \ProbeUART:BUART:tx_fifo_notfull\ ,
        status_2 => \ProbeUART:BUART:tx_status_2\ ,
        status_1 => \ProbeUART:BUART:tx_fifo_empty\ ,
        status_0 => \ProbeUART:BUART:tx_status_0\ ,
        interrupt => Net_239 );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "0000001"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(1,2)] contents:
LAB@[UDB=(1,2)][LB=0] #macrocells=2, #inputs=8, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\ProbeUART:BUART:txn\, Mode=(D-Register) @ [UDB=(1,2)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              \ProbeUART:BUART:txn\ * \ProbeUART:BUART:tx_state_1\ * 
              !\ProbeUART:BUART:tx_bitclk\
            + \ProbeUART:BUART:txn\ * \ProbeUART:BUART:tx_state_2\
            + !\ProbeUART:BUART:tx_state_1\ * \ProbeUART:BUART:tx_state_0\ * 
              !\ProbeUART:BUART:tx_shift_out\ * !\ProbeUART:BUART:tx_state_2\
            + !\ProbeUART:BUART:tx_state_1\ * \ProbeUART:BUART:tx_state_0\ * 
              !\ProbeUART:BUART:tx_state_2\ * !\ProbeUART:BUART:tx_bitclk\
            + \ProbeUART:BUART:tx_state_1\ * !\ProbeUART:BUART:tx_state_0\ * 
              !\ProbeUART:BUART:tx_shift_out\ * !\ProbeUART:BUART:tx_state_2\ * 
              !\ProbeUART:BUART:tx_counter_dp\ * \ProbeUART:BUART:tx_bitclk\
        );
        Output = \ProbeUART:BUART:txn\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ProbeUART:BUART:tx_state_1\, Mode=(T-Register) @ [UDB=(1,2)][LB=0][MC=1]
        Total # of inputs        : 6
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              \ProbeUART:BUART:tx_state_1\ * \ProbeUART:BUART:tx_state_0\ * 
              \ProbeUART:BUART:tx_bitclk_enable_pre\ * 
              \ProbeUART:BUART:tx_state_2\
            + \ProbeUART:BUART:tx_state_1\ * !\ProbeUART:BUART:tx_state_2\ * 
              \ProbeUART:BUART:tx_counter_dp\ * \ProbeUART:BUART:tx_bitclk\
            + \ProbeUART:BUART:tx_state_0\ * !\ProbeUART:BUART:tx_state_2\ * 
              \ProbeUART:BUART:tx_bitclk\
        );
        Output = \ProbeUART:BUART:tx_state_1\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(1,2)][LB=1] #macrocells=4, #inputs=11, #pterms=5
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_47\, Mode=(D-Register) @ [UDB=(1,2)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_47\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ProbeUART:BUART:counter_load_not\, Mode=(Combinatorial) @ [UDB=(1,2)][LB=1][MC=1]
        Total # of inputs        : 4
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\ProbeUART:BUART:tx_state_1\ * !\ProbeUART:BUART:tx_state_0\ * 
              \ProbeUART:BUART:tx_bitclk_enable_pre\
            + !\ProbeUART:BUART:tx_state_1\ * !\ProbeUART:BUART:tx_state_0\ * 
              !\ProbeUART:BUART:tx_state_2\
        );
        Output = \ProbeUART:BUART:counter_load_not\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_34\, Mode=(D-Register) @ [UDB=(1,2)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_34\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_36\, Mode=(D-Register) @ [UDB=(1,2)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_36\ (fanout=1)
        Properties               : 
        {
        }
}

datapathcell: Name =\ProbeUART:BUART:sTX:sCLOCK:TxBitClkGen\
    PORT MAP (
        clock => \ProbeUART:Net_9\ ,
        cs_addr_0 => \ProbeUART:BUART:counter_load_not\ ,
        ce0_reg => \ProbeUART:BUART:tx_bitclk_enable_pre\ ,
        ce1_reg => \ProbeUART:BUART:tx_counter_dp\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "1010100001000000001000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111000000001111111100000111001000000100000000000101111100000000000000001000"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(1,3)] is empty.
UDB [UDB=(1,4)] is empty.
UDB [UDB=(1,5)] is empty.
UDB [UDB=(2,0)] contents:
LAB@[UDB=(2,0)][LB=0] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_11\, Mode=(D-Register) @ [UDB=(2,0)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_11\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_0\, Mode=(D-Register) @ [UDB=(2,0)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_0\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_23\, Mode=(D-Register) @ [UDB=(2,0)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_23\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,0)][LB=1] #macrocells=4, #inputs=11, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_20\, Mode=(D-Register) @ [UDB=(2,0)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_20\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_43\, Mode=(D-Register) @ [UDB=(2,0)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_43\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ProbeUART:BUART:rx_counter_load\, Mode=(Combinatorial) @ [UDB=(2,0)][LB=1][MC=2]
        Total # of inputs        : 4
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              !\ProbeUART:BUART:rx_state_0\ * !\ProbeUART:BUART:rx_state_3\ * 
              !\ProbeUART:BUART:rx_state_2\
        );
        Output = \ProbeUART:BUART:rx_counter_load\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_21\, Mode=(D-Register) @ [UDB=(2,0)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_21\ (fanout=1)
        Properties               : 
        {
        }
}

synccell: Name =\ADC_SAR_Seq:Sync:genblk1[0]:INST\
    PORT MAP (
        clock => ClockBlock_BUS_CLK ,
        in => \ADC_SAR_Seq:nrq\ ,
        out => \ADC_SAR_Seq:Net_3935\ );
    Properties:
    {
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(2,1)] contents:
LAB@[UDB=(2,1)][LB=0] #macrocells=3, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register) @ [UDB=(2,1)][LB=0][MC=0]
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \ADC_SAR_Seq:bSAR_SEQ:bus_clk_nrq_reg\ * !Net_2813
            + \ADC_SAR_Seq:Net_3935\
        );
        Output = \ADC_SAR_Seq:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ProbeUART:BUART:rx_status_5\, Mode=(Combinatorial) @ [UDB=(2,1)][LB=0][MC=1]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ProbeUART:BUART:rx_fifonotempty\ * 
              \ProbeUART:BUART:rx_state_stop1_reg\
        );
        Output = \ProbeUART:BUART:rx_status_5\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ProbeUART:BUART:rx_status_4\, Mode=(Combinatorial) @ [UDB=(2,1)][LB=0][MC=2]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ProbeUART:BUART:rx_load_fifo\ * \ProbeUART:BUART:rx_fifofull\
        );
        Output = \ProbeUART:BUART:rx_status_4\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

LAB@[UDB=(2,1)][LB=1] #macrocells=3, #inputs=5, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=Net_2813, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=0]
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: PosEdge(\ADC_SAR_Seq:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:bSAR_SEQ:bus_clk_nrq_reg\ * 
              !\ADC_SAR_Seq:bSAR_SEQ:nrq_reg\
        );
        Output = Net_2813 (fanout=3)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq:bSAR_SEQ:nrq_reg\, Mode=(D-Register) @ [UDB=(2,1)][LB=1][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: PosEdge(\ADC_SAR_Seq:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \ADC_SAR_Seq:bSAR_SEQ:nrq_reg\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ProbeUART:BUART:rx_postpoll\, Mode=(Combinatorial) @ [UDB=(2,1)][LB=1][MC=2]
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \ProbeUART:BUART:pollcount_1\
            + \ProbeUART:BUART:pollcount_0\ * Net_227_SYNCOUT
        );
        Output = \ProbeUART:BUART:rx_postpoll\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

datapathcell: Name =\ProbeUART:BUART:sRX:RxShifter:u0\
    PORT MAP (
        clock => \ProbeUART:Net_9\ ,
        cs_addr_2 => \ProbeUART:BUART:tx_ctrl_mark_last\ ,
        cs_addr_1 => \ProbeUART:BUART:rx_state_0\ ,
        cs_addr_0 => \ProbeUART:BUART:rx_bitclk_enable\ ,
        route_si => \ProbeUART:BUART:rx_postpoll\ ,
        f0_load => \ProbeUART:BUART:rx_load_fifo\ ,
        f0_bus_stat_comb => \ProbeUART:BUART:rx_fifonotempty\ ,
        f0_blk_stat_comb => \ProbeUART:BUART:rx_fifofull\ );
    Properties:
    {
        a0_init = "00000000"
        a1_init = "00000000"
        ce0_sync = 1
        ce1_sync = 1
        cl0_sync = 1
        cl1_sync = 1
        cmsb_sync = 1
        co_msb_sync = 1
        cy_dpconfig = "0000000000000000000000000000000000000000000000000000001001000000000100000000000000010000001100000001000000000000000100100001000011111111000000001111111111111111101000000110001001000001111100000000000000001100"
        d0_init = "00000000"
        d1_init = "00000000"
        f0_blk_sync = 1
        f0_bus_sync = 1
        f1_blk_sync = 1
        f1_bus_sync = 1
        ff0_sync = 1
        ff1_sync = 1
        ov_msb_sync = 1
        so_sync = 1
        z0_sync = 1
        z1_sync = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

controlcell: Name =\ADC_SAR_Seq:bSAR_SEQ:CtrlReg\
    PORT MAP (
        clock => \ADC_SAR_Seq:clock\ ,
        control_7 => \ADC_SAR_Seq:bSAR_SEQ:control_7\ ,
        control_6 => \ADC_SAR_Seq:bSAR_SEQ:control_6\ ,
        control_5 => \ADC_SAR_Seq:bSAR_SEQ:control_5\ ,
        control_4 => \ADC_SAR_Seq:bSAR_SEQ:control_4\ ,
        control_3 => \ADC_SAR_Seq:bSAR_SEQ:control_3\ ,
        control_2 => \ADC_SAR_Seq:bSAR_SEQ:control_2\ ,
        control_1 => \ADC_SAR_Seq:bSAR_SEQ:load_period\ ,
        control_0 => \ADC_SAR_Seq:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_ctrl_mode_0 = "00000111"
        cy_ctrl_mode_1 = "00000110"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(2,2)] contents:
LAB@[UDB=(2,2)][LB=0] #macrocells=4, #inputs=12, #pterms=7
{
    [McSlotId=0]:     MacroCell: Name=\ProbeUART:BUART:rx_load_fifo\, Mode=(D-Register) @ [UDB=(2,2)][LB=0][MC=0]
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              !\ProbeUART:BUART:rx_state_0\ * 
              \ProbeUART:BUART:rx_bitclk_enable\ * 
              \ProbeUART:BUART:rx_state_3\ * !\ProbeUART:BUART:rx_state_2\
            + !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              \ProbeUART:BUART:rx_state_0\ * !\ProbeUART:BUART:rx_state_3\ * 
              !\ProbeUART:BUART:rx_state_2\ * !\ProbeUART:BUART:rx_count_6\ * 
              !\ProbeUART:BUART:rx_count_5\
            + !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              \ProbeUART:BUART:rx_state_0\ * !\ProbeUART:BUART:rx_state_3\ * 
              !\ProbeUART:BUART:rx_state_2\ * !\ProbeUART:BUART:rx_count_6\ * 
              !\ProbeUART:BUART:rx_count_4\
        );
        Output = \ProbeUART:BUART:rx_load_fifo\ (fanout=2)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ProbeUART:BUART:rx_state_stop1_reg\, Mode=(D-Register) @ [UDB=(2,2)][LB=0][MC=1]
        Total # of inputs        : 4
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              !\ProbeUART:BUART:rx_state_0\ * \ProbeUART:BUART:rx_state_3\ * 
              \ProbeUART:BUART:rx_state_2\
        );
        Output = \ProbeUART:BUART:rx_state_stop1_reg\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ProbeUART:BUART:rx_status_3\, Mode=(D-Register) @ [UDB=(2,2)][LB=0][MC=2]
        Total # of inputs        : 8
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              !\ProbeUART:BUART:rx_state_0\ * 
              \ProbeUART:BUART:rx_bitclk_enable\ * 
              \ProbeUART:BUART:rx_state_3\ * \ProbeUART:BUART:rx_state_2\ * 
              !\ProbeUART:BUART:pollcount_1\ * !\ProbeUART:BUART:pollcount_0\
            + !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              !\ProbeUART:BUART:rx_state_0\ * 
              \ProbeUART:BUART:rx_bitclk_enable\ * 
              \ProbeUART:BUART:rx_state_3\ * \ProbeUART:BUART:rx_state_2\ * 
              !\ProbeUART:BUART:pollcount_1\ * !Net_227_SYNCOUT
        );
        Output = \ProbeUART:BUART:rx_status_3\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=Net_222, Mode=(Combinatorial) @ [UDB=(2,2)][LB=0][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\ProbeUART:BUART:txn\
        );
        Output = Net_222 (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,2)][LB=1] #macrocells=2, #inputs=6, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ProbeUART:BUART:pollcount_1\, Mode=(D-Register) @ [UDB=(2,2)][LB=1][MC=0]
        Total # of inputs        : 5
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\ProbeUART:BUART:rx_count_2\ * !\ProbeUART:BUART:rx_count_1\ * 
              !\ProbeUART:BUART:pollcount_1\ * \ProbeUART:BUART:pollcount_0\ * 
              Net_227_SYNCOUT
            + !\ProbeUART:BUART:rx_count_2\ * !\ProbeUART:BUART:rx_count_1\ * 
              \ProbeUART:BUART:pollcount_1\ * !\ProbeUART:BUART:pollcount_0\
            + !\ProbeUART:BUART:rx_count_2\ * !\ProbeUART:BUART:rx_count_1\ * 
              \ProbeUART:BUART:pollcount_1\ * !Net_227_SYNCOUT
        );
        Output = \ProbeUART:BUART:pollcount_1\ (fanout=4)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\ProbeUART:BUART:rx_bitclk_enable\, Mode=(D-Register) @ [UDB=(2,2)][LB=1][MC=2]
        Total # of inputs        : 3
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\ProbeUART:BUART:rx_count_2\ * !\ProbeUART:BUART:rx_count_1\ * 
              !\ProbeUART:BUART:rx_count_0\
        );
        Output = \ProbeUART:BUART:rx_bitclk_enable\ (fanout=6)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

count7cell: Name =\ProbeUART:BUART:sRX:RxBitCounter\
    PORT MAP (
        clock => \ProbeUART:Net_9\ ,
        load => \ProbeUART:BUART:rx_counter_load\ ,
        count_6 => \ProbeUART:BUART:rx_count_6\ ,
        count_5 => \ProbeUART:BUART:rx_count_5\ ,
        count_4 => \ProbeUART:BUART:rx_count_4\ ,
        count_3 => \ProbeUART:BUART:rx_count_3\ ,
        count_2 => \ProbeUART:BUART:rx_count_2\ ,
        count_1 => \ProbeUART:BUART:rx_count_1\ ,
        count_0 => \ProbeUART:BUART:rx_count_0\ ,
        tc => \ProbeUART:BUART:rx_count7_tc\ );
    Properties:
    {
        cy_alt_mode = 0
        cy_init_value = "0000000"
        cy_period = "1110010"
        cy_route_en = 1
        cy_route_ld = 1
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(2,3)] contents:
LAB@[UDB=(2,3)][LB=0] #macrocells=2, #inputs=12, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_is_active_split\, Mode=(Combinatorial) @ [UDB=(2,3)][LB=0][MC=0]
        Total # of inputs        : 12
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:ch_addr_5\
            + \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:ch_addr_4\
            + \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:ch_addr_3\
            + \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:ch_addr_2\
            + !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:ch_addr_1\
            + \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:ch_addr_1\
            + !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ * 
              \ADC_SAR_Seq:ch_addr_0\
            + \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ * 
              !\ADC_SAR_Seq:ch_addr_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active_split\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ProbeUART:BUART:tx_ctrl_mark_last\, Mode=(T-Register) @ [UDB=(2,3)][LB=0][MC=1]
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \ProbeUART:BUART:tx_ctrl_mark_last\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(2,3)][LB=1] #macrocells=3, #inputs=12, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\ProbeUART:BUART:rx_state_0\, Mode=(T-Register) @ [UDB=(2,3)][LB=1][MC=0]
        Total # of inputs        : 11
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              !\ProbeUART:BUART:rx_state_0\ * 
              \ProbeUART:BUART:rx_bitclk_enable\ * 
              !\ProbeUART:BUART:rx_state_3\ * \ProbeUART:BUART:rx_state_2\ * 
              !\ProbeUART:BUART:pollcount_1\ * !\ProbeUART:BUART:pollcount_0\
            + !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              !\ProbeUART:BUART:rx_state_0\ * 
              \ProbeUART:BUART:rx_bitclk_enable\ * 
              !\ProbeUART:BUART:rx_state_3\ * \ProbeUART:BUART:rx_state_2\ * 
              !\ProbeUART:BUART:pollcount_1\ * !Net_227_SYNCOUT
            + !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              \ProbeUART:BUART:rx_state_0\ * !\ProbeUART:BUART:rx_state_3\ * 
              !\ProbeUART:BUART:rx_state_2\ * !\ProbeUART:BUART:rx_count_6\ * 
              !\ProbeUART:BUART:rx_count_5\
            + !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              \ProbeUART:BUART:rx_state_0\ * !\ProbeUART:BUART:rx_state_3\ * 
              !\ProbeUART:BUART:rx_state_2\ * !\ProbeUART:BUART:rx_count_6\ * 
              !\ProbeUART:BUART:rx_count_4\
        );
        Output = \ProbeUART:BUART:rx_state_0\ (fanout=8)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ProbeUART:BUART:rx_state_2\, Mode=(T-Register) @ [UDB=(2,3)][LB=1][MC=1]
        Total # of inputs        : 10
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              !\ProbeUART:BUART:rx_state_0\ * 
              \ProbeUART:BUART:rx_bitclk_enable\ * 
              \ProbeUART:BUART:rx_state_3\
            + !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              !\ProbeUART:BUART:rx_state_0\ * 
              \ProbeUART:BUART:rx_bitclk_enable\ * 
              \ProbeUART:BUART:rx_state_2\
            + !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              !\ProbeUART:BUART:rx_state_0\ * !\ProbeUART:BUART:rx_state_3\ * 
              !\ProbeUART:BUART:rx_state_2\ * \ProbeUART:BUART:rx_last\ * 
              !Net_227_SYNCOUT
            + !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              \ProbeUART:BUART:rx_state_0\ * !\ProbeUART:BUART:rx_state_3\ * 
              !\ProbeUART:BUART:rx_state_2\ * !\ProbeUART:BUART:rx_count_6\ * 
              !\ProbeUART:BUART:rx_count_5\
            + !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              \ProbeUART:BUART:rx_state_0\ * !\ProbeUART:BUART:rx_state_3\ * 
              !\ProbeUART:BUART:rx_state_2\ * !\ProbeUART:BUART:rx_count_6\ * 
              !\ProbeUART:BUART:rx_count_4\
        );
        Output = \ProbeUART:BUART:rx_state_2\ (fanout=7)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ProbeUART:BUART:rx_state_3\, Mode=(T-Register) @ [UDB=(2,3)][LB=1][MC=2]
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              !\ProbeUART:BUART:rx_state_0\ * 
              \ProbeUART:BUART:rx_bitclk_enable\ * 
              \ProbeUART:BUART:rx_state_3\ * \ProbeUART:BUART:rx_state_2\
            + !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              \ProbeUART:BUART:rx_state_0\ * !\ProbeUART:BUART:rx_state_3\ * 
              !\ProbeUART:BUART:rx_state_2\ * !\ProbeUART:BUART:rx_count_6\ * 
              !\ProbeUART:BUART:rx_count_5\
            + !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              \ProbeUART:BUART:rx_state_0\ * !\ProbeUART:BUART:rx_state_3\ * 
              !\ProbeUART:BUART:rx_state_2\ * !\ProbeUART:BUART:rx_count_6\ * 
              !\ProbeUART:BUART:rx_count_4\
        );
        Output = \ProbeUART:BUART:rx_state_3\ (fanout=7)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

statuscell: Name =\ADC_SAR_Seq:bSAR_SEQ:EOCSts\
    PORT MAP (
        clock => \ADC_SAR_Seq:clock\ ,
        status_0 => Net_2813 ,
        clk_en => \ADC_SAR_Seq:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_force_order = 1
        cy_md_select = "00000001"
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(\ADC_SAR_Seq:bSAR_SEQ:enable\)

UDB [UDB=(2,4)] contents:
LAB@[UDB=(2,4)][LB=0] #macrocells=3, #inputs=5, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ProbeUART:BUART:rx_last\, Mode=(D-Register) @ [UDB=(2,4)][LB=0][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_227_SYNCOUT
        );
        Output = \ProbeUART:BUART:rx_last\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]:     MacroCell: Name=\ProbeUART:BUART:pollcount_0\, Mode=(D-Register) @ [UDB=(2,4)][LB=0][MC=2]
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\ProbeUART:BUART:rx_count_2\ * !\ProbeUART:BUART:rx_count_1\ * 
              !\ProbeUART:BUART:pollcount_0\ * Net_227_SYNCOUT
            + !\ProbeUART:BUART:rx_count_2\ * !\ProbeUART:BUART:rx_count_1\ * 
              \ProbeUART:BUART:pollcount_0\ * !Net_227_SYNCOUT
        );
        Output = \ProbeUART:BUART:pollcount_0\ (fanout=5)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ProbeUART:BUART:tx_status_2\, Mode=(Combinatorial) @ [UDB=(2,4)][LB=0][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\ProbeUART:BUART:tx_fifo_notfull\
        );
        Output = \ProbeUART:BUART:tx_status_2\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,4)][LB=1] #macrocells=4, #inputs=8, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\, Mode=(D-Register) @ [UDB=(2,4)][LB=1][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:ch_addr_1\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ (fanout=65)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_9\, Mode=(D-Register) @ [UDB=(2,4)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_9\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_59\, Mode=(D-Register) @ [UDB=(2,4)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_59\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_54\, Mode=(D-Register) @ [UDB=(2,4)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_54\ (fanout=1)
        Properties               : 
        {
        }
}

count7cell: Name =\ADC_SAR_Seq:bSAR_SEQ:ChannelCounter\
    PORT MAP (
        clock => \ADC_SAR_Seq:clock\ ,
        load => \ADC_SAR_Seq:bSAR_SEQ:load_period\ ,
        enable => \ADC_SAR_Seq:bSAR_SEQ:cnt_enable\ ,
        count_6 => \ADC_SAR_Seq:bSAR_SEQ:count_6\ ,
        count_5 => \ADC_SAR_Seq:ch_addr_5\ ,
        count_4 => \ADC_SAR_Seq:ch_addr_4\ ,
        count_3 => \ADC_SAR_Seq:ch_addr_3\ ,
        count_2 => \ADC_SAR_Seq:ch_addr_2\ ,
        count_1 => \ADC_SAR_Seq:ch_addr_1\ ,
        count_0 => \ADC_SAR_Seq:ch_addr_0\ ,
        tc => \ADC_SAR_Seq:bSAR_SEQ:cnt_tc\ ,
        clk_en => \ADC_SAR_Seq:bSAR_SEQ:enable\ );
    Properties:
    {
        cy_alt_mode = 0
        cy_init_value = "0000000"
        cy_period = "0000001"
        cy_route_en = 1
        cy_route_ld = 1
    }
    Clock Polarity: Active High
    Clock Enable: PosEdge(\ADC_SAR_Seq:bSAR_SEQ:enable\)

UDB [UDB=(2,5)] contents:
LAB@[UDB=(2,5)][LB=0] #macrocells=2, #inputs=7, #pterms=2
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_58\, Mode=(D-Register) @ [UDB=(2,5)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_58\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_51\, Mode=(D-Register) @ [UDB=(2,5)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_51\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(2,5)][LB=1] #macrocells=2, #inputs=9, #pterms=2
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_60\, Mode=(D-Register) @ [UDB=(2,5)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_60\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial) @ [UDB=(2,5)][LB=1][MC=3]
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_2814 * !\ADC_SAR_Seq:bSAR_SEQ:load_period\
        );
        Output = \ADC_SAR_Seq:bSAR_SEQ:cnt_enable\ (fanout=2)
        Properties               : 
        {
        }
}

synccell: Name =ProbeUART_Rx(0)_SYNC
    PORT MAP (
        in => Net_227 ,
        out => Net_227_SYNCOUT ,
        clock => ClockBlock_BUS_CLK );
    Properties:
    {
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(3,0)] contents:
LAB@[UDB=(3,0)][LB=0] #macrocells=3, #inputs=7, #pterms=3
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_4\, Mode=(D-Register) @ [UDB=(3,0)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_4\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_35\, Mode=(D-Register) @ [UDB=(3,0)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_35\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_27\, Mode=(D-Register) @ [UDB=(3,0)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_27\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]: (empty)
}

LAB@[UDB=(3,0)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_1\, Mode=(D-Register) @ [UDB=(3,0)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_1\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_2\, Mode=(D-Register) @ [UDB=(3,0)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_2\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_41\, Mode=(D-Register) @ [UDB=(3,0)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_41\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_52\, Mode=(D-Register) @ [UDB=(3,0)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_52\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(3,1)] contents:
LAB@[UDB=(3,1)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_14\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_14\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_24\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_24\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_12\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_12\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_46\, Mode=(D-Register) @ [UDB=(3,1)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_46\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,1)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_3\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_3\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_25\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_25\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_30\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_30\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_15\, Mode=(D-Register) @ [UDB=(3,1)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_15\ (fanout=1)
        Properties               : 
        {
        }
}

statusicell: Name =\ProbeUART:BUART:sRX:RxSts\
    PORT MAP (
        clock => \ProbeUART:Net_9\ ,
        status_5 => \ProbeUART:BUART:rx_status_5\ ,
        status_4 => \ProbeUART:BUART:rx_status_4\ ,
        status_3 => \ProbeUART:BUART:rx_status_3\ ,
        interrupt => Net_240 );
    Properties:
    {
        cy_force_order = 1
        cy_int_mask = "1111111"
        cy_md_select = "1011111"
    }
    Clock Polarity: Active High
    Clock Enable: True

UDB [UDB=(3,2)] contents:
LAB@[UDB=(3,2)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_17\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_17\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_50\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_50\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_49\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_49\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_29\, Mode=(D-Register) @ [UDB=(3,2)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_29\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,2)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_48\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_48\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_45\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_45\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_55\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_55\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_10\, Mode=(D-Register) @ [UDB=(3,2)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_10\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(3,3)] contents:
LAB@[UDB=(3,3)][LB=0] #macrocells=4, #inputs=9, #pterms=8
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\, Mode=(Combinatorial) @ [UDB=(3,3)][LB=0][MC=0]
        Total # of inputs        : 9
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        !(
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:ch_addr_5\
            + !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:ch_addr_4\
            + !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:ch_addr_3\
            + !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:ch_addr_2\
            + \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active_split\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ (fanout=64)
        Properties               : 
        {
            soft = 1
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=1]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:ch_addr_5\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=2]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:ch_addr_4\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ (fanout=66)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\, Mode=(D-Register) @ [UDB=(3,3)][LB=0][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:ch_addr_3\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ (fanout=66)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,3)][LB=1] #macrocells=2, #inputs=2, #pterms=2
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\, Mode=(D-Register) @ [UDB=(3,3)][LB=1][MC=0]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:ch_addr_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ (fanout=65)
        Properties               : 
        {
        }

    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\, Mode=(D-Register) @ [UDB=(3,3)][LB=1][MC=3]
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:ch_addr_2\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ (fanout=66)
        Properties               : 
        {
        }
}

UDB [UDB=(3,4)] contents:
LAB@[UDB=(3,4)][LB=0] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_5\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_5\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_7\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_7\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_63\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_63\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_56\, Mode=(D-Register) @ [UDB=(3,4)][LB=0][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_56\ (fanout=1)
        Properties               : 
        {
        }
}

LAB@[UDB=(3,4)][LB=1] #macrocells=4, #inputs=7, #pterms=4
{
    [McSlotId=0]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_8\, Mode=(D-Register) @ [UDB=(3,4)][LB=1][MC=0]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_8\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_62\, Mode=(D-Register) @ [UDB=(3,4)][LB=1][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_62\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_61\, Mode=(D-Register) @ [UDB=(3,4)][LB=1][MC=2]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_61\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_13\, Mode=(D-Register) @ [UDB=(3,4)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_13\ (fanout=1)
        Properties               : 
        {
        }
}

UDB [UDB=(3,5)] contents:
LAB@[UDB=(3,5)][LB=0] #macrocells=1, #inputs=7, #pterms=1
{
    [McSlotId=0]: (empty)
    [McSlotId=1]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_6\, Mode=(D-Register) @ [UDB=(3,5)][LB=0][MC=1]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_6\ (fanout=1)
        Properties               : 
        {
        }

    [McSlotId=2]: (empty)
    [McSlotId=3]: (empty)
}

LAB@[UDB=(3,5)][LB=1] #macrocells=1, #inputs=7, #pterms=1
{
    [McSlotId=0]: (empty)
    [McSlotId=1]: (empty)
    [McSlotId=2]: (empty)
    [McSlotId=3]:     MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_57\, Mode=(D-Register) @ [UDB=(3,5)][LB=1][MC=3]
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_57\ (fanout=1)
        Properties               : 
        {
        }
}

controlcell: Name =\LED_Status:Sync:ctrl_reg\
    PORT MAP (
        control_7 => \LED_Status:control_7\ ,
        control_6 => \LED_Status:control_6\ ,
        control_5 => \LED_Status:control_5\ ,
        control_4 => \LED_Status:control_4\ ,
        control_3 => \LED_Status:control_3\ ,
        control_2 => \LED_Status:control_2\ ,
        control_1 => Net_213 ,
        control_0 => Net_167 );
    Properties:
    {
        cy_ctrl_mode_0 = "00000000"
        cy_ctrl_mode_1 = "00000000"
        cy_ext_reset = 0
        cy_force_order = 1
        cy_init_value = "00000000"
    }
    Clock Enable: True

Intr container @ [IntrContainer=(0)]: 
  Intr@ [IntrContainer=(0)][IntrId=(0)] 
    interrupt: Name =ProbeUART_RxISR
        PORT MAP (
            interrupt => Net_240 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(1)] 
    interrupt: Name =ProbeUART_TxISR
        PORT MAP (
            interrupt => Net_239 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(2)] 
    interrupt: Name =\ADC_SAR_Seq:IRQ\
        PORT MAP (
            interrupt => Net_2813 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(5)] 
    interrupt: Name =se_indut_motor_int
        PORT MAP (
            interrupt => Net_1733 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(6)] 
    interrupt: Name =se_indut_porta_int
        PORT MAP (
            interrupt => Net_1732 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
  Intr@ [IntrContainer=(0)][IntrId=(7)] 
    interrupt: Name =bt_emerg_int
        PORT MAP (
            interrupt => Net_1748 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
Drq container @ [DrqContainer=(0)]: 
  Dma@ [DrqContainer=(0)][DrqId=(0)] 
    drqcell: Name =\ADC_SAR_Seq:FinalBuf\
        PORT MAP (
            dmareq => \ADC_SAR_Seq:Net_3698\ ,
            termin => zero ,
            termout => \ADC_SAR_Seq:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
  Dma@ [DrqContainer=(0)][DrqId=(1)] 
    drqcell: Name =\ADC_SAR_Seq:TempBuf\
        PORT MAP (
            dmareq => \ADC_SAR_Seq:Net_3830\ ,
            termin => zero ,
            termout => \ADC_SAR_Seq:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
Port 0 contains the following IO cells:
[IoId=0]: 
Pin : Name = si_liga(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => si_liga(0)__PA ,
        pad => si_liga(0)_PAD );
    Properties:
    {
    }

[IoId=1]: 
Pin : Name = si_desl(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => si_desl(0)__PA ,
        pad => si_desl(0)_PAD );
    Properties:
    {
    }

[IoId=2]: 
Pin : Name = si_rearme(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => si_rearme(0)__PA ,
        pad => si_rearme(0)_PAD );
    Properties:
    {
    }

[IoId=3]: 
Pin : Name = si_emerg(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => si_emerg(0)__PA ,
        pad => si_emerg(0)_PAD );
    Properties:
    {
    }

[IoId=4]: 
Pin : Name = si_alerta(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => si_alerta(0)__PA ,
        pad => si_alerta(0)_PAD );
    Properties:
    {
    }

[IoId=5]: 
Pin : Name = al_sonoro(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => al_sonoro(0)__PA ,
        pad => al_sonoro(0)_PAD );
    Properties:
    {
    }

[IoId=6]: 
Pin : Name = LED(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => LED(0)__PA ,
        pin_input => Net_167 ,
        pad => LED(0)_PAD );
    Properties:
    {
    }

[IoId=7]: 
Pin : Name = LED(1)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => LED(1)__PA ,
        pin_input => Net_213 ,
        pad => LED(1)_PAD );
    Properties:
    {
    }

Port 1 generates interrupt for logical port:
    logicalport: Name =se_indut_motor
        PORT MAP (
            in_clock_en => tmpOE__LED_net_1 ,
            in_reset => zero ,
            out_clock_en => tmpOE__LED_net_1 ,
            out_reset => zero ,
            interrupt => Net_1733 );
        Properties:
        {
            drive_mode = "010"
            ibuf_enabled = "1"
            id = "bc4b6741-7c0c-40af-add7-9dc443c7d580"
            init_dr_st = "1"
            input_buffer_sel = "00"
            input_clk_en = 0
            input_sync = "0"
            input_sync_mode = "0"
            intr_mode = "10"
            invert_in_clock = 0
            invert_in_clock_en = 0
            invert_in_reset = 0
            invert_out_clock = 0
            invert_out_clock_en = 0
            invert_out_reset = 0
            io_voltage = ""
            layout_mode = "CONTIGUOUS"
            oe_conn = "0"
            oe_reset = 0
            oe_sync = "0"
            output_clk_en = 0
            output_clock_mode = "0"
            output_conn = "0"
            output_mode = "0"
            output_reset = 0
            output_sync = "0"
            ovt_hyst_trim = "0"
            ovt_needed = "0"
            ovt_slew_control = "00"
            pa_in_clock = -1
            pa_in_clock_en = -1
            pa_in_reset = -1
            pa_out_clock = -1
            pa_out_clock_en = -1
            pa_out_reset = -1
            pin_aliases = ""
            pin_mode = "I"
            por_state = 4
            port_alias_group = ""
            port_alias_required = 0
            sio_group_cnt = 0
            sio_hifreq = "00000000"
            sio_hyst = "1"
            sio_ibuf = "00000000"
            sio_info = "00"
            sio_obuf = "00000000"
            sio_refsel = "00000000"
            sio_vohsel = "00000000"
            sio_vtrip = "00000000"
            slew_rate = "0"
            spanning = 0
            sw_only = 0
            use_annotation = "0"
            vtrip = "00"
            width = 1
        }
    and contains the following IO cells:
[IoId=2]: 
Pin : Name = se_indut_motor(0)
    Attributes:
        In Group/Port: True
        In Sync Option: NOSYNC
        Out Sync Option: AUTO
        Interrupt generated: True
        Interrupt mode: FALLING
        Drive mode: RES_PULL_UP
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL, PORT_INTERRUPT
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => se_indut_motor(0)__PA ,
        pad => se_indut_motor(0)_PAD );
    Properties:
    {
    }

[IoId=4]: 
Pin : Name = ProbeUART_Rx(0)
    Attributes:
        In Group/Port: True
        In Sync Option: SYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_DIGITAL
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => ProbeUART_Rx(0)__PA ,
        fb => Net_227 ,
        pad => ProbeUART_Rx(0)_PAD );
    Properties:
    {
    }

[IoId=5]: 
Pin : Name = ProbeUART_Tx(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL, ROUTABLE
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => ProbeUART_Tx(0)__PA ,
        pin_input => Net_222 ,
        pad => ProbeUART_Tx(0)_PAD );
    Properties:
    {
    }

Port 2 generates interrupt for logical port:
    logicalport: Name =se_indut_porta
        PORT MAP (
            in_clock_en => tmpOE__LED_net_1 ,
            in_reset => zero ,
            out_clock_en => tmpOE__LED_net_1 ,
            out_reset => zero ,
            interrupt => Net_1732 );
        Properties:
        {
            drive_mode = "010"
            ibuf_enabled = "1"
            id = "a5f90ec0-0544-4216-8d4a-95d0b9f392ce"
            init_dr_st = "1"
            input_buffer_sel = "00"
            input_clk_en = 0
            input_sync = "0"
            input_sync_mode = "0"
            intr_mode = "10"
            invert_in_clock = 0
            invert_in_clock_en = 0
            invert_in_reset = 0
            invert_out_clock = 0
            invert_out_clock_en = 0
            invert_out_reset = 0
            io_voltage = ""
            layout_mode = "CONTIGUOUS"
            oe_conn = "0"
            oe_reset = 0
            oe_sync = "0"
            output_clk_en = 0
            output_clock_mode = "0"
            output_conn = "0"
            output_mode = "0"
            output_reset = 0
            output_sync = "0"
            ovt_hyst_trim = "0"
            ovt_needed = "0"
            ovt_slew_control = "00"
            pa_in_clock = -1
            pa_in_clock_en = -1
            pa_in_reset = -1
            pa_out_clock = -1
            pa_out_clock_en = -1
            pa_out_reset = -1
            pin_aliases = ""
            pin_mode = "I"
            por_state = 4
            port_alias_group = ""
            port_alias_required = 0
            sio_group_cnt = 0
            sio_hifreq = "00000000"
            sio_hyst = "1"
            sio_ibuf = "00000000"
            sio_info = "00"
            sio_obuf = "00000000"
            sio_refsel = "00000000"
            sio_vohsel = "00000000"
            sio_vtrip = "00000000"
            slew_rate = "0"
            spanning = 0
            sw_only = 0
            use_annotation = "0"
            vtrip = "00"
            width = 1
        }
    and contains the following IO cells:
[IoId=0]: 
Pin : Name = \LCD_Disp:LCDPort(0)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \LCD_Disp:LCDPort(0)\__PA ,
        pad => \LCD_Disp:LCDPort(0)_PAD\ );
    Properties:
    {
    }

[IoId=1]: 
Pin : Name = \LCD_Disp:LCDPort(1)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \LCD_Disp:LCDPort(1)\__PA ,
        pad => \LCD_Disp:LCDPort(1)_PAD\ );
    Properties:
    {
    }

[IoId=2]: 
Pin : Name = \LCD_Disp:LCDPort(2)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \LCD_Disp:LCDPort(2)\__PA ,
        pad => \LCD_Disp:LCDPort(2)_PAD\ );
    Properties:
    {
    }

[IoId=3]: 
Pin : Name = \LCD_Disp:LCDPort(3)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \LCD_Disp:LCDPort(3)\__PA ,
        pad => \LCD_Disp:LCDPort(3)_PAD\ );
    Properties:
    {
    }

[IoId=4]: 
Pin : Name = \LCD_Disp:LCDPort(4)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \LCD_Disp:LCDPort(4)\__PA ,
        pad => \LCD_Disp:LCDPort(4)_PAD\ );
    Properties:
    {
    }

[IoId=5]: 
Pin : Name = \LCD_Disp:LCDPort(5)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \LCD_Disp:LCDPort(5)\__PA ,
        pad => \LCD_Disp:LCDPort(5)_PAD\ );
    Properties:
    {
    }

[IoId=6]: 
Pin : Name = \LCD_Disp:LCDPort(6)\
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => \LCD_Disp:LCDPort(6)\__PA ,
        pad => \LCD_Disp:LCDPort(6)_PAD\ );
    Properties:
    {
    }

[IoId=7]: 
Pin : Name = se_indut_porta(0)
    Attributes:
        In Group/Port: True
        In Sync Option: NOSYNC
        Out Sync Option: AUTO
        Interrupt generated: True
        Interrupt mode: FALLING
        Drive mode: RES_PULL_UP
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL, PORT_INTERRUPT
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => se_indut_porta(0)__PA ,
        pad => se_indut_porta(0)_PAD );
    Properties:
    {
    }

Port 3 generates interrupt for logical port:
    logicalport: Name =bt_emerg
        PORT MAP (
            in_clock_en => tmpOE__LED_net_1 ,
            in_reset => zero ,
            out_clock_en => tmpOE__LED_net_1 ,
            out_reset => zero ,
            interrupt => Net_1748 );
        Properties:
        {
            drive_mode = "010"
            ibuf_enabled = "1"
            id = "9242c3f5-c6f2-4c84-971a-20d258b4d752"
            init_dr_st = "1"
            input_buffer_sel = "00"
            input_clk_en = 0
            input_sync = "0"
            input_sync_mode = "0"
            intr_mode = "10"
            invert_in_clock = 0
            invert_in_clock_en = 0
            invert_in_reset = 0
            invert_out_clock = 0
            invert_out_clock_en = 0
            invert_out_reset = 0
            io_voltage = ""
            layout_mode = "CONTIGUOUS"
            oe_conn = "0"
            oe_reset = 0
            oe_sync = "0"
            output_clk_en = 0
            output_clock_mode = "0"
            output_conn = "0"
            output_mode = "0"
            output_reset = 0
            output_sync = "0"
            ovt_hyst_trim = "0"
            ovt_needed = "0"
            ovt_slew_control = "00"
            pa_in_clock = -1
            pa_in_clock_en = -1
            pa_in_reset = -1
            pa_out_clock = -1
            pa_out_clock_en = -1
            pa_out_reset = -1
            pin_aliases = ""
            pin_mode = "I"
            por_state = 4
            port_alias_group = ""
            port_alias_required = 0
            sio_group_cnt = 0
            sio_hifreq = "00000000"
            sio_hyst = "1"
            sio_ibuf = "00000000"
            sio_info = "00"
            sio_obuf = "00000000"
            sio_refsel = "00000000"
            sio_vohsel = "00000000"
            sio_vtrip = "00000000"
            slew_rate = "0"
            spanning = 0
            sw_only = 0
            use_annotation = "0"
            vtrip = "00"
            width = 1
        }
    and contains the following IO cells:
[IoId=0]: 
Pin : Name = bt_liga(0)
    Attributes:
        In Group/Port: True
        In Sync Option: NOSYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: RES_PULL_UP
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => bt_liga(0)__PA ,
        pad => bt_liga(0)_PAD );
    Properties:
    {
    }

[IoId=1]: 
Pin : Name = bt_desl(0)
    Attributes:
        In Group/Port: True
        In Sync Option: NOSYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: RES_PULL_UP
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => bt_desl(0)__PA ,
        pad => bt_desl(0)_PAD );
    Properties:
    {
    }

[IoId=2]: 
Pin : Name = bt_rearme(0)
    Attributes:
        In Group/Port: True
        In Sync Option: NOSYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: RES_PULL_UP
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => bt_rearme(0)__PA ,
        pad => bt_rearme(0)_PAD );
    Properties:
    {
    }

[IoId=3]: 
Pin : Name = bt_emerg(0)
    Attributes:
        In Group/Port: True
        In Sync Option: NOSYNC
        Out Sync Option: AUTO
        Interrupt generated: True
        Interrupt mode: FALLING
        Drive mode: RES_PULL_UP
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: False
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL, PORT_INTERRUPT
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => bt_emerg(0)__PA ,
        pad => bt_emerg(0)_PAD );
    Properties:
    {
    }

[IoId=6]: 
Pin : Name = se_temp_motor(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => se_temp_motor(0)__PA ,
        analog_term => Net_2517 ,
        pad => se_temp_motor(0)_PAD ,
        pin_input => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_0\ );
    Properties:
    {
    }

[IoId=7]: 
Pin : Name = se_temp_quadro(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: HI_Z_ANALOG
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: True
        Can contain Digital: False
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: ANALOG
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => se_temp_quadro(0)__PA ,
        analog_term => Net_2718 ,
        pad => se_temp_quadro(0)_PAD ,
        pin_input => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_1\ );
    Properties:
    {
    }

Port 4 contains the following IO cells:
[IoId=0]: 
Pin : Name = ct_motor(0)
    Attributes:
        In Group/Port: True
        In Sync Option: AUTO
        Out Sync Option: NOSYNC
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: CMOS_OUT
        VTrip: EITHER
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 0
        IO Voltage: 0
    PORT MAP (
        pa_out => ct_motor(0)__PA ,
        pad => ct_motor(0)_PAD );
    Properties:
    {
    }

Port 5 contains the following IO cells:
Port 6 contains the following IO cells:
[IoId=1]: 
Pin : Name = bt_test(0)
    Attributes:
        In Group/Port: True
        In Sync Option: NOSYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: RES_PULL_UP
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: False
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => bt_test(0)__PA ,
        pad => bt_test(0)_PAD );
    Properties:
    {
    }

[IoId=2]: 
Pin : Name = PB_3(0)
    Attributes:
        In Group/Port: True
        In Sync Option: SYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: RES_PULL_UP
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: True
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL, ROUTABLE
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => PB_3(0)__PA ,
        pad => PB_3(0)_PAD );
    Properties:
    {
    }

Port 12 contains the following IO cells:
Port 15 contains the following IO cells:
[IoId=5]: 
Pin : Name = PB_2(0)
    Attributes:
        In Group/Port: True
        In Sync Option: SYNC
        Out Sync Option: AUTO
        Interrupt generated: False
        Interrupt mode: NONE
        Drive mode: RES_PULL_UP
        VTrip: CMOS
        Slew: FAST
        Input Sync needed: True
        Output Sync needed: False
        SC shield enabled: False
        POR State: ANY
        LCD Mode: COMMON
        Register Mode: RegComb
        CaSense Mode: NEITHER
        Treat as pin: True
        Is OE Registered: False
        Uses Analog: False
        Can contain Digital: True
        Is SIO: False
        SIO Output Buf: NONREGULATED
        SIO Input Buf: SINGLE_ENDED
        SIO HiFreq: LOW
        SIO Hyst: DISABLED
        SIO Vtrip: MULTIPLIER_0_5
        SIO Multiplier Index: 0
        SIO RefSel: VCC_IO
        Required Capabilities: DIGITAL, ROUTABLE
        Initial Value: 1
        IO Voltage: 0
    PORT MAP (
        pa_out => PB_2(0)__PA ,
        pad => PB_2(0)_PAD );
    Properties:
    {
    }

ARM group 0: empty
Cache group 0: empty
CapSense group 0: empty
Clock group 0: 
    Clock Block @ F(Clock,0): 
    clockblockcell: Name =ClockBlock
        PORT MAP (
            imo => ClockBlock_IMO ,
            pllout => ClockBlock_PLL_OUT ,
            ilo => ClockBlock_ILO ,
            clk_100k => ClockBlock_100k ,
            clk_1k => ClockBlock_1k ,
            clk_32k => ClockBlock_32k ,
            xtal => ClockBlock_XTAL ,
            clk_32k_xtal => ClockBlock_XTAL 32kHz ,
            clk_sync => ClockBlock_MASTER_CLK ,
            clk_bus_glb => ClockBlock_BUS_CLK ,
            clk_bus => ClockBlock_BUS_CLK_local ,
            dclk_glb_0 => \ADC_SAR_Seq:clock\ ,
            dclk_0 => \ADC_SAR_Seq:clock_local\ ,
            dclk_glb_1 => \ProbeUART:Net_9\ ,
            dclk_1 => \ProbeUART:Net_9_local\ );
        Properties:
        {
        }
Comparator group 0: empty
DFB group 0: empty
DSM group 0: empty
Decimator group 0: empty
EMIF group 0: empty
I2C group 0: empty
LCD group 0: empty
LVD group 0: empty
PICU group 0: empty
PM group 0: empty
SC group 0: empty
SPC group 0: empty
Timer group 0: empty
USB group 0: empty
VIDAC group 0: empty
OpAmp group 0: empty
CsAbuf group 0: empty
Vref group 0: 
    Vref Block @ F(Vref,13): 
    vrefcell: Name =\ADC_SAR_Seq:SAR:vRef_Vdda_1\
        PORT MAP (
            vout => \ADC_SAR_Seq:SAR:Net_235\ );
        Properties:
        {
            autoenable = 1
            guid = "4720866E-BC14-478d-B8A0-3E44F38CADAC"
            ignoresleep = 0
            name = "Vdda/2"
        }
LPF group 0: empty
SAR group 0: 
    SAR Block @ F(SAR,1): 
    sarcell: Name =\ADC_SAR_Seq:SAR:ADC_SAR\
        PORT MAP (
            vplus => \ADC_SAR_Seq:Net_2803\ ,
            vminus => \ADC_SAR_Seq:SAR:Net_126\ ,
            ext_pin => \ADC_SAR_Seq:SAR:Net_209\ ,
            vrefhi_out => \ADC_SAR_Seq:SAR:Net_126\ ,
            vref => \ADC_SAR_Seq:SAR:Net_235\ ,
            clk_udb => \ADC_SAR_Seq:clock_local\ ,
            irq => \ADC_SAR_Seq:SAR:Net_252\ ,
            next => Net_2814 ,
            data_out_udb_11 => \ADC_SAR_Seq:SAR:Net_207_11\ ,
            data_out_udb_10 => \ADC_SAR_Seq:SAR:Net_207_10\ ,
            data_out_udb_9 => \ADC_SAR_Seq:SAR:Net_207_9\ ,
            data_out_udb_8 => \ADC_SAR_Seq:SAR:Net_207_8\ ,
            data_out_udb_7 => \ADC_SAR_Seq:SAR:Net_207_7\ ,
            data_out_udb_6 => \ADC_SAR_Seq:SAR:Net_207_6\ ,
            data_out_udb_5 => \ADC_SAR_Seq:SAR:Net_207_5\ ,
            data_out_udb_4 => \ADC_SAR_Seq:SAR:Net_207_4\ ,
            data_out_udb_3 => \ADC_SAR_Seq:SAR:Net_207_3\ ,
            data_out_udb_2 => \ADC_SAR_Seq:SAR:Net_207_2\ ,
            data_out_udb_1 => \ADC_SAR_Seq:SAR:Net_207_1\ ,
            data_out_udb_0 => \ADC_SAR_Seq:SAR:Net_207_0\ ,
            eof_udb => \ADC_SAR_Seq:Net_3830\ );
        Properties:
        {
            cy_registers = ""
        }
ANAIF group 0: empty
PHUB group 0: empty

Blocks not positioned by the digital component placer:
    Amux Block @ <No Location>: 
    amuxcell: Name =\ADC_SAR_Seq:AMuxHw_2\
        PORT MAP (
            muxin_63 => Net_2810 ,
            muxin_62 => Net_2809 ,
            muxin_61 => Net_2808 ,
            muxin_60 => Net_2807 ,
            muxin_59 => Net_2806 ,
            muxin_58 => Net_2805 ,
            muxin_57 => Net_2804 ,
            muxin_56 => Net_2803 ,
            muxin_55 => Net_2802 ,
            muxin_54 => Net_2801 ,
            muxin_53 => Net_2800 ,
            muxin_52 => Net_2799 ,
            muxin_51 => Net_2798 ,
            muxin_50 => Net_2797 ,
            muxin_49 => Net_2796 ,
            muxin_48 => Net_2794 ,
            muxin_47 => Net_2769 ,
            muxin_46 => Net_2793 ,
            muxin_45 => Net_2766 ,
            muxin_44 => Net_2764 ,
            muxin_43 => Net_2791 ,
            muxin_42 => Net_2760 ,
            muxin_41 => Net_2759 ,
            muxin_40 => Net_2790 ,
            muxin_39 => Net_2756 ,
            muxin_38 => Net_2755 ,
            muxin_37 => Net_2789 ,
            muxin_36 => Net_2752 ,
            muxin_35 => Net_2751 ,
            muxin_34 => Net_2788 ,
            muxin_33 => Net_2748 ,
            muxin_32 => Net_2747 ,
            muxin_31 => Net_2787 ,
            muxin_30 => Net_2744 ,
            muxin_29 => Net_2742 ,
            muxin_28 => Net_2786 ,
            muxin_27 => Net_2738 ,
            muxin_26 => Net_2737 ,
            muxin_25 => Net_2785 ,
            muxin_24 => Net_2734 ,
            muxin_23 => Net_2733 ,
            muxin_22 => Net_2784 ,
            muxin_21 => Net_2730 ,
            muxin_20 => Net_2729 ,
            muxin_19 => Net_2783 ,
            muxin_18 => Net_2726 ,
            muxin_17 => Net_2725 ,
            muxin_16 => Net_2782 ,
            muxin_15 => Net_2722 ,
            muxin_14 => Net_2721 ,
            muxin_13 => Net_2812 ,
            muxin_12 => Net_2780 ,
            muxin_11 => Net_2779 ,
            muxin_10 => Net_2811 ,
            muxin_9 => Net_2776 ,
            muxin_8 => Net_2775 ,
            muxin_7 => Net_2795 ,
            muxin_6 => Net_2772 ,
            muxin_5 => Net_2771 ,
            muxin_4 => Net_2792 ,
            muxin_3 => Net_2762 ,
            muxin_2 => Net_2743 ,
            muxin_1 => Net_2718 ,
            muxin_0 => Net_2517 ,
            hw_ctrl_en_63 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_63\ ,
            hw_ctrl_en_62 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_62\ ,
            hw_ctrl_en_61 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_61\ ,
            hw_ctrl_en_60 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_60\ ,
            hw_ctrl_en_59 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_59\ ,
            hw_ctrl_en_58 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_58\ ,
            hw_ctrl_en_57 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_57\ ,
            hw_ctrl_en_56 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_56\ ,
            hw_ctrl_en_55 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_55\ ,
            hw_ctrl_en_54 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_54\ ,
            hw_ctrl_en_53 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_53\ ,
            hw_ctrl_en_52 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_52\ ,
            hw_ctrl_en_51 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_51\ ,
            hw_ctrl_en_50 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_50\ ,
            hw_ctrl_en_49 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_49\ ,
            hw_ctrl_en_48 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_48\ ,
            hw_ctrl_en_47 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_47\ ,
            hw_ctrl_en_46 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_46\ ,
            hw_ctrl_en_45 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_45\ ,
            hw_ctrl_en_44 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_44\ ,
            hw_ctrl_en_43 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_43\ ,
            hw_ctrl_en_42 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_42\ ,
            hw_ctrl_en_41 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_41\ ,
            hw_ctrl_en_40 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_40\ ,
            hw_ctrl_en_39 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_39\ ,
            hw_ctrl_en_38 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_38\ ,
            hw_ctrl_en_37 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_37\ ,
            hw_ctrl_en_36 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_36\ ,
            hw_ctrl_en_35 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_35\ ,
            hw_ctrl_en_34 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_34\ ,
            hw_ctrl_en_33 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_33\ ,
            hw_ctrl_en_32 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_32\ ,
            hw_ctrl_en_31 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_31\ ,
            hw_ctrl_en_30 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_30\ ,
            hw_ctrl_en_29 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_29\ ,
            hw_ctrl_en_28 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_28\ ,
            hw_ctrl_en_27 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_27\ ,
            hw_ctrl_en_26 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_26\ ,
            hw_ctrl_en_25 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_25\ ,
            hw_ctrl_en_24 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_24\ ,
            hw_ctrl_en_23 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_23\ ,
            hw_ctrl_en_22 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_22\ ,
            hw_ctrl_en_21 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_21\ ,
            hw_ctrl_en_20 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_20\ ,
            hw_ctrl_en_19 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_19\ ,
            hw_ctrl_en_18 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_18\ ,
            hw_ctrl_en_17 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_17\ ,
            hw_ctrl_en_16 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_16\ ,
            hw_ctrl_en_15 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_15\ ,
            hw_ctrl_en_14 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_14\ ,
            hw_ctrl_en_13 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_13\ ,
            hw_ctrl_en_12 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_12\ ,
            hw_ctrl_en_11 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_11\ ,
            hw_ctrl_en_10 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_10\ ,
            hw_ctrl_en_9 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_9\ ,
            hw_ctrl_en_8 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_8\ ,
            hw_ctrl_en_7 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_7\ ,
            hw_ctrl_en_6 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_6\ ,
            hw_ctrl_en_5 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_5\ ,
            hw_ctrl_en_4 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_4\ ,
            hw_ctrl_en_3 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_3\ ,
            hw_ctrl_en_2 => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_2\ ,
            vout => \ADC_SAR_Seq:Net_2803\ );
        Properties:
        {
            api_type = 2
            connect_mode = 1
            cy_registers = ""
            hw_control = 1
            init_mux_sel = "0000000000000000000000000000000000000000000000000000000000000000"
            muxin_width = 64
            one_active = 1
        }
</CYPRESSTAG>
<CYPRESSTAG name="Port Configuration Details">

------------------------------------------------------------
Port Configuration report
------------------------------------------------------------
     |     |       | Interrupt |                  |                       | 
Port | Pin | Fixed |      Type |       Drive Mode |                  Name | Connections
-----+-----+-------+-----------+------------------+-----------------------+---------------------------------------------------------------
   0 |   0 |     * |      NONE |         CMOS_OUT |            si_liga(0) | 
     |   1 |     * |      NONE |         CMOS_OUT |            si_desl(0) | 
     |   2 |     * |      NONE |         CMOS_OUT |          si_rearme(0) | 
     |   3 |     * |      NONE |         CMOS_OUT |           si_emerg(0) | 
     |   4 |     * |      NONE |         CMOS_OUT |          si_alerta(0) | 
     |   5 |     * |      NONE |         CMOS_OUT |          al_sonoro(0) | 
     |   6 |       |      NONE |         CMOS_OUT |                LED(0) | In(Net_167)
     |   7 |       |      NONE |         CMOS_OUT |                LED(1) | In(Net_213)
-----+-----+-------+-----------+------------------+-----------------------+---------------------------------------------------------------
   1 |   2 |     * |   FALLING |      RES_PULL_UP |     se_indut_motor(0) | 
     |   4 |       |      NONE |     HI_Z_DIGITAL |       ProbeUART_Rx(0) | FB(Net_227)
     |   5 |       |      NONE |         CMOS_OUT |       ProbeUART_Tx(0) | In(Net_222)
-----+-----+-------+-----------+------------------+-----------------------+---------------------------------------------------------------
   2 |   0 |     * |      NONE |         CMOS_OUT | \LCD_Disp:LCDPort(0)\ | 
     |   1 |     * |      NONE |         CMOS_OUT | \LCD_Disp:LCDPort(1)\ | 
     |   2 |     * |      NONE |         CMOS_OUT | \LCD_Disp:LCDPort(2)\ | 
     |   3 |     * |      NONE |         CMOS_OUT | \LCD_Disp:LCDPort(3)\ | 
     |   4 |     * |      NONE |         CMOS_OUT | \LCD_Disp:LCDPort(4)\ | 
     |   5 |     * |      NONE |         CMOS_OUT | \LCD_Disp:LCDPort(5)\ | 
     |   6 |     * |      NONE |         CMOS_OUT | \LCD_Disp:LCDPort(6)\ | 
     |   7 |     * |   FALLING |      RES_PULL_UP |     se_indut_porta(0) | 
-----+-----+-------+-----------+------------------+-----------------------+---------------------------------------------------------------
   3 |   0 |     * |      NONE |      RES_PULL_UP |            bt_liga(0) | 
     |   1 |     * |      NONE |      RES_PULL_UP |            bt_desl(0) | 
     |   2 |     * |      NONE |      RES_PULL_UP |          bt_rearme(0) | 
     |   3 |     * |   FALLING |      RES_PULL_UP |           bt_emerg(0) | 
     |   6 |     * |      NONE |      HI_Z_ANALOG |      se_temp_motor(0) | In(\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_0\), Analog(Net_2517)
     |   7 |     * |      NONE |      HI_Z_ANALOG |     se_temp_quadro(0) | In(\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_1\), Analog(Net_2718)
-----+-----+-------+-----------+------------------+-----------------------+---------------------------------------------------------------
   4 |   0 |     * |      NONE |         CMOS_OUT |           ct_motor(0) | 
-----+-----+-------+-----------+------------------+-----------------------+---------------------------------------------------------------
   6 |   1 |     * |      NONE |      RES_PULL_UP |            bt_test(0) | 
     |   2 |     * |      NONE |      RES_PULL_UP |               PB_3(0) | 
-----+-----+-------+-----------+------------------+-----------------------+---------------------------------------------------------------
  15 |   5 |     * |      NONE |      RES_PULL_UP |               PB_2(0) | 
------------------------------------------------------------------------------------------------------------------------------------------
</CYPRESSTAG>
</CYPRESSTAG>
</CYPRESSTAG>
Digital component placer commit/Report: Elapsed time ==> 0s.190ms
Digital Placement phase: Elapsed time ==> 6s.976ms
</CYPRESSTAG>
<CYPRESSTAG name="Digital Routing">
"C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\bin/sjrouter.exe" --xml-path "C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\dev\psoc5/psoc5lp/route_arch-rrg.cydata" --vh2-path "BCC722-RTOS-MOINHO_r.vh2" --pcf-path "BCC722-RTOS-MOINHO.pco" --des-name "BCC722-RTOS-MOINHO" --dsf-path "BCC722-RTOS-MOINHO.dsf" --sdc-path "BCC722-RTOS-MOINHO.sdc" --lib-path "BCC722-RTOS-MOINHO_r.lib"
Routing successful.
Digital Routing phase: Elapsed time ==> 6s.230ms
</CYPRESSTAG>
<CYPRESSTAG name="Bitstream Generation">
Bitstream Generation phase: Elapsed time ==> 0s.211ms
</CYPRESSTAG>
<CYPRESSTAG name="Bitstream Verification">
Bitstream Verification phase: Elapsed time ==> 0s.048ms
</CYPRESSTAG>
<CYPRESSTAG name="Static timing analysis">
Warning: sta.M0021: BCC722-RTOS-MOINHO_timing.html: Warning-1350: Asynchronous path(s) exist from "ClockBlock/clk_bus_glb" to "ClockBlock/dclk_glb_0". See the timing report for details. (File=H:\BCC722-RTOS-moinho\UCoS\Micrium_2\Software\EvalBoards\Cypress\CY8CKIT-050\PSoC\uCOS-III-Probe\BCC722-RTOS-MOINHO.cydsn\BCC722-RTOS-MOINHO_timing.html)
Warning: sta.M0021: BCC722-RTOS-MOINHO_timing.html: Warning-1350: Asynchronous path(s) exist from "ClockBlock/clk_bus_glb" to "ClockBlock/dclk_glb_1". See the timing report for details. (File=H:\BCC722-RTOS-moinho\UCoS\Micrium_2\Software\EvalBoards\Cypress\CY8CKIT-050\PSoC\uCOS-III-Probe\BCC722-RTOS-MOINHO.cydsn\BCC722-RTOS-MOINHO_timing.html)
Warning: sta.M0021: BCC722-RTOS-MOINHO_timing.html: Warning-1350: Asynchronous path(s) exist from "ClockBlock/dclk_glb_0" to "ClockBlock/clk_bus_glb". See the timing report for details. (File=H:\BCC722-RTOS-moinho\UCoS\Micrium_2\Software\EvalBoards\Cypress\CY8CKIT-050\PSoC\uCOS-III-Probe\BCC722-RTOS-MOINHO.cydsn\BCC722-RTOS-MOINHO_timing.html)
Timing report is in BCC722-RTOS-MOINHO_timing.html.
Static timing analysis phase: Elapsed time ==> 0s.586ms
</CYPRESSTAG>
<CYPRESSTAG name="Data reporting">
Data reporting phase: Elapsed time ==> 0s.000ms
</CYPRESSTAG>
<CYPRESSTAG name="Database update...">
Design database save phase: Elapsed time ==> 0s.390ms
</CYPRESSTAG>
cydsfit: Elapsed time ==> 17s.856ms
</CYPRESSTAG>
Fitter phase: Elapsed time ==> 17s.856ms
API generation phase: Elapsed time ==> 1s.807ms
Dependency generation phase: Elapsed time ==> 0s.015ms
Cleanup phase: Elapsed time ==> 0s.000ms
