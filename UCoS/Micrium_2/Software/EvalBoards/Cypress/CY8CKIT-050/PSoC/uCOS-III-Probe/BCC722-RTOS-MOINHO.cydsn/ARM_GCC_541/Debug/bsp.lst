ARM GAS  C:\Users\alex\AppData\Local\Temp\cciAm60H.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"bsp.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	LED_REG_VAL,1,1
  20              		.section	.text.BSP_PreInit,"ax",%progbits
  21              		.align	2
  22              		.global	BSP_PreInit
  23              		.thumb
  24              		.thumb_func
  25              		.type	BSP_PreInit, %function
  26              	BSP_PreInit:
  27              	.LFB0:
  28              		.file 1 "..\\..\\BSP\\bsp.c"
   1:..\..\BSP/bsp.c **** /*
   2:..\..\BSP/bsp.c **** ***************************************************************************************************
   3:..\..\BSP/bsp.c **** *                                     MICIRUM BOARD SUPPORT PACKAGE
   4:..\..\BSP/bsp.c **** *
   5:..\..\BSP/bsp.c **** *                             (c) Copyright 2012; Micrium, Inc.; Weston, FL
   6:..\..\BSP/bsp.c **** *
   7:..\..\BSP/bsp.c **** *               All rights reserved.  Protected by international copyright laws.
   8:..\..\BSP/bsp.c **** *               Knowledge of the source code may NOT be used to develop a similar product.
   9:..\..\BSP/bsp.c **** *               Please help us continue to provide the Embedded community with the finest
  10:..\..\BSP/bsp.c **** *               software available.  Your honesty is greatly appreciated.
  11:..\..\BSP/bsp.c **** ***************************************************************************************************
  12:..\..\BSP/bsp.c **** */
  13:..\..\BSP/bsp.c **** 
  14:..\..\BSP/bsp.c **** /*
  15:..\..\BSP/bsp.c **** ***************************************************************************************************
  16:..\..\BSP/bsp.c **** *
  17:..\..\BSP/bsp.c **** *                                        BOARD SUPPORT PACKAGE
  18:..\..\BSP/bsp.c **** *
  19:..\..\BSP/bsp.c **** *                                           CYPRESS PSoC5
  20:..\..\BSP/bsp.c **** *                                              with the
  21:..\..\BSP/bsp.c **** *                                     CY8CKIT-050 Development Kit
  22:..\..\BSP/bsp.c **** *
  23:..\..\BSP/bsp.c **** * Filename      : bsp.c
  24:..\..\BSP/bsp.c **** * Version       : V1.00
  25:..\..\BSP/bsp.c **** * Programmer(s) : DC
  26:..\..\BSP/bsp.c **** ***************************************************************************************************
  27:..\..\BSP/bsp.c **** */
  28:..\..\BSP/bsp.c **** 
  29:..\..\BSP/bsp.c **** /*
ARM GAS  C:\Users\alex\AppData\Local\Temp\cciAm60H.s 			page 2


  30:..\..\BSP/bsp.c **** ***************************************************************************************************
  31:..\..\BSP/bsp.c **** *                                             INCLUDE FILES
  32:..\..\BSP/bsp.c **** ***************************************************************************************************
  33:..\..\BSP/bsp.c **** */
  34:..\..\BSP/bsp.c **** 
  35:..\..\BSP/bsp.c **** #define  BSP_MODULE
  36:..\..\BSP/bsp.c **** #include <bsp.h>
  37:..\..\BSP/bsp.c **** #include <bsp_psoc.h>
  38:..\..\BSP/bsp.c **** 
  39:..\..\BSP/bsp.c **** 
  40:..\..\BSP/bsp.c **** /*
  41:..\..\BSP/bsp.c **** ***************************************************************************************************
  42:..\..\BSP/bsp.c **** *                                            LOCAL DEFINES
  43:..\..\BSP/bsp.c **** ***************************************************************************************************
  44:..\..\BSP/bsp.c **** */
  45:..\..\BSP/bsp.c ****                                                     /* ------------------- LED DEFINITONS ---------
  46:..\..\BSP/bsp.c **** #define  LED_3                  1                   /* Represents 0x01, Control_0 Bit in Control Re
  47:..\..\BSP/bsp.c **** #define  LED_4                  2                   /* Represents 0x10, Control_1 Bit in Control Re
  48:..\..\BSP/bsp.c **** #define  ALL_LED                3                   /* Represents 0x11, Control_0 & 1 Bit in Contro
  49:..\..\BSP/bsp.c **** 
  50:..\..\BSP/bsp.c **** 
  51:..\..\BSP/bsp.c **** /*
  52:..\..\BSP/bsp.c **** ***************************************************************************************************
  53:..\..\BSP/bsp.c **** *                                           LOCAL CONSTANTS
  54:..\..\BSP/bsp.c **** ***************************************************************************************************
  55:..\..\BSP/bsp.c **** */
  56:..\..\BSP/bsp.c ****                                                                    
  57:..\..\BSP/bsp.c **** CPU_INT08U                      LED_REG_VAL;        /*
  58:..\..\BSP/bsp.c ****                                                     ***********************************************
  59:..\..\BSP/bsp.c ****                                                     * LED_REG_VAL is used to read the current value
  60:..\..\BSP/bsp.c ****                                                     * LED_Status Control Register using LED_Status_
  61:..\..\BSP/bsp.c ****                                                     * function and provides this information to the
  62:..\..\BSP/bsp.c ****                                                     * LED_Status_Write() function so it won't overw
  63:..\..\BSP/bsp.c ****                                                     * values from other LEDs. LED_Status_Write() th
  64:..\..\BSP/bsp.c ****                                                     * writes a single bit in the necessary control 
  65:..\..\BSP/bsp.c ****                                                     * register pin for the neceessary LED.
  66:..\..\BSP/bsp.c ****                                                     ***********************************************
  67:..\..\BSP/bsp.c ****                                                     */
  68:..\..\BSP/bsp.c **** 
  69:..\..\BSP/bsp.c **** /*
  70:..\..\BSP/bsp.c **** ***************************************************************************************************
  71:..\..\BSP/bsp.c **** *                                          LOCAL DATA TYPES
  72:..\..\BSP/bsp.c **** ***************************************************************************************************
  73:..\..\BSP/bsp.c **** */
  74:..\..\BSP/bsp.c **** 
  75:..\..\BSP/bsp.c **** 
  76:..\..\BSP/bsp.c **** /*
  77:..\..\BSP/bsp.c **** ***************************************************************************************************
  78:..\..\BSP/bsp.c **** *                                            LOCAL TABLES
  79:..\..\BSP/bsp.c **** ***************************************************************************************************
  80:..\..\BSP/bsp.c **** */
  81:..\..\BSP/bsp.c **** 
  82:..\..\BSP/bsp.c **** 
  83:..\..\BSP/bsp.c **** /*
  84:..\..\BSP/bsp.c **** ***************************************************************************************************
  85:..\..\BSP/bsp.c **** *                                       LOCAL GLOBAL VARIABLES
  86:..\..\BSP/bsp.c **** ***************************************************************************************************
ARM GAS  C:\Users\alex\AppData\Local\Temp\cciAm60H.s 			page 3


  87:..\..\BSP/bsp.c **** */
  88:..\..\BSP/bsp.c **** 
  89:..\..\BSP/bsp.c **** 
  90:..\..\BSP/bsp.c **** 
  91:..\..\BSP/bsp.c **** /*
  92:..\..\BSP/bsp.c **** ***************************************************************************************************
  93:..\..\BSP/bsp.c **** *                                      LOCAL FUNCTION PROTOTYPES
  94:..\..\BSP/bsp.c **** ***************************************************************************************************
  95:..\..\BSP/bsp.c **** */
  96:..\..\BSP/bsp.c **** 
  97:..\..\BSP/bsp.c **** 
  98:..\..\BSP/bsp.c **** /*
  99:..\..\BSP/bsp.c **** ***************************************************************************************************
 100:..\..\BSP/bsp.c **** *                                            REGISTER BITS
 101:..\..\BSP/bsp.c **** ***************************************************************************************************
 102:..\..\BSP/bsp.c **** */
 103:..\..\BSP/bsp.c **** 
 104:..\..\BSP/bsp.c **** 
 105:..\..\BSP/bsp.c **** /*
 106:..\..\BSP/bsp.c **** ***************************************************************************************************
 107:..\..\BSP/bsp.c **** *                                     LOCAL CONFIGURATION ERRORS
 108:..\..\BSP/bsp.c **** ***************************************************************************************************
 109:..\..\BSP/bsp.c **** */
 110:..\..\BSP/bsp.c **** 
 111:..\..\BSP/bsp.c **** 
 112:..\..\BSP/bsp.c **** /*
 113:..\..\BSP/bsp.c **** ***************************************************************************************************
 114:..\..\BSP/bsp.c **** *                                             BSP_PreInit()
 115:..\..\BSP/bsp.c **** *
 116:..\..\BSP/bsp.c **** * Description : Board support package pre-initialization funtion.
 117:..\..\BSP/bsp.c **** *
 118:..\..\BSP/bsp.c **** * Argument(s) : none.
 119:..\..\BSP/bsp.c **** *
 120:..\..\BSP/bsp.c **** * Return(s)   : none.
 121:..\..\BSP/bsp.c **** *
 122:..\..\BSP/bsp.c **** * Caller(s)   : Application.
 123:..\..\BSP/bsp.c **** *
 124:..\..\BSP/bsp.c **** * Note(s)     : (1) This funtion initializes peripherals required before the OS is initialized (e.g
 125:..\..\BSP/bsp.c **** *                   external memory.
 126:..\..\BSP/bsp.c **** ***************************************************************************************************
 127:..\..\BSP/bsp.c **** */
 128:..\..\BSP/bsp.c **** 
 129:..\..\BSP/bsp.c **** 
 130:..\..\BSP/bsp.c **** void BSP_PreInit (void)
 131:..\..\BSP/bsp.c **** {
  29              		.loc 1 131 0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34 0000 80B4     		push	{r7}
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 7, -4
  37 0002 83B0     		sub	sp, sp, #12
  38              		.cfi_def_cfa_offset 16
  39 0004 00AF     		add	r7, sp, #0
  40              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\alex\AppData\Local\Temp\cciAm60H.s 			page 4


 132:..\..\BSP/bsp.c ****     CPU_INT32U  reg_val;
 133:..\..\BSP/bsp.c ****     CPU_INT32U *p_vect_tbl;
 134:..\..\BSP/bsp.c ****     
 135:..\..\BSP/bsp.c ****     
 136:..\..\BSP/bsp.c ****     reg_val = CPU_REG_NVIC_VTOR;                                   /* Get the NVIC offset table    
  41              		.loc 1 136 0
  42 0006 0B4B     		ldr	r3, .L2
  43 0008 1B68     		ldr	r3, [r3]
  44 000a 7B60     		str	r3, [r7, #4]
 137:..\..\BSP/bsp.c ****     DEF_BIT_CLR(reg_val, DEF_BIT_29);                              /* Clear the TBLBASE bit        
  45              		.loc 1 137 0
  46 000c 7B68     		ldr	r3, [r7, #4]
  47 000e 23F00053 		bic	r3, r3, #536870912
  48 0012 7B60     		str	r3, [r7, #4]
 138:..\..\BSP/bsp.c ****     
 139:..\..\BSP/bsp.c ****      
 140:..\..\BSP/bsp.c ****     p_vect_tbl                  = (CPU_INT32U *)reg_val;           
  49              		.loc 1 140 0
  50 0014 7B68     		ldr	r3, [r7, #4]
  51 0016 3B60     		str	r3, [r7]
 141:..\..\BSP/bsp.c ****                                                                    /* Install the PendSV & Systick 
 142:..\..\BSP/bsp.c ****     p_vect_tbl[CPU_INT_PENDSV]  = (CPU_INT32U  )OS_CPU_PendSVHandler;
  52              		.loc 1 142 0
  53 0018 3B68     		ldr	r3, [r7]
  54 001a 3833     		adds	r3, r3, #56
  55 001c 064A     		ldr	r2, .L2+4
  56 001e 1A60     		str	r2, [r3]
 143:..\..\BSP/bsp.c ****     p_vect_tbl[CPU_INT_SYSTICK] = (CPU_INT32U  )OS_CPU_SysTickHandler;
  57              		.loc 1 143 0
  58 0020 3B68     		ldr	r3, [r7]
  59 0022 3C33     		adds	r3, r3, #60
  60 0024 054A     		ldr	r2, .L2+8
  61 0026 1A60     		str	r2, [r3]
 144:..\..\BSP/bsp.c **** }
  62              		.loc 1 144 0
  63 0028 00BF     		nop
  64 002a 0C37     		adds	r7, r7, #12
  65              		.cfi_def_cfa_offset 4
  66 002c BD46     		mov	sp, r7
  67              		.cfi_def_cfa_register 13
  68              		@ sp needed
  69 002e 80BC     		pop	{r7}
  70              		.cfi_restore 7
  71              		.cfi_def_cfa_offset 0
  72 0030 7047     		bx	lr
  73              	.L3:
  74 0032 00BF     		.align	2
  75              	.L2:
  76 0034 08ED00E0 		.word	-536810232
  77 0038 00000000 		.word	OS_CPU_PendSVHandler
  78 003c 00000000 		.word	OS_CPU_SysTickHandler
  79              		.cfi_endproc
  80              	.LFE0:
  81              		.size	BSP_PreInit, .-BSP_PreInit
  82              		.section	.text.BSP_PostInit,"ax",%progbits
  83              		.align	2
  84              		.global	BSP_PostInit
ARM GAS  C:\Users\alex\AppData\Local\Temp\cciAm60H.s 			page 5


  85              		.thumb
  86              		.thumb_func
  87              		.type	BSP_PostInit, %function
  88              	BSP_PostInit:
  89              	.LFB1:
 145:..\..\BSP/bsp.c **** 
 146:..\..\BSP/bsp.c **** 
 147:..\..\BSP/bsp.c **** /*
 148:..\..\BSP/bsp.c **** ***************************************************************************************************
 149:..\..\BSP/bsp.c **** *                                               BSP_PostInit()
 150:..\..\BSP/bsp.c **** *
 151:..\..\BSP/bsp.c **** * Description : Board Support Package Post initialization.
 152:..\..\BSP/bsp.c **** *
 153:..\..\BSP/bsp.c **** * Argument(s) : none.
 154:..\..\BSP/bsp.c **** *
 155:..\..\BSP/bsp.c **** * Return(s)   : none.
 156:..\..\BSP/bsp.c **** *
 157:..\..\BSP/bsp.c **** * Caller(s)   : Application.
 158:..\..\BSP/bsp.c **** *
 159:..\..\BSP/bsp.c **** * Note(s)     : (1) This funtion initilize peripherlas that requires the OS to be initialized.
 160:..\..\BSP/bsp.c **** ***************************************************************************************************
 161:..\..\BSP/bsp.c **** */
 162:..\..\BSP/bsp.c **** 
 163:..\..\BSP/bsp.c **** void  BSP_PostInit (void)
 164:..\..\BSP/bsp.c **** {
  90              		.loc 1 164 0
  91              		.cfi_startproc
  92              		@ args = 0, pretend = 0, frame = 0
  93              		@ frame_needed = 1, uses_anonymous_args = 0
  94              		@ link register save eliminated.
  95 0000 80B4     		push	{r7}
  96              		.cfi_def_cfa_offset 4
  97              		.cfi_offset 7, -4
  98 0002 00AF     		add	r7, sp, #0
  99              		.cfi_def_cfa_register 7
 165:..\..\BSP/bsp.c **** 
 166:..\..\BSP/bsp.c **** }
 100              		.loc 1 166 0
 101 0004 00BF     		nop
 102 0006 BD46     		mov	sp, r7
 103              		.cfi_def_cfa_register 13
 104              		@ sp needed
 105 0008 80BC     		pop	{r7}
 106              		.cfi_restore 7
 107              		.cfi_def_cfa_offset 0
 108 000a 7047     		bx	lr
 109              		.cfi_endproc
 110              	.LFE1:
 111              		.size	BSP_PostInit, .-BSP_PostInit
 112              		.section	.text.BSP_CPU_TickInit,"ax",%progbits
 113              		.align	2
 114              		.global	BSP_CPU_TickInit
 115              		.thumb
 116              		.thumb_func
 117              		.type	BSP_CPU_TickInit, %function
 118              	BSP_CPU_TickInit:
 119              	.LFB2:
ARM GAS  C:\Users\alex\AppData\Local\Temp\cciAm60H.s 			page 6


 167:..\..\BSP/bsp.c **** 
 168:..\..\BSP/bsp.c **** 
 169:..\..\BSP/bsp.c **** /*
 170:..\..\BSP/bsp.c **** ***************************************************************************************************
 171:..\..\BSP/bsp.c **** *                                       BSP_CPU_TickInit()
 172:..\..\BSP/bsp.c **** *
 173:..\..\BSP/bsp.c **** * Description : This function reads CPU registers to determine the CPU clock frequency of the chip 
 174:..\..\BSP/bsp.c **** *
 175:..\..\BSP/bsp.c **** * Argument(s) : none.
 176:..\..\BSP/bsp.c **** *
 177:..\..\BSP/bsp.c **** * Return(s)   : none.
 178:..\..\BSP/bsp.c **** *
 179:..\..\BSP/bsp.c **** * Caller(s)   : Application.
 180:..\..\BSP/bsp.c **** *
 181:..\..\BSP/bsp.c **** * Note(s)     : none.
 182:..\..\BSP/bsp.c **** ***************************************************************************************************
 183:..\..\BSP/bsp.c **** */
 184:..\..\BSP/bsp.c **** void  BSP_CPU_TickInit  (void)
 185:..\..\BSP/bsp.c **** {
 120              		.loc 1 185 0
 121              		.cfi_startproc
 122              		@ args = 0, pretend = 0, frame = 8
 123              		@ frame_needed = 1, uses_anonymous_args = 0
 124 0000 80B5     		push	{r7, lr}
 125              		.cfi_def_cfa_offset 8
 126              		.cfi_offset 7, -8
 127              		.cfi_offset 14, -4
 128 0002 82B0     		sub	sp, sp, #8
 129              		.cfi_def_cfa_offset 16
 130 0004 00AF     		add	r7, sp, #0
 131              		.cfi_def_cfa_register 7
 186:..\..\BSP/bsp.c ****     CPU_INT32U   cpu_clk_freq;
 187:..\..\BSP/bsp.c ****     CPU_INT32U   cnts;
 188:..\..\BSP/bsp.c ****     
 189:..\..\BSP/bsp.c ****     cpu_clk_freq = BSP_CPU_ClkFreq();                             /* Determine SysTick reference fr
 132              		.loc 1 189 0
 133 0006 FFF7FEFF 		bl	BSP_CPU_ClkFreq
 134 000a 7860     		str	r0, [r7, #4]
 190:..\..\BSP/bsp.c **** #if (OS_VERSION > 30000u)                                         /* Determine nbr SysTick incremen
 191:..\..\BSP/bsp.c ****     cnts         = (cpu_clk_freq / OSCfg_TickRate_Hz);
 135              		.loc 1 191 0
 136 000c 064B     		ldr	r3, .L6
 137 000e 1B68     		ldr	r3, [r3]
 138 0010 7A68     		ldr	r2, [r7, #4]
 139 0012 B2FBF3F3 		udiv	r3, r2, r3
 140 0016 3B60     		str	r3, [r7]
 192:..\..\BSP/bsp.c **** #else
 193:..\..\BSP/bsp.c ****     cnts         = (cpu_clk_freq / OS_TICKS_PER_SEC);
 194:..\..\BSP/bsp.c **** #endif
 195:..\..\BSP/bsp.c ****     OS_CPU_SysTickInit(cnts);                                     /* Init uC/OS periodic time src (
 141              		.loc 1 195 0
 142 0018 3868     		ldr	r0, [r7]
 143 001a FFF7FEFF 		bl	OS_CPU_SysTickInit
 196:..\..\BSP/bsp.c ****     
 197:..\..\BSP/bsp.c **** }
 144              		.loc 1 197 0
 145 001e 00BF     		nop
ARM GAS  C:\Users\alex\AppData\Local\Temp\cciAm60H.s 			page 7


 146 0020 0837     		adds	r7, r7, #8
 147              		.cfi_def_cfa_offset 8
 148 0022 BD46     		mov	sp, r7
 149              		.cfi_def_cfa_register 13
 150              		@ sp needed
 151 0024 80BD     		pop	{r7, pc}
 152              	.L7:
 153 0026 00BF     		.align	2
 154              	.L6:
 155 0028 00000000 		.word	OSCfg_TickRate_Hz
 156              		.cfi_endproc
 157              	.LFE2:
 158              		.size	BSP_CPU_TickInit, .-BSP_CPU_TickInit
 159              		.section	.text.BSP_CPU_ClkFreq,"ax",%progbits
 160              		.align	2
 161              		.global	BSP_CPU_ClkFreq
 162              		.thumb
 163              		.thumb_func
 164              		.type	BSP_CPU_ClkFreq, %function
 165              	BSP_CPU_ClkFreq:
 166              	.LFB3:
 198:..\..\BSP/bsp.c **** 
 199:..\..\BSP/bsp.c **** /*
 200:..\..\BSP/bsp.c **** ***************************************************************************************************
 201:..\..\BSP/bsp.c **** *                                            BSP_CPU_ClkFreq()
 202:..\..\BSP/bsp.c **** *
 203:..\..\BSP/bsp.c **** * Description : Read CPU registers to determine the CPU clock frequency of the chip.
 204:..\..\BSP/bsp.c **** *
 205:..\..\BSP/bsp.c **** * Argument(s) : none.
 206:..\..\BSP/bsp.c **** *
 207:..\..\BSP/bsp.c **** * Return(s)   : The CPU clock frequency, in Hz.
 208:..\..\BSP/bsp.c **** *
 209:..\..\BSP/bsp.c **** * Caller(s)   : Application.
 210:..\..\BSP/bsp.c **** *
 211:..\..\BSP/bsp.c **** * Note(s)     : none.
 212:..\..\BSP/bsp.c **** ***************************************************************************************************
 213:..\..\BSP/bsp.c **** */
 214:..\..\BSP/bsp.c **** 
 215:..\..\BSP/bsp.c **** CPU_INT32U  BSP_CPU_ClkFreq (void)
 216:..\..\BSP/bsp.c **** {
 167              		.loc 1 216 0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 0
 170              		@ frame_needed = 1, uses_anonymous_args = 0
 171              		@ link register save eliminated.
 172 0000 80B4     		push	{r7}
 173              		.cfi_def_cfa_offset 4
 174              		.cfi_offset 7, -4
 175 0002 00AF     		add	r7, sp, #0
 176              		.cfi_def_cfa_register 7
 217:..\..\BSP/bsp.c ****     return ((CPU_INT32U)BSP_PSOC_CPU_FREQ);
 177              		.loc 1 217 0
 178 0004 024B     		ldr	r3, .L10
 218:..\..\BSP/bsp.c **** }
 179              		.loc 1 218 0
 180 0006 1846     		mov	r0, r3
 181 0008 BD46     		mov	sp, r7
ARM GAS  C:\Users\alex\AppData\Local\Temp\cciAm60H.s 			page 8


 182              		.cfi_def_cfa_register 13
 183              		@ sp needed
 184 000a 80BC     		pop	{r7}
 185              		.cfi_restore 7
 186              		.cfi_def_cfa_offset 0
 187 000c 7047     		bx	lr
 188              	.L11:
 189 000e 00BF     		.align	2
 190              	.L10:
 191 0010 00879303 		.word	60000000
 192              		.cfi_endproc
 193              	.LFE3:
 194              		.size	BSP_CPU_ClkFreq, .-BSP_CPU_ClkFreq
 195              		.section	.text.BSP_LED_On,"ax",%progbits
 196              		.align	2
 197              		.global	BSP_LED_On
 198              		.thumb
 199              		.thumb_func
 200              		.type	BSP_LED_On, %function
 201              	BSP_LED_On:
 202              	.LFB4:
 219:..\..\BSP/bsp.c **** 
 220:..\..\BSP/bsp.c **** 
 221:..\..\BSP/bsp.c **** /*
 222:..\..\BSP/bsp.c **** ***************************************************************************************************
 223:..\..\BSP/bsp.c **** ***************************************************************************************************
 224:..\..\BSP/bsp.c **** *                                              LED FUNCTIONS
 225:..\..\BSP/bsp.c **** ***************************************************************************************************
 226:..\..\BSP/bsp.c **** ***************************************************************************************************
 227:..\..\BSP/bsp.c **** */
 228:..\..\BSP/bsp.c **** 
 229:..\..\BSP/bsp.c **** 
 230:..\..\BSP/bsp.c **** /*
 231:..\..\BSP/bsp.c **** ***************************************************************************************************
 232:..\..\BSP/bsp.c **** *                                             BSP_LED_On()
 233:..\..\BSP/bsp.c **** *
 234:..\..\BSP/bsp.c **** * Description : Turn ON any or all the LEDs on the board.
 235:..\..\BSP/bsp.c **** *
 236:..\..\BSP/bsp.c **** * Argument(s) : led     The ID of the LED to control:
 237:..\..\BSP/bsp.c **** *
 238:..\..\BSP/bsp.c **** *                       0    turns ON ALL the LEDs
 239:..\..\BSP/bsp.c **** *                       1    turns ON user LED1  on the board
 240:..\..\BSP/bsp.c **** *                       2    turns ON user LED2  on the board
 241:..\..\BSP/bsp.c **** *                       3    turns ON user LED3  on the board
 242:..\..\BSP/bsp.c **** *
 243:..\..\BSP/bsp.c **** * Return(s)   : none.
 244:..\..\BSP/bsp.c **** *
 245:..\..\BSP/bsp.c **** * Caller(s)   : Application.
 246:..\..\BSP/bsp.c **** *
 247:..\..\BSP/bsp.c **** * Note(s)     : none.
 248:..\..\BSP/bsp.c **** ***************************************************************************************************
 249:..\..\BSP/bsp.c **** */
 250:..\..\BSP/bsp.c **** 
 251:..\..\BSP/bsp.c **** void  BSP_LED_On (CPU_INT08U led)
 252:..\..\BSP/bsp.c **** {
 203              		.loc 1 252 0
 204              		.cfi_startproc
ARM GAS  C:\Users\alex\AppData\Local\Temp\cciAm60H.s 			page 9


 205              		@ args = 0, pretend = 0, frame = 8
 206              		@ frame_needed = 1, uses_anonymous_args = 0
 207 0000 80B5     		push	{r7, lr}
 208              		.cfi_def_cfa_offset 8
 209              		.cfi_offset 7, -8
 210              		.cfi_offset 14, -4
 211 0002 82B0     		sub	sp, sp, #8
 212              		.cfi_def_cfa_offset 16
 213 0004 00AF     		add	r7, sp, #0
 214              		.cfi_def_cfa_register 7
 215 0006 0346     		mov	r3, r0
 216 0008 FB71     		strb	r3, [r7, #7]
 253:..\..\BSP/bsp.c ****     switch (led) {
 217              		.loc 1 253 0
 218 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 219 000c 042B     		cmp	r3, #4
 220 000e 3AD8     		bhi	.L19
 221 0010 01A2     		adr	r2, .L15
 222 0012 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 223 0016 00BF     		.p2align 2
 224              	.L15:
 225 0018 2D000000 		.word	.L14+1
 226 001c 4B000000 		.word	.L16+1
 227 0020 4B000000 		.word	.L16+1
 228 0024 4B000000 		.word	.L16+1
 229 0028 69000000 		.word	.L17+1
 230              		.p2align 1
 231              	.L14:
 232              	.LBB2:
 254:..\..\BSP/bsp.c ****         case 0:
 255:..\..\BSP/bsp.c ****              LED_REG_VAL = LED_Status_Read();                   /* LED_Status Signifies the given n
 233              		.loc 1 255 0
 234 002c FFF7FEFF 		bl	LED_Status_Read
 235 0030 0346     		mov	r3, r0
 236 0032 DAB2     		uxtb	r2, r3
 237 0034 164B     		ldr	r3, .L20
 238 0036 1A70     		strb	r2, [r3]
 256:..\..\BSP/bsp.c ****              LED_Status_Write(LED_REG_VAL | ALL_LED);           /* the Control Register controlling
 239              		.loc 1 256 0
 240 0038 154B     		ldr	r3, .L20
 241 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 242 003c 43F00303 		orr	r3, r3, #3
 243 0040 DBB2     		uxtb	r3, r3
 244 0042 1846     		mov	r0, r3
 245 0044 FFF7FEFF 		bl	LED_Status_Write
 257:..\..\BSP/bsp.c ****              break;
 246              		.loc 1 257 0
 247 0048 1EE0     		b	.L18
 248              	.L16:
 258:..\..\BSP/bsp.c ****             
 259:..\..\BSP/bsp.c ****         case 1:
 260:..\..\BSP/bsp.c ****         case 2:
 261:..\..\BSP/bsp.c ****         case 3:
 262:..\..\BSP/bsp.c ****              LED_REG_VAL = LED_Status_Read();
 249              		.loc 1 262 0
 250 004a FFF7FEFF 		bl	LED_Status_Read
 251 004e 0346     		mov	r3, r0
ARM GAS  C:\Users\alex\AppData\Local\Temp\cciAm60H.s 			page 10


 252 0050 DAB2     		uxtb	r2, r3
 253 0052 0F4B     		ldr	r3, .L20
 254 0054 1A70     		strb	r2, [r3]
 263:..\..\BSP/bsp.c ****              LED_Status_Write(LED_REG_VAL | LED_3);
 255              		.loc 1 263 0
 256 0056 0E4B     		ldr	r3, .L20
 257 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 258 005a 43F00103 		orr	r3, r3, #1
 259 005e DBB2     		uxtb	r3, r3
 260 0060 1846     		mov	r0, r3
 261 0062 FFF7FEFF 		bl	LED_Status_Write
 264:..\..\BSP/bsp.c ****              break;
 262              		.loc 1 264 0
 263 0066 0FE0     		b	.L18
 264              	.L17:
 265:..\..\BSP/bsp.c ****              
 266:..\..\BSP/bsp.c ****              
 267:..\..\BSP/bsp.c ****         case 4:
 268:..\..\BSP/bsp.c ****              LED_REG_VAL = LED_Status_Read();
 265              		.loc 1 268 0
 266 0068 FFF7FEFF 		bl	LED_Status_Read
 267 006c 0346     		mov	r3, r0
 268 006e DAB2     		uxtb	r2, r3
 269 0070 074B     		ldr	r3, .L20
 270 0072 1A70     		strb	r2, [r3]
 269:..\..\BSP/bsp.c ****              LED_Status_Write(LED_REG_VAL | LED_4);
 271              		.loc 1 269 0
 272 0074 064B     		ldr	r3, .L20
 273 0076 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 274 0078 43F00203 		orr	r3, r3, #2
 275 007c DBB2     		uxtb	r3, r3
 276 007e 1846     		mov	r0, r3
 277 0080 FFF7FEFF 		bl	LED_Status_Write
 270:..\..\BSP/bsp.c ****              break;
 278              		.loc 1 270 0
 279 0084 00E0     		b	.L18
 280              	.L19:
 271:..\..\BSP/bsp.c **** 
 272:..\..\BSP/bsp.c **** 
 273:..\..\BSP/bsp.c ****         default:
 274:..\..\BSP/bsp.c ****              break;
 281              		.loc 1 274 0
 282 0086 00BF     		nop
 283              	.L18:
 284              	.LBE2:
 275:..\..\BSP/bsp.c ****     }
 276:..\..\BSP/bsp.c **** }
 285              		.loc 1 276 0
 286 0088 00BF     		nop
 287 008a 0837     		adds	r7, r7, #8
 288              		.cfi_def_cfa_offset 8
 289 008c BD46     		mov	sp, r7
 290              		.cfi_def_cfa_register 13
 291              		@ sp needed
 292 008e 80BD     		pop	{r7, pc}
 293              	.L21:
 294              		.align	2
ARM GAS  C:\Users\alex\AppData\Local\Temp\cciAm60H.s 			page 11


 295              	.L20:
 296 0090 00000000 		.word	LED_REG_VAL
 297              		.cfi_endproc
 298              	.LFE4:
 299              		.size	BSP_LED_On, .-BSP_LED_On
 300              		.section	.text.BSP_LED_Off,"ax",%progbits
 301              		.align	2
 302              		.global	BSP_LED_Off
 303              		.thumb
 304              		.thumb_func
 305              		.type	BSP_LED_Off, %function
 306              	BSP_LED_Off:
 307              	.LFB5:
 277:..\..\BSP/bsp.c **** 
 278:..\..\BSP/bsp.c **** 
 279:..\..\BSP/bsp.c **** /*
 280:..\..\BSP/bsp.c **** ***************************************************************************************************
 281:..\..\BSP/bsp.c **** *                                              BSP_LED_Off()
 282:..\..\BSP/bsp.c **** *
 283:..\..\BSP/bsp.c **** * Description : Turn OFF any or all the LEDs on the board.
 284:..\..\BSP/bsp.c **** *
 285:..\..\BSP/bsp.c **** * Argument(s) : led     The ID of the LED to control:
 286:..\..\BSP/bsp.c **** *
 287:..\..\BSP/bsp.c **** *                       0    turns OFF ALL the LEDs
 288:..\..\BSP/bsp.c **** *                       1    turns OFF user LED1  on the board
 289:..\..\BSP/bsp.c **** *                       2    turns OFF user LED2  on the board
 290:..\..\BSP/bsp.c **** *                       3    turns OFF user LED3  on the board
 291:..\..\BSP/bsp.c **** *
 292:..\..\BSP/bsp.c **** * Return(s)   : none.
 293:..\..\BSP/bsp.c **** *
 294:..\..\BSP/bsp.c **** * Caller(s)   : Application.
 295:..\..\BSP/bsp.c **** *
 296:..\..\BSP/bsp.c **** * Note(s)     : none.
 297:..\..\BSP/bsp.c **** ***************************************************************************************************
 298:..\..\BSP/bsp.c **** */
 299:..\..\BSP/bsp.c **** 
 300:..\..\BSP/bsp.c **** void  BSP_LED_Off (CPU_INT08U led)
 301:..\..\BSP/bsp.c **** {
 308              		.loc 1 301 0
 309              		.cfi_startproc
 310              		@ args = 0, pretend = 0, frame = 8
 311              		@ frame_needed = 1, uses_anonymous_args = 0
 312 0000 80B5     		push	{r7, lr}
 313              		.cfi_def_cfa_offset 8
 314              		.cfi_offset 7, -8
 315              		.cfi_offset 14, -4
 316 0002 82B0     		sub	sp, sp, #8
 317              		.cfi_def_cfa_offset 16
 318 0004 00AF     		add	r7, sp, #0
 319              		.cfi_def_cfa_register 7
 320 0006 0346     		mov	r3, r0
 321 0008 FB71     		strb	r3, [r7, #7]
 302:..\..\BSP/bsp.c ****         switch (led) {
 322              		.loc 1 302 0
 323 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 324 000c 042B     		cmp	r3, #4
 325 000e 37D8     		bhi	.L29
ARM GAS  C:\Users\alex\AppData\Local\Temp\cciAm60H.s 			page 12


 326 0010 01A2     		adr	r2, .L25
 327 0012 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 328 0016 00BF     		.p2align 2
 329              	.L25:
 330 0018 2D000000 		.word	.L24+1
 331 001c 49000000 		.word	.L26+1
 332 0020 49000000 		.word	.L26+1
 333 0024 49000000 		.word	.L26+1
 334 0028 65000000 		.word	.L27+1
 335              		.p2align 1
 336              	.L24:
 337              	.LBB3:
 303:..\..\BSP/bsp.c ****         case 0:
 304:..\..\BSP/bsp.c ****              LED_REG_VAL = LED_Status_Read();                   /* LED_Status Signifies the given n
 338              		.loc 1 304 0
 339 002c FFF7FEFF 		bl	LED_Status_Read
 340 0030 0346     		mov	r3, r0
 341 0032 DAB2     		uxtb	r2, r3
 342 0034 154B     		ldr	r3, .L30
 343 0036 1A70     		strb	r2, [r3]
 305:..\..\BSP/bsp.c ****              LED_Status_Write(LED_REG_VAL & ~ALL_LED);          /* the Control Register controlling
 344              		.loc 1 305 0
 345 0038 144B     		ldr	r3, .L30
 346 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 347 003c 23F00303 		bic	r3, r3, #3
 348 0040 1846     		mov	r0, r3
 349 0042 FFF7FEFF 		bl	LED_Status_Write
 306:..\..\BSP/bsp.c ****              break;
 350              		.loc 1 306 0
 351 0046 1CE0     		b	.L28
 352              	.L26:
 307:..\..\BSP/bsp.c ****             
 308:..\..\BSP/bsp.c ****         case 1:
 309:..\..\BSP/bsp.c ****         case 2:
 310:..\..\BSP/bsp.c ****         case 3:
 311:..\..\BSP/bsp.c ****              LED_REG_VAL = LED_Status_Read();
 353              		.loc 1 311 0
 354 0048 FFF7FEFF 		bl	LED_Status_Read
 355 004c 0346     		mov	r3, r0
 356 004e DAB2     		uxtb	r2, r3
 357 0050 0E4B     		ldr	r3, .L30
 358 0052 1A70     		strb	r2, [r3]
 312:..\..\BSP/bsp.c ****              LED_Status_Write(LED_REG_VAL & ~LED_3);
 359              		.loc 1 312 0
 360 0054 0D4B     		ldr	r3, .L30
 361 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 362 0058 23F00103 		bic	r3, r3, #1
 363 005c 1846     		mov	r0, r3
 364 005e FFF7FEFF 		bl	LED_Status_Write
 313:..\..\BSP/bsp.c ****              break;
 365              		.loc 1 313 0
 366 0062 0EE0     		b	.L28
 367              	.L27:
 314:..\..\BSP/bsp.c ****              
 315:..\..\BSP/bsp.c ****              
 316:..\..\BSP/bsp.c ****         case 4:
 317:..\..\BSP/bsp.c ****              LED_REG_VAL = LED_Status_Read();
ARM GAS  C:\Users\alex\AppData\Local\Temp\cciAm60H.s 			page 13


 368              		.loc 1 317 0
 369 0064 FFF7FEFF 		bl	LED_Status_Read
 370 0068 0346     		mov	r3, r0
 371 006a DAB2     		uxtb	r2, r3
 372 006c 074B     		ldr	r3, .L30
 373 006e 1A70     		strb	r2, [r3]
 318:..\..\BSP/bsp.c ****              LED_Status_Write(LED_REG_VAL & ~LED_4);
 374              		.loc 1 318 0
 375 0070 064B     		ldr	r3, .L30
 376 0072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 377 0074 23F00203 		bic	r3, r3, #2
 378 0078 1846     		mov	r0, r3
 379 007a FFF7FEFF 		bl	LED_Status_Write
 319:..\..\BSP/bsp.c ****              break;
 380              		.loc 1 319 0
 381 007e 00E0     		b	.L28
 382              	.L29:
 320:..\..\BSP/bsp.c **** 
 321:..\..\BSP/bsp.c **** 
 322:..\..\BSP/bsp.c ****         default:
 323:..\..\BSP/bsp.c ****              break;
 383              		.loc 1 323 0
 384 0080 00BF     		nop
 385              	.L28:
 386              	.LBE3:
 324:..\..\BSP/bsp.c ****     }
 325:..\..\BSP/bsp.c **** }
 387              		.loc 1 325 0
 388 0082 00BF     		nop
 389 0084 0837     		adds	r7, r7, #8
 390              		.cfi_def_cfa_offset 8
 391 0086 BD46     		mov	sp, r7
 392              		.cfi_def_cfa_register 13
 393              		@ sp needed
 394 0088 80BD     		pop	{r7, pc}
 395              	.L31:
 396 008a 00BF     		.align	2
 397              	.L30:
 398 008c 00000000 		.word	LED_REG_VAL
 399              		.cfi_endproc
 400              	.LFE5:
 401              		.size	BSP_LED_Off, .-BSP_LED_Off
 402              		.section	.text.BSP_LED_Toggle,"ax",%progbits
 403              		.align	2
 404              		.global	BSP_LED_Toggle
 405              		.thumb
 406              		.thumb_func
 407              		.type	BSP_LED_Toggle, %function
 408              	BSP_LED_Toggle:
 409              	.LFB6:
 326:..\..\BSP/bsp.c **** 
 327:..\..\BSP/bsp.c **** 
 328:..\..\BSP/bsp.c **** /*
 329:..\..\BSP/bsp.c **** ***************************************************************************************************
 330:..\..\BSP/bsp.c **** *                                            BSP_LED_Toggle()
 331:..\..\BSP/bsp.c **** *
 332:..\..\BSP/bsp.c **** * Description : TOGGLE any or all the LEDs on the board.
ARM GAS  C:\Users\alex\AppData\Local\Temp\cciAm60H.s 			page 14


 333:..\..\BSP/bsp.c **** *
 334:..\..\BSP/bsp.c **** * Argument(s) : led     The ID of the LED to control:
 335:..\..\BSP/bsp.c **** *
 336:..\..\BSP/bsp.c **** *                       0    TOGGLE ALL the LEDs
 337:..\..\BSP/bsp.c **** *                       1    TOGGLE user LED1  on the board
 338:..\..\BSP/bsp.c **** *                       2    TOGGLE user LED2  on the board
 339:..\..\BSP/bsp.c **** *                       3    TOGGLE user LED3  on the board
 340:..\..\BSP/bsp.c **** *
 341:..\..\BSP/bsp.c **** * Return(s)   : none.
 342:..\..\BSP/bsp.c **** *
 343:..\..\BSP/bsp.c **** * Caller(s)   : Application.
 344:..\..\BSP/bsp.c **** *
 345:..\..\BSP/bsp.c **** * Note(s)     : none.
 346:..\..\BSP/bsp.c **** ***************************************************************************************************
 347:..\..\BSP/bsp.c **** */
 348:..\..\BSP/bsp.c **** 
 349:..\..\BSP/bsp.c **** void  BSP_LED_Toggle (CPU_INT08U led)
 350:..\..\BSP/bsp.c **** {
 410              		.loc 1 350 0
 411              		.cfi_startproc
 412              		@ args = 0, pretend = 0, frame = 8
 413              		@ frame_needed = 1, uses_anonymous_args = 0
 414 0000 80B5     		push	{r7, lr}
 415              		.cfi_def_cfa_offset 8
 416              		.cfi_offset 7, -8
 417              		.cfi_offset 14, -4
 418 0002 82B0     		sub	sp, sp, #8
 419              		.cfi_def_cfa_offset 16
 420 0004 00AF     		add	r7, sp, #0
 421              		.cfi_def_cfa_register 7
 422 0006 0346     		mov	r3, r0
 423 0008 FB71     		strb	r3, [r7, #7]
 351:..\..\BSP/bsp.c ****         switch (led) {
 424              		.loc 1 351 0
 425 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 426 000c 042B     		cmp	r3, #4
 427 000e 3AD8     		bhi	.L39
 428 0010 01A2     		adr	r2, .L35
 429 0012 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 430 0016 00BF     		.p2align 2
 431              	.L35:
 432 0018 2D000000 		.word	.L34+1
 433 001c 4B000000 		.word	.L36+1
 434 0020 4B000000 		.word	.L36+1
 435 0024 4B000000 		.word	.L36+1
 436 0028 69000000 		.word	.L37+1
 437              		.p2align 1
 438              	.L34:
 439              	.LBB4:
 352:..\..\BSP/bsp.c ****         case 0:
 353:..\..\BSP/bsp.c ****              LED_REG_VAL = LED_Status_Read();                   /* LED_Status Signifies the given n
 440              		.loc 1 353 0
 441 002c FFF7FEFF 		bl	LED_Status_Read
 442 0030 0346     		mov	r3, r0
 443 0032 DAB2     		uxtb	r2, r3
 444 0034 164B     		ldr	r3, .L40
 445 0036 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\alex\AppData\Local\Temp\cciAm60H.s 			page 15


 354:..\..\BSP/bsp.c ****              LED_Status_Write(LED_REG_VAL ^ ALL_LED);           /* the Control Register controlling
 446              		.loc 1 354 0
 447 0038 154B     		ldr	r3, .L40
 448 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 449 003c 83F00303 		eor	r3, r3, #3
 450 0040 DBB2     		uxtb	r3, r3
 451 0042 1846     		mov	r0, r3
 452 0044 FFF7FEFF 		bl	LED_Status_Write
 355:..\..\BSP/bsp.c ****              break;                                             
 453              		.loc 1 355 0
 454 0048 1EE0     		b	.L38
 455              	.L36:
 356:..\..\BSP/bsp.c ****             
 357:..\..\BSP/bsp.c ****         case 1:
 358:..\..\BSP/bsp.c ****         case 2:
 359:..\..\BSP/bsp.c ****         case 3:
 360:..\..\BSP/bsp.c ****              LED_REG_VAL = LED_Status_Read();
 456              		.loc 1 360 0
 457 004a FFF7FEFF 		bl	LED_Status_Read
 458 004e 0346     		mov	r3, r0
 459 0050 DAB2     		uxtb	r2, r3
 460 0052 0F4B     		ldr	r3, .L40
 461 0054 1A70     		strb	r2, [r3]
 361:..\..\BSP/bsp.c ****              LED_Status_Write(LED_REG_VAL ^ LED_3);
 462              		.loc 1 361 0
 463 0056 0E4B     		ldr	r3, .L40
 464 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 465 005a 83F00103 		eor	r3, r3, #1
 466 005e DBB2     		uxtb	r3, r3
 467 0060 1846     		mov	r0, r3
 468 0062 FFF7FEFF 		bl	LED_Status_Write
 362:..\..\BSP/bsp.c ****              break;
 469              		.loc 1 362 0
 470 0066 0FE0     		b	.L38
 471              	.L37:
 363:..\..\BSP/bsp.c ****              
 364:..\..\BSP/bsp.c ****              
 365:..\..\BSP/bsp.c ****         case 4:
 366:..\..\BSP/bsp.c ****              LED_REG_VAL = LED_Status_Read();
 472              		.loc 1 366 0
 473 0068 FFF7FEFF 		bl	LED_Status_Read
 474 006c 0346     		mov	r3, r0
 475 006e DAB2     		uxtb	r2, r3
 476 0070 074B     		ldr	r3, .L40
 477 0072 1A70     		strb	r2, [r3]
 367:..\..\BSP/bsp.c ****              LED_Status_Write(LED_REG_VAL ^ LED_4);
 478              		.loc 1 367 0
 479 0074 064B     		ldr	r3, .L40
 480 0076 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 481 0078 83F00203 		eor	r3, r3, #2
 482 007c DBB2     		uxtb	r3, r3
 483 007e 1846     		mov	r0, r3
 484 0080 FFF7FEFF 		bl	LED_Status_Write
 368:..\..\BSP/bsp.c ****              break;
 485              		.loc 1 368 0
 486 0084 00E0     		b	.L38
 487              	.L39:
ARM GAS  C:\Users\alex\AppData\Local\Temp\cciAm60H.s 			page 16


 369:..\..\BSP/bsp.c **** 
 370:..\..\BSP/bsp.c **** 
 371:..\..\BSP/bsp.c ****         default:
 372:..\..\BSP/bsp.c ****              break;
 488              		.loc 1 372 0
 489 0086 00BF     		nop
 490              	.L38:
 491              	.LBE4:
 373:..\..\BSP/bsp.c ****     }
 374:..\..\BSP/bsp.c **** }
 492              		.loc 1 374 0
 493 0088 00BF     		nop
 494 008a 0837     		adds	r7, r7, #8
 495              		.cfi_def_cfa_offset 8
 496 008c BD46     		mov	sp, r7
 497              		.cfi_def_cfa_register 13
 498              		@ sp needed
 499 008e 80BD     		pop	{r7, pc}
 500              	.L41:
 501              		.align	2
 502              	.L40:
 503 0090 00000000 		.word	LED_REG_VAL
 504              		.cfi_endproc
 505              	.LFE6:
 506              		.size	BSP_LED_Toggle, .-BSP_LED_Toggle
 507              		.section	.text.BSP_PB_StatusGet,"ax",%progbits
 508              		.align	2
 509              		.global	BSP_PB_StatusGet
 510              		.thumb
 511              		.thumb_func
 512              		.type	BSP_PB_StatusGet, %function
 513              	BSP_PB_StatusGet:
 514              	.LFB7:
 375:..\..\BSP/bsp.c **** 
 376:..\..\BSP/bsp.c **** 
 377:..\..\BSP/bsp.c **** /*
 378:..\..\BSP/bsp.c **** ***************************************************************************************************
 379:..\..\BSP/bsp.c **** *                                            BSP_PB_StatusGet()
 380:..\..\BSP/bsp.c **** *
 381:..\..\BSP/bsp.c **** * Description : Get the current status of the push buttons.
 382:..\..\BSP/bsp.c **** *
 383:..\..\BSP/bsp.c **** * Argument(s) : pb    Push button identifier.
 384:..\..\BSP/bsp.c **** *
 385:..\..\BSP/bsp.c **** *                           1 Board SW1
 386:..\..\BSP/bsp.c **** *                           2 Board SW2
 387:..\..\BSP/bsp.c **** *
 388:..\..\BSP/bsp.c **** * Return(s)   : DEF_ON    If the push button is pressed.
 389:..\..\BSP/bsp.c **** *               DEF_OFF,  otherwise
 390:..\..\BSP/bsp.c **** *
 391:..\..\BSP/bsp.c **** * Caller(s)   : application
 392:..\..\BSP/bsp.c **** *
 393:..\..\BSP/bsp.c **** * Note(s)     : none.
 394:..\..\BSP/bsp.c **** ***************************************************************************************************
 395:..\..\BSP/bsp.c **** */
 396:..\..\BSP/bsp.c **** 
 397:..\..\BSP/bsp.c **** CPU_BOOLEAN  BSP_PB_StatusGet (CPU_INT08U  pb)
 398:..\..\BSP/bsp.c **** {
ARM GAS  C:\Users\alex\AppData\Local\Temp\cciAm60H.s 			page 17


 515              		.loc 1 398 0
 516              		.cfi_startproc
 517              		@ args = 0, pretend = 0, frame = 16
 518              		@ frame_needed = 1, uses_anonymous_args = 0
 519 0000 80B5     		push	{r7, lr}
 520              		.cfi_def_cfa_offset 8
 521              		.cfi_offset 7, -8
 522              		.cfi_offset 14, -4
 523 0002 84B0     		sub	sp, sp, #16
 524              		.cfi_def_cfa_offset 24
 525 0004 00AF     		add	r7, sp, #0
 526              		.cfi_def_cfa_register 7
 527 0006 0346     		mov	r3, r0
 528 0008 FB71     		strb	r3, [r7, #7]
 399:..\..\BSP/bsp.c ****     CPU_INT08U    reg_val;
 400:..\..\BSP/bsp.c ****     CPU_BOOLEAN   pb_status;
 401:..\..\BSP/bsp.c **** 
 402:..\..\BSP/bsp.c **** 
 403:..\..\BSP/bsp.c ****     //reg_val   = BSP_PSOC_PB_RD();
 404:..\..\BSP/bsp.c ****     pb_status = DEF_OFF;
 529              		.loc 1 404 0
 530 000a 0023     		movs	r3, #0
 531 000c FB73     		strb	r3, [r7, #15]
 405:..\..\BSP/bsp.c **** 
 406:..\..\BSP/bsp.c ****     switch (pb) {
 532              		.loc 1 406 0
 533 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 534 0010 022B     		cmp	r3, #2
 535 0012 02D0     		beq	.L44
 536 0014 032B     		cmp	r3, #3
 537 0016 0ED0     		beq	.L45
 538              	.LBB5:
 407:..\..\BSP/bsp.c ****         case 2u:
 408:..\..\BSP/bsp.c ****              reg_val   = BSP_PSOC_PB_2_RD();
 409:..\..\BSP/bsp.c ****              pb_status = DEF_BIT_IS_CLR(reg_val, DEF_BIT_00);
 410:..\..\BSP/bsp.c ****              break;
 411:..\..\BSP/bsp.c ****              
 412:..\..\BSP/bsp.c ****         case 3u:
 413:..\..\BSP/bsp.c ****              reg_val   = BSP_PSOC_PB_3_RD();
 414:..\..\BSP/bsp.c ****              pb_status = DEF_BIT_IS_CLR(reg_val, DEF_BIT_00);
 415:..\..\BSP/bsp.c ****              break;
 416:..\..\BSP/bsp.c **** 
 417:..\..\BSP/bsp.c ****         default:
 418:..\..\BSP/bsp.c ****              break;
 539              		.loc 1 418 0
 540 0018 1BE0     		b	.L48
 541              	.L44:
 408:..\..\BSP/bsp.c ****              pb_status = DEF_BIT_IS_CLR(reg_val, DEF_BIT_00);
 542              		.loc 1 408 0
 543 001a FFF7FEFF 		bl	PB_2_Read
 544 001e 0346     		mov	r3, r0
 545 0020 BB73     		strb	r3, [r7, #14]
 409:..\..\BSP/bsp.c ****              break;
 546              		.loc 1 409 0
 547 0022 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 548 0024 03F00103 		and	r3, r3, #1
 549 0028 002B     		cmp	r3, #0
ARM GAS  C:\Users\alex\AppData\Local\Temp\cciAm60H.s 			page 18


 550 002a 01D1     		bne	.L46
 409:..\..\BSP/bsp.c ****              break;
 551              		.loc 1 409 0 is_stmt 0 discriminator 1
 552 002c 0123     		movs	r3, #1
 553 002e 00E0     		b	.L47
 554              	.L46:
 409:..\..\BSP/bsp.c ****              break;
 555              		.loc 1 409 0 discriminator 2
 556 0030 0023     		movs	r3, #0
 557              	.L47:
 409:..\..\BSP/bsp.c ****              break;
 558              		.loc 1 409 0 discriminator 4
 559 0032 FB73     		strb	r3, [r7, #15]
 410:..\..\BSP/bsp.c ****              
 560              		.loc 1 410 0 is_stmt 1 discriminator 4
 561 0034 0DE0     		b	.L48
 562              	.L45:
 413:..\..\BSP/bsp.c ****              pb_status = DEF_BIT_IS_CLR(reg_val, DEF_BIT_00);
 563              		.loc 1 413 0
 564 0036 FFF7FEFF 		bl	PB_3_Read
 565 003a 0346     		mov	r3, r0
 566 003c BB73     		strb	r3, [r7, #14]
 414:..\..\BSP/bsp.c ****              break;
 567              		.loc 1 414 0
 568 003e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 569 0040 03F00103 		and	r3, r3, #1
 570 0044 002B     		cmp	r3, #0
 571 0046 01D1     		bne	.L49
 414:..\..\BSP/bsp.c ****              break;
 572              		.loc 1 414 0 is_stmt 0 discriminator 1
 573 0048 0123     		movs	r3, #1
 574 004a 00E0     		b	.L50
 575              	.L49:
 414:..\..\BSP/bsp.c ****              break;
 576              		.loc 1 414 0 discriminator 2
 577 004c 0023     		movs	r3, #0
 578              	.L50:
 414:..\..\BSP/bsp.c ****              break;
 579              		.loc 1 414 0 discriminator 4
 580 004e FB73     		strb	r3, [r7, #15]
 415:..\..\BSP/bsp.c **** 
 581              		.loc 1 415 0 is_stmt 1 discriminator 4
 582 0050 00BF     		nop
 583              	.L48:
 584              	.LBE5:
 419:..\..\BSP/bsp.c ****     }
 420:..\..\BSP/bsp.c **** 
 421:..\..\BSP/bsp.c ****     return (pb_status);
 585              		.loc 1 421 0
 586 0052 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 422:..\..\BSP/bsp.c **** }
 587              		.loc 1 422 0
 588 0054 1846     		mov	r0, r3
 589 0056 1037     		adds	r7, r7, #16
 590              		.cfi_def_cfa_offset 8
 591 0058 BD46     		mov	sp, r7
 592              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\alex\AppData\Local\Temp\cciAm60H.s 			page 19


 593              		@ sp needed
 594 005a 80BD     		pop	{r7, pc}
 595              		.cfi_endproc
 596              	.LFE7:
 597              		.size	BSP_PB_StatusGet, .-BSP_PB_StatusGet
 598              		.text
 599              	.Letext0:
 600              		.file 2 "..\\..\\..\\..\\..\\..\\uC-CPU\\ARM-Cortex-M3\\GNU/cpu.h"
 601              		.file 3 "..\\..\\..\\..\\..\\..\\uCOS-III\\Source/os_type.h"
 602              		.file 4 "..\\..\\..\\..\\..\\..\\uCOS-III\\Source/os.h"
 603              		.section	.debug_info,"",%progbits
 604              	.Ldebug_info0:
 605 0000 E4020000 		.4byte	0x2e4
 606 0004 0400     		.2byte	0x4
 607 0006 00000000 		.4byte	.Ldebug_abbrev0
 608 000a 04       		.byte	0x4
 609 000b 01       		.uleb128 0x1
 610 000c 1C000000 		.4byte	.LASF36
 611 0010 0C       		.byte	0xc
 612 0011 92010000 		.4byte	.LASF37
 613 0015 07010000 		.4byte	.LASF38
 614 0019 00000000 		.4byte	.Ldebug_ranges0+0
 615 001d 00000000 		.4byte	0
 616 0021 00000000 		.4byte	.Ldebug_line0
 617 0025 02       		.uleb128 0x2
 618 0026 01       		.byte	0x1
 619 0027 08       		.byte	0x8
 620 0028 94020000 		.4byte	.LASF0
 621 002c 03       		.uleb128 0x3
 622 002d 54020000 		.4byte	.LASF2
 623 0031 02       		.byte	0x2
 624 0032 77       		.byte	0x77
 625 0033 37000000 		.4byte	0x37
 626 0037 02       		.uleb128 0x2
 627 0038 01       		.byte	0x1
 628 0039 08       		.byte	0x8
 629 003a DC010000 		.4byte	.LASF1
 630 003e 03       		.uleb128 0x3
 631 003f D1010000 		.4byte	.LASF3
 632 0043 02       		.byte	0x2
 633 0044 78       		.byte	0x78
 634 0045 37000000 		.4byte	0x37
 635 0049 02       		.uleb128 0x2
 636 004a 01       		.byte	0x1
 637 004b 06       		.byte	0x6
 638 004c DF020000 		.4byte	.LASF4
 639 0050 03       		.uleb128 0x3
 640 0051 60020000 		.4byte	.LASF5
 641 0055 02       		.byte	0x2
 642 0056 7A       		.byte	0x7a
 643 0057 5B000000 		.4byte	0x5b
 644 005b 02       		.uleb128 0x2
 645 005c 02       		.byte	0x2
 646 005d 07       		.byte	0x7
 647 005e E2000000 		.4byte	.LASF6
 648 0062 02       		.uleb128 0x2
 649 0063 02       		.byte	0x2
ARM GAS  C:\Users\alex\AppData\Local\Temp\cciAm60H.s 			page 20


 650 0064 05       		.byte	0x5
 651 0065 B0020000 		.4byte	.LASF7
 652 0069 03       		.uleb128 0x3
 653 006a FC000000 		.4byte	.LASF8
 654 006e 02       		.byte	0x2
 655 006f 7C       		.byte	0x7c
 656 0070 74000000 		.4byte	0x74
 657 0074 02       		.uleb128 0x2
 658 0075 04       		.byte	0x4
 659 0076 07       		.byte	0x7
 660 0077 30020000 		.4byte	.LASF9
 661 007b 04       		.uleb128 0x4
 662 007c 04       		.byte	0x4
 663 007d 05       		.byte	0x5
 664 007e 696E7400 		.ascii	"int\000"
 665 0082 03       		.uleb128 0x3
 666 0083 BB010000 		.4byte	.LASF10
 667 0087 02       		.byte	0x2
 668 0088 7E       		.byte	0x7e
 669 0089 8D000000 		.4byte	0x8d
 670 008d 02       		.uleb128 0x2
 671 008e 08       		.byte	0x8
 672 008f 07       		.byte	0x7
 673 0090 3D020000 		.4byte	.LASF11
 674 0094 02       		.uleb128 0x2
 675 0095 08       		.byte	0x8
 676 0096 05       		.byte	0x5
 677 0097 86020000 		.4byte	.LASF12
 678 009b 02       		.uleb128 0x2
 679 009c 04       		.byte	0x4
 680 009d 04       		.byte	0x4
 681 009e B6000000 		.4byte	.LASF13
 682 00a2 02       		.uleb128 0x2
 683 00a3 08       		.byte	0x8
 684 00a4 04       		.byte	0x4
 685 00a5 F5000000 		.4byte	.LASF14
 686 00a9 03       		.uleb128 0x3
 687 00aa A6020000 		.4byte	.LASF15
 688 00ae 02       		.byte	0x2
 689 00af 87       		.byte	0x87
 690 00b0 B4000000 		.4byte	0xb4
 691 00b4 05       		.uleb128 0x5
 692 00b5 69000000 		.4byte	0x69
 693 00b9 03       		.uleb128 0x3
 694 00ba C6010000 		.4byte	.LASF16
 695 00be 03       		.byte	0x3
 696 00bf 4D       		.byte	0x4d
 697 00c0 69000000 		.4byte	0x69
 698 00c4 02       		.uleb128 0x2
 699 00c5 04       		.byte	0x4
 700 00c6 07       		.byte	0x7
 701 00c7 78020000 		.4byte	.LASF17
 702 00cb 02       		.uleb128 0x2
 703 00cc 04       		.byte	0x4
 704 00cd 05       		.byte	0x5
 705 00ce D6020000 		.4byte	.LASF18
 706 00d2 02       		.uleb128 0x2
ARM GAS  C:\Users\alex\AppData\Local\Temp\cciAm60H.s 			page 21


 707 00d3 04       		.byte	0x4
 708 00d4 07       		.byte	0x7
 709 00d5 1E020000 		.4byte	.LASF19
 710 00d9 06       		.uleb128 0x6
 711 00da 10000000 		.4byte	.LASF22
 712 00de 01       		.byte	0x1
 713 00df 82       		.byte	0x82
 714 00e0 00000000 		.4byte	.LFB0
 715 00e4 40000000 		.4byte	.LFE0-.LFB0
 716 00e8 01       		.uleb128 0x1
 717 00e9 9C       		.byte	0x9c
 718 00ea 0B010000 		.4byte	0x10b
 719 00ee 07       		.uleb128 0x7
 720 00ef B3010000 		.4byte	.LASF20
 721 00f3 01       		.byte	0x1
 722 00f4 84       		.byte	0x84
 723 00f5 69000000 		.4byte	0x69
 724 00f9 02       		.uleb128 0x2
 725 00fa 91       		.byte	0x91
 726 00fb 74       		.sleb128 -12
 727 00fc 07       		.uleb128 0x7
 728 00fd CB020000 		.4byte	.LASF21
 729 0101 01       		.byte	0x1
 730 0102 85       		.byte	0x85
 731 0103 0B010000 		.4byte	0x10b
 732 0107 02       		.uleb128 0x2
 733 0108 91       		.byte	0x91
 734 0109 70       		.sleb128 -16
 735 010a 00       		.byte	0
 736 010b 08       		.uleb128 0x8
 737 010c 04       		.byte	0x4
 738 010d 69000000 		.4byte	0x69
 739 0111 09       		.uleb128 0x9
 740 0112 99020000 		.4byte	.LASF39
 741 0116 01       		.byte	0x1
 742 0117 A3       		.byte	0xa3
 743 0118 00000000 		.4byte	.LFB1
 744 011c 0C000000 		.4byte	.LFE1-.LFB1
 745 0120 01       		.uleb128 0x1
 746 0121 9C       		.byte	0x9c
 747 0122 0A       		.uleb128 0xa
 748 0123 BA020000 		.4byte	.LASF23
 749 0127 01       		.byte	0x1
 750 0128 B8       		.byte	0xb8
 751 0129 00000000 		.4byte	.LFB2
 752 012d 2C000000 		.4byte	.LFE2-.LFB2
 753 0131 01       		.uleb128 0x1
 754 0132 9C       		.byte	0x9c
 755 0133 54010000 		.4byte	0x154
 756 0137 07       		.uleb128 0x7
 757 0138 6B020000 		.4byte	.LASF24
 758 013c 01       		.byte	0x1
 759 013d BA       		.byte	0xba
 760 013e 69000000 		.4byte	0x69
 761 0142 02       		.uleb128 0x2
 762 0143 91       		.byte	0x91
 763 0144 74       		.sleb128 -12
ARM GAS  C:\Users\alex\AppData\Local\Temp\cciAm60H.s 			page 22


 764 0145 07       		.uleb128 0x7
 765 0146 81020000 		.4byte	.LASF25
 766 014a 01       		.byte	0x1
 767 014b BB       		.byte	0xbb
 768 014c 69000000 		.4byte	0x69
 769 0150 02       		.uleb128 0x2
 770 0151 91       		.byte	0x91
 771 0152 70       		.sleb128 -16
 772 0153 00       		.byte	0
 773 0154 0B       		.uleb128 0xb
 774 0155 0E020000 		.4byte	.LASF40
 775 0159 01       		.byte	0x1
 776 015a D7       		.byte	0xd7
 777 015b 69000000 		.4byte	0x69
 778 015f 00000000 		.4byte	.LFB3
 779 0163 14000000 		.4byte	.LFE3-.LFB3
 780 0167 01       		.uleb128 0x1
 781 0168 9C       		.byte	0x9c
 782 0169 0A       		.uleb128 0xa
 783 016a 03020000 		.4byte	.LASF26
 784 016e 01       		.byte	0x1
 785 016f FB       		.byte	0xfb
 786 0170 00000000 		.4byte	.LFB4
 787 0174 94000000 		.4byte	.LFE4-.LFB4
 788 0178 01       		.uleb128 0x1
 789 0179 9C       		.byte	0x9c
 790 017a B6010000 		.4byte	0x1b6
 791 017e 0C       		.uleb128 0xc
 792 017f 6C656400 		.ascii	"led\000"
 793 0183 01       		.byte	0x1
 794 0184 FB       		.byte	0xfb
 795 0185 3E000000 		.4byte	0x3e
 796 0189 02       		.uleb128 0x2
 797 018a 91       		.byte	0x91
 798 018b 77       		.sleb128 -9
 799 018c 0D       		.uleb128 0xd
 800 018d 2C000000 		.4byte	.LBB2
 801 0191 5C000000 		.4byte	.LBE2-.LBB2
 802 0195 0E       		.uleb128 0xe
 803 0196 00000000 		.4byte	.LASF28
 804 019a 01       		.byte	0x1
 805 019b FF       		.byte	0xff
 806 019c 7B000000 		.4byte	0x7b
 807 01a0 A6010000 		.4byte	0x1a6
 808 01a4 0F       		.uleb128 0xf
 809 01a5 00       		.byte	0
 810 01a6 10       		.uleb128 0x10
 811 01a7 A2010000 		.4byte	.LASF29
 812 01ab 01       		.byte	0x1
 813 01ac 0001     		.2byte	0x100
 814 01ae 7B000000 		.4byte	0x7b
 815 01b2 0F       		.uleb128 0xf
 816 01b3 00       		.byte	0
 817 01b4 00       		.byte	0
 818 01b5 00       		.byte	0
 819 01b6 11       		.uleb128 0x11
 820 01b7 AA000000 		.4byte	.LASF27
ARM GAS  C:\Users\alex\AppData\Local\Temp\cciAm60H.s 			page 23


 821 01bb 01       		.byte	0x1
 822 01bc 2C01     		.2byte	0x12c
 823 01be 00000000 		.4byte	.LFB5
 824 01c2 90000000 		.4byte	.LFE5-.LFB5
 825 01c6 01       		.uleb128 0x1
 826 01c7 9C       		.byte	0x9c
 827 01c8 05020000 		.4byte	0x205
 828 01cc 12       		.uleb128 0x12
 829 01cd 6C656400 		.ascii	"led\000"
 830 01d1 01       		.byte	0x1
 831 01d2 2C01     		.2byte	0x12c
 832 01d4 3E000000 		.4byte	0x3e
 833 01d8 02       		.uleb128 0x2
 834 01d9 91       		.byte	0x91
 835 01da 77       		.sleb128 -9
 836 01db 0D       		.uleb128 0xd
 837 01dc 2C000000 		.4byte	.LBB3
 838 01e0 56000000 		.4byte	.LBE3-.LBB3
 839 01e4 0E       		.uleb128 0xe
 840 01e5 00000000 		.4byte	.LASF28
 841 01e9 01       		.byte	0x1
 842 01ea FF       		.byte	0xff
 843 01eb 7B000000 		.4byte	0x7b
 844 01ef F5010000 		.4byte	0x1f5
 845 01f3 0F       		.uleb128 0xf
 846 01f4 00       		.byte	0
 847 01f5 10       		.uleb128 0x10
 848 01f6 A2010000 		.4byte	.LASF29
 849 01fa 01       		.byte	0x1
 850 01fb 0001     		.2byte	0x100
 851 01fd 7B000000 		.4byte	0x7b
 852 0201 0F       		.uleb128 0xf
 853 0202 00       		.byte	0
 854 0203 00       		.byte	0
 855 0204 00       		.byte	0
 856 0205 11       		.uleb128 0x11
 857 0206 F4010000 		.4byte	.LASF30
 858 020a 01       		.byte	0x1
 859 020b 5D01     		.2byte	0x15d
 860 020d 00000000 		.4byte	.LFB6
 861 0211 94000000 		.4byte	.LFE6-.LFB6
 862 0215 01       		.uleb128 0x1
 863 0216 9C       		.byte	0x9c
 864 0217 54020000 		.4byte	0x254
 865 021b 12       		.uleb128 0x12
 866 021c 6C656400 		.ascii	"led\000"
 867 0220 01       		.byte	0x1
 868 0221 5D01     		.2byte	0x15d
 869 0223 3E000000 		.4byte	0x3e
 870 0227 02       		.uleb128 0x2
 871 0228 91       		.byte	0x91
 872 0229 77       		.sleb128 -9
 873 022a 0D       		.uleb128 0xd
 874 022b 2C000000 		.4byte	.LBB4
 875 022f 5C000000 		.4byte	.LBE4-.LBB4
 876 0233 0E       		.uleb128 0xe
 877 0234 00000000 		.4byte	.LASF28
ARM GAS  C:\Users\alex\AppData\Local\Temp\cciAm60H.s 			page 24


 878 0238 01       		.byte	0x1
 879 0239 FF       		.byte	0xff
 880 023a 7B000000 		.4byte	0x7b
 881 023e 44020000 		.4byte	0x244
 882 0242 0F       		.uleb128 0xf
 883 0243 00       		.byte	0
 884 0244 10       		.uleb128 0x10
 885 0245 A2010000 		.4byte	.LASF29
 886 0249 01       		.byte	0x1
 887 024a 0001     		.2byte	0x100
 888 024c 7B000000 		.4byte	0x7b
 889 0250 0F       		.uleb128 0xf
 890 0251 00       		.byte	0
 891 0252 00       		.byte	0
 892 0253 00       		.byte	0
 893 0254 13       		.uleb128 0x13
 894 0255 81010000 		.4byte	.LASF41
 895 0259 01       		.byte	0x1
 896 025a 8D01     		.2byte	0x18d
 897 025c 2C000000 		.4byte	0x2c
 898 0260 00000000 		.4byte	.LFB7
 899 0264 5C000000 		.4byte	.LFE7-.LFB7
 900 0268 01       		.uleb128 0x1
 901 0269 9C       		.byte	0x9c
 902 026a C5020000 		.4byte	0x2c5
 903 026e 12       		.uleb128 0x12
 904 026f 706200   		.ascii	"pb\000"
 905 0272 01       		.byte	0x1
 906 0273 8D01     		.2byte	0x18d
 907 0275 3E000000 		.4byte	0x3e
 908 0279 02       		.uleb128 0x2
 909 027a 91       		.byte	0x91
 910 027b 6F       		.sleb128 -17
 911 027c 14       		.uleb128 0x14
 912 027d B3010000 		.4byte	.LASF20
 913 0281 01       		.byte	0x1
 914 0282 8F01     		.2byte	0x18f
 915 0284 3E000000 		.4byte	0x3e
 916 0288 02       		.uleb128 0x2
 917 0289 91       		.byte	0x91
 918 028a 76       		.sleb128 -10
 919 028b 14       		.uleb128 0x14
 920 028c BC000000 		.4byte	.LASF31
 921 0290 01       		.byte	0x1
 922 0291 9001     		.2byte	0x190
 923 0293 2C000000 		.4byte	0x2c
 924 0297 02       		.uleb128 0x2
 925 0298 91       		.byte	0x91
 926 0299 77       		.sleb128 -9
 927 029a 0D       		.uleb128 0xd
 928 029b 18000000 		.4byte	.LBB5
 929 029f 3A000000 		.4byte	.LBE5-.LBB5
 930 02a3 15       		.uleb128 0x15
 931 02a4 C6000000 		.4byte	.LASF32
 932 02a8 01       		.byte	0x1
 933 02a9 9801     		.2byte	0x198
 934 02ab 7B000000 		.4byte	0x7b
ARM GAS  C:\Users\alex\AppData\Local\Temp\cciAm60H.s 			page 25


 935 02af B5020000 		.4byte	0x2b5
 936 02b3 0F       		.uleb128 0xf
 937 02b4 00       		.byte	0
 938 02b5 10       		.uleb128 0x10
 939 02b6 EA010000 		.4byte	.LASF33
 940 02ba 01       		.byte	0x1
 941 02bb 9D01     		.2byte	0x19d
 942 02bd 7B000000 		.4byte	0x7b
 943 02c1 0F       		.uleb128 0xf
 944 02c2 00       		.byte	0
 945 02c3 00       		.byte	0
 946 02c4 00       		.byte	0
 947 02c5 16       		.uleb128 0x16
 948 02c6 D0000000 		.4byte	.LASF34
 949 02ca 04       		.byte	0x4
 950 02cb 0F05     		.2byte	0x50f
 951 02cd D1020000 		.4byte	0x2d1
 952 02d1 17       		.uleb128 0x17
 953 02d2 B9000000 		.4byte	0xb9
 954 02d6 18       		.uleb128 0x18
 955 02d7 EB020000 		.4byte	.LASF35
 956 02db 01       		.byte	0x1
 957 02dc 39       		.byte	0x39
 958 02dd 3E000000 		.4byte	0x3e
 959 02e1 05       		.uleb128 0x5
 960 02e2 03       		.byte	0x3
 961 02e3 00000000 		.4byte	LED_REG_VAL
 962 02e7 00       		.byte	0
 963              		.section	.debug_abbrev,"",%progbits
 964              	.Ldebug_abbrev0:
 965 0000 01       		.uleb128 0x1
 966 0001 11       		.uleb128 0x11
 967 0002 01       		.byte	0x1
 968 0003 25       		.uleb128 0x25
 969 0004 0E       		.uleb128 0xe
 970 0005 13       		.uleb128 0x13
 971 0006 0B       		.uleb128 0xb
 972 0007 03       		.uleb128 0x3
 973 0008 0E       		.uleb128 0xe
 974 0009 1B       		.uleb128 0x1b
 975 000a 0E       		.uleb128 0xe
 976 000b 55       		.uleb128 0x55
 977 000c 17       		.uleb128 0x17
 978 000d 11       		.uleb128 0x11
 979 000e 01       		.uleb128 0x1
 980 000f 10       		.uleb128 0x10
 981 0010 17       		.uleb128 0x17
 982 0011 00       		.byte	0
 983 0012 00       		.byte	0
 984 0013 02       		.uleb128 0x2
 985 0014 24       		.uleb128 0x24
 986 0015 00       		.byte	0
 987 0016 0B       		.uleb128 0xb
 988 0017 0B       		.uleb128 0xb
 989 0018 3E       		.uleb128 0x3e
 990 0019 0B       		.uleb128 0xb
 991 001a 03       		.uleb128 0x3
ARM GAS  C:\Users\alex\AppData\Local\Temp\cciAm60H.s 			page 26


 992 001b 0E       		.uleb128 0xe
 993 001c 00       		.byte	0
 994 001d 00       		.byte	0
 995 001e 03       		.uleb128 0x3
 996 001f 16       		.uleb128 0x16
 997 0020 00       		.byte	0
 998 0021 03       		.uleb128 0x3
 999 0022 0E       		.uleb128 0xe
 1000 0023 3A       		.uleb128 0x3a
 1001 0024 0B       		.uleb128 0xb
 1002 0025 3B       		.uleb128 0x3b
 1003 0026 0B       		.uleb128 0xb
 1004 0027 49       		.uleb128 0x49
 1005 0028 13       		.uleb128 0x13
 1006 0029 00       		.byte	0
 1007 002a 00       		.byte	0
 1008 002b 04       		.uleb128 0x4
 1009 002c 24       		.uleb128 0x24
 1010 002d 00       		.byte	0
 1011 002e 0B       		.uleb128 0xb
 1012 002f 0B       		.uleb128 0xb
 1013 0030 3E       		.uleb128 0x3e
 1014 0031 0B       		.uleb128 0xb
 1015 0032 03       		.uleb128 0x3
 1016 0033 08       		.uleb128 0x8
 1017 0034 00       		.byte	0
 1018 0035 00       		.byte	0
 1019 0036 05       		.uleb128 0x5
 1020 0037 35       		.uleb128 0x35
 1021 0038 00       		.byte	0
 1022 0039 49       		.uleb128 0x49
 1023 003a 13       		.uleb128 0x13
 1024 003b 00       		.byte	0
 1025 003c 00       		.byte	0
 1026 003d 06       		.uleb128 0x6
 1027 003e 2E       		.uleb128 0x2e
 1028 003f 01       		.byte	0x1
 1029 0040 3F       		.uleb128 0x3f
 1030 0041 19       		.uleb128 0x19
 1031 0042 03       		.uleb128 0x3
 1032 0043 0E       		.uleb128 0xe
 1033 0044 3A       		.uleb128 0x3a
 1034 0045 0B       		.uleb128 0xb
 1035 0046 3B       		.uleb128 0x3b
 1036 0047 0B       		.uleb128 0xb
 1037 0048 27       		.uleb128 0x27
 1038 0049 19       		.uleb128 0x19
 1039 004a 11       		.uleb128 0x11
 1040 004b 01       		.uleb128 0x1
 1041 004c 12       		.uleb128 0x12
 1042 004d 06       		.uleb128 0x6
 1043 004e 40       		.uleb128 0x40
 1044 004f 18       		.uleb128 0x18
 1045 0050 9742     		.uleb128 0x2117
 1046 0052 19       		.uleb128 0x19
 1047 0053 01       		.uleb128 0x1
 1048 0054 13       		.uleb128 0x13
ARM GAS  C:\Users\alex\AppData\Local\Temp\cciAm60H.s 			page 27


 1049 0055 00       		.byte	0
 1050 0056 00       		.byte	0
 1051 0057 07       		.uleb128 0x7
 1052 0058 34       		.uleb128 0x34
 1053 0059 00       		.byte	0
 1054 005a 03       		.uleb128 0x3
 1055 005b 0E       		.uleb128 0xe
 1056 005c 3A       		.uleb128 0x3a
 1057 005d 0B       		.uleb128 0xb
 1058 005e 3B       		.uleb128 0x3b
 1059 005f 0B       		.uleb128 0xb
 1060 0060 49       		.uleb128 0x49
 1061 0061 13       		.uleb128 0x13
 1062 0062 02       		.uleb128 0x2
 1063 0063 18       		.uleb128 0x18
 1064 0064 00       		.byte	0
 1065 0065 00       		.byte	0
 1066 0066 08       		.uleb128 0x8
 1067 0067 0F       		.uleb128 0xf
 1068 0068 00       		.byte	0
 1069 0069 0B       		.uleb128 0xb
 1070 006a 0B       		.uleb128 0xb
 1071 006b 49       		.uleb128 0x49
 1072 006c 13       		.uleb128 0x13
 1073 006d 00       		.byte	0
 1074 006e 00       		.byte	0
 1075 006f 09       		.uleb128 0x9
 1076 0070 2E       		.uleb128 0x2e
 1077 0071 00       		.byte	0
 1078 0072 3F       		.uleb128 0x3f
 1079 0073 19       		.uleb128 0x19
 1080 0074 03       		.uleb128 0x3
 1081 0075 0E       		.uleb128 0xe
 1082 0076 3A       		.uleb128 0x3a
 1083 0077 0B       		.uleb128 0xb
 1084 0078 3B       		.uleb128 0x3b
 1085 0079 0B       		.uleb128 0xb
 1086 007a 27       		.uleb128 0x27
 1087 007b 19       		.uleb128 0x19
 1088 007c 11       		.uleb128 0x11
 1089 007d 01       		.uleb128 0x1
 1090 007e 12       		.uleb128 0x12
 1091 007f 06       		.uleb128 0x6
 1092 0080 40       		.uleb128 0x40
 1093 0081 18       		.uleb128 0x18
 1094 0082 9742     		.uleb128 0x2117
 1095 0084 19       		.uleb128 0x19
 1096 0085 00       		.byte	0
 1097 0086 00       		.byte	0
 1098 0087 0A       		.uleb128 0xa
 1099 0088 2E       		.uleb128 0x2e
 1100 0089 01       		.byte	0x1
 1101 008a 3F       		.uleb128 0x3f
 1102 008b 19       		.uleb128 0x19
 1103 008c 03       		.uleb128 0x3
 1104 008d 0E       		.uleb128 0xe
 1105 008e 3A       		.uleb128 0x3a
ARM GAS  C:\Users\alex\AppData\Local\Temp\cciAm60H.s 			page 28


 1106 008f 0B       		.uleb128 0xb
 1107 0090 3B       		.uleb128 0x3b
 1108 0091 0B       		.uleb128 0xb
 1109 0092 27       		.uleb128 0x27
 1110 0093 19       		.uleb128 0x19
 1111 0094 11       		.uleb128 0x11
 1112 0095 01       		.uleb128 0x1
 1113 0096 12       		.uleb128 0x12
 1114 0097 06       		.uleb128 0x6
 1115 0098 40       		.uleb128 0x40
 1116 0099 18       		.uleb128 0x18
 1117 009a 9642     		.uleb128 0x2116
 1118 009c 19       		.uleb128 0x19
 1119 009d 01       		.uleb128 0x1
 1120 009e 13       		.uleb128 0x13
 1121 009f 00       		.byte	0
 1122 00a0 00       		.byte	0
 1123 00a1 0B       		.uleb128 0xb
 1124 00a2 2E       		.uleb128 0x2e
 1125 00a3 00       		.byte	0
 1126 00a4 3F       		.uleb128 0x3f
 1127 00a5 19       		.uleb128 0x19
 1128 00a6 03       		.uleb128 0x3
 1129 00a7 0E       		.uleb128 0xe
 1130 00a8 3A       		.uleb128 0x3a
 1131 00a9 0B       		.uleb128 0xb
 1132 00aa 3B       		.uleb128 0x3b
 1133 00ab 0B       		.uleb128 0xb
 1134 00ac 27       		.uleb128 0x27
 1135 00ad 19       		.uleb128 0x19
 1136 00ae 49       		.uleb128 0x49
 1137 00af 13       		.uleb128 0x13
 1138 00b0 11       		.uleb128 0x11
 1139 00b1 01       		.uleb128 0x1
 1140 00b2 12       		.uleb128 0x12
 1141 00b3 06       		.uleb128 0x6
 1142 00b4 40       		.uleb128 0x40
 1143 00b5 18       		.uleb128 0x18
 1144 00b6 9742     		.uleb128 0x2117
 1145 00b8 19       		.uleb128 0x19
 1146 00b9 00       		.byte	0
 1147 00ba 00       		.byte	0
 1148 00bb 0C       		.uleb128 0xc
 1149 00bc 05       		.uleb128 0x5
 1150 00bd 00       		.byte	0
 1151 00be 03       		.uleb128 0x3
 1152 00bf 08       		.uleb128 0x8
 1153 00c0 3A       		.uleb128 0x3a
 1154 00c1 0B       		.uleb128 0xb
 1155 00c2 3B       		.uleb128 0x3b
 1156 00c3 0B       		.uleb128 0xb
 1157 00c4 49       		.uleb128 0x49
 1158 00c5 13       		.uleb128 0x13
 1159 00c6 02       		.uleb128 0x2
 1160 00c7 18       		.uleb128 0x18
 1161 00c8 00       		.byte	0
 1162 00c9 00       		.byte	0
ARM GAS  C:\Users\alex\AppData\Local\Temp\cciAm60H.s 			page 29


 1163 00ca 0D       		.uleb128 0xd
 1164 00cb 0B       		.uleb128 0xb
 1165 00cc 01       		.byte	0x1
 1166 00cd 11       		.uleb128 0x11
 1167 00ce 01       		.uleb128 0x1
 1168 00cf 12       		.uleb128 0x12
 1169 00d0 06       		.uleb128 0x6
 1170 00d1 00       		.byte	0
 1171 00d2 00       		.byte	0
 1172 00d3 0E       		.uleb128 0xe
 1173 00d4 2E       		.uleb128 0x2e
 1174 00d5 01       		.byte	0x1
 1175 00d6 3F       		.uleb128 0x3f
 1176 00d7 19       		.uleb128 0x19
 1177 00d8 03       		.uleb128 0x3
 1178 00d9 0E       		.uleb128 0xe
 1179 00da 3A       		.uleb128 0x3a
 1180 00db 0B       		.uleb128 0xb
 1181 00dc 3B       		.uleb128 0x3b
 1182 00dd 0B       		.uleb128 0xb
 1183 00de 49       		.uleb128 0x49
 1184 00df 13       		.uleb128 0x13
 1185 00e0 3C       		.uleb128 0x3c
 1186 00e1 19       		.uleb128 0x19
 1187 00e2 01       		.uleb128 0x1
 1188 00e3 13       		.uleb128 0x13
 1189 00e4 00       		.byte	0
 1190 00e5 00       		.byte	0
 1191 00e6 0F       		.uleb128 0xf
 1192 00e7 18       		.uleb128 0x18
 1193 00e8 00       		.byte	0
 1194 00e9 00       		.byte	0
 1195 00ea 00       		.byte	0
 1196 00eb 10       		.uleb128 0x10
 1197 00ec 2E       		.uleb128 0x2e
 1198 00ed 01       		.byte	0x1
 1199 00ee 3F       		.uleb128 0x3f
 1200 00ef 19       		.uleb128 0x19
 1201 00f0 03       		.uleb128 0x3
 1202 00f1 0E       		.uleb128 0xe
 1203 00f2 3A       		.uleb128 0x3a
 1204 00f3 0B       		.uleb128 0xb
 1205 00f4 3B       		.uleb128 0x3b
 1206 00f5 05       		.uleb128 0x5
 1207 00f6 49       		.uleb128 0x49
 1208 00f7 13       		.uleb128 0x13
 1209 00f8 3C       		.uleb128 0x3c
 1210 00f9 19       		.uleb128 0x19
 1211 00fa 00       		.byte	0
 1212 00fb 00       		.byte	0
 1213 00fc 11       		.uleb128 0x11
 1214 00fd 2E       		.uleb128 0x2e
 1215 00fe 01       		.byte	0x1
 1216 00ff 3F       		.uleb128 0x3f
 1217 0100 19       		.uleb128 0x19
 1218 0101 03       		.uleb128 0x3
 1219 0102 0E       		.uleb128 0xe
ARM GAS  C:\Users\alex\AppData\Local\Temp\cciAm60H.s 			page 30


 1220 0103 3A       		.uleb128 0x3a
 1221 0104 0B       		.uleb128 0xb
 1222 0105 3B       		.uleb128 0x3b
 1223 0106 05       		.uleb128 0x5
 1224 0107 27       		.uleb128 0x27
 1225 0108 19       		.uleb128 0x19
 1226 0109 11       		.uleb128 0x11
 1227 010a 01       		.uleb128 0x1
 1228 010b 12       		.uleb128 0x12
 1229 010c 06       		.uleb128 0x6
 1230 010d 40       		.uleb128 0x40
 1231 010e 18       		.uleb128 0x18
 1232 010f 9642     		.uleb128 0x2116
 1233 0111 19       		.uleb128 0x19
 1234 0112 01       		.uleb128 0x1
 1235 0113 13       		.uleb128 0x13
 1236 0114 00       		.byte	0
 1237 0115 00       		.byte	0
 1238 0116 12       		.uleb128 0x12
 1239 0117 05       		.uleb128 0x5
 1240 0118 00       		.byte	0
 1241 0119 03       		.uleb128 0x3
 1242 011a 08       		.uleb128 0x8
 1243 011b 3A       		.uleb128 0x3a
 1244 011c 0B       		.uleb128 0xb
 1245 011d 3B       		.uleb128 0x3b
 1246 011e 05       		.uleb128 0x5
 1247 011f 49       		.uleb128 0x49
 1248 0120 13       		.uleb128 0x13
 1249 0121 02       		.uleb128 0x2
 1250 0122 18       		.uleb128 0x18
 1251 0123 00       		.byte	0
 1252 0124 00       		.byte	0
 1253 0125 13       		.uleb128 0x13
 1254 0126 2E       		.uleb128 0x2e
 1255 0127 01       		.byte	0x1
 1256 0128 3F       		.uleb128 0x3f
 1257 0129 19       		.uleb128 0x19
 1258 012a 03       		.uleb128 0x3
 1259 012b 0E       		.uleb128 0xe
 1260 012c 3A       		.uleb128 0x3a
 1261 012d 0B       		.uleb128 0xb
 1262 012e 3B       		.uleb128 0x3b
 1263 012f 05       		.uleb128 0x5
 1264 0130 27       		.uleb128 0x27
 1265 0131 19       		.uleb128 0x19
 1266 0132 49       		.uleb128 0x49
 1267 0133 13       		.uleb128 0x13
 1268 0134 11       		.uleb128 0x11
 1269 0135 01       		.uleb128 0x1
 1270 0136 12       		.uleb128 0x12
 1271 0137 06       		.uleb128 0x6
 1272 0138 40       		.uleb128 0x40
 1273 0139 18       		.uleb128 0x18
 1274 013a 9642     		.uleb128 0x2116
 1275 013c 19       		.uleb128 0x19
 1276 013d 01       		.uleb128 0x1
ARM GAS  C:\Users\alex\AppData\Local\Temp\cciAm60H.s 			page 31


 1277 013e 13       		.uleb128 0x13
 1278 013f 00       		.byte	0
 1279 0140 00       		.byte	0
 1280 0141 14       		.uleb128 0x14
 1281 0142 34       		.uleb128 0x34
 1282 0143 00       		.byte	0
 1283 0144 03       		.uleb128 0x3
 1284 0145 0E       		.uleb128 0xe
 1285 0146 3A       		.uleb128 0x3a
 1286 0147 0B       		.uleb128 0xb
 1287 0148 3B       		.uleb128 0x3b
 1288 0149 05       		.uleb128 0x5
 1289 014a 49       		.uleb128 0x49
 1290 014b 13       		.uleb128 0x13
 1291 014c 02       		.uleb128 0x2
 1292 014d 18       		.uleb128 0x18
 1293 014e 00       		.byte	0
 1294 014f 00       		.byte	0
 1295 0150 15       		.uleb128 0x15
 1296 0151 2E       		.uleb128 0x2e
 1297 0152 01       		.byte	0x1
 1298 0153 3F       		.uleb128 0x3f
 1299 0154 19       		.uleb128 0x19
 1300 0155 03       		.uleb128 0x3
 1301 0156 0E       		.uleb128 0xe
 1302 0157 3A       		.uleb128 0x3a
 1303 0158 0B       		.uleb128 0xb
 1304 0159 3B       		.uleb128 0x3b
 1305 015a 05       		.uleb128 0x5
 1306 015b 49       		.uleb128 0x49
 1307 015c 13       		.uleb128 0x13
 1308 015d 3C       		.uleb128 0x3c
 1309 015e 19       		.uleb128 0x19
 1310 015f 01       		.uleb128 0x1
 1311 0160 13       		.uleb128 0x13
 1312 0161 00       		.byte	0
 1313 0162 00       		.byte	0
 1314 0163 16       		.uleb128 0x16
 1315 0164 34       		.uleb128 0x34
 1316 0165 00       		.byte	0
 1317 0166 03       		.uleb128 0x3
 1318 0167 0E       		.uleb128 0xe
 1319 0168 3A       		.uleb128 0x3a
 1320 0169 0B       		.uleb128 0xb
 1321 016a 3B       		.uleb128 0x3b
 1322 016b 05       		.uleb128 0x5
 1323 016c 49       		.uleb128 0x49
 1324 016d 13       		.uleb128 0x13
 1325 016e 3F       		.uleb128 0x3f
 1326 016f 19       		.uleb128 0x19
 1327 0170 3C       		.uleb128 0x3c
 1328 0171 19       		.uleb128 0x19
 1329 0172 00       		.byte	0
 1330 0173 00       		.byte	0
 1331 0174 17       		.uleb128 0x17
 1332 0175 26       		.uleb128 0x26
 1333 0176 00       		.byte	0
ARM GAS  C:\Users\alex\AppData\Local\Temp\cciAm60H.s 			page 32


 1334 0177 49       		.uleb128 0x49
 1335 0178 13       		.uleb128 0x13
 1336 0179 00       		.byte	0
 1337 017a 00       		.byte	0
 1338 017b 18       		.uleb128 0x18
 1339 017c 34       		.uleb128 0x34
 1340 017d 00       		.byte	0
 1341 017e 03       		.uleb128 0x3
 1342 017f 0E       		.uleb128 0xe
 1343 0180 3A       		.uleb128 0x3a
 1344 0181 0B       		.uleb128 0xb
 1345 0182 3B       		.uleb128 0x3b
 1346 0183 0B       		.uleb128 0xb
 1347 0184 49       		.uleb128 0x49
 1348 0185 13       		.uleb128 0x13
 1349 0186 3F       		.uleb128 0x3f
 1350 0187 19       		.uleb128 0x19
 1351 0188 02       		.uleb128 0x2
 1352 0189 18       		.uleb128 0x18
 1353 018a 00       		.byte	0
 1354 018b 00       		.byte	0
 1355 018c 00       		.byte	0
 1356              		.section	.debug_aranges,"",%progbits
 1357 0000 54000000 		.4byte	0x54
 1358 0004 0200     		.2byte	0x2
 1359 0006 00000000 		.4byte	.Ldebug_info0
 1360 000a 04       		.byte	0x4
 1361 000b 00       		.byte	0
 1362 000c 0000     		.2byte	0
 1363 000e 0000     		.2byte	0
 1364 0010 00000000 		.4byte	.LFB0
 1365 0014 40000000 		.4byte	.LFE0-.LFB0
 1366 0018 00000000 		.4byte	.LFB1
 1367 001c 0C000000 		.4byte	.LFE1-.LFB1
 1368 0020 00000000 		.4byte	.LFB2
 1369 0024 2C000000 		.4byte	.LFE2-.LFB2
 1370 0028 00000000 		.4byte	.LFB3
 1371 002c 14000000 		.4byte	.LFE3-.LFB3
 1372 0030 00000000 		.4byte	.LFB4
 1373 0034 94000000 		.4byte	.LFE4-.LFB4
 1374 0038 00000000 		.4byte	.LFB5
 1375 003c 90000000 		.4byte	.LFE5-.LFB5
 1376 0040 00000000 		.4byte	.LFB6
 1377 0044 94000000 		.4byte	.LFE6-.LFB6
 1378 0048 00000000 		.4byte	.LFB7
 1379 004c 5C000000 		.4byte	.LFE7-.LFB7
 1380 0050 00000000 		.4byte	0
 1381 0054 00000000 		.4byte	0
 1382              		.section	.debug_ranges,"",%progbits
 1383              	.Ldebug_ranges0:
 1384 0000 00000000 		.4byte	.LFB0
 1385 0004 40000000 		.4byte	.LFE0
 1386 0008 00000000 		.4byte	.LFB1
 1387 000c 0C000000 		.4byte	.LFE1
 1388 0010 00000000 		.4byte	.LFB2
 1389 0014 2C000000 		.4byte	.LFE2
 1390 0018 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\alex\AppData\Local\Temp\cciAm60H.s 			page 33


 1391 001c 14000000 		.4byte	.LFE3
 1392 0020 00000000 		.4byte	.LFB4
 1393 0024 94000000 		.4byte	.LFE4
 1394 0028 00000000 		.4byte	.LFB5
 1395 002c 90000000 		.4byte	.LFE5
 1396 0030 00000000 		.4byte	.LFB6
 1397 0034 94000000 		.4byte	.LFE6
 1398 0038 00000000 		.4byte	.LFB7
 1399 003c 5C000000 		.4byte	.LFE7
 1400 0040 00000000 		.4byte	0
 1401 0044 00000000 		.4byte	0
 1402              		.section	.debug_line,"",%progbits
 1403              	.Ldebug_line0:
 1404 0000 84010000 		.section	.debug_str,"MS",%progbits,1
 1404      02009100 
 1404      00000201 
 1404      FB0E0D00 
 1404      01010101 
 1405              	.LASF28:
 1406 0000 4C45445F 		.ascii	"LED_Status_Read\000"
 1406      53746174 
 1406      75735F52 
 1406      65616400 
 1407              	.LASF22:
 1408 0010 4253505F 		.ascii	"BSP_PreInit\000"
 1408      50726549 
 1408      6E697400 
 1409              	.LASF36:
 1410 001c 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1410      43313120 
 1410      352E342E 
 1410      31203230 
 1410      31363036 
 1411 004f 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1411      20726576 
 1411      6973696F 
 1411      6E203233 
 1411      37373135 
 1412 0082 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1412      66756E63 
 1412      74696F6E 
 1412      2D736563 
 1412      74696F6E 
 1413              	.LASF27:
 1414 00aa 4253505F 		.ascii	"BSP_LED_Off\000"
 1414      4C45445F 
 1414      4F666600 
 1415              	.LASF13:
 1416 00b6 666C6F61 		.ascii	"float\000"
 1416      7400
 1417              	.LASF31:
 1418 00bc 70625F73 		.ascii	"pb_status\000"
 1418      74617475 
 1418      7300
 1419              	.LASF32:
 1420 00c6 50425F32 		.ascii	"PB_2_Read\000"
 1420      5F526561 
ARM GAS  C:\Users\alex\AppData\Local\Temp\cciAm60H.s 			page 34


 1420      6400
 1421              	.LASF34:
 1422 00d0 4F534366 		.ascii	"OSCfg_TickRate_Hz\000"
 1422      675F5469 
 1422      636B5261 
 1422      74655F48 
 1422      7A00
 1423              	.LASF6:
 1424 00e2 73686F72 		.ascii	"short unsigned int\000"
 1424      7420756E 
 1424      7369676E 
 1424      65642069 
 1424      6E7400
 1425              	.LASF14:
 1426 00f5 646F7562 		.ascii	"double\000"
 1426      6C6500
 1427              	.LASF8:
 1428 00fc 4350555F 		.ascii	"CPU_INT32U\000"
 1428      494E5433 
 1428      325500
 1429              	.LASF38:
 1430 0107 483A5C42 		.ascii	"H:\\BCC722-RTOS-moinho\\UCoS\\Micrium_2\\Software\\"
 1430      43433732 
 1430      322D5254 
 1430      4F532D6D 
 1430      6F696E68 
 1431 0135 4576616C 		.ascii	"EvalBoards\\Cypress\\CY8CKIT-050\\PSoC\\uCOS-III-Pr"
 1431      426F6172 
 1431      64735C43 
 1431      79707265 
 1431      73735C43 
 1432 0164 6F62655C 		.ascii	"obe\\BCC722-RTOS-MOINHO.cydsn\000"
 1432      42434337 
 1432      32322D52 
 1432      544F532D 
 1432      4D4F494E 
 1433              	.LASF41:
 1434 0181 4253505F 		.ascii	"BSP_PB_StatusGet\000"
 1434      50425F53 
 1434      74617475 
 1434      73476574 
 1434      00
 1435              	.LASF37:
 1436 0192 2E2E5C2E 		.ascii	"..\\..\\BSP\\bsp.c\000"
 1436      2E5C4253 
 1436      505C6273 
 1436      702E6300 
 1437              	.LASF29:
 1438 01a2 4C45445F 		.ascii	"LED_Status_Write\000"
 1438      53746174 
 1438      75735F57 
 1438      72697465 
 1438      00
 1439              	.LASF20:
 1440 01b3 7265675F 		.ascii	"reg_val\000"
 1440      76616C00 
 1441              	.LASF10:
ARM GAS  C:\Users\alex\AppData\Local\Temp\cciAm60H.s 			page 35


 1442 01bb 4350555F 		.ascii	"CPU_INT64U\000"
 1442      494E5436 
 1442      345500
 1443              	.LASF16:
 1444 01c6 4F535F52 		.ascii	"OS_RATE_HZ\000"
 1444      4154455F 
 1444      485A00
 1445              	.LASF3:
 1446 01d1 4350555F 		.ascii	"CPU_INT08U\000"
 1446      494E5430 
 1446      385500
 1447              	.LASF1:
 1448 01dc 756E7369 		.ascii	"unsigned char\000"
 1448      676E6564 
 1448      20636861 
 1448      7200
 1449              	.LASF33:
 1450 01ea 50425F33 		.ascii	"PB_3_Read\000"
 1450      5F526561 
 1450      6400
 1451              	.LASF30:
 1452 01f4 4253505F 		.ascii	"BSP_LED_Toggle\000"
 1452      4C45445F 
 1452      546F6767 
 1452      6C6500
 1453              	.LASF26:
 1454 0203 4253505F 		.ascii	"BSP_LED_On\000"
 1454      4C45445F 
 1454      4F6E00
 1455              	.LASF40:
 1456 020e 4253505F 		.ascii	"BSP_CPU_ClkFreq\000"
 1456      4350555F 
 1456      436C6B46 
 1456      72657100 
 1457              	.LASF19:
 1458 021e 6C6F6E67 		.ascii	"long unsigned int\000"
 1458      20756E73 
 1458      69676E65 
 1458      6420696E 
 1458      7400
 1459              	.LASF9:
 1460 0230 756E7369 		.ascii	"unsigned int\000"
 1460      676E6564 
 1460      20696E74 
 1460      00
 1461              	.LASF11:
 1462 023d 6C6F6E67 		.ascii	"long long unsigned int\000"
 1462      206C6F6E 
 1462      6720756E 
 1462      7369676E 
 1462      65642069 
 1463              	.LASF2:
 1464 0254 4350555F 		.ascii	"CPU_BOOLEAN\000"
 1464      424F4F4C 
 1464      45414E00 
 1465              	.LASF5:
 1466 0260 4350555F 		.ascii	"CPU_INT16U\000"
ARM GAS  C:\Users\alex\AppData\Local\Temp\cciAm60H.s 			page 36


 1466      494E5431 
 1466      365500
 1467              	.LASF24:
 1468 026b 6370755F 		.ascii	"cpu_clk_freq\000"
 1468      636C6B5F 
 1468      66726571 
 1468      00
 1469              	.LASF17:
 1470 0278 73697A65 		.ascii	"sizetype\000"
 1470      74797065 
 1470      00
 1471              	.LASF25:
 1472 0281 636E7473 		.ascii	"cnts\000"
 1472      00
 1473              	.LASF12:
 1474 0286 6C6F6E67 		.ascii	"long long int\000"
 1474      206C6F6E 
 1474      6720696E 
 1474      7400
 1475              	.LASF0:
 1476 0294 63686172 		.ascii	"char\000"
 1476      00
 1477              	.LASF39:
 1478 0299 4253505F 		.ascii	"BSP_PostInit\000"
 1478      506F7374 
 1478      496E6974 
 1478      00
 1479              	.LASF15:
 1480 02a6 4350555F 		.ascii	"CPU_REG32\000"
 1480      52454733 
 1480      3200
 1481              	.LASF7:
 1482 02b0 73686F72 		.ascii	"short int\000"
 1482      7420696E 
 1482      7400
 1483              	.LASF23:
 1484 02ba 4253505F 		.ascii	"BSP_CPU_TickInit\000"
 1484      4350555F 
 1484      5469636B 
 1484      496E6974 
 1484      00
 1485              	.LASF21:
 1486 02cb 705F7665 		.ascii	"p_vect_tbl\000"
 1486      63745F74 
 1486      626C00
 1487              	.LASF18:
 1488 02d6 6C6F6E67 		.ascii	"long int\000"
 1488      20696E74 
 1488      00
 1489              	.LASF4:
 1490 02df 7369676E 		.ascii	"signed char\000"
 1490      65642063 
 1490      68617200 
 1491              	.LASF35:
 1492 02eb 4C45445F 		.ascii	"LED_REG_VAL\000"
 1492      5245475F 
 1492      56414C00 
ARM GAS  C:\Users\alex\AppData\Local\Temp\cciAm60H.s 			page 37


 1493              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
