ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"lib_str.c"
  14              		.section	.debug_abbrev,"",%progbits
  15              	.Ldebug_abbrev0:
  16              		.section	.debug_info,"",%progbits
  17              	.Ldebug_info0:
  18              		.section	.debug_line,"",%progbits
  19              	.Ldebug_line0:
  20 0000 F0030000 		.text
  20      02006F00 
  20      00000201 
  20      FB0E0D00 
  20      01010101 
  21              	.Ltext0:
  22              		.cfi_sections	.debug_frame
  23              		.section	.rodata
  24              		.align	2
  25              		.type	Str_MultOvfThTbl_Int32U, %object
  26              		.size	Str_MultOvfThTbl_Int32U, 148
  27              	Str_MultOvfThTbl_Int32U:
  28 0000 FFFFFFFF 		.word	-1
  29 0004 FFFFFFFF 		.word	-1
  30 0008 FFFFFF7F 		.word	2147483647
  31 000c 55555555 		.word	1431655765
  32 0010 FFFFFF3F 		.word	1073741823
  33 0014 33333333 		.word	858993459
  34 0018 AAAAAA2A 		.word	715827882
  35 001c 24499224 		.word	613566756
  36 0020 FFFFFF1F 		.word	536870911
  37 0024 1CC7711C 		.word	477218588
  38 0028 99999919 		.word	429496729
  39 002c 74D14517 		.word	390451572
  40 0030 55555515 		.word	357913941
  41 0034 133BB113 		.word	330382099
  42 0038 92244912 		.word	306783378
  43 003c 11111111 		.word	286331153
  44 0040 FFFFFF0F 		.word	268435455
  45 0044 0F0F0F0F 		.word	252645135
  46 0048 8EE3380E 		.word	238609294
  47 004c 5E43790D 		.word	226050910
  48 0050 CCCCCC0C 		.word	214748364
  49 0054 0CC3300C 		.word	204522252
  50 0058 BAE8A20B 		.word	195225786
  51 005c 2C64210B 		.word	186737708
  52 0060 AAAAAA0A 		.word	178956970
  53 0064 A3703D0A 		.word	171798691
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 2


  54 0068 899DD809 		.word	165191049
  55 006c 5E427B09 		.word	159072862
  56 0070 49922409 		.word	153391689
  57 0074 B0DCD308 		.word	148102320
  58 0078 88888808 		.word	143165576
  59 007c 84104208 		.word	138547332
  60 0080 FFFFFF07 		.word	134217727
  61 0084 7CF0C107 		.word	130150524
  62 0088 87878707 		.word	126322567
  63 008c 07755007 		.word	122713351
  64 0090 C7711C07 		.word	119304647
  65              		.section	.text.Str_Len,"ax",%progbits
  66              		.align	2
  67              		.global	Str_Len
  68              		.thumb
  69              		.thumb_func
  70              		.type	Str_Len, %function
  71              	Str_Len:
  72              	.LFB0:
  73              		.file 1 "C:\\Micrium\\Software\\uC-LIB\\lib_str.c"
   1:C:\Micrium\Software\uC-LIB\lib_str.c **** /*
   2:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
   3:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                                uC/LIB
   4:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                        CUSTOM LIBRARY MODULES
   5:C:\Micrium\Software\uC-LIB\lib_str.c **** *
   6:C:\Micrium\Software\uC-LIB\lib_str.c **** *                          (c) Copyright 2004-2012; Micrium, Inc.; Weston, FL
   7:C:\Micrium\Software\uC-LIB\lib_str.c **** *
   8:C:\Micrium\Software\uC-LIB\lib_str.c **** *               All rights reserved.  Protected by international copyright laws.
   9:C:\Micrium\Software\uC-LIB\lib_str.c **** *
  10:C:\Micrium\Software\uC-LIB\lib_str.c **** *               uC/LIB is provided in source form to registered licensees ONLY.  It is 
  11:C:\Micrium\Software\uC-LIB\lib_str.c **** *               illegal to distribute this source code to any third party unless you receive 
  12:C:\Micrium\Software\uC-LIB\lib_str.c **** *               written permission by an authorized Micrium representative.  Knowledge of 
  13:C:\Micrium\Software\uC-LIB\lib_str.c **** *               the source code may NOT be used to develop a similar product.
  14:C:\Micrium\Software\uC-LIB\lib_str.c **** *
  15:C:\Micrium\Software\uC-LIB\lib_str.c **** *               Please help us continue to provide the Embedded community with the finest 
  16:C:\Micrium\Software\uC-LIB\lib_str.c **** *               software available.  Your honesty is greatly appreciated.
  17:C:\Micrium\Software\uC-LIB\lib_str.c **** *
  18:C:\Micrium\Software\uC-LIB\lib_str.c **** *               You can contact us at www.micrium.com.
  19:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
  20:C:\Micrium\Software\uC-LIB\lib_str.c **** */
  21:C:\Micrium\Software\uC-LIB\lib_str.c **** 
  22:C:\Micrium\Software\uC-LIB\lib_str.c **** /*
  23:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
  24:C:\Micrium\Software\uC-LIB\lib_str.c **** *
  25:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       ASCII STRING MANAGEMENT
  26:C:\Micrium\Software\uC-LIB\lib_str.c **** *
  27:C:\Micrium\Software\uC-LIB\lib_str.c **** * Filename      : lib_str.c
  28:C:\Micrium\Software\uC-LIB\lib_str.c **** * Version       : V1.37.00
  29:C:\Micrium\Software\uC-LIB\lib_str.c **** * Programmer(s) : ITJ
  30:C:\Micrium\Software\uC-LIB\lib_str.c **** *                 BAN
  31:C:\Micrium\Software\uC-LIB\lib_str.c **** *                 JDH
  32:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
  33:C:\Micrium\Software\uC-LIB\lib_str.c **** * Note(s)       : (1) NO compiler-supplied standard library functions are used in library or produc
  34:C:\Micrium\Software\uC-LIB\lib_str.c **** *
  35:C:\Micrium\Software\uC-LIB\lib_str.c **** *                     (a) ALL standard library functions are implemented in the custom library modu
  36:C:\Micrium\Software\uC-LIB\lib_str.c **** *
  37:C:\Micrium\Software\uC-LIB\lib_str.c **** *                         (1) \<Custom Library Directory>\lib_*.*
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 3


  38:C:\Micrium\Software\uC-LIB\lib_str.c **** *
  39:C:\Micrium\Software\uC-LIB\lib_str.c **** *                         (2) \<Custom Library Directory>\Ports\<cpu>\<compiler>\lib*_a.*
  40:C:\Micrium\Software\uC-LIB\lib_str.c **** *
  41:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               where
  42:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       <Custom Library Directory>      directory path for custom l
  43:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       <cpu>                           directory name for specific
  44:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       <compiler>                      directory name for specific
  45:C:\Micrium\Software\uC-LIB\lib_str.c **** *
  46:C:\Micrium\Software\uC-LIB\lib_str.c **** *                     (b) Product-specific library functions are implemented in individual products
  47:C:\Micrium\Software\uC-LIB\lib_str.c **** *
  48:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
  49:C:\Micrium\Software\uC-LIB\lib_str.c **** * Notice(s)     : (1) The Institute of Electrical and Electronics Engineers and The Open Group, hav
  50:C:\Micrium\Software\uC-LIB\lib_str.c **** *                     us permission to reprint portions of their documentation.  Portions of this t
  51:C:\Micrium\Software\uC-LIB\lib_str.c **** *                     reprinted and reproduced in electronic form from the IEEE Std 1003.1, 2004 Ed
  52:C:\Micrium\Software\uC-LIB\lib_str.c **** *                     Standard for Information Technology -- Portable Operating System Interface (P
  53:C:\Micrium\Software\uC-LIB\lib_str.c **** *                     The Open Group Base Specifications Issue 6, Copyright (C) 2001-2004 by the In
  54:C:\Micrium\Software\uC-LIB\lib_str.c **** *                     of Electrical and Electronics Engineers, Inc and The Open Group.  In the even
  55:C:\Micrium\Software\uC-LIB\lib_str.c **** *                     discrepancy between these versions and the original IEEE and The Open Group S
  56:C:\Micrium\Software\uC-LIB\lib_str.c **** *                     the original IEEE and The Open Group Standard is the referee document.  The o
  57:C:\Micrium\Software\uC-LIB\lib_str.c **** *                     Standard can be obtained online at http://www.opengroup.org/unix/online.html.
  58:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
  59:C:\Micrium\Software\uC-LIB\lib_str.c **** */
  60:C:\Micrium\Software\uC-LIB\lib_str.c **** 
  61:C:\Micrium\Software\uC-LIB\lib_str.c **** 
  62:C:\Micrium\Software\uC-LIB\lib_str.c **** /*
  63:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
  64:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                            INCLUDE FILES
  65:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
  66:C:\Micrium\Software\uC-LIB\lib_str.c **** */
  67:C:\Micrium\Software\uC-LIB\lib_str.c **** 
  68:C:\Micrium\Software\uC-LIB\lib_str.c **** #define    MICRIUM_SOURCE
  69:C:\Micrium\Software\uC-LIB\lib_str.c **** #define    LIB_STR_MODULE
  70:C:\Micrium\Software\uC-LIB\lib_str.c **** #include  <lib_str.h>
  71:C:\Micrium\Software\uC-LIB\lib_str.c **** 
  72:C:\Micrium\Software\uC-LIB\lib_str.c **** 
  73:C:\Micrium\Software\uC-LIB\lib_str.c **** /*$PAGE*/
  74:C:\Micrium\Software\uC-LIB\lib_str.c **** /*
  75:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
  76:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                            LOCAL DEFINES
  77:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
  78:C:\Micrium\Software\uC-LIB\lib_str.c **** */
  79:C:\Micrium\Software\uC-LIB\lib_str.c **** 
  80:C:\Micrium\Software\uC-LIB\lib_str.c **** 
  81:C:\Micrium\Software\uC-LIB\lib_str.c **** /*
  82:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
  83:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                           LOCAL CONSTANTS
  84:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
  85:C:\Micrium\Software\uC-LIB\lib_str.c **** */
  86:C:\Micrium\Software\uC-LIB\lib_str.c **** 
  87:C:\Micrium\Software\uC-LIB\lib_str.c **** 
  88:C:\Micrium\Software\uC-LIB\lib_str.c **** /*
  89:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
  90:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                          LOCAL DATA TYPES
  91:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
  92:C:\Micrium\Software\uC-LIB\lib_str.c **** */
  93:C:\Micrium\Software\uC-LIB\lib_str.c **** 
  94:C:\Micrium\Software\uC-LIB\lib_str.c **** 
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 4


  95:C:\Micrium\Software\uC-LIB\lib_str.c **** /*
  96:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
  97:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                            LOCAL TABLES
  98:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
  99:C:\Micrium\Software\uC-LIB\lib_str.c **** */
 100:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 101:C:\Micrium\Software\uC-LIB\lib_str.c **** static  const  CPU_INT32U  Str_MultOvfThTbl_Int32U[] = {
 102:C:\Micrium\Software\uC-LIB\lib_str.c ****    (CPU_INT32U) DEF_INT_32U_MAX_VAL,                /*                Invalid base  0.  */
 103:C:\Micrium\Software\uC-LIB\lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL /  1u),         /*                Invalid base  1.  */
 104:C:\Micrium\Software\uC-LIB\lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL /  2u),         /* 32-bit mult ovf th for base  2.  */
 105:C:\Micrium\Software\uC-LIB\lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL /  3u),         /* 32-bit mult ovf th for base  3.  */
 106:C:\Micrium\Software\uC-LIB\lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL /  4u),         /* 32-bit mult ovf th for base  4.  */
 107:C:\Micrium\Software\uC-LIB\lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL /  5u),         /* 32-bit mult ovf th for base  5.  */
 108:C:\Micrium\Software\uC-LIB\lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL /  6u),         /* 32-bit mult ovf th for base  6.  */
 109:C:\Micrium\Software\uC-LIB\lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL /  7u),         /* 32-bit mult ovf th for base  7.  */
 110:C:\Micrium\Software\uC-LIB\lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL /  8u),         /* 32-bit mult ovf th for base  8.  */
 111:C:\Micrium\Software\uC-LIB\lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL /  9u),         /* 32-bit mult ovf th for base  9.  */
 112:C:\Micrium\Software\uC-LIB\lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 10u),         /* 32-bit mult ovf th for base 10.  */
 113:C:\Micrium\Software\uC-LIB\lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 11u),         /* 32-bit mult ovf th for base 11.  */
 114:C:\Micrium\Software\uC-LIB\lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 12u),         /* 32-bit mult ovf th for base 12.  */
 115:C:\Micrium\Software\uC-LIB\lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 13u),         /* 32-bit mult ovf th for base 13.  */
 116:C:\Micrium\Software\uC-LIB\lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 14u),         /* 32-bit mult ovf th for base 14.  */
 117:C:\Micrium\Software\uC-LIB\lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 15u),         /* 32-bit mult ovf th for base 15.  */
 118:C:\Micrium\Software\uC-LIB\lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 16u),         /* 32-bit mult ovf th for base 16.  */
 119:C:\Micrium\Software\uC-LIB\lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 17u),         /* 32-bit mult ovf th for base 17.  */
 120:C:\Micrium\Software\uC-LIB\lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 18u),         /* 32-bit mult ovf th for base 18.  */
 121:C:\Micrium\Software\uC-LIB\lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 19u),         /* 32-bit mult ovf th for base 19.  */
 122:C:\Micrium\Software\uC-LIB\lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 20u),         /* 32-bit mult ovf th for base 20.  */
 123:C:\Micrium\Software\uC-LIB\lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 21u),         /* 32-bit mult ovf th for base 21.  */
 124:C:\Micrium\Software\uC-LIB\lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 22u),         /* 32-bit mult ovf th for base 22.  */
 125:C:\Micrium\Software\uC-LIB\lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 23u),         /* 32-bit mult ovf th for base 23.  */
 126:C:\Micrium\Software\uC-LIB\lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 24u),         /* 32-bit mult ovf th for base 24.  */
 127:C:\Micrium\Software\uC-LIB\lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 25u),         /* 32-bit mult ovf th for base 25.  */
 128:C:\Micrium\Software\uC-LIB\lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 26u),         /* 32-bit mult ovf th for base 26.  */
 129:C:\Micrium\Software\uC-LIB\lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 27u),         /* 32-bit mult ovf th for base 27.  */
 130:C:\Micrium\Software\uC-LIB\lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 28u),         /* 32-bit mult ovf th for base 28.  */
 131:C:\Micrium\Software\uC-LIB\lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 29u),         /* 32-bit mult ovf th for base 29.  */
 132:C:\Micrium\Software\uC-LIB\lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 30u),         /* 32-bit mult ovf th for base 30.  */
 133:C:\Micrium\Software\uC-LIB\lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 31u),         /* 32-bit mult ovf th for base 31.  */
 134:C:\Micrium\Software\uC-LIB\lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 32u),         /* 32-bit mult ovf th for base 32.  */
 135:C:\Micrium\Software\uC-LIB\lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 33u),         /* 32-bit mult ovf th for base 33.  */
 136:C:\Micrium\Software\uC-LIB\lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 34u),         /* 32-bit mult ovf th for base 34.  */
 137:C:\Micrium\Software\uC-LIB\lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 35u),         /* 32-bit mult ovf th for base 35.  */
 138:C:\Micrium\Software\uC-LIB\lib_str.c ****    (CPU_INT32U)(DEF_INT_32U_MAX_VAL / 36u)          /* 32-bit mult ovf th for base 36.  */
 139:C:\Micrium\Software\uC-LIB\lib_str.c **** };
 140:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 141:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 142:C:\Micrium\Software\uC-LIB\lib_str.c **** /*
 143:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
 144:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       LOCAL GLOBAL VARIABLES
 145:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
 146:C:\Micrium\Software\uC-LIB\lib_str.c **** */
 147:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 148:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 149:C:\Micrium\Software\uC-LIB\lib_str.c **** /*$PAGE*/
 150:C:\Micrium\Software\uC-LIB\lib_str.c **** /*
 151:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 5


 152:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                      LOCAL FUNCTION PROTOTYPES
 153:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
 154:C:\Micrium\Software\uC-LIB\lib_str.c **** */
 155:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 156:C:\Micrium\Software\uC-LIB\lib_str.c **** static  CPU_CHAR    *Str_FmtNbr_Int32  (       CPU_INT32U     nbr,
 157:C:\Micrium\Software\uC-LIB\lib_str.c ****                                                CPU_INT08U     nbr_dig,
 158:C:\Micrium\Software\uC-LIB\lib_str.c ****                                                CPU_INT08U     nbr_base,
 159:C:\Micrium\Software\uC-LIB\lib_str.c ****                                                CPU_BOOLEAN    nbr_neg,
 160:C:\Micrium\Software\uC-LIB\lib_str.c ****                                                CPU_CHAR       lead_char,
 161:C:\Micrium\Software\uC-LIB\lib_str.c ****                                                CPU_BOOLEAN    lower_case,
 162:C:\Micrium\Software\uC-LIB\lib_str.c ****                                                CPU_BOOLEAN    nul,
 163:C:\Micrium\Software\uC-LIB\lib_str.c ****                                                CPU_CHAR      *pstr);
 164:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 165:C:\Micrium\Software\uC-LIB\lib_str.c **** static  CPU_INT32U   Str_ParseNbr_Int32(const  CPU_CHAR      *pstr,
 166:C:\Micrium\Software\uC-LIB\lib_str.c ****                                                CPU_CHAR     **pstr_next,
 167:C:\Micrium\Software\uC-LIB\lib_str.c ****                                                CPU_INT08U     nbr_base,
 168:C:\Micrium\Software\uC-LIB\lib_str.c ****                                                CPU_BOOLEAN    nbr_signed,
 169:C:\Micrium\Software\uC-LIB\lib_str.c ****                                                CPU_BOOLEAN   *pnbr_neg);
 170:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 171:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 172:C:\Micrium\Software\uC-LIB\lib_str.c **** /*
 173:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
 174:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                     LOCAL CONFIGURATION ERRORS
 175:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
 176:C:\Micrium\Software\uC-LIB\lib_str.c **** */
 177:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 178:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 179:C:\Micrium\Software\uC-LIB\lib_str.c **** /*$PAGE*/
 180:C:\Micrium\Software\uC-LIB\lib_str.c **** /*
 181:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
 182:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                              Str_Len()
 183:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 184:C:\Micrium\Software\uC-LIB\lib_str.c **** * Description : Calculate length of a string.
 185:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 186:C:\Micrium\Software\uC-LIB\lib_str.c **** * Argument(s) : pstr        Pointer to string (see Note #1).
 187:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 188:C:\Micrium\Software\uC-LIB\lib_str.c **** * Return(s)   : Length of string; number of characters in string before terminating NULL character 
 189:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (see Note #2b1).
 190:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 191:C:\Micrium\Software\uC-LIB\lib_str.c **** * Caller(s)   : Application.
 192:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 193:C:\Micrium\Software\uC-LIB\lib_str.c **** * Note(s)     : (1) String buffer NOT modified.
 194:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 195:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strlen() : DESCRIPTION' states that
 196:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 197:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) "The strlen() function shall compute the number of bytes in the string 
 198:C:\Micrium\Software\uC-LIB\lib_str.c **** *                            which 's' ('pstr') points," ...
 199:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) "not including the terminating null byte."
 200:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 201:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strlen() : RETURN VALUE' states tha
 202:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 203:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) "The strlen() function shall return the length of 's' ('pstr');" ...
 204:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) "no return value shall be reserved to indicate an error."
 205:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 206:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (3) String length calculation terminates when :
 207:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 208:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (a) String pointer points to NULL.
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 6


 209:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) String buffer overlaps with NULL address.
 210:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) String length calculated for string up to but NOT beyond or including
 211:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           the NULL address.
 212:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 213:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) Terminating NULL character found.
 214:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) String length calculated for string up to but NOT           including
 215:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           the NULL character (see Note #2a2).
 216:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
 217:C:\Micrium\Software\uC-LIB\lib_str.c **** */
 218:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 219:C:\Micrium\Software\uC-LIB\lib_str.c **** CPU_SIZE_T  Str_Len (const  CPU_CHAR  *pstr)
 220:C:\Micrium\Software\uC-LIB\lib_str.c **** {
  74              		.loc 1 220 0
  75              		.cfi_startproc
  76              		@ args = 0, pretend = 0, frame = 16
  77              		@ frame_needed = 1, uses_anonymous_args = 0
  78 0000 80B5     		push	{r7, lr}
  79              	.LCFI0:
  80              		.cfi_def_cfa_offset 8
  81 0002 84B0     		sub	sp, sp, #16
  82              	.LCFI1:
  83              		.cfi_def_cfa_offset 24
  84 0004 00AF     		add	r7, sp, #0
  85              		.cfi_offset 14, -4
  86              		.cfi_offset 7, -8
  87              	.LCFI2:
  88              		.cfi_def_cfa_register 7
  89 0006 7860     		str	r0, [r7, #4]
 221:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_SIZE_T  len;
 222:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 223:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 224:C:\Micrium\Software\uC-LIB\lib_str.c ****     len = Str_Len_N(pstr,
  90              		.loc 1 224 0
  91 0008 7868     		ldr	r0, [r7, #4]
  92 000a 4FF0FF31 		mov	r1, #-1
  93 000e FFF7FEFF 		bl	Str_Len_N
  94 0012 0346     		mov	r3, r0
  95 0014 FB60     		str	r3, [r7, #12]
 225:C:\Micrium\Software\uC-LIB\lib_str.c ****                     DEF_INT_CPU_U_MAX_VAL);
 226:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 227:C:\Micrium\Software\uC-LIB\lib_str.c ****     return (len);
  96              		.loc 1 227 0
  97 0016 FB68     		ldr	r3, [r7, #12]
 228:C:\Micrium\Software\uC-LIB\lib_str.c **** }
  98              		.loc 1 228 0
  99 0018 1846     		mov	r0, r3
 100 001a 07F11007 		add	r7, r7, #16
 101 001e BD46     		mov	sp, r7
 102 0020 80BD     		pop	{r7, pc}
 103              		.cfi_endproc
 104              	.LFE0:
 105              		.size	Str_Len, .-Str_Len
 106 0022 00BF     		.section	.text.Str_Len_N,"ax",%progbits
 107              		.align	2
 108              		.global	Str_Len_N
 109              		.thumb
 110              		.thumb_func
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 7


 111              		.type	Str_Len_N, %function
 112              	Str_Len_N:
 113              	.LFB1:
 229:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 230:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 231:C:\Micrium\Software\uC-LIB\lib_str.c **** /*$PAGE*/
 232:C:\Micrium\Software\uC-LIB\lib_str.c **** /*
 233:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
 234:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                             Str_Len_N()
 235:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 236:C:\Micrium\Software\uC-LIB\lib_str.c **** * Description : Calculate length of a string, up to a maximum number of characters.
 237:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 238:C:\Micrium\Software\uC-LIB\lib_str.c **** * Argument(s) : pstr        Pointer to string (see Note #1).
 239:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 240:C:\Micrium\Software\uC-LIB\lib_str.c **** *               len_max     Maximum number of characters to search (see Note #3c).
 241:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 242:C:\Micrium\Software\uC-LIB\lib_str.c **** * Return(s)   : Length of string; number of characters in string before terminating NULL character,
 243:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   if terminating NULL character     found (see Note #2b1).
 244:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 245:C:\Micrium\Software\uC-LIB\lib_str.c **** *               Requested maximum number of characters to search, 
 246:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   if terminating NULL character NOT found (see Note #3c).
 247:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 248:C:\Micrium\Software\uC-LIB\lib_str.c **** * Caller(s)   : Application.
 249:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 250:C:\Micrium\Software\uC-LIB\lib_str.c **** * Note(s)     : (1) String buffer NOT modified.
 251:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 252:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strlen() : DESCRIPTION' states that
 253:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 254:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) "The strlen() function shall compute the number of bytes in the string 
 255:C:\Micrium\Software\uC-LIB\lib_str.c **** *                            which 's' ('pstr') points," ...
 256:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) "not including the terminating null byte."
 257:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 258:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strlen() : RETURN VALUE' states tha
 259:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 260:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) "The strlen() function shall return the length of 's' ('pstr');" ...
 261:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) "no return value shall be reserved to indicate an error."
 262:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 263:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (3) String length calculation terminates when :
 264:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 265:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (a) String pointer points to NULL.
 266:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) String buffer overlaps with NULL address.
 267:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) String length calculated for string up to but NOT beyond or including
 268:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           the NULL address.
 269:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 270:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) Terminating NULL character found.
 271:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) String length calculated for string up to but NOT           including
 272:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           the NULL character (see Note #2a2).
 273:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 274:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (c) 'len_max' number of characters searched.
 275:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) 'len_max' number of characters does NOT include the terminating NULL ch
 276:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
 277:C:\Micrium\Software\uC-LIB\lib_str.c **** */
 278:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 279:C:\Micrium\Software\uC-LIB\lib_str.c **** CPU_SIZE_T  Str_Len_N (const  CPU_CHAR    *pstr,
 280:C:\Micrium\Software\uC-LIB\lib_str.c ****                               CPU_SIZE_T   len_max)
 281:C:\Micrium\Software\uC-LIB\lib_str.c **** {
 114              		.loc 1 281 0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 8


 115              		.cfi_startproc
 116              		@ args = 0, pretend = 0, frame = 16
 117              		@ frame_needed = 1, uses_anonymous_args = 0
 118              		@ link register save eliminated.
 119 0000 80B4     		push	{r7}
 120              	.LCFI3:
 121              		.cfi_def_cfa_offset 4
 122 0002 85B0     		sub	sp, sp, #20
 123              	.LCFI4:
 124              		.cfi_def_cfa_offset 24
 125 0004 00AF     		add	r7, sp, #0
 126              		.cfi_offset 7, -4
 127              	.LCFI5:
 128              		.cfi_def_cfa_register 7
 129 0006 7860     		str	r0, [r7, #4]
 130 0008 3960     		str	r1, [r7, #0]
 282:C:\Micrium\Software\uC-LIB\lib_str.c ****     const  CPU_CHAR    *pstr_len;
 283:C:\Micrium\Software\uC-LIB\lib_str.c ****            CPU_SIZE_T   len;
 284:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 285:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 286:C:\Micrium\Software\uC-LIB\lib_str.c ****     pstr_len = pstr;
 131              		.loc 1 286 0
 132 000a 7B68     		ldr	r3, [r7, #4]
 133 000c BB60     		str	r3, [r7, #8]
 287:C:\Micrium\Software\uC-LIB\lib_str.c ****     len      = 0u;
 134              		.loc 1 287 0
 135 000e 4FF00003 		mov	r3, #0
 136 0012 FB60     		str	r3, [r7, #12]
 288:C:\Micrium\Software\uC-LIB\lib_str.c ****     while (( pstr_len != (const CPU_CHAR *)  0 ) &&             /* Calc str len until NULL ptr (see
 137              		.loc 1 288 0
 138 0014 07E0     		b	.L4
 139              	.L6:
 289:C:\Micrium\Software\uC-LIB\lib_str.c ****            (*pstr_len != (      CPU_CHAR  )'\0') &&             /* ... or NULL char found      (see
 290:C:\Micrium\Software\uC-LIB\lib_str.c ****            ( len      <  (      CPU_SIZE_T)len_max)) {          /* ... or max nbr chars srch'd (see
 291:C:\Micrium\Software\uC-LIB\lib_str.c ****         pstr_len++;
 140              		.loc 1 291 0
 141 0016 BB68     		ldr	r3, [r7, #8]
 142 0018 03F10103 		add	r3, r3, #1
 143 001c BB60     		str	r3, [r7, #8]
 292:C:\Micrium\Software\uC-LIB\lib_str.c ****         len++;
 144              		.loc 1 292 0
 145 001e FB68     		ldr	r3, [r7, #12]
 146 0020 03F10103 		add	r3, r3, #1
 147 0024 FB60     		str	r3, [r7, #12]
 148              	.L4:
 149              		.loc 1 288 0
 150 0026 BB68     		ldr	r3, [r7, #8]
 151 0028 002B     		cmp	r3, #0
 152 002a 07D0     		beq	.L5
 153              		.loc 1 289 0
 154 002c BB68     		ldr	r3, [r7, #8]
 155 002e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 156              		.loc 1 288 0
 157 0030 002B     		cmp	r3, #0
 158 0032 03D0     		beq	.L5
 159 0034 FA68     		ldr	r2, [r7, #12]
 160 0036 3B68     		ldr	r3, [r7, #0]
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 9


 161 0038 9A42     		cmp	r2, r3
 162 003a ECD3     		bcc	.L6
 163              	.L5:
 293:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
 294:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 295:C:\Micrium\Software\uC-LIB\lib_str.c ****     return (len);                                               /* Rtn str len (see Note #3b1).    
 164              		.loc 1 295 0
 165 003c FB68     		ldr	r3, [r7, #12]
 296:C:\Micrium\Software\uC-LIB\lib_str.c **** }
 166              		.loc 1 296 0
 167 003e 1846     		mov	r0, r3
 168 0040 07F11407 		add	r7, r7, #20
 169 0044 BD46     		mov	sp, r7
 170 0046 80BC     		pop	{r7}
 171 0048 7047     		bx	lr
 172              		.cfi_endproc
 173              	.LFE1:
 174              		.size	Str_Len_N, .-Str_Len_N
 175 004a 00BF     		.section	.text.Str_Copy,"ax",%progbits
 176              		.align	2
 177              		.global	Str_Copy
 178              		.thumb
 179              		.thumb_func
 180              		.type	Str_Copy, %function
 181              	Str_Copy:
 182              	.LFB2:
 297:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 298:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 299:C:\Micrium\Software\uC-LIB\lib_str.c **** /*$PAGE*/
 300:C:\Micrium\Software\uC-LIB\lib_str.c **** /*
 301:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
 302:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                             Str_Copy()
 303:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 304:C:\Micrium\Software\uC-LIB\lib_str.c **** * Description : Copy source string to destination string buffer.
 305:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 306:C:\Micrium\Software\uC-LIB\lib_str.c **** * Argument(s) : pstr_dest   Pointer to destination string buffer to receive source string copy   (s
 307:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 308:C:\Micrium\Software\uC-LIB\lib_str.c **** *               pstr_src    Pointer to source      string to copy into destination string buffer (s
 309:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 310:C:\Micrium\Software\uC-LIB\lib_str.c **** * Return(s)   : Pointer to destination string, if NO error(s) [see Note #2b1].
 311:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 312:C:\Micrium\Software\uC-LIB\lib_str.c **** *               Pointer to NULL,               otherwise      (see Note #2b2A).
 313:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 314:C:\Micrium\Software\uC-LIB\lib_str.c **** * Caller(s)   : Application.
 315:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 316:C:\Micrium\Software\uC-LIB\lib_str.c **** * Note(s)     : (1) (a) Destination buffer size NOT validated; buffer overruns MUST be prevented by
 317:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 318:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) Destination buffer size MUST be large enough to accommodate the entire 
 319:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           string size including the terminating NULL character.
 320:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 321:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) Source buffer NOT modified.
 322:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 323:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strcpy() : DESCRIPTION' states that
 324:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 325:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) "The strcpy() function shall copy the string pointed to by 's2' ('pstr_
 326:C:\Micrium\Software\uC-LIB\lib_str.c **** *                            ... into the array pointed to by 's1' ('pstr_dest')" ...
 327:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) "(including the terminating null byte)."
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 10


 328:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 329:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strcpy() : RETURN VALUE' states tha
 330:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 331:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) "The strcpy() function shall return 's1' ('pstr_dest');" ...
 332:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) "no return value is reserved to indicate an error."
 333:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (A) #### This requirement is intentionally NOT implemented in order to 
 334:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               NULL for any error(s).
 335:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 336:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (c) IEEE Std 1003.1, 2004 Edition, Section 'strcpy() : DESCRIPTION' states that
 337:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       copying takes place between objects that overlap, the behavior is undefined
 338:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 339:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (3) String copy terminates when :
 340:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 341:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (a) Destination/Source string pointer(s) are passed NULL pointers.
 342:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) No string copy performed; NULL pointer returned.
 343:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 344:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) Destination/Source string pointer(s) point to NULL.
 345:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) String buffer(s) overlap with NULL address; NULL pointer returned.
 346:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 347:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (c) Source string's terminating NULL character found.
 348:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) Entire source string copied into destination string buffer (see Note #2
 349:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
 350:C:\Micrium\Software\uC-LIB\lib_str.c **** */
 351:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 352:C:\Micrium\Software\uC-LIB\lib_str.c **** CPU_CHAR  *Str_Copy (       CPU_CHAR  *pstr_dest,
 353:C:\Micrium\Software\uC-LIB\lib_str.c ****                      const  CPU_CHAR  *pstr_src)
 354:C:\Micrium\Software\uC-LIB\lib_str.c **** {
 183              		.loc 1 354 0
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 16
 186              		@ frame_needed = 1, uses_anonymous_args = 0
 187 0000 80B5     		push	{r7, lr}
 188              	.LCFI6:
 189              		.cfi_def_cfa_offset 8
 190 0002 84B0     		sub	sp, sp, #16
 191              	.LCFI7:
 192              		.cfi_def_cfa_offset 24
 193 0004 00AF     		add	r7, sp, #0
 194              		.cfi_offset 14, -4
 195              		.cfi_offset 7, -8
 196              	.LCFI8:
 197              		.cfi_def_cfa_register 7
 198 0006 7860     		str	r0, [r7, #4]
 199 0008 3960     		str	r1, [r7, #0]
 355:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_CHAR  *pstr_rtn;
 356:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 357:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 358:C:\Micrium\Software\uC-LIB\lib_str.c ****     pstr_rtn = Str_Copy_N(pstr_dest,
 200              		.loc 1 358 0
 201 000a 7868     		ldr	r0, [r7, #4]
 202 000c 3968     		ldr	r1, [r7, #0]
 203 000e 4FF0FF32 		mov	r2, #-1
 204 0012 FFF7FEFF 		bl	Str_Copy_N
 205 0016 0346     		mov	r3, r0
 206 0018 FB60     		str	r3, [r7, #12]
 359:C:\Micrium\Software\uC-LIB\lib_str.c ****                           pstr_src,
 360:C:\Micrium\Software\uC-LIB\lib_str.c ****                           DEF_INT_CPU_U_MAX_VAL);
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 11


 361:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 362:C:\Micrium\Software\uC-LIB\lib_str.c ****     return (pstr_rtn);
 207              		.loc 1 362 0
 208 001a FB68     		ldr	r3, [r7, #12]
 363:C:\Micrium\Software\uC-LIB\lib_str.c **** }
 209              		.loc 1 363 0
 210 001c 1846     		mov	r0, r3
 211 001e 07F11007 		add	r7, r7, #16
 212 0022 BD46     		mov	sp, r7
 213 0024 80BD     		pop	{r7, pc}
 214              		.cfi_endproc
 215              	.LFE2:
 216              		.size	Str_Copy, .-Str_Copy
 217 0026 00BF     		.section	.text.Str_Copy_N,"ax",%progbits
 218              		.align	2
 219              		.global	Str_Copy_N
 220              		.thumb
 221              		.thumb_func
 222              		.type	Str_Copy_N, %function
 223              	Str_Copy_N:
 224              	.LFB3:
 364:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 365:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 366:C:\Micrium\Software\uC-LIB\lib_str.c **** /*$PAGE*/
 367:C:\Micrium\Software\uC-LIB\lib_str.c **** /*
 368:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
 369:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                            Str_Copy_N()
 370:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 371:C:\Micrium\Software\uC-LIB\lib_str.c **** * Description : Copy source string to destination string buffer, up to a maximum number of characte
 372:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 373:C:\Micrium\Software\uC-LIB\lib_str.c **** * Argument(s) : pstr_dest   Pointer to destination string buffer to receive source string copy   (s
 374:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 375:C:\Micrium\Software\uC-LIB\lib_str.c **** *               pstr_src    Pointer to source      string to copy into destination string buffer (s
 376:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 377:C:\Micrium\Software\uC-LIB\lib_str.c **** *               len_max     Maximum number of characters  to copy (see Notes #2a2 & #3d).
 378:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 379:C:\Micrium\Software\uC-LIB\lib_str.c **** * Return(s)   : Pointer to destination string, if NO error(s) [see Note #2b1].
 380:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 381:C:\Micrium\Software\uC-LIB\lib_str.c **** *               Pointer to NULL,               otherwise      (see Note #2b2A).
 382:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 383:C:\Micrium\Software\uC-LIB\lib_str.c **** * Caller(s)   : Application.
 384:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 385:C:\Micrium\Software\uC-LIB\lib_str.c **** * Note(s)     : (1) (a) Destination buffer size NOT validated; buffer overruns MUST be prevented by
 386:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 387:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) Destination buffer size MUST be large enough to accommodate the entire 
 388:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           string size including the terminating NULL character.
 389:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 390:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) Source string buffer NOT modified.
 391:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 392:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (2) (a) (1) IEEE Std 1003.1, 2004 Edition, Section 'strncpy() : DESCRIPTION' states
 393:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 394:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (A) "The strncpy() function shall copy ... the array pointed to by 's2'
 395:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               ('pstr_src') to the array pointed to by 's1' ('pstr_dest')"; ...
 396:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (B)  but "not more than 'n' ('len_max') bytes"                   ...
 397:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (C)  &   "(bytes that follow a null byte are not copied)".
 398:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 399:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) (A) IEEE Std 1003.1, 2004 Edition, Section 'strncpy() : DESCRIPTION' ad
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 12


 400:C:\Micrium\Software\uC-LIB\lib_str.c **** *                              "if the array pointed to by 's2' ('pstr_src') is a string that is sh
 401:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               than 'n' ('len_max') bytes, null bytes shall be appended to the cop
 402:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               the array pointed to by 's1' ('pstr_dest'), until 'n' ('len_max') b
 403:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               in all are written."
 404:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 405:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               (1) #### Since Str_Copy() limits the maximum number of characters t
 406:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   via Str_Copy_N() by the CPU's maximum number of addressable cha
 407:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   this requirement is intentionally NOT implemented to avoid appe
 408:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   a potentially large number of unnecessary terminating NULL char
 409:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 410:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (B) IEEE Std 1003.1, 2004 Edition, Section 'strncpy() : APPLICATION USA
 411:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               states that "if there is no null byte in the first 'n' ('len_max') 
 412:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               the array pointed to by 's2' ('pstr_src'), the result is not null-t
 413:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 414:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strncpy() : RETURN VALUE' states th
 415:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 416:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) "The strncpy() function shall return 's1' ('pstr_dest');" ...
 417:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) "no return value is reserved to indicate an error."
 418:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (A) #### This requirement is intentionally ignored in order to return N
 419:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               for any error(s).
 420:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 421:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (c) IEEE Std 1003.1, 2004 Edition, Section 'strncpy() : DESCRIPTION' states tha
 422:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       copying takes place between objects that overlap, the behavior is undefined
 423:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 424:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (3) String copy terminates when :
 425:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 426:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (a) Destination/Source string pointer(s) are passed NULL pointers.
 427:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) No string copy performed; NULL pointer returned.
 428:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 429:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) Destination/Source string pointer(s) point to NULL.
 430:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) String buffer(s) overlap with NULL address; NULL pointer returned.
 431:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 432:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (c) Source string's terminating NULL character found.
 433:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) Entire source string copied into destination string buffer (see Note #2
 434:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 435:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (d) 'len_max' number of characters copied.
 436:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) 'len_max' number of characters MAY include the terminating NULL charact
 437:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (see Note #2a1C).
 438:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) Null copies allowed (i.e. zero-length copies).
 439:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (A) No string copy performed; destination string returned  (see Note #2
 440:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
 441:C:\Micrium\Software\uC-LIB\lib_str.c **** */
 442:C:\Micrium\Software\uC-LIB\lib_str.c **** /*$PAGE*/
 443:C:\Micrium\Software\uC-LIB\lib_str.c **** CPU_CHAR  *Str_Copy_N (       CPU_CHAR    *pstr_dest,
 444:C:\Micrium\Software\uC-LIB\lib_str.c ****                        const  CPU_CHAR    *pstr_src,
 445:C:\Micrium\Software\uC-LIB\lib_str.c ****                               CPU_SIZE_T   len_max)
 446:C:\Micrium\Software\uC-LIB\lib_str.c **** {
 225              		.loc 1 446 0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 32
 228              		@ frame_needed = 1, uses_anonymous_args = 0
 229              		@ link register save eliminated.
 230 0000 80B4     		push	{r7}
 231              	.LCFI9:
 232              		.cfi_def_cfa_offset 4
 233 0002 89B0     		sub	sp, sp, #36
 234              	.LCFI10:
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 13


 235              		.cfi_def_cfa_offset 40
 236 0004 00AF     		add	r7, sp, #0
 237              		.cfi_offset 7, -4
 238              	.LCFI11:
 239              		.cfi_def_cfa_register 7
 240 0006 F860     		str	r0, [r7, #12]
 241 0008 B960     		str	r1, [r7, #8]
 242 000a 7A60     		str	r2, [r7, #4]
 447:C:\Micrium\Software\uC-LIB\lib_str.c ****            CPU_CHAR    *pstr_copy_dest;
 448:C:\Micrium\Software\uC-LIB\lib_str.c ****     const  CPU_CHAR    *pstr_copy_src;
 449:C:\Micrium\Software\uC-LIB\lib_str.c ****            CPU_SIZE_T   len_copy;
 450:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 451:C:\Micrium\Software\uC-LIB\lib_str.c ****                                                                 /* Rtn NULL if str ptr(s) NULL (see
 452:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (pstr_dest == (CPU_CHAR *)0) {
 243              		.loc 1 452 0
 244 000c FB68     		ldr	r3, [r7, #12]
 245 000e 002B     		cmp	r3, #0
 246 0010 02D1     		bne	.L11
 453:C:\Micrium\Software\uC-LIB\lib_str.c ****         return ((CPU_CHAR *)0);
 247              		.loc 1 453 0
 248 0012 4FF00003 		mov	r3, #0
 249 0016 3DE0     		b	.L12
 250              	.L11:
 454:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
 455:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (pstr_src  == (const CPU_CHAR *)0) {
 251              		.loc 1 455 0
 252 0018 BB68     		ldr	r3, [r7, #8]
 253 001a 002B     		cmp	r3, #0
 254 001c 02D1     		bne	.L13
 456:C:\Micrium\Software\uC-LIB\lib_str.c ****         return ((CPU_CHAR *)0);
 255              		.loc 1 456 0
 256 001e 4FF00003 		mov	r3, #0
 257 0022 37E0     		b	.L12
 258              	.L13:
 457:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
 458:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 459:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 460:C:\Micrium\Software\uC-LIB\lib_str.c ****     pstr_copy_dest = pstr_dest;
 259              		.loc 1 460 0
 260 0024 FB68     		ldr	r3, [r7, #12]
 261 0026 7B61     		str	r3, [r7, #20]
 461:C:\Micrium\Software\uC-LIB\lib_str.c ****     pstr_copy_src  = pstr_src;
 262              		.loc 1 461 0
 263 0028 BB68     		ldr	r3, [r7, #8]
 264 002a BB61     		str	r3, [r7, #24]
 462:C:\Micrium\Software\uC-LIB\lib_str.c ****     len_copy       = 0u;
 265              		.loc 1 462 0
 266 002c 4FF00003 		mov	r3, #0
 267 0030 FB61     		str	r3, [r7, #28]
 463:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 464:C:\Micrium\Software\uC-LIB\lib_str.c ****     while (( pstr_copy_dest != (      CPU_CHAR *)  0 ) &&       /* Copy str until NULL ptr(s)  [see
 268              		.loc 1 464 0
 269 0032 0FE0     		b	.L14
 270              	.L16:
 465:C:\Micrium\Software\uC-LIB\lib_str.c ****            ( pstr_copy_src  != (const CPU_CHAR *)  0 ) &&
 466:C:\Micrium\Software\uC-LIB\lib_str.c ****            (*pstr_copy_src  != (      CPU_CHAR  )'\0') &&       /* ... or NULL char found      (see
 467:C:\Micrium\Software\uC-LIB\lib_str.c ****            ( len_copy       <  (      CPU_SIZE_T)len_max)) {    /* ... or max nbr chars copied (see
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 14


 468:C:\Micrium\Software\uC-LIB\lib_str.c ****        *pstr_copy_dest = *pstr_copy_src;
 271              		.loc 1 468 0
 272 0034 BB69     		ldr	r3, [r7, #24]
 273 0036 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 274 0038 7B69     		ldr	r3, [r7, #20]
 275 003a 1A70     		strb	r2, [r3, #0]
 469:C:\Micrium\Software\uC-LIB\lib_str.c ****         pstr_copy_dest++;
 276              		.loc 1 469 0
 277 003c 7B69     		ldr	r3, [r7, #20]
 278 003e 03F10103 		add	r3, r3, #1
 279 0042 7B61     		str	r3, [r7, #20]
 470:C:\Micrium\Software\uC-LIB\lib_str.c ****         pstr_copy_src++;
 280              		.loc 1 470 0
 281 0044 BB69     		ldr	r3, [r7, #24]
 282 0046 03F10103 		add	r3, r3, #1
 283 004a BB61     		str	r3, [r7, #24]
 471:C:\Micrium\Software\uC-LIB\lib_str.c ****         len_copy++;
 284              		.loc 1 471 0
 285 004c FB69     		ldr	r3, [r7, #28]
 286 004e 03F10103 		add	r3, r3, #1
 287 0052 FB61     		str	r3, [r7, #28]
 288              	.L14:
 289              		.loc 1 464 0
 290 0054 7B69     		ldr	r3, [r7, #20]
 291 0056 002B     		cmp	r3, #0
 292 0058 0AD0     		beq	.L15
 293 005a BB69     		ldr	r3, [r7, #24]
 294 005c 002B     		cmp	r3, #0
 295 005e 07D0     		beq	.L15
 296              		.loc 1 466 0
 297 0060 BB69     		ldr	r3, [r7, #24]
 298 0062 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 299              		.loc 1 464 0
 300 0064 002B     		cmp	r3, #0
 301 0066 03D0     		beq	.L15
 302 0068 FA69     		ldr	r2, [r7, #28]
 303 006a 7B68     		ldr	r3, [r7, #4]
 304 006c 9A42     		cmp	r2, r3
 305 006e E1D3     		bcc	.L16
 306              	.L15:
 472:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
 473:C:\Micrium\Software\uC-LIB\lib_str.c ****                                                                 /* Rtn NULL if NULL ptr(s) found  (
 474:C:\Micrium\Software\uC-LIB\lib_str.c ****     if ((pstr_copy_dest == (      CPU_CHAR *)0) ||
 307              		.loc 1 474 0
 308 0070 7B69     		ldr	r3, [r7, #20]
 309 0072 002B     		cmp	r3, #0
 310 0074 02D0     		beq	.L17
 311 0076 BB69     		ldr	r3, [r7, #24]
 312 0078 002B     		cmp	r3, #0
 313 007a 02D1     		bne	.L18
 314              	.L17:
 475:C:\Micrium\Software\uC-LIB\lib_str.c ****         (pstr_copy_src  == (const CPU_CHAR *)0)) {
 476:C:\Micrium\Software\uC-LIB\lib_str.c ****          return ((CPU_CHAR *)0);
 315              		.loc 1 476 0
 316 007c 4FF00003 		mov	r3, #0
 317 0080 08E0     		b	.L12
 318              	.L18:
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 15


 477:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
 478:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 479:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (len_copy < len_max) {                                   /* If  copy str len < max buf len (
 319              		.loc 1 479 0
 320 0082 FA69     		ldr	r2, [r7, #28]
 321 0084 7B68     		ldr	r3, [r7, #4]
 322 0086 9A42     		cmp	r2, r3
 323 0088 03D2     		bcs	.L19
 480:C:\Micrium\Software\uC-LIB\lib_str.c ****        *pstr_copy_dest = (CPU_CHAR)'\0';                        /* ... copy NULL char  (see Note #3
 324              		.loc 1 480 0
 325 008a 7B69     		ldr	r3, [r7, #20]
 326 008c 4FF00002 		mov	r2, #0
 327 0090 1A70     		strb	r2, [r3, #0]
 328              	.L19:
 481:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
 482:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 483:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 484:C:\Micrium\Software\uC-LIB\lib_str.c ****     return (pstr_dest);                                         /* Rtn ptr to dest str (see Note #2
 329              		.loc 1 484 0
 330 0092 FB68     		ldr	r3, [r7, #12]
 331              	.L12:
 485:C:\Micrium\Software\uC-LIB\lib_str.c **** }
 332              		.loc 1 485 0
 333 0094 1846     		mov	r0, r3
 334 0096 07F12407 		add	r7, r7, #36
 335 009a BD46     		mov	sp, r7
 336 009c 80BC     		pop	{r7}
 337 009e 7047     		bx	lr
 338              		.cfi_endproc
 339              	.LFE3:
 340              		.size	Str_Copy_N, .-Str_Copy_N
 341              		.section	.text.Str_Cat,"ax",%progbits
 342              		.align	2
 343              		.global	Str_Cat
 344              		.thumb
 345              		.thumb_func
 346              		.type	Str_Cat, %function
 347              	Str_Cat:
 348              	.LFB4:
 486:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 487:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 488:C:\Micrium\Software\uC-LIB\lib_str.c **** /*$PAGE*/
 489:C:\Micrium\Software\uC-LIB\lib_str.c **** /*
 490:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
 491:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                              Str_Cat()
 492:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 493:C:\Micrium\Software\uC-LIB\lib_str.c **** * Description : Append concatenation string to destination string.
 494:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 495:C:\Micrium\Software\uC-LIB\lib_str.c **** * Argument(s) : pstr_dest   Pointer to destination   string to append concatenation  string (see No
 496:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 497:C:\Micrium\Software\uC-LIB\lib_str.c **** *               pstr_cat    Pointer to concatenation string to append to destination string (see No
 498:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 499:C:\Micrium\Software\uC-LIB\lib_str.c **** * Return(s)   : Pointer to destination string, if NO error(s) [see Note #2b1].
 500:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 501:C:\Micrium\Software\uC-LIB\lib_str.c **** *               Pointer to NULL,               otherwise      (see Note #2b2A).
 502:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 503:C:\Micrium\Software\uC-LIB\lib_str.c **** * Caller(s)   : Application.
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 16


 504:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 505:C:\Micrium\Software\uC-LIB\lib_str.c **** * Note(s)     : (1) (a) Destination buffer size NOT validated; buffer overruns MUST be prevented by
 506:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 507:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) Destination buffer size MUST be large enough to accommodate the entire 
 508:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           concatenated string size including the terminating NULL character.
 509:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 510:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) Concatenation string buffer NOT modified.
 511:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 512:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strcat() : DESCRIPTION' states that
 513:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 514:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) "The strcat() function shall append a copy of the string pointed to by 
 515:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           ('pstr_cat') ... to the end of the string pointed to by 's1' ('pstr_des
 516:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 517:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) (A) "The initial byte of 's2' ('pstr_cat') overwrites the null byte at 
 518:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                end of 's1' ('pstr_dest')."
 519:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (B)  A "terminating null byte" is appended at the end of the concatenat
 520:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                destination strings.
 521:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 522:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strcat() : RETURN VALUE' states tha
 523:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 524:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) "The strcat() function shall return 's1' ('pstr_dest');" ...
 525:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) "no return value shall be reserved to indicate an error."
 526:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (A) #### This requirement is intentionally NOT implemented in order to 
 527:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               NULL for any error(s).
 528:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 529:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (c) IEEE Std 1003.1, 2004 Edition, Section 'strcat() : DESCRIPTION' states that
 530:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       copying takes place between objects that overlap, the behavior is undefined
 531:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 532:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (3) String concatenation terminates when :
 533:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 534:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (a) Destination/Concatenation string pointer(s) are passed NULL pointers.
 535:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) No string concatenation performed; NULL pointer returned.
 536:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 537:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) Destination/Concatenation string pointer(s) point to NULL.
 538:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) String buffer(s) overlap with NULL address; NULL pointer returned.
 539:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 540:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (c) Concatenation string's terminating NULL character found.
 541:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) Entire concatenation string appended to destination string (see Note #2
 542:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
 543:C:\Micrium\Software\uC-LIB\lib_str.c **** */
 544:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 545:C:\Micrium\Software\uC-LIB\lib_str.c **** CPU_CHAR  *Str_Cat (       CPU_CHAR  *pstr_dest,
 546:C:\Micrium\Software\uC-LIB\lib_str.c ****                     const  CPU_CHAR  *pstr_cat)
 547:C:\Micrium\Software\uC-LIB\lib_str.c **** {
 349              		.loc 1 547 0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 16
 352              		@ frame_needed = 1, uses_anonymous_args = 0
 353 0000 80B5     		push	{r7, lr}
 354              	.LCFI12:
 355              		.cfi_def_cfa_offset 8
 356 0002 84B0     		sub	sp, sp, #16
 357              	.LCFI13:
 358              		.cfi_def_cfa_offset 24
 359 0004 00AF     		add	r7, sp, #0
 360              		.cfi_offset 14, -4
 361              		.cfi_offset 7, -8
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 17


 362              	.LCFI14:
 363              		.cfi_def_cfa_register 7
 364 0006 7860     		str	r0, [r7, #4]
 365 0008 3960     		str	r1, [r7, #0]
 548:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_CHAR  *pstr_rtn;
 549:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 550:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 551:C:\Micrium\Software\uC-LIB\lib_str.c ****     pstr_rtn = Str_Cat_N(pstr_dest,
 366              		.loc 1 551 0
 367 000a 7868     		ldr	r0, [r7, #4]
 368 000c 3968     		ldr	r1, [r7, #0]
 369 000e 4FF0FF32 		mov	r2, #-1
 370 0012 FFF7FEFF 		bl	Str_Cat_N
 371 0016 0346     		mov	r3, r0
 372 0018 FB60     		str	r3, [r7, #12]
 552:C:\Micrium\Software\uC-LIB\lib_str.c ****                          pstr_cat,
 553:C:\Micrium\Software\uC-LIB\lib_str.c ****                          DEF_INT_CPU_U_MAX_VAL);
 554:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 555:C:\Micrium\Software\uC-LIB\lib_str.c ****     return (pstr_rtn);
 373              		.loc 1 555 0
 374 001a FB68     		ldr	r3, [r7, #12]
 556:C:\Micrium\Software\uC-LIB\lib_str.c **** }
 375              		.loc 1 556 0
 376 001c 1846     		mov	r0, r3
 377 001e 07F11007 		add	r7, r7, #16
 378 0022 BD46     		mov	sp, r7
 379 0024 80BD     		pop	{r7, pc}
 380              		.cfi_endproc
 381              	.LFE4:
 382              		.size	Str_Cat, .-Str_Cat
 383 0026 00BF     		.section	.text.Str_Cat_N,"ax",%progbits
 384              		.align	2
 385              		.global	Str_Cat_N
 386              		.thumb
 387              		.thumb_func
 388              		.type	Str_Cat_N, %function
 389              	Str_Cat_N:
 390              	.LFB5:
 557:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 558:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 559:C:\Micrium\Software\uC-LIB\lib_str.c **** /*$PAGE*/
 560:C:\Micrium\Software\uC-LIB\lib_str.c **** /*
 561:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
 562:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                             Str_Cat_N()
 563:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 564:C:\Micrium\Software\uC-LIB\lib_str.c **** * Description : Append concatenation string to destination string, up to a maximum number of charac
 565:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 566:C:\Micrium\Software\uC-LIB\lib_str.c **** * Argument(s) : pstr_dest   Pointer to destination   string to append concatenation  string (see No
 567:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 568:C:\Micrium\Software\uC-LIB\lib_str.c **** *               pstr_cat    Pointer to concatenation string to append to destination string (see No
 569:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 570:C:\Micrium\Software\uC-LIB\lib_str.c **** *               len_max     Maximum number of characters to concatenate (see Notes #2a1B & #3d).
 571:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 572:C:\Micrium\Software\uC-LIB\lib_str.c **** * Return(s)   : Pointer to destination string, if NO error(s) [see Note #2b1].
 573:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 574:C:\Micrium\Software\uC-LIB\lib_str.c **** *               Pointer to NULL,               otherwise      (see Note #2b2A).
 575:C:\Micrium\Software\uC-LIB\lib_str.c **** *
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 18


 576:C:\Micrium\Software\uC-LIB\lib_str.c **** * Caller(s)   : Application.
 577:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 578:C:\Micrium\Software\uC-LIB\lib_str.c **** * Note(s)     : (1) (a) Destination buffer size NOT validated; buffer overruns MUST be prevented by
 579:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 580:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) Destination buffer size MUST be large enough to accommodate the entire 
 581:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           concatenated string size including the terminating NULL character.
 582:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 583:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) Concatenation string buffer NOT modified.
 584:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 585:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strncat() : DESCRIPTION' states tha
 586:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 587:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) (A) "The strncat() function shall append ... the array pointed to by 's
 588:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               ('pstr_cat') to the end of the string pointed to by 's1' ('pstr_des
 589:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (B)  but "not more than 'n' ('len_max') bytes".
 590:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 591:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) (A) "The initial byte of 's2' ('pstr_cat') overwrites the null byte at 
 592:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                end of 's1' ('pstr_dest')."
 593:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (B) "(a null byte and bytes that follow it are not appended)."
 594:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (C) "A terminating null byte is always appended to the result."
 595:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 596:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strncat() : RETURN VALUE' states th
 597:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 598:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) "The strncat() function shall return 's1' ('pstr_dest');" ...
 599:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) "no return value shall be reserved to indicate an error."
 600:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (A) #### This requirement is intentionally NOT implemented in order to 
 601:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               NULL for any error(s).
 602:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 603:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (c) IEEE Std 1003.1, 2004 Edition, Section 'strncat() : DESCRIPTION' states tha
 604:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       copying takes place between objects that overlap, the behavior is undefined
 605:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 606:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (3) String concatenation terminates when :
 607:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 608:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (a) Destination/Concatenation string pointer(s) are passed NULL pointers.
 609:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) No string concatenation performed; NULL pointer returned.
 610:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 611:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) Destination/Concatenation string pointer(s) point to NULL.
 612:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) String buffer(s) overlap with NULL address; NULL pointer returned.
 613:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 614:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (c) Concatenation string's terminating NULL character found.
 615:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) Entire concatenation string appended to destination string (see Note #2
 616:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 617:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (d) 'len_max' number of characters concatenated.
 618:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 619:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) 'len_max' number of characters does NOT include the terminating NULL ch
 620:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (see Note #2a2).
 621:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 622:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) Null concatenations allowed (i.e. zero-length concatenations).
 623:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (A) No string concatenation performed; destination string returned 
 624:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               (see Note #2b1).
 625:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
 626:C:\Micrium\Software\uC-LIB\lib_str.c **** */
 627:C:\Micrium\Software\uC-LIB\lib_str.c **** /*$PAGE*/
 628:C:\Micrium\Software\uC-LIB\lib_str.c **** CPU_CHAR  *Str_Cat_N (       CPU_CHAR    *pstr_dest,
 629:C:\Micrium\Software\uC-LIB\lib_str.c ****                       const  CPU_CHAR    *pstr_cat,
 630:C:\Micrium\Software\uC-LIB\lib_str.c ****                              CPU_SIZE_T   len_max)
 631:C:\Micrium\Software\uC-LIB\lib_str.c **** {
 391              		.loc 1 631 0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 19


 392              		.cfi_startproc
 393              		@ args = 0, pretend = 0, frame = 32
 394              		@ frame_needed = 1, uses_anonymous_args = 0
 395              		@ link register save eliminated.
 396 0000 80B4     		push	{r7}
 397              	.LCFI15:
 398              		.cfi_def_cfa_offset 4
 399 0002 89B0     		sub	sp, sp, #36
 400              	.LCFI16:
 401              		.cfi_def_cfa_offset 40
 402 0004 00AF     		add	r7, sp, #0
 403              		.cfi_offset 7, -4
 404              	.LCFI17:
 405              		.cfi_def_cfa_register 7
 406 0006 F860     		str	r0, [r7, #12]
 407 0008 B960     		str	r1, [r7, #8]
 408 000a 7A60     		str	r2, [r7, #4]
 632:C:\Micrium\Software\uC-LIB\lib_str.c ****            CPU_CHAR    *pstr_cat_dest;
 633:C:\Micrium\Software\uC-LIB\lib_str.c ****     const  CPU_CHAR    *pstr_cat_src;
 634:C:\Micrium\Software\uC-LIB\lib_str.c ****            CPU_SIZE_T   len_cat;
 635:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 636:C:\Micrium\Software\uC-LIB\lib_str.c ****                                                                 /* Rtn NULL if str ptr(s) NULL (see
 637:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (pstr_dest == (CPU_CHAR *)0) {
 409              		.loc 1 637 0
 410 000c FB68     		ldr	r3, [r7, #12]
 411 000e 002B     		cmp	r3, #0
 412 0010 02D1     		bne	.L24
 638:C:\Micrium\Software\uC-LIB\lib_str.c ****         return ((CPU_CHAR *)0);
 413              		.loc 1 638 0
 414 0012 4FF00003 		mov	r3, #0
 415 0016 50E0     		b	.L25
 416              	.L24:
 639:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
 640:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (pstr_cat  == (const CPU_CHAR *)0) {
 417              		.loc 1 640 0
 418 0018 BB68     		ldr	r3, [r7, #8]
 419 001a 002B     		cmp	r3, #0
 420 001c 02D1     		bne	.L26
 641:C:\Micrium\Software\uC-LIB\lib_str.c ****         return ((CPU_CHAR *)0);
 421              		.loc 1 641 0
 422 001e 4FF00003 		mov	r3, #0
 423 0022 4AE0     		b	.L25
 424              	.L26:
 642:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
 643:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 644:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (len_max < 1) {                                          /* Rtn dest str if cat len = 0 (see
 425              		.loc 1 644 0
 426 0024 7B68     		ldr	r3, [r7, #4]
 427 0026 002B     		cmp	r3, #0
 428 0028 01D1     		bne	.L27
 645:C:\Micrium\Software\uC-LIB\lib_str.c ****         return ((CPU_CHAR *)pstr_dest);
 429              		.loc 1 645 0
 430 002a FB68     		ldr	r3, [r7, #12]
 431 002c 45E0     		b	.L25
 432              	.L27:
 646:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
 647:C:\Micrium\Software\uC-LIB\lib_str.c **** 
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 20


 648:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 649:C:\Micrium\Software\uC-LIB\lib_str.c ****     pstr_cat_dest = pstr_dest;
 433              		.loc 1 649 0
 434 002e FB68     		ldr	r3, [r7, #12]
 435 0030 7B61     		str	r3, [r7, #20]
 650:C:\Micrium\Software\uC-LIB\lib_str.c ****     while (( pstr_cat_dest != (CPU_CHAR *)  0 ) &&              /* Adv to end of cur dest str until
 436              		.loc 1 650 0
 437 0032 03E0     		b	.L28
 438              	.L30:
 651:C:\Micrium\Software\uC-LIB\lib_str.c ****            (*pstr_cat_dest != (CPU_CHAR  )'\0')) {              /* ... or NULL char found..        
 652:C:\Micrium\Software\uC-LIB\lib_str.c ****         pstr_cat_dest++;
 439              		.loc 1 652 0
 440 0034 7B69     		ldr	r3, [r7, #20]
 441 0036 03F10103 		add	r3, r3, #1
 442 003a 7B61     		str	r3, [r7, #20]
 443              	.L28:
 444              		.loc 1 650 0
 445 003c 7B69     		ldr	r3, [r7, #20]
 446 003e 002B     		cmp	r3, #0
 447 0040 03D0     		beq	.L29
 448              		.loc 1 651 0
 449 0042 7B69     		ldr	r3, [r7, #20]
 450 0044 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 451              		.loc 1 650 0
 452 0046 002B     		cmp	r3, #0
 453 0048 F4D1     		bne	.L30
 454              	.L29:
 653:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
 654:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (pstr_cat_dest == (CPU_CHAR *)0) {                       /* Rtn NULL if NULL ptr found (see 
 455              		.loc 1 654 0
 456 004a 7B69     		ldr	r3, [r7, #20]
 457 004c 002B     		cmp	r3, #0
 458 004e 02D1     		bne	.L31
 655:C:\Micrium\Software\uC-LIB\lib_str.c ****         return ((CPU_CHAR *)0);
 459              		.loc 1 655 0
 460 0050 4FF00003 		mov	r3, #0
 461 0054 31E0     		b	.L25
 462              	.L31:
 656:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
 657:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 658:C:\Micrium\Software\uC-LIB\lib_str.c ****     pstr_cat_src = pstr_cat;
 463              		.loc 1 658 0
 464 0056 BB68     		ldr	r3, [r7, #8]
 465 0058 BB61     		str	r3, [r7, #24]
 659:C:\Micrium\Software\uC-LIB\lib_str.c ****     len_cat      = 0u;
 466              		.loc 1 659 0
 467 005a 4FF00003 		mov	r3, #0
 468 005e FB61     		str	r3, [r7, #28]
 660:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 661:C:\Micrium\Software\uC-LIB\lib_str.c ****     while (( pstr_cat_dest != (      CPU_CHAR *)  0 ) &&        /* Cat str until NULL ptr(s)  [see 
 469              		.loc 1 661 0
 470 0060 0FE0     		b	.L32
 471              	.L34:
 662:C:\Micrium\Software\uC-LIB\lib_str.c ****            ( pstr_cat_src  != (const CPU_CHAR *)  0 ) &&
 663:C:\Micrium\Software\uC-LIB\lib_str.c ****            (*pstr_cat_src  != (      CPU_CHAR  )'\0') &&        /* ... or NULL char found     (see 
 664:C:\Micrium\Software\uC-LIB\lib_str.c ****            ( len_cat       <  (      CPU_SIZE_T)len_max)) {     /* ... or max nbr chars cat'd (see 
 665:C:\Micrium\Software\uC-LIB\lib_str.c ****        *pstr_cat_dest = *pstr_cat_src;
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 21


 472              		.loc 1 665 0
 473 0062 BB69     		ldr	r3, [r7, #24]
 474 0064 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 475 0066 7B69     		ldr	r3, [r7, #20]
 476 0068 1A70     		strb	r2, [r3, #0]
 666:C:\Micrium\Software\uC-LIB\lib_str.c ****         pstr_cat_dest++;
 477              		.loc 1 666 0
 478 006a 7B69     		ldr	r3, [r7, #20]
 479 006c 03F10103 		add	r3, r3, #1
 480 0070 7B61     		str	r3, [r7, #20]
 667:C:\Micrium\Software\uC-LIB\lib_str.c ****         pstr_cat_src++;
 481              		.loc 1 667 0
 482 0072 BB69     		ldr	r3, [r7, #24]
 483 0074 03F10103 		add	r3, r3, #1
 484 0078 BB61     		str	r3, [r7, #24]
 668:C:\Micrium\Software\uC-LIB\lib_str.c ****         len_cat++;
 485              		.loc 1 668 0
 486 007a FB69     		ldr	r3, [r7, #28]
 487 007c 03F10103 		add	r3, r3, #1
 488 0080 FB61     		str	r3, [r7, #28]
 489              	.L32:
 490              		.loc 1 661 0
 491 0082 7B69     		ldr	r3, [r7, #20]
 492 0084 002B     		cmp	r3, #0
 493 0086 0AD0     		beq	.L33
 494 0088 BB69     		ldr	r3, [r7, #24]
 495 008a 002B     		cmp	r3, #0
 496 008c 07D0     		beq	.L33
 497              		.loc 1 663 0
 498 008e BB69     		ldr	r3, [r7, #24]
 499 0090 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 500              		.loc 1 661 0
 501 0092 002B     		cmp	r3, #0
 502 0094 03D0     		beq	.L33
 503 0096 FA69     		ldr	r2, [r7, #28]
 504 0098 7B68     		ldr	r3, [r7, #4]
 505 009a 9A42     		cmp	r2, r3
 506 009c E1D3     		bcc	.L34
 507              	.L33:
 669:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
 670:C:\Micrium\Software\uC-LIB\lib_str.c ****                                                                 /* Rtn NULL if NULL ptr(s) found (s
 671:C:\Micrium\Software\uC-LIB\lib_str.c ****     if ((pstr_cat_dest == (      CPU_CHAR *)0) ||
 508              		.loc 1 671 0
 509 009e 7B69     		ldr	r3, [r7, #20]
 510 00a0 002B     		cmp	r3, #0
 511 00a2 02D0     		beq	.L35
 512 00a4 BB69     		ldr	r3, [r7, #24]
 513 00a6 002B     		cmp	r3, #0
 514 00a8 02D1     		bne	.L36
 515              	.L35:
 672:C:\Micrium\Software\uC-LIB\lib_str.c ****         (pstr_cat_src  == (const CPU_CHAR *)0)) {
 673:C:\Micrium\Software\uC-LIB\lib_str.c ****          return ((CPU_CHAR *)0);
 516              		.loc 1 673 0
 517 00aa 4FF00003 		mov	r3, #0
 518 00ae 04E0     		b	.L25
 519              	.L36:
 674:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 22


 675:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 676:C:\Micrium\Software\uC-LIB\lib_str.c ****    *pstr_cat_dest = (CPU_CHAR)'\0';                             /* Append NULL char    (see Note #2
 520              		.loc 1 676 0
 521 00b0 7B69     		ldr	r3, [r7, #20]
 522 00b2 4FF00002 		mov	r2, #0
 523 00b6 1A70     		strb	r2, [r3, #0]
 677:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 678:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 679:C:\Micrium\Software\uC-LIB\lib_str.c ****     return (pstr_dest);                                         /* Rtn ptr to dest str (see Note #2
 524              		.loc 1 679 0
 525 00b8 FB68     		ldr	r3, [r7, #12]
 526              	.L25:
 680:C:\Micrium\Software\uC-LIB\lib_str.c **** }
 527              		.loc 1 680 0
 528 00ba 1846     		mov	r0, r3
 529 00bc 07F12407 		add	r7, r7, #36
 530 00c0 BD46     		mov	sp, r7
 531 00c2 80BC     		pop	{r7}
 532 00c4 7047     		bx	lr
 533              		.cfi_endproc
 534              	.LFE5:
 535              		.size	Str_Cat_N, .-Str_Cat_N
 536 00c6 00BF     		.section	.text.Str_Cmp,"ax",%progbits
 537              		.align	2
 538              		.global	Str_Cmp
 539              		.thumb
 540              		.thumb_func
 541              		.type	Str_Cmp, %function
 542              	Str_Cmp:
 543              	.LFB6:
 681:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 682:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 683:C:\Micrium\Software\uC-LIB\lib_str.c **** /*$PAGE*/
 684:C:\Micrium\Software\uC-LIB\lib_str.c **** /*
 685:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
 686:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                              Str_Cmp()
 687:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 688:C:\Micrium\Software\uC-LIB\lib_str.c **** * Description : Determine if two strings are identical.
 689:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 690:C:\Micrium\Software\uC-LIB\lib_str.c **** * Argument(s) : p1_str      Pointer to first  string (see Note #1).
 691:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 692:C:\Micrium\Software\uC-LIB\lib_str.c **** *               p2_str      Pointer to second string (see Note #1).
 693:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 694:C:\Micrium\Software\uC-LIB\lib_str.c **** * Return(s)   : 0,              if strings are identical             (see Notes #3a1A, #3a2A, & #3b
 695:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 696:C:\Micrium\Software\uC-LIB\lib_str.c **** *               Negative value, if 'p1_str' is less    than 'p2_str' (see Notes #3a1B1, #3a2B1, & #
 697:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 698:C:\Micrium\Software\uC-LIB\lib_str.c **** *               Positive value, if 'p1_str' is greater than 'p2_str' (see Notes #3a1B2, #3a2B2, & #
 699:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 700:C:\Micrium\Software\uC-LIB\lib_str.c **** *               See also Note #2b.
 701:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 702:C:\Micrium\Software\uC-LIB\lib_str.c **** * Caller(s)   : Application.
 703:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 704:C:\Micrium\Software\uC-LIB\lib_str.c **** * Note(s)     : (1) String buffers NOT modified.
 705:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 706:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strcmp() : DESCRIPTION' states that
 707:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       strcmp() function shall compare the string pointed to by 's1' ('p1_str') to
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 23


 708:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       string pointed to by 's2' ('p2_str)".
 709:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 710:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) (1) IEEE Std 1003.1, 2004 Edition, Section 'strcmp() : RETURN VALUE' states
 711:C:\Micrium\Software\uC-LIB\lib_str.c **** *                          "upon successful completion, strcmp() shall return an integer greater th
 712:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           equal to, or less than 0".
 713:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 714:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) IEEE Std 1003.1, 2004 Edition, Section 'strcmp() : DESCRIPTION' adds th
 715:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           sign of a non-zero return value shall be determined by the sign of the 
 716:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           between the values of the first pair of bytes ... that differ in the st
 717:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           being compared".
 718:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 719:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (3) String comparison terminates when :
 720:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 721:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (a) (1) (A) BOTH string pointer(s) are passed NULL pointers.
 722:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               (1) NULL strings identical; 0 returned.
 723:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 724:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (B) (1) 'p1_str' passed a NULL pointer.
 725:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   (a) Return negative value of character pointed to by 'p2_str'.
 726:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 727:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               (2) 'p2_str' passed a NULL pointer.
 728:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   (a) Return positive value of character pointed to by 'p1_str'.
 729:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 730:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) (A) BOTH strings point to NULL.
 731:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               (1) Strings overlap with NULL address.
 732:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               (2) Strings identical up to but NOT beyond or including the NULL ad
 733:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   0 returned.
 734:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 735:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (B) (1) 'p1_str_cmp_next' points to NULL.
 736:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   (a) 'p1_str' overlaps with NULL address.
 737:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   (b) Strings compared up to but NOT beyond or including the NULL
 738:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   (c) Return negative value of character pointed to by 'p2_str_cm
 739:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 740:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               (2) 'p2_str_cmp_next' points to NULL.
 741:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   (a) 'p2_str' overlaps with NULL address.
 742:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   (b) Strings compared up to but NOT beyond or including the NULL
 743:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   (c) Return positive value of character pointed to by 'p1_str_cm
 744:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 745:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) Terminating NULL character found in both strings.
 746:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) Strings identical; 0 returned.
 747:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) Only one NULL character test required in conditional since previous con
 748:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           tested character equality.
 749:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 750:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (c) Non-matching characters found.
 751:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) Return signed-integer difference of the character pointed to by 'p2_str
 752:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           from the character pointed to by 'p1_str'.
 753:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 754:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (4) Since 16-bit signed arithmetic is performed to calculate a non-identical compar
 755:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   return value, 'CPU_CHAR' native data type size MUST be 8-bit.
 756:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
 757:C:\Micrium\Software\uC-LIB\lib_str.c **** */
 758:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 759:C:\Micrium\Software\uC-LIB\lib_str.c **** CPU_INT16S  Str_Cmp (const  CPU_CHAR  *p1_str,
 760:C:\Micrium\Software\uC-LIB\lib_str.c ****                      const  CPU_CHAR  *p2_str)
 761:C:\Micrium\Software\uC-LIB\lib_str.c **** {
 544              		.loc 1 761 0
 545              		.cfi_startproc
 546              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 24


 547              		@ frame_needed = 1, uses_anonymous_args = 0
 548 0000 80B5     		push	{r7, lr}
 549              	.LCFI18:
 550              		.cfi_def_cfa_offset 8
 551 0002 84B0     		sub	sp, sp, #16
 552              	.LCFI19:
 553              		.cfi_def_cfa_offset 24
 554 0004 00AF     		add	r7, sp, #0
 555              		.cfi_offset 14, -4
 556              		.cfi_offset 7, -8
 557              	.LCFI20:
 558              		.cfi_def_cfa_register 7
 559 0006 7860     		str	r0, [r7, #4]
 560 0008 3960     		str	r1, [r7, #0]
 762:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_INT16S  cmp_val;
 763:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 764:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 765:C:\Micrium\Software\uC-LIB\lib_str.c ****     cmp_val = Str_Cmp_N(p1_str,
 561              		.loc 1 765 0
 562 000a 7868     		ldr	r0, [r7, #4]
 563 000c 3968     		ldr	r1, [r7, #0]
 564 000e 4FF0FF32 		mov	r2, #-1
 565 0012 FFF7FEFF 		bl	Str_Cmp_N
 566 0016 0346     		mov	r3, r0
 567 0018 9BB2     		uxth	r3, r3
 568 001a FB81     		strh	r3, [r7, #14]	@ movhi
 766:C:\Micrium\Software\uC-LIB\lib_str.c ****                         p2_str,
 767:C:\Micrium\Software\uC-LIB\lib_str.c ****                         DEF_INT_CPU_U_MAX_VAL);
 768:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 769:C:\Micrium\Software\uC-LIB\lib_str.c ****     return (cmp_val);
 569              		.loc 1 769 0
 570 001c FB89     		ldrh	r3, [r7, #14]
 571 001e 1BB2     		sxth	r3, r3
 770:C:\Micrium\Software\uC-LIB\lib_str.c **** }
 572              		.loc 1 770 0
 573 0020 1846     		mov	r0, r3
 574 0022 07F11007 		add	r7, r7, #16
 575 0026 BD46     		mov	sp, r7
 576 0028 80BD     		pop	{r7, pc}
 577              		.cfi_endproc
 578              	.LFE6:
 579              		.size	Str_Cmp, .-Str_Cmp
 580 002a 00BF     		.section	.text.Str_Cmp_N,"ax",%progbits
 581              		.align	2
 582              		.global	Str_Cmp_N
 583              		.thumb
 584              		.thumb_func
 585              		.type	Str_Cmp_N, %function
 586              	Str_Cmp_N:
 587              	.LFB7:
 771:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 772:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 773:C:\Micrium\Software\uC-LIB\lib_str.c **** /*$PAGE*/
 774:C:\Micrium\Software\uC-LIB\lib_str.c **** /*
 775:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
 776:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                             Str_Cmp_N()
 777:C:\Micrium\Software\uC-LIB\lib_str.c **** *
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 25


 778:C:\Micrium\Software\uC-LIB\lib_str.c **** * Description : Determine if two strings are identical for up to a maximum number of characters.
 779:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 780:C:\Micrium\Software\uC-LIB\lib_str.c **** * Argument(s) : p1_str      Pointer to first  string (see Note #1).
 781:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 782:C:\Micrium\Software\uC-LIB\lib_str.c **** *               p2_str      Pointer to second string (see Note #1).
 783:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 784:C:\Micrium\Software\uC-LIB\lib_str.c **** *               len_max     Maximum number of characters to compare  (see Note  #3d).
 785:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 786:C:\Micrium\Software\uC-LIB\lib_str.c **** * Return(s)   : 0,              if strings are identical             (see Notes #3a1A, #3a2A, #3b, 
 787:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 788:C:\Micrium\Software\uC-LIB\lib_str.c **** *               Negative value, if 'p1_str' is less    than 'p2_str' (see Notes #3a1B1, #3a2B1, & #
 789:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 790:C:\Micrium\Software\uC-LIB\lib_str.c **** *               Positive value, if 'p1_str' is greater than 'p2_str' (see Notes #3a1B2, #3a2B2, & #
 791:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 792:C:\Micrium\Software\uC-LIB\lib_str.c **** *               See also Note #2b.
 793:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 794:C:\Micrium\Software\uC-LIB\lib_str.c **** * Caller(s)   : Application.
 795:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 796:C:\Micrium\Software\uC-LIB\lib_str.c **** * Note(s)     : (1) String buffers NOT modified.
 797:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 798:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strncmp() : DESCRIPTION' states tha
 799:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 800:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) "The strncmp() function shall compare ... the array pointed to by 's1' 
 801:C:\Micrium\Software\uC-LIB\lib_str.c **** *                            to the array pointed to by 's2' ('p2_str)" ...
 802:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2)  but "not more than 'n' ('len_max') bytes" of either array.
 803:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 804:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) (1) IEEE Std 1003.1, 2004 Edition, Section 'strncmp() : RETURN VALUE' state
 805:C:\Micrium\Software\uC-LIB\lib_str.c **** *                          "upon successful completion, strncmp() shall return an integer greater t
 806:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           equal to, or less than 0".
 807:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 808:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) IEEE Std 1003.1, 2004 Edition, Section 'strncmp() : DESCRIPTION' adds t
 809:C:\Micrium\Software\uC-LIB\lib_str.c **** *                          "the sign of a non-zero return value is determined by the sign of the di
 810:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           between the values of the first pair of bytes ... that differ in the st
 811:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           being compared".
 812:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 813:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (3) String comparison terminates when :
 814:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 815:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (a) (1) (A) BOTH string pointer(s) are passed NULL pointers.
 816:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               (1) NULL strings identical; 0 returned.
 817:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 818:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (B) (1) 'p1_str' passed a NULL pointer.
 819:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   (a) Return negative value of character pointed to by 'p2_str'.
 820:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 821:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               (2) 'p2_str' passed a NULL pointer.
 822:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   (a) Return positive value of character pointed to by 'p1_str'.
 823:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 824:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) (A) BOTH strings point to NULL.
 825:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               (1) Strings overlap with NULL address.
 826:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               (2) Strings identical up to but NOT beyond or including the NULL ad
 827:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   0 returned.
 828:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 829:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (B) (1) 'p1_str_cmp_next' points to NULL.
 830:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   (a) 'p1_str' overlaps with NULL address.
 831:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   (b) Strings compared up to but NOT beyond or including the NULL
 832:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   (c) Return negative value of character pointed to by 'p2_str_cm
 833:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 834:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               (2) 'p2_str_cmp_next' points to NULL.
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 26


 835:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   (a) 'p2_str' overlaps with NULL address.
 836:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   (b) Strings compared up to but NOT beyond or including the NULL
 837:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   (c) Return positive value of character pointed to by 'p1_str_cm
 838:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 839:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) Terminating NULL character found in both strings.
 840:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) Strings identical; 0 returned.
 841:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) Only one NULL character test required in conditional since previous con
 842:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           tested character equality.
 843:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 844:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (c) Non-matching characters found.
 845:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) Return signed-integer difference of the character pointed to by 'p2_str
 846:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           from the character pointed to by 'p1_str'.
 847:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 848:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (d) (1) 'len_max' passed a zero length.
 849:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (A) Zero-length strings identical; 0 returned.
 850:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 851:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) First 'len_max' number of characters identical.
 852:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (A) Strings identical; 0 returned.
 853:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 854:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       See also Note #2a2.
 855:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 856:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (4) Since 16-bit signed arithmetic is performed to calculate a non-identical compar
 857:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   return value, 'CPU_CHAR' native data type size MUST be 8-bit.
 858:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
 859:C:\Micrium\Software\uC-LIB\lib_str.c **** */
 860:C:\Micrium\Software\uC-LIB\lib_str.c **** /*$PAGE*/
 861:C:\Micrium\Software\uC-LIB\lib_str.c **** CPU_INT16S  Str_Cmp_N (const  CPU_CHAR    *p1_str,
 862:C:\Micrium\Software\uC-LIB\lib_str.c ****                        const  CPU_CHAR    *p2_str,
 863:C:\Micrium\Software\uC-LIB\lib_str.c ****                               CPU_SIZE_T   len_max)
 864:C:\Micrium\Software\uC-LIB\lib_str.c **** {
 588              		.loc 1 864 0
 589              		.cfi_startproc
 590              		@ args = 0, pretend = 0, frame = 40
 591              		@ frame_needed = 1, uses_anonymous_args = 0
 592              		@ link register save eliminated.
 593 0000 80B4     		push	{r7}
 594              	.LCFI21:
 595              		.cfi_def_cfa_offset 4
 596 0002 8BB0     		sub	sp, sp, #44
 597              	.LCFI22:
 598              		.cfi_def_cfa_offset 48
 599 0004 00AF     		add	r7, sp, #0
 600              		.cfi_offset 7, -4
 601              	.LCFI23:
 602              		.cfi_def_cfa_register 7
 603 0006 F860     		str	r0, [r7, #12]
 604 0008 B960     		str	r1, [r7, #8]
 605 000a 7A60     		str	r2, [r7, #4]
 865:C:\Micrium\Software\uC-LIB\lib_str.c ****     const  CPU_CHAR    *p1_str_cmp;
 866:C:\Micrium\Software\uC-LIB\lib_str.c ****     const  CPU_CHAR    *p2_str_cmp;
 867:C:\Micrium\Software\uC-LIB\lib_str.c ****     const  CPU_CHAR    *p1_str_cmp_next;
 868:C:\Micrium\Software\uC-LIB\lib_str.c ****     const  CPU_CHAR    *p2_str_cmp_next;
 869:C:\Micrium\Software\uC-LIB\lib_str.c ****            CPU_INT16S   cmp_val;
 870:C:\Micrium\Software\uC-LIB\lib_str.c ****            CPU_SIZE_T   cmp_len;
 871:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 872:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 873:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (len_max < 1) {                                          /* If cmp len = 0,        rtn 0    
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 27


 606              		.loc 1 873 0
 607 000c 7B68     		ldr	r3, [r7, #4]
 608 000e 002B     		cmp	r3, #0
 609 0010 02D1     		bne	.L41
 874:C:\Micrium\Software\uC-LIB\lib_str.c ****         return (0);
 610              		.loc 1 874 0
 611 0012 4FF00003 		mov	r3, #0
 612 0016 86E0     		b	.L42
 613              	.L41:
 875:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
 876:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 877:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (p1_str == (const CPU_CHAR *)0) {
 614              		.loc 1 877 0
 615 0018 FB68     		ldr	r3, [r7, #12]
 616 001a 002B     		cmp	r3, #0
 617 001c 0CD1     		bne	.L43
 878:C:\Micrium\Software\uC-LIB\lib_str.c ****         if (p2_str == (const CPU_CHAR *)0) {
 618              		.loc 1 878 0
 619 001e BB68     		ldr	r3, [r7, #8]
 620 0020 002B     		cmp	r3, #0
 621 0022 02D1     		bne	.L44
 879:C:\Micrium\Software\uC-LIB\lib_str.c ****             return (0);                                         /* If BOTH str ptrs NULL, rtn 0    
 622              		.loc 1 879 0
 623 0024 4FF00003 		mov	r3, #0
 624 0028 7DE0     		b	.L42
 625              	.L44:
 880:C:\Micrium\Software\uC-LIB\lib_str.c ****         }
 881:C:\Micrium\Software\uC-LIB\lib_str.c ****         cmp_val = (CPU_INT16S)0 - (CPU_INT16S)(*p2_str);
 626              		.loc 1 881 0
 627 002a BB68     		ldr	r3, [r7, #8]
 628 002c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 629 002e C3F10003 		rsb	r3, r3, #0
 630 0032 7B84     		strh	r3, [r7, #34]	@ movhi
 882:C:\Micrium\Software\uC-LIB\lib_str.c ****         return (cmp_val);                                       /* If p1_str NULL, rtn neg p2_str v
 631              		.loc 1 882 0
 632 0034 7B8C     		ldrh	r3, [r7, #34]
 633 0036 76E0     		b	.L42
 634              	.L43:
 883:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
 884:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (p2_str == (const CPU_CHAR *)0) {
 635              		.loc 1 884 0
 636 0038 BB68     		ldr	r3, [r7, #8]
 637 003a 002B     		cmp	r3, #0
 638 003c 04D1     		bne	.L45
 885:C:\Micrium\Software\uC-LIB\lib_str.c ****         cmp_val = (CPU_INT16S)(*p1_str);
 639              		.loc 1 885 0
 640 003e FB68     		ldr	r3, [r7, #12]
 641 0040 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 642 0042 7B84     		strh	r3, [r7, #34]	@ movhi
 886:C:\Micrium\Software\uC-LIB\lib_str.c ****         return (cmp_val);                                       /* If p2_str NULL, rtn pos p1_str v
 643              		.loc 1 886 0
 644 0044 7B8C     		ldrh	r3, [r7, #34]
 645 0046 6EE0     		b	.L42
 646              	.L45:
 887:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
 888:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 889:C:\Micrium\Software\uC-LIB\lib_str.c **** 
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 28


 890:C:\Micrium\Software\uC-LIB\lib_str.c ****     p1_str_cmp      = p1_str;
 647              		.loc 1 890 0
 648 0048 FB68     		ldr	r3, [r7, #12]
 649 004a 3B61     		str	r3, [r7, #16]
 891:C:\Micrium\Software\uC-LIB\lib_str.c ****     p2_str_cmp      = p2_str;
 650              		.loc 1 891 0
 651 004c BB68     		ldr	r3, [r7, #8]
 652 004e 7B61     		str	r3, [r7, #20]
 892:C:\Micrium\Software\uC-LIB\lib_str.c ****     p1_str_cmp_next = p1_str_cmp;
 653              		.loc 1 892 0
 654 0050 3B69     		ldr	r3, [r7, #16]
 655 0052 BB61     		str	r3, [r7, #24]
 893:C:\Micrium\Software\uC-LIB\lib_str.c ****     p2_str_cmp_next = p2_str_cmp;
 656              		.loc 1 893 0
 657 0054 7B69     		ldr	r3, [r7, #20]
 658 0056 FB61     		str	r3, [r7, #28]
 894:C:\Micrium\Software\uC-LIB\lib_str.c ****     p1_str_cmp_next++;
 659              		.loc 1 894 0
 660 0058 BB69     		ldr	r3, [r7, #24]
 661 005a 03F10103 		add	r3, r3, #1
 662 005e BB61     		str	r3, [r7, #24]
 895:C:\Micrium\Software\uC-LIB\lib_str.c ****     p2_str_cmp_next++;
 663              		.loc 1 895 0
 664 0060 FB69     		ldr	r3, [r7, #28]
 665 0062 03F10103 		add	r3, r3, #1
 666 0066 FB61     		str	r3, [r7, #28]
 896:C:\Micrium\Software\uC-LIB\lib_str.c ****     cmp_len         = 0u;
 667              		.loc 1 896 0
 668 0068 4FF00003 		mov	r3, #0
 669 006c 7B62     		str	r3, [r7, #36]
 897:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 898:C:\Micrium\Software\uC-LIB\lib_str.c ****     while ((*p1_str_cmp      == *p2_str_cmp)            &&      /* Cmp strs until non-matching char
 670              		.loc 1 898 0
 671 006e 13E0     		b	.L46
 672              	.L48:
 899:C:\Micrium\Software\uC-LIB\lib_str.c ****            (*p1_str_cmp      != (      CPU_CHAR  )'\0') &&      /* ... or NULL chars               
 900:C:\Micrium\Software\uC-LIB\lib_str.c ****            ( p1_str_cmp_next != (const CPU_CHAR *)  0 ) &&      /* ... or NULL ptr(s) found        
 901:C:\Micrium\Software\uC-LIB\lib_str.c ****            ( p2_str_cmp_next != (const CPU_CHAR *)  0 ) &&
 902:C:\Micrium\Software\uC-LIB\lib_str.c ****            ( cmp_len         <  (      CPU_SIZE_T)len_max)) {   /* ... or max nbr chars cmp'd      
 903:C:\Micrium\Software\uC-LIB\lib_str.c ****         p1_str_cmp++;
 673              		.loc 1 903 0
 674 0070 3B69     		ldr	r3, [r7, #16]
 675 0072 03F10103 		add	r3, r3, #1
 676 0076 3B61     		str	r3, [r7, #16]
 904:C:\Micrium\Software\uC-LIB\lib_str.c ****         p2_str_cmp++;
 677              		.loc 1 904 0
 678 0078 7B69     		ldr	r3, [r7, #20]
 679 007a 03F10103 		add	r3, r3, #1
 680 007e 7B61     		str	r3, [r7, #20]
 905:C:\Micrium\Software\uC-LIB\lib_str.c ****         p1_str_cmp_next++;
 681              		.loc 1 905 0
 682 0080 BB69     		ldr	r3, [r7, #24]
 683 0082 03F10103 		add	r3, r3, #1
 684 0086 BB61     		str	r3, [r7, #24]
 906:C:\Micrium\Software\uC-LIB\lib_str.c ****         p2_str_cmp_next++;
 685              		.loc 1 906 0
 686 0088 FB69     		ldr	r3, [r7, #28]
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 29


 687 008a 03F10103 		add	r3, r3, #1
 688 008e FB61     		str	r3, [r7, #28]
 907:C:\Micrium\Software\uC-LIB\lib_str.c ****         cmp_len++;
 689              		.loc 1 907 0
 690 0090 7B6A     		ldr	r3, [r7, #36]
 691 0092 03F10103 		add	r3, r3, #1
 692 0096 7B62     		str	r3, [r7, #36]
 693              	.L46:
 694              		.loc 1 898 0
 695 0098 3B69     		ldr	r3, [r7, #16]
 696 009a 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 697 009c 7B69     		ldr	r3, [r7, #20]
 698 009e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 699 00a0 9A42     		cmp	r2, r3
 700 00a2 0DD1     		bne	.L47
 701              		.loc 1 899 0
 702 00a4 3B69     		ldr	r3, [r7, #16]
 703 00a6 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 704              		.loc 1 898 0
 705 00a8 002B     		cmp	r3, #0
 706 00aa 09D0     		beq	.L47
 707 00ac BB69     		ldr	r3, [r7, #24]
 708 00ae 002B     		cmp	r3, #0
 709 00b0 06D0     		beq	.L47
 710 00b2 FB69     		ldr	r3, [r7, #28]
 711 00b4 002B     		cmp	r3, #0
 712 00b6 03D0     		beq	.L47
 713 00b8 7A6A     		ldr	r2, [r7, #36]
 714 00ba 7B68     		ldr	r3, [r7, #4]
 715 00bc 9A42     		cmp	r2, r3
 716 00be D7D3     		bcc	.L48
 717              	.L47:
 908:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
 909:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 910:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 911:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (cmp_len == len_max) {                                   /* If strs     identical for max le
 718              		.loc 1 911 0
 719 00c0 7A6A     		ldr	r2, [r7, #36]
 720 00c2 7B68     		ldr	r3, [r7, #4]
 721 00c4 9A42     		cmp	r2, r3
 722 00c6 02D1     		bne	.L49
 912:C:\Micrium\Software\uC-LIB\lib_str.c ****         return (0);                                             /* ... rtn 0                 (see N
 723              		.loc 1 912 0
 724 00c8 4FF00003 		mov	r3, #0
 725 00cc 2BE0     		b	.L42
 726              	.L49:
 913:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
 914:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 915:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (*p1_str_cmp != *p2_str_cmp) {                           /* If strs NOT identical, ...      
 727              		.loc 1 915 0
 728 00ce 3B69     		ldr	r3, [r7, #16]
 729 00d0 1A78     		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 730 00d2 7B69     		ldr	r3, [r7, #20]
 731 00d4 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 732 00d6 9A42     		cmp	r2, r3
 733 00d8 09D0     		beq	.L50
 916:C:\Micrium\Software\uC-LIB\lib_str.c ****                                                                 /* ... calc & rtn char diff  (see N
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 30


 917:C:\Micrium\Software\uC-LIB\lib_str.c ****          cmp_val = (CPU_INT16S)(*p1_str_cmp) - (CPU_INT16S)(*p2_str_cmp);
 734              		.loc 1 917 0
 735 00da 3B69     		ldr	r3, [r7, #16]
 736 00dc 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 737 00de 1A46     		mov	r2, r3
 738 00e0 7B69     		ldr	r3, [r7, #20]
 739 00e2 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 740 00e4 C3EB0203 		rsb	r3, r3, r2
 741 00e8 9BB2     		uxth	r3, r3
 742 00ea 7B84     		strh	r3, [r7, #34]	@ movhi
 743 00ec 1AE0     		b	.L51
 744              	.L50:
 918:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 919:C:\Micrium\Software\uC-LIB\lib_str.c ****     } else if (*p1_str_cmp  == (CPU_CHAR)'\0') {                /* If NULL char(s) found, ...      
 745              		.loc 1 919 0
 746 00ee 3B69     		ldr	r3, [r7, #16]
 747 00f0 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 748 00f2 002B     		cmp	r3, #0
 749 00f4 03D1     		bne	.L52
 920:C:\Micrium\Software\uC-LIB\lib_str.c ****          cmp_val = (CPU_INT16S)0;                               /* ... strs identical; rtn 0 (see N
 750              		.loc 1 920 0
 751 00f6 4FF00003 		mov	r3, #0
 752 00fa 7B84     		strh	r3, [r7, #34]	@ movhi
 753 00fc 12E0     		b	.L51
 754              	.L52:
 921:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 922:C:\Micrium\Software\uC-LIB\lib_str.c ****     } else {
 923:C:\Micrium\Software\uC-LIB\lib_str.c ****         if (p1_str_cmp_next == (const CPU_CHAR *)0) {
 755              		.loc 1 923 0
 756 00fe BB69     		ldr	r3, [r7, #24]
 757 0100 002B     		cmp	r3, #0
 758 0102 0CD1     		bne	.L53
 924:C:\Micrium\Software\uC-LIB\lib_str.c ****             if (p2_str_cmp_next == (const CPU_CHAR *)0) {       /* If BOTH next str ptrs NULL, ... 
 759              		.loc 1 924 0
 760 0104 FB69     		ldr	r3, [r7, #28]
 761 0106 002B     		cmp	r3, #0
 762 0108 03D1     		bne	.L54
 925:C:\Micrium\Software\uC-LIB\lib_str.c ****                 cmp_val = (CPU_INT16S)0;                        /* ... rtn 0                       
 763              		.loc 1 925 0
 764 010a 4FF00003 		mov	r3, #0
 765 010e 7B84     		strh	r3, [r7, #34]	@ movhi
 926:C:\Micrium\Software\uC-LIB\lib_str.c ****             } else {                                            /* If p1_str_cmp_next NULL, ...    
 927:C:\Micrium\Software\uC-LIB\lib_str.c ****                                                                 /* ... rtn neg p2_str_cmp_next val 
 928:C:\Micrium\Software\uC-LIB\lib_str.c ****                 cmp_val = (CPU_INT16S)0 - (CPU_INT16S)(*p2_str_cmp_next);
 766              		.loc 1 928 0
 767 0110 08E0     		b	.L51
 768              	.L54:
 769 0112 FB69     		ldr	r3, [r7, #28]
 770 0114 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 771 0116 C3F10003 		rsb	r3, r3, #0
 772 011a 7B84     		strh	r3, [r7, #34]	@ movhi
 773 011c 02E0     		b	.L51
 774              	.L53:
 929:C:\Micrium\Software\uC-LIB\lib_str.c ****             }
 930:C:\Micrium\Software\uC-LIB\lib_str.c ****         } else {                                                /* If p2_str_cmp_next NULL, ...    
 931:C:\Micrium\Software\uC-LIB\lib_str.c ****             cmp_val = (CPU_INT16S)(*p1_str_cmp_next);           /* ... rtn pos p1_str_cmp_next val 
 775              		.loc 1 931 0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 31


 776 011e BB69     		ldr	r3, [r7, #24]
 777 0120 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 778 0122 7B84     		strh	r3, [r7, #34]	@ movhi
 779              	.L51:
 932:C:\Micrium\Software\uC-LIB\lib_str.c ****         }
 933:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
 934:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 935:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 936:C:\Micrium\Software\uC-LIB\lib_str.c ****     return (cmp_val);
 780              		.loc 1 936 0
 781 0124 7B8C     		ldrh	r3, [r7, #34]
 782              	.L42:
 783 0126 1BB2     		sxth	r3, r3
 937:C:\Micrium\Software\uC-LIB\lib_str.c **** }
 784              		.loc 1 937 0
 785 0128 1846     		mov	r0, r3
 786 012a 07F12C07 		add	r7, r7, #44
 787 012e BD46     		mov	sp, r7
 788 0130 80BC     		pop	{r7}
 789 0132 7047     		bx	lr
 790              		.cfi_endproc
 791              	.LFE7:
 792              		.size	Str_Cmp_N, .-Str_Cmp_N
 793              		.section	.text.Str_CmpIgnoreCase,"ax",%progbits
 794              		.align	2
 795              		.global	Str_CmpIgnoreCase
 796              		.thumb
 797              		.thumb_func
 798              		.type	Str_CmpIgnoreCase, %function
 799              	Str_CmpIgnoreCase:
 800              	.LFB8:
 938:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 939:C:\Micrium\Software\uC-LIB\lib_str.c **** 
 940:C:\Micrium\Software\uC-LIB\lib_str.c **** /*$PAGE*/
 941:C:\Micrium\Software\uC-LIB\lib_str.c **** /*
 942:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
 943:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                         Str_CmpIgnoreCase()
 944:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 945:C:\Micrium\Software\uC-LIB\lib_str.c **** * Description : Determine if two strings are identical, ignoring case.
 946:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 947:C:\Micrium\Software\uC-LIB\lib_str.c **** * Argument(s) : p1_str      Pointer to first  string (see Note #1).
 948:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 949:C:\Micrium\Software\uC-LIB\lib_str.c **** *               p2_str      Pointer to second string (see Note #1).
 950:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 951:C:\Micrium\Software\uC-LIB\lib_str.c **** * Return(s)   : 0,              if strings are identical             (see Notes #3a1A, #3a2A, & #3b
 952:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 953:C:\Micrium\Software\uC-LIB\lib_str.c **** *               Negative value, if 'p1_str' is less    than 'p2_str' (see Notes #3a1B1, #3a2B1, & #
 954:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 955:C:\Micrium\Software\uC-LIB\lib_str.c **** *               Positive value, if 'p1_str' is greater than 'p2_str' (see Notes #3a1B2, #3a2B2, & #
 956:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 957:C:\Micrium\Software\uC-LIB\lib_str.c **** *               See also Note #2b.
 958:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 959:C:\Micrium\Software\uC-LIB\lib_str.c **** * Caller(s)   : Application.
 960:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 961:C:\Micrium\Software\uC-LIB\lib_str.c **** * Note(s)     : (1) String buffers NOT modified.
 962:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 963:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strcasecmp() : DESCRIPTION' states 
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 32


 964:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 965:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) (A) "The strcasecmp() function shall compare ... the string pointed to 
 966:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                ('p1_str') to the string pointed to by 's2' ('p2_str')" ...
 967:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (B) "ignoring differences in case".
 968:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 969:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) "strcasecmp() ... shall behave as if the strings had been converted to 
 970:C:\Micrium\Software\uC-LIB\lib_str.c **** *                            and then a byte comparison performed."
 971:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 972:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) (1) IEEE Std 1003.1, 2004 Edition, Section 'strcasecmp() : RETURN VALUE' st
 973:C:\Micrium\Software\uC-LIB\lib_str.c **** *                          "upon successful completion, strcasecmp() shall return an integer greate
 974:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           equal to, or less than 0".
 975:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 976:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) IEEE Std 1003.1, 2004 Edition, Section 'strcmp() : DESCRIPTION' adds th
 977:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           sign of a non-zero return value shall be determined by the sign of the 
 978:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           between the values of the first pair of bytes ... that differ in the st
 979:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           being compared".
 980:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 981:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (3) String comparison terminates when :
 982:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 983:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (a) (1) (A) BOTH string pointer(s) are passed NULL pointers.
 984:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               (1) NULL strings identical; 0 returned.
 985:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 986:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (B) (1) 'p1_str' passed a NULL pointer.
 987:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   (a) Return negative value of character pointed to by 'p2_str', 
 988:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       to lower case (see Note #2a2).
 989:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 990:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               (2) 'p2_str' passed a NULL pointer.
 991:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   (a) Return positive value of character pointed to by 'p1_str', 
 992:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       to lower case (see Note #2a2).
 993:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 994:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) (A) BOTH strings point to NULL.
 995:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               (1) Strings overlap with NULL address.
 996:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               (2) Strings identical up to but NOT beyond or including the NULL ad
 997:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   0 returned.
 998:C:\Micrium\Software\uC-LIB\lib_str.c **** *
 999:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (B) (1) 'p1_str_cmp_next' points to NULL.
1000:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   (a) 'p1_str' overlaps with NULL address.
1001:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   (b) Strings compared up to but NOT beyond or including the NULL
1002:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   (c) Return negative value of character pointed to by 'p2_str_cm
1003:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       converted to lower case (see Note #2a2).
1004:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1005:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               (2) 'p2_str_cmp_next' points to NULL.
1006:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   (a) 'p2_str' overlaps with NULL address.
1007:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   (b) Strings compared up to but NOT beyond or including the NULL
1008:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   (c) Return positive value of character pointed to by 'p1_str_cm
1009:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       converted to lower case (see Note #2a2).
1010:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1011:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) Terminating NULL character found in both strings.
1012:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) Strings identical; 0 returned.
1013:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) Only one NULL character test required in conditional since previous con
1014:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           tested character equality.
1015:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1016:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (c) Non-matching characters found.
1017:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) Return signed-integer difference of the character pointed to by 'p2_str
1018:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           converted to lower case, from the character pointed to by 'p1_str', con
1019:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           to lower case.
1020:C:\Micrium\Software\uC-LIB\lib_str.c **** *
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 33


1021:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (4) Since 16-bit signed arithmetic is performed to calculate a non-identical compar
1022:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   return value, 'CPU_CHAR' native data type size MUST be 8-bit.
1023:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
1024:C:\Micrium\Software\uC-LIB\lib_str.c **** */
1025:C:\Micrium\Software\uC-LIB\lib_str.c **** /*$PAGE*/
1026:C:\Micrium\Software\uC-LIB\lib_str.c **** CPU_INT16S  Str_CmpIgnoreCase (const  CPU_CHAR  *p1_str,
1027:C:\Micrium\Software\uC-LIB\lib_str.c ****                                const  CPU_CHAR  *p2_str)
1028:C:\Micrium\Software\uC-LIB\lib_str.c **** {
 801              		.loc 1 1028 0
 802              		.cfi_startproc
 803              		@ args = 0, pretend = 0, frame = 16
 804              		@ frame_needed = 1, uses_anonymous_args = 0
 805 0000 80B5     		push	{r7, lr}
 806              	.LCFI24:
 807              		.cfi_def_cfa_offset 8
 808 0002 84B0     		sub	sp, sp, #16
 809              	.LCFI25:
 810              		.cfi_def_cfa_offset 24
 811 0004 00AF     		add	r7, sp, #0
 812              		.cfi_offset 14, -4
 813              		.cfi_offset 7, -8
 814              	.LCFI26:
 815              		.cfi_def_cfa_register 7
 816 0006 7860     		str	r0, [r7, #4]
 817 0008 3960     		str	r1, [r7, #0]
1029:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_INT16S  cmp_val;
1030:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1031:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1032:C:\Micrium\Software\uC-LIB\lib_str.c ****     cmp_val = Str_CmpIgnoreCase_N(p1_str,
 818              		.loc 1 1032 0
 819 000a 7868     		ldr	r0, [r7, #4]
 820 000c 3968     		ldr	r1, [r7, #0]
 821 000e 4FF0FF32 		mov	r2, #-1
 822 0012 FFF7FEFF 		bl	Str_CmpIgnoreCase_N
 823 0016 0346     		mov	r3, r0
 824 0018 9BB2     		uxth	r3, r3
 825 001a FB81     		strh	r3, [r7, #14]	@ movhi
1033:C:\Micrium\Software\uC-LIB\lib_str.c ****                                   p2_str,
1034:C:\Micrium\Software\uC-LIB\lib_str.c ****                                   DEF_INT_CPU_U_MAX_VAL);
1035:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1036:C:\Micrium\Software\uC-LIB\lib_str.c ****     return (cmp_val);
 826              		.loc 1 1036 0
 827 001c FB89     		ldrh	r3, [r7, #14]
 828 001e 1BB2     		sxth	r3, r3
1037:C:\Micrium\Software\uC-LIB\lib_str.c **** }
 829              		.loc 1 1037 0
 830 0020 1846     		mov	r0, r3
 831 0022 07F11007 		add	r7, r7, #16
 832 0026 BD46     		mov	sp, r7
 833 0028 80BD     		pop	{r7, pc}
 834              		.cfi_endproc
 835              	.LFE8:
 836              		.size	Str_CmpIgnoreCase, .-Str_CmpIgnoreCase
 837 002a 00BF     		.section	.text.Str_CmpIgnoreCase_N,"ax",%progbits
 838              		.align	2
 839              		.global	Str_CmpIgnoreCase_N
 840              		.thumb
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 34


 841              		.thumb_func
 842              		.type	Str_CmpIgnoreCase_N, %function
 843              	Str_CmpIgnoreCase_N:
 844              	.LFB9:
1038:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1039:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1040:C:\Micrium\Software\uC-LIB\lib_str.c **** /*$PAGE*/
1041:C:\Micrium\Software\uC-LIB\lib_str.c **** /*
1042:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
1043:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                        Str_CmpIgnoreCase_N()
1044:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1045:C:\Micrium\Software\uC-LIB\lib_str.c **** * Description : Determine if two strings are identical for up to a maximum number of characters,
1046:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   ignoring case.
1047:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1048:C:\Micrium\Software\uC-LIB\lib_str.c **** * Argument(s) : p1_str      Pointer to first  string (see Note #1).
1049:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1050:C:\Micrium\Software\uC-LIB\lib_str.c **** *               p2_str      Pointer to second string (see Note #1).
1051:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1052:C:\Micrium\Software\uC-LIB\lib_str.c **** *               len_max     Maximum number of characters to compare  (see Note  #3d).
1053:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1054:C:\Micrium\Software\uC-LIB\lib_str.c **** * Return(s)   : 0,              if strings are identical             (see Notes #3a1A, #3a2A, #3b, 
1055:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1056:C:\Micrium\Software\uC-LIB\lib_str.c **** *               Negative value, if 'p1_str' is less    than 'p2_str' (see Notes #3a1B1, #3a2B1, & #
1057:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1058:C:\Micrium\Software\uC-LIB\lib_str.c **** *               Positive value, if 'p1_str' is greater than 'p2_str' (see Notes #3a1B2, #3a2B2, & #
1059:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1060:C:\Micrium\Software\uC-LIB\lib_str.c **** *               See also Note #2b.
1061:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1062:C:\Micrium\Software\uC-LIB\lib_str.c **** * Caller(s)   : Application.
1063:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1064:C:\Micrium\Software\uC-LIB\lib_str.c **** * Note(s)     : (1) String buffers NOT modified.
1065:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1066:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strncasecmp() : DESCRIPTION' states
1067:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1068:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) (A) "The strncasecmp() function shall compare ... the string pointed to
1069:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                ('p1_str') to the string pointed to by 's2' ('p2_str')" ...
1070:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (B) "ignoring differences in case"                           ...
1071:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (C)  but "not more than 'n' ('len_max') bytes" of either string.
1072:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1073:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) "strncasecmp() shall behave as if the strings had been converted to low
1074:C:\Micrium\Software\uC-LIB\lib_str.c **** *                            and then a byte comparison performed."
1075:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1076:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) (1) IEEE Std 1003.1, 2004 Edition, Section 'strncasecmp() : RETURN VALUE' s
1077:C:\Micrium\Software\uC-LIB\lib_str.c **** *                          "upon successful completion, strncasecmp() shall return an integer great
1078:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           equal to, or less than 0".
1079:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1080:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) IEEE Std 1003.1, 2004 Edition, Section 'strcmp() : DESCRIPTION' adds th
1081:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           sign of a non-zero return value shall be determined by the sign of the 
1082:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           between the values of the first pair of bytes ... that differ in the st
1083:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           being compared".
1084:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1085:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (3) String comparison terminates when :
1086:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1087:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (a) (1) (A) BOTH string pointer(s) are passed NULL pointers.
1088:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               (1) NULL strings identical; 0 returned.
1089:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1090:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (B) (1) 'p1_str' passed a NULL pointer.
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 35


1091:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   (a) Return negative value of character pointed to by 'p2_str', 
1092:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       to lower case (see Note #2a2).
1093:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1094:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               (2) 'p2_str' passed a NULL pointer.
1095:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   (a) Return positive value of character pointed to by 'p1_str', 
1096:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       to lower case (see Note #2a2).
1097:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1098:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) (A) BOTH strings point to NULL.
1099:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               (1) Strings overlap with NULL address.
1100:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               (2) Strings identical up to but NOT beyond or including the NULL ad
1101:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   0 returned.
1102:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1103:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (B) (1) 'p1_str_cmp_next' points to NULL.
1104:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   (a) 'p1_str' overlaps with NULL address.
1105:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   (b) Strings compared up to but NOT beyond or including the NULL
1106:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   (c) Return negative value of character pointed to by 'p2_str_cm
1107:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       converted to lower case (see Note #2a2).
1108:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1109:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               (2) 'p2_str_cmp_next' points to NULL.
1110:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   (a) 'p2_str' overlaps with NULL address.
1111:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   (b) Strings compared up to but NOT beyond or including the NULL
1112:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   (c) Return positive value of character pointed to by 'p1_str_cm
1113:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       converted to lower case (see Note #2a2).
1114:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1115:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) Terminating NULL character found in both strings.
1116:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) Strings identical; 0 returned.
1117:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) Only one NULL character test required in conditional since previous con
1118:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           tested character equality.
1119:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1120:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (c) Non-matching characters found.
1121:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) Return signed-integer difference of the character pointed to by 'p2_str
1122:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           converted to lower case, from the character pointed to by 'p1_str', con
1123:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           to lower case.
1124:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1125:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (d) (1) 'len_max' passed a zero length.
1126:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (A) Zero-length strings identical; 0 returned.
1127:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1128:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) First 'len_max' number of characters identical.
1129:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (A) Strings identical; 0 returned.
1130:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1131:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       See also Note #2a1C.
1132:C:\Micrium\Software\uC-LIB\lib_str.c **** *$PAGE*
1133:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (4) Since 16-bit signed arithmetic is performed to calculate a non-identical compar
1134:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   return value, 'CPU_CHAR' native data type size MUST be 8-bit.
1135:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
1136:C:\Micrium\Software\uC-LIB\lib_str.c **** */
1137:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1138:C:\Micrium\Software\uC-LIB\lib_str.c **** CPU_INT16S  Str_CmpIgnoreCase_N (const  CPU_CHAR    *p1_str,
1139:C:\Micrium\Software\uC-LIB\lib_str.c ****                                  const  CPU_CHAR    *p2_str,
1140:C:\Micrium\Software\uC-LIB\lib_str.c ****                                         CPU_SIZE_T   len_max)
1141:C:\Micrium\Software\uC-LIB\lib_str.c **** {
 845              		.loc 1 1141 0
 846              		.cfi_startproc
 847              		@ args = 0, pretend = 0, frame = 40
 848              		@ frame_needed = 1, uses_anonymous_args = 0
 849 0000 80B5     		push	{r7, lr}
 850              	.LCFI27:
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 36


 851              		.cfi_def_cfa_offset 8
 852 0002 8AB0     		sub	sp, sp, #40
 853              	.LCFI28:
 854              		.cfi_def_cfa_offset 48
 855 0004 00AF     		add	r7, sp, #0
 856              		.cfi_offset 14, -4
 857              		.cfi_offset 7, -8
 858              	.LCFI29:
 859              		.cfi_def_cfa_register 7
 860 0006 F860     		str	r0, [r7, #12]
 861 0008 B960     		str	r1, [r7, #8]
 862 000a 7A60     		str	r2, [r7, #4]
1142:C:\Micrium\Software\uC-LIB\lib_str.c ****     const  CPU_CHAR    *p1_str_cmp;
1143:C:\Micrium\Software\uC-LIB\lib_str.c ****     const  CPU_CHAR    *p2_str_cmp;
1144:C:\Micrium\Software\uC-LIB\lib_str.c ****     const  CPU_CHAR    *p1_str_cmp_next;
1145:C:\Micrium\Software\uC-LIB\lib_str.c ****     const  CPU_CHAR    *p2_str_cmp_next;
1146:C:\Micrium\Software\uC-LIB\lib_str.c ****            CPU_CHAR     char_1;
1147:C:\Micrium\Software\uC-LIB\lib_str.c ****            CPU_CHAR     char_2;
1148:C:\Micrium\Software\uC-LIB\lib_str.c ****            CPU_INT16S   cmp_val;
1149:C:\Micrium\Software\uC-LIB\lib_str.c ****            CPU_SIZE_T   cmp_len;
1150:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1151:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1152:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (len_max < 1) {                                          /* If cmp len = 0,        rtn 0    
 863              		.loc 1 1152 0
 864 000c 7B68     		ldr	r3, [r7, #4]
 865 000e 002B     		cmp	r3, #0
 866 0010 02D1     		bne	.L60
1153:C:\Micrium\Software\uC-LIB\lib_str.c ****         return (0);
 867              		.loc 1 1153 0
 868 0012 4FF00003 		mov	r3, #0
 869 0016 C5E0     		b	.L61
 870              	.L60:
1154:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
1155:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1156:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (p1_str == (const CPU_CHAR *)0) {
 871              		.loc 1 1156 0
 872 0018 FB68     		ldr	r3, [r7, #12]
 873 001a 002B     		cmp	r3, #0
 874 001c 14D1     		bne	.L62
1157:C:\Micrium\Software\uC-LIB\lib_str.c ****         if (p2_str == (const CPU_CHAR *)0) {
 875              		.loc 1 1157 0
 876 001e BB68     		ldr	r3, [r7, #8]
 877 0020 002B     		cmp	r3, #0
 878 0022 02D1     		bne	.L63
1158:C:\Micrium\Software\uC-LIB\lib_str.c ****             return (0);                                         /* If BOTH str ptrs NULL, rtn 0    
 879              		.loc 1 1158 0
 880 0024 4FF00003 		mov	r3, #0
 881 0028 BCE0     		b	.L61
 882              	.L63:
1159:C:\Micrium\Software\uC-LIB\lib_str.c ****         }
1160:C:\Micrium\Software\uC-LIB\lib_str.c ****         char_2  =  ASCII_ToLower(*p2_str);
 883              		.loc 1 1160 0
 884 002a BB68     		ldr	r3, [r7, #8]
 885 002c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 886 002e 1846     		mov	r0, r3
 887 0030 FFF7FEFF 		bl	ASCII_ToLower
 888 0034 0346     		mov	r3, r0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 37


 889 0036 87F82130 		strb	r3, [r7, #33]
1161:C:\Micrium\Software\uC-LIB\lib_str.c ****         cmp_val = (CPU_INT16S)0 - (CPU_INT16S)char_2;
 890              		.loc 1 1161 0
 891 003a 97F82130 		ldrb	r3, [r7, #33]	@ zero_extendqisi2
 892 003e C3F10003 		rsb	r3, r3, #0
 893 0042 7B84     		strh	r3, [r7, #34]	@ movhi
1162:C:\Micrium\Software\uC-LIB\lib_str.c ****         return (cmp_val);                                       /* If p1_str NULL, rtn neg p2_str v
 894              		.loc 1 1162 0
 895 0044 7B8C     		ldrh	r3, [r7, #34]
 896 0046 ADE0     		b	.L61
 897              	.L62:
1163:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
1164:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (p2_str == (const CPU_CHAR *)0) {
 898              		.loc 1 1164 0
 899 0048 BB68     		ldr	r3, [r7, #8]
 900 004a 002B     		cmp	r3, #0
 901 004c 0CD1     		bne	.L64
1165:C:\Micrium\Software\uC-LIB\lib_str.c ****         char_1  =  ASCII_ToLower(*p1_str);
 902              		.loc 1 1165 0
 903 004e FB68     		ldr	r3, [r7, #12]
 904 0050 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 905 0052 1846     		mov	r0, r3
 906 0054 FFF7FEFF 		bl	ASCII_ToLower
 907 0058 0346     		mov	r3, r0
 908 005a 87F82030 		strb	r3, [r7, #32]
1166:C:\Micrium\Software\uC-LIB\lib_str.c ****         cmp_val = (CPU_INT16S)char_1;
 909              		.loc 1 1166 0
 910 005e 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 911 0062 7B84     		strh	r3, [r7, #34]	@ movhi
1167:C:\Micrium\Software\uC-LIB\lib_str.c ****         return (cmp_val);                                       /* If p2_str NULL, rtn pos p1_str v
 912              		.loc 1 1167 0
 913 0064 7B8C     		ldrh	r3, [r7, #34]
 914 0066 9DE0     		b	.L61
 915              	.L64:
1168:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
1169:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1170:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1171:C:\Micrium\Software\uC-LIB\lib_str.c ****     p1_str_cmp      = p1_str;
 916              		.loc 1 1171 0
 917 0068 FB68     		ldr	r3, [r7, #12]
 918 006a 3B61     		str	r3, [r7, #16]
1172:C:\Micrium\Software\uC-LIB\lib_str.c ****     p2_str_cmp      = p2_str;
 919              		.loc 1 1172 0
 920 006c BB68     		ldr	r3, [r7, #8]
 921 006e 7B61     		str	r3, [r7, #20]
1173:C:\Micrium\Software\uC-LIB\lib_str.c ****     p1_str_cmp_next = p1_str_cmp;
 922              		.loc 1 1173 0
 923 0070 3B69     		ldr	r3, [r7, #16]
 924 0072 BB61     		str	r3, [r7, #24]
1174:C:\Micrium\Software\uC-LIB\lib_str.c ****     p2_str_cmp_next = p2_str_cmp;
 925              		.loc 1 1174 0
 926 0074 7B69     		ldr	r3, [r7, #20]
 927 0076 FB61     		str	r3, [r7, #28]
1175:C:\Micrium\Software\uC-LIB\lib_str.c ****     p1_str_cmp_next++;
 928              		.loc 1 1175 0
 929 0078 BB69     		ldr	r3, [r7, #24]
 930 007a 03F10103 		add	r3, r3, #1
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 38


 931 007e BB61     		str	r3, [r7, #24]
1176:C:\Micrium\Software\uC-LIB\lib_str.c ****     p2_str_cmp_next++;
 932              		.loc 1 1176 0
 933 0080 FB69     		ldr	r3, [r7, #28]
 934 0082 03F10103 		add	r3, r3, #1
 935 0086 FB61     		str	r3, [r7, #28]
1177:C:\Micrium\Software\uC-LIB\lib_str.c ****     char_1          = ASCII_ToLower(*p1_str_cmp);
 936              		.loc 1 1177 0
 937 0088 3B69     		ldr	r3, [r7, #16]
 938 008a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 939 008c 1846     		mov	r0, r3
 940 008e FFF7FEFF 		bl	ASCII_ToLower
 941 0092 0346     		mov	r3, r0
 942 0094 87F82030 		strb	r3, [r7, #32]
1178:C:\Micrium\Software\uC-LIB\lib_str.c ****     char_2          = ASCII_ToLower(*p2_str_cmp);
 943              		.loc 1 1178 0
 944 0098 7B69     		ldr	r3, [r7, #20]
 945 009a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 946 009c 1846     		mov	r0, r3
 947 009e FFF7FEFF 		bl	ASCII_ToLower
 948 00a2 0346     		mov	r3, r0
 949 00a4 87F82130 		strb	r3, [r7, #33]
1179:C:\Micrium\Software\uC-LIB\lib_str.c ****     cmp_len         = 0u;
 950              		.loc 1 1179 0
 951 00a8 4FF00003 		mov	r3, #0
 952 00ac 7B62     		str	r3, [r7, #36]
1180:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1181:C:\Micrium\Software\uC-LIB\lib_str.c ****     while (( char_1          ==  char_2)                &&      /* Cmp strs until non-matching char
 953              		.loc 1 1181 0
 954 00ae 23E0     		b	.L65
 955              	.L67:
1182:C:\Micrium\Software\uC-LIB\lib_str.c ****            (*p1_str_cmp      != (      CPU_CHAR  )'\0') &&      /* ... or NULL chars               
1183:C:\Micrium\Software\uC-LIB\lib_str.c ****            ( p1_str_cmp_next != (const CPU_CHAR *)  0 ) &&      /* ... or NULL ptr(s) found        
1184:C:\Micrium\Software\uC-LIB\lib_str.c ****            ( p2_str_cmp_next != (const CPU_CHAR *)  0 ) &&
1185:C:\Micrium\Software\uC-LIB\lib_str.c ****            ( cmp_len         <  (      CPU_SIZE_T)len_max)) {   /* ... or max nbr chars cmp'd      
1186:C:\Micrium\Software\uC-LIB\lib_str.c ****         p1_str_cmp++;
 956              		.loc 1 1186 0
 957 00b0 3B69     		ldr	r3, [r7, #16]
 958 00b2 03F10103 		add	r3, r3, #1
 959 00b6 3B61     		str	r3, [r7, #16]
1187:C:\Micrium\Software\uC-LIB\lib_str.c ****         p2_str_cmp++;
 960              		.loc 1 1187 0
 961 00b8 7B69     		ldr	r3, [r7, #20]
 962 00ba 03F10103 		add	r3, r3, #1
 963 00be 7B61     		str	r3, [r7, #20]
1188:C:\Micrium\Software\uC-LIB\lib_str.c ****         p1_str_cmp_next++;
 964              		.loc 1 1188 0
 965 00c0 BB69     		ldr	r3, [r7, #24]
 966 00c2 03F10103 		add	r3, r3, #1
 967 00c6 BB61     		str	r3, [r7, #24]
1189:C:\Micrium\Software\uC-LIB\lib_str.c ****         p2_str_cmp_next++;
 968              		.loc 1 1189 0
 969 00c8 FB69     		ldr	r3, [r7, #28]
 970 00ca 03F10103 		add	r3, r3, #1
 971 00ce FB61     		str	r3, [r7, #28]
1190:C:\Micrium\Software\uC-LIB\lib_str.c ****         cmp_len++;
 972              		.loc 1 1190 0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 39


 973 00d0 7B6A     		ldr	r3, [r7, #36]
 974 00d2 03F10103 		add	r3, r3, #1
 975 00d6 7B62     		str	r3, [r7, #36]
1191:C:\Micrium\Software\uC-LIB\lib_str.c ****         char_1 = ASCII_ToLower(*p1_str_cmp);
 976              		.loc 1 1191 0
 977 00d8 3B69     		ldr	r3, [r7, #16]
 978 00da 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 979 00dc 1846     		mov	r0, r3
 980 00de FFF7FEFF 		bl	ASCII_ToLower
 981 00e2 0346     		mov	r3, r0
 982 00e4 87F82030 		strb	r3, [r7, #32]
1192:C:\Micrium\Software\uC-LIB\lib_str.c ****         char_2 = ASCII_ToLower(*p2_str_cmp);
 983              		.loc 1 1192 0
 984 00e8 7B69     		ldr	r3, [r7, #20]
 985 00ea 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 986 00ec 1846     		mov	r0, r3
 987 00ee FFF7FEFF 		bl	ASCII_ToLower
 988 00f2 0346     		mov	r3, r0
 989 00f4 87F82130 		strb	r3, [r7, #33]
 990              	.L65:
 991              		.loc 1 1181 0
 992 00f8 97F82020 		ldrb	r2, [r7, #32]	@ zero_extendqisi2
 993 00fc 97F82130 		ldrb	r3, [r7, #33]	@ zero_extendqisi2
 994 0100 9A42     		cmp	r2, r3
 995 0102 0DD1     		bne	.L66
 996              		.loc 1 1182 0
 997 0104 3B69     		ldr	r3, [r7, #16]
 998 0106 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 999              		.loc 1 1181 0
 1000 0108 002B     		cmp	r3, #0
 1001 010a 09D0     		beq	.L66
 1002 010c BB69     		ldr	r3, [r7, #24]
 1003 010e 002B     		cmp	r3, #0
 1004 0110 06D0     		beq	.L66
 1005 0112 FB69     		ldr	r3, [r7, #28]
 1006 0114 002B     		cmp	r3, #0
 1007 0116 03D0     		beq	.L66
 1008 0118 7A6A     		ldr	r2, [r7, #36]
 1009 011a 7B68     		ldr	r3, [r7, #4]
 1010 011c 9A42     		cmp	r2, r3
 1011 011e C7D3     		bcc	.L67
 1012              	.L66:
1193:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
1194:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1195:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1196:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (cmp_len == len_max) {                                   /* If strs     identical for max le
 1013              		.loc 1 1196 0
 1014 0120 7A6A     		ldr	r2, [r7, #36]
 1015 0122 7B68     		ldr	r3, [r7, #4]
 1016 0124 9A42     		cmp	r2, r3
 1017 0126 02D1     		bne	.L68
1197:C:\Micrium\Software\uC-LIB\lib_str.c ****         return (0);                                             /* ... rtn 0                 (see N
 1018              		.loc 1 1197 0
 1019 0128 4FF00003 		mov	r3, #0
 1020 012c 3AE0     		b	.L61
 1021              	.L68:
1198:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 40


1199:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1200:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (char_1 != char_2) {                                     /* If strs NOT identical, ...      
 1022              		.loc 1 1200 0
 1023 012e 97F82020 		ldrb	r2, [r7, #32]	@ zero_extendqisi2
 1024 0132 97F82130 		ldrb	r3, [r7, #33]	@ zero_extendqisi2
 1025 0136 9A42     		cmp	r2, r3
 1026 0138 08D0     		beq	.L69
1201:C:\Micrium\Software\uC-LIB\lib_str.c ****          cmp_val = (CPU_INT16S)char_1 - (CPU_INT16S)char_2;     /* ... calc & rtn char diff  (see N
 1027              		.loc 1 1201 0
 1028 013a 97F82020 		ldrb	r2, [r7, #32]	@ zero_extendqisi2
 1029 013e 97F82130 		ldrb	r3, [r7, #33]	@ zero_extendqisi2
 1030 0142 C3EB0203 		rsb	r3, r3, r2
 1031 0146 9BB2     		uxth	r3, r3
 1032 0148 7B84     		strh	r3, [r7, #34]	@ movhi
 1033 014a 2AE0     		b	.L70
 1034              	.L69:
1202:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1203:C:\Micrium\Software\uC-LIB\lib_str.c ****     } else if (char_1 == (CPU_CHAR)'\0') {                      /* If NULL char(s) found, ...      
 1035              		.loc 1 1203 0
 1036 014c 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 1037 0150 002B     		cmp	r3, #0
 1038 0152 03D1     		bne	.L71
1204:C:\Micrium\Software\uC-LIB\lib_str.c ****          cmp_val = (CPU_INT16S)0;                               /* ... strs identical; rtn 0 (see N
 1039              		.loc 1 1204 0
 1040 0154 4FF00003 		mov	r3, #0
 1041 0158 7B84     		strh	r3, [r7, #34]	@ movhi
 1042 015a 22E0     		b	.L70
 1043              	.L71:
1205:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1206:C:\Micrium\Software\uC-LIB\lib_str.c ****     } else {
1207:C:\Micrium\Software\uC-LIB\lib_str.c ****         if (p1_str_cmp_next == (const CPU_CHAR *)0) {
 1044              		.loc 1 1207 0
 1045 015c BB69     		ldr	r3, [r7, #24]
 1046 015e 002B     		cmp	r3, #0
 1047 0160 14D1     		bne	.L72
1208:C:\Micrium\Software\uC-LIB\lib_str.c ****             if (p2_str_cmp_next == (const CPU_CHAR *)0) {       /* If BOTH next str ptrs NULL, ... 
 1048              		.loc 1 1208 0
 1049 0162 FB69     		ldr	r3, [r7, #28]
 1050 0164 002B     		cmp	r3, #0
 1051 0166 03D1     		bne	.L73
1209:C:\Micrium\Software\uC-LIB\lib_str.c ****                 cmp_val = (CPU_INT16S)0;                        /* ... rtn 0                       
 1052              		.loc 1 1209 0
 1053 0168 4FF00003 		mov	r3, #0
 1054 016c 7B84     		strh	r3, [r7, #34]	@ movhi
1210:C:\Micrium\Software\uC-LIB\lib_str.c ****             } else {                                            /* If p1_str_cmp_next NULL, ...    
1211:C:\Micrium\Software\uC-LIB\lib_str.c ****                 char_2  =  ASCII_ToLower(*p2_str_cmp_next);
1212:C:\Micrium\Software\uC-LIB\lib_str.c ****                 cmp_val = (CPU_INT16S)0 - (CPU_INT16S)char_2;   /* ... rtn neg p2_str_cmp_next val 
 1055              		.loc 1 1212 0
 1056 016e 18E0     		b	.L70
 1057              	.L73:
 1058              		.loc 1 1211 0
 1059 0170 FB69     		ldr	r3, [r7, #28]
 1060 0172 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1061 0174 1846     		mov	r0, r3
 1062 0176 FFF7FEFF 		bl	ASCII_ToLower
 1063 017a 0346     		mov	r3, r0
 1064 017c 87F82130 		strb	r3, [r7, #33]
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 41


 1065              		.loc 1 1212 0
 1066 0180 97F82130 		ldrb	r3, [r7, #33]	@ zero_extendqisi2
 1067 0184 C3F10003 		rsb	r3, r3, #0
 1068 0188 7B84     		strh	r3, [r7, #34]	@ movhi
 1069 018a 0AE0     		b	.L70
 1070              	.L72:
1213:C:\Micrium\Software\uC-LIB\lib_str.c ****             }
1214:C:\Micrium\Software\uC-LIB\lib_str.c ****         } else {                                                /* If p2_str_cmp_next NULL, ...    
1215:C:\Micrium\Software\uC-LIB\lib_str.c ****             char_1  =  ASCII_ToLower(*p1_str_cmp_next);
 1071              		.loc 1 1215 0
 1072 018c BB69     		ldr	r3, [r7, #24]
 1073 018e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1074 0190 1846     		mov	r0, r3
 1075 0192 FFF7FEFF 		bl	ASCII_ToLower
 1076 0196 0346     		mov	r3, r0
 1077 0198 87F82030 		strb	r3, [r7, #32]
1216:C:\Micrium\Software\uC-LIB\lib_str.c ****             cmp_val = (CPU_INT16S)char_1;                       /* ... rtn pos p1_str_cmp_next val 
 1078              		.loc 1 1216 0
 1079 019c 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 1080 01a0 7B84     		strh	r3, [r7, #34]	@ movhi
 1081              	.L70:
1217:C:\Micrium\Software\uC-LIB\lib_str.c ****         }
1218:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
1219:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1220:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1221:C:\Micrium\Software\uC-LIB\lib_str.c ****     return (cmp_val);
 1082              		.loc 1 1221 0
 1083 01a2 7B8C     		ldrh	r3, [r7, #34]
 1084              	.L61:
 1085 01a4 1BB2     		sxth	r3, r3
1222:C:\Micrium\Software\uC-LIB\lib_str.c **** }
 1086              		.loc 1 1222 0
 1087 01a6 1846     		mov	r0, r3
 1088 01a8 07F12807 		add	r7, r7, #40
 1089 01ac BD46     		mov	sp, r7
 1090 01ae 80BD     		pop	{r7, pc}
 1091              		.cfi_endproc
 1092              	.LFE9:
 1093              		.size	Str_CmpIgnoreCase_N, .-Str_CmpIgnoreCase_N
 1094              		.section	.text.Str_Char,"ax",%progbits
 1095              		.align	2
 1096              		.global	Str_Char
 1097              		.thumb
 1098              		.thumb_func
 1099              		.type	Str_Char, %function
 1100              	Str_Char:
 1101              	.LFB10:
1223:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1224:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1225:C:\Micrium\Software\uC-LIB\lib_str.c **** /*$PAGE*/
1226:C:\Micrium\Software\uC-LIB\lib_str.c **** /*
1227:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
1228:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                             Str_Char()
1229:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1230:C:\Micrium\Software\uC-LIB\lib_str.c **** * Description : Search string for first occurrence of specific character.
1231:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1232:C:\Micrium\Software\uC-LIB\lib_str.c **** * Argument(s) : pstr            Pointer to string (see Note #1).
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 42


1233:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1234:C:\Micrium\Software\uC-LIB\lib_str.c **** *               srch_char       Search character.
1235:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1236:C:\Micrium\Software\uC-LIB\lib_str.c **** * Return(s)   : Pointer to first occurrence of search character in string, if any    (see Note #2b1
1237:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1238:C:\Micrium\Software\uC-LIB\lib_str.c **** *               Pointer to NULL,                                           otherwise (see Note #2b2
1239:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1240:C:\Micrium\Software\uC-LIB\lib_str.c **** * Caller(s)   : Application.
1241:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1242:C:\Micrium\Software\uC-LIB\lib_str.c **** * Note(s)     : (1) String buffer NOT modified.
1243:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1244:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strchr() : DESCRIPTION' states that
1245:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1246:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) "The strchr() function shall locate the first occurrence of 'c' ('srch_
1247:C:\Micrium\Software\uC-LIB\lib_str.c **** *                            ... in the string pointed to by 's' ('pstr')."
1248:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) "The terminating null byte is considered to be part of the string."
1249:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1250:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strchr() : RETURN VALUE' states tha
1251:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       "upon completion, strchr() shall return" :
1252:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1253:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) "a pointer to the byte," ...
1254:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) "or a null pointer if the byte was not found."
1255:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (A) #### Although NO strchr() specification states to return NULL for 
1256:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               any other reason(s), NULL is also returned for any error(s).
1257:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1258:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (3) String search terminates when :
1259:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1260:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (a) String pointer passed a NULL pointer.
1261:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) No string search performed; NULL pointer returned.
1262:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1263:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) String pointer points to NULL.
1264:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) String overlaps with NULL address; NULL pointer returned.
1265:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1266:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (c) String's terminating NULL character found.
1267:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) Search character NOT found in search string; NULL pointer returned 
1268:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (see Note #2b2).
1269:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) Applicable even if search character is the terminating NULL character 
1270:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (see Note #2a2).
1271:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1272:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (d) Search character found.
1273:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) Return pointer to first occurrence of search character in search string
1274:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (see Note #2a1).
1275:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
1276:C:\Micrium\Software\uC-LIB\lib_str.c **** */
1277:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1278:C:\Micrium\Software\uC-LIB\lib_str.c **** CPU_CHAR  *Str_Char (const  CPU_CHAR  *pstr,
1279:C:\Micrium\Software\uC-LIB\lib_str.c ****                             CPU_CHAR   srch_char)
1280:C:\Micrium\Software\uC-LIB\lib_str.c **** {
 1102              		.loc 1 1280 0
 1103              		.cfi_startproc
 1104              		@ args = 0, pretend = 0, frame = 16
 1105              		@ frame_needed = 1, uses_anonymous_args = 0
 1106 0000 80B5     		push	{r7, lr}
 1107              	.LCFI30:
 1108              		.cfi_def_cfa_offset 8
 1109 0002 84B0     		sub	sp, sp, #16
 1110              	.LCFI31:
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 43


 1111              		.cfi_def_cfa_offset 24
 1112 0004 00AF     		add	r7, sp, #0
 1113              		.cfi_offset 14, -4
 1114              		.cfi_offset 7, -8
 1115              	.LCFI32:
 1116              		.cfi_def_cfa_register 7
 1117 0006 7860     		str	r0, [r7, #4]
 1118 0008 0B46     		mov	r3, r1
 1119 000a FB70     		strb	r3, [r7, #3]
1281:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_CHAR  *pstr_rtn;
1282:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1283:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1284:C:\Micrium\Software\uC-LIB\lib_str.c ****     pstr_rtn = Str_Char_N(pstr,
 1120              		.loc 1 1284 0
 1121 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1122 000e 7868     		ldr	r0, [r7, #4]
 1123 0010 4FF0FF31 		mov	r1, #-1
 1124 0014 1A46     		mov	r2, r3
 1125 0016 FFF7FEFF 		bl	Str_Char_N
 1126 001a 0346     		mov	r3, r0
 1127 001c FB60     		str	r3, [r7, #12]
1285:C:\Micrium\Software\uC-LIB\lib_str.c ****                           DEF_INT_CPU_U_MAX_VAL,
1286:C:\Micrium\Software\uC-LIB\lib_str.c ****                           srch_char);
1287:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1288:C:\Micrium\Software\uC-LIB\lib_str.c ****     return (pstr_rtn);
 1128              		.loc 1 1288 0
 1129 001e FB68     		ldr	r3, [r7, #12]
1289:C:\Micrium\Software\uC-LIB\lib_str.c **** }
 1130              		.loc 1 1289 0
 1131 0020 1846     		mov	r0, r3
 1132 0022 07F11007 		add	r7, r7, #16
 1133 0026 BD46     		mov	sp, r7
 1134 0028 80BD     		pop	{r7, pc}
 1135              		.cfi_endproc
 1136              	.LFE10:
 1137              		.size	Str_Char, .-Str_Char
 1138 002a 00BF     		.section	.text.Str_Char_N,"ax",%progbits
 1139              		.align	2
 1140              		.global	Str_Char_N
 1141              		.thumb
 1142              		.thumb_func
 1143              		.type	Str_Char_N, %function
 1144              	Str_Char_N:
 1145              	.LFB11:
1290:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1291:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1292:C:\Micrium\Software\uC-LIB\lib_str.c **** /*$PAGE*/
1293:C:\Micrium\Software\uC-LIB\lib_str.c **** /*
1294:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
1295:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                            Str_Char_N()
1296:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1297:C:\Micrium\Software\uC-LIB\lib_str.c **** * Description : Search string for first occurrence of specific character, up to a maximum number 
1298:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   of characters.
1299:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1300:C:\Micrium\Software\uC-LIB\lib_str.c **** * Argument(s) : pstr            Pointer to string (see Note #1).
1301:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1302:C:\Micrium\Software\uC-LIB\lib_str.c **** *               len_max         Maximum number of characters to search (see Notes #2c & #3e).
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 44


1303:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1304:C:\Micrium\Software\uC-LIB\lib_str.c **** *               srch_char       Search character.
1305:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1306:C:\Micrium\Software\uC-LIB\lib_str.c **** * Return(s)   : Pointer to first occurrence of search character in string, if any    (see Note #2b1
1307:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1308:C:\Micrium\Software\uC-LIB\lib_str.c **** *               Pointer to NULL,                                           otherwise (see Note #2b2
1309:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1310:C:\Micrium\Software\uC-LIB\lib_str.c **** * Caller(s)   : Application.
1311:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1312:C:\Micrium\Software\uC-LIB\lib_str.c **** * Note(s)     : (1) String buffer NOT modified.
1313:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1314:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strchr() : DESCRIPTION' states that
1315:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1316:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) "The strchr() function shall locate the first occurrence of 'c' ('srch_
1317:C:\Micrium\Software\uC-LIB\lib_str.c **** *                            ... in the string pointed to by 's' ('pstr')."
1318:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) "The terminating null byte is considered to be part of the string."
1319:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1320:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strchr() : RETURN VALUE' states tha
1321:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       "upon completion, strchr() shall return" :
1322:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1323:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) "a pointer to the byte," ...
1324:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) "or a null pointer if the byte was not found."
1325:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (A) #### Although NO strchr() specification states to return NULL for 
1326:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               any other reason(s), NULL is also returned for any error(s).
1327:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1328:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (c) Ideally, the 'len_max' argument would be the last argument in this function
1329:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       argument list for consistency with all other custom string library function
1330:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       However, the 'len_max' argument is sequentially ordered as the second argum
1331:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       to comply with most standard library's strnchr() argument list.
1332:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1333:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (3) String search terminates when :
1334:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1335:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (a) String pointer passed a NULL pointer.
1336:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) No string search performed; NULL pointer returned.
1337:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1338:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) String pointer points to NULL.
1339:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) String overlaps with NULL address; NULL pointer returned.
1340:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1341:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (c) String's terminating NULL character found.
1342:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) Search character NOT found in search string; NULL pointer returned 
1343:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (see Note #2b2).
1344:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) Applicable even if search character is the terminating NULL character 
1345:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (see Note #2a2).
1346:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1347:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (d) Search character found.
1348:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) Return pointer to first occurrence of search character in search string
1349:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (see Note #2a1).
1350:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1351:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (e) 'len_max' number of characters searched.
1352:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) Search character NOT found in search string within first 'len_max' numb
1353:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           of characters; NULL pointer returned.
1354:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) 'len_max' number of characters MAY include terminating NULL character 
1355:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (see Note #2a2).
1356:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
1357:C:\Micrium\Software\uC-LIB\lib_str.c **** */
1358:C:\Micrium\Software\uC-LIB\lib_str.c **** /*$PAGE*/
1359:C:\Micrium\Software\uC-LIB\lib_str.c **** CPU_CHAR  *Str_Char_N (const  CPU_CHAR    *pstr,
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 45


1360:C:\Micrium\Software\uC-LIB\lib_str.c ****                               CPU_SIZE_T   len_max,
1361:C:\Micrium\Software\uC-LIB\lib_str.c ****                               CPU_CHAR     srch_char)
1362:C:\Micrium\Software\uC-LIB\lib_str.c **** {
 1146              		.loc 1 1362 0
 1147              		.cfi_startproc
 1148              		@ args = 0, pretend = 0, frame = 24
 1149              		@ frame_needed = 1, uses_anonymous_args = 0
 1150              		@ link register save eliminated.
 1151 0000 80B4     		push	{r7}
 1152              	.LCFI33:
 1153              		.cfi_def_cfa_offset 4
 1154 0002 87B0     		sub	sp, sp, #28
 1155              	.LCFI34:
 1156              		.cfi_def_cfa_offset 32
 1157 0004 00AF     		add	r7, sp, #0
 1158              		.cfi_offset 7, -4
 1159              	.LCFI35:
 1160              		.cfi_def_cfa_register 7
 1161 0006 F860     		str	r0, [r7, #12]
 1162 0008 B960     		str	r1, [r7, #8]
 1163 000a 1346     		mov	r3, r2
 1164 000c FB71     		strb	r3, [r7, #7]
1363:C:\Micrium\Software\uC-LIB\lib_str.c ****     const  CPU_CHAR    *pstr_char;
1364:C:\Micrium\Software\uC-LIB\lib_str.c ****            CPU_SIZE_T   len_srch;
1365:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1366:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1367:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (pstr == (const CPU_CHAR *)0) {                          /* Rtn NULL if srch str ptr NULL (s
 1165              		.loc 1 1367 0
 1166 000e FB68     		ldr	r3, [r7, #12]
 1167 0010 002B     		cmp	r3, #0
 1168 0012 02D1     		bne	.L79
1368:C:\Micrium\Software\uC-LIB\lib_str.c ****         return ((CPU_CHAR *)0);
 1169              		.loc 1 1368 0
 1170 0014 4FF00003 		mov	r3, #0
 1171 0018 39E0     		b	.L80
 1172              	.L79:
1369:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
1370:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1371:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (len_max < 1) {                                          /* Rtn NULL if srch len = 0      (s
 1173              		.loc 1 1371 0
 1174 001a BB68     		ldr	r3, [r7, #8]
 1175 001c 002B     		cmp	r3, #0
 1176 001e 02D1     		bne	.L81
1372:C:\Micrium\Software\uC-LIB\lib_str.c ****         return ((CPU_CHAR *)0);
 1177              		.loc 1 1372 0
 1178 0020 4FF00003 		mov	r3, #0
 1179 0024 33E0     		b	.L80
 1180              	.L81:
1373:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
1374:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1375:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1376:C:\Micrium\Software\uC-LIB\lib_str.c ****     pstr_char = pstr;
 1181              		.loc 1 1376 0
 1182 0026 FB68     		ldr	r3, [r7, #12]
 1183 0028 3B61     		str	r3, [r7, #16]
1377:C:\Micrium\Software\uC-LIB\lib_str.c ****     len_srch  = 0u;
 1184              		.loc 1 1377 0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 46


 1185 002a 4FF00003 		mov	r3, #0
 1186 002e 7B61     		str	r3, [r7, #20]
1378:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1379:C:\Micrium\Software\uC-LIB\lib_str.c ****     while (( pstr_char != (const CPU_CHAR *)  0 )      &&       /* Srch str until NULL ptr     [see
 1187              		.loc 1 1379 0
 1188 0030 07E0     		b	.L82
 1189              	.L84:
1380:C:\Micrium\Software\uC-LIB\lib_str.c ****            (*pstr_char != (      CPU_CHAR  )'\0')      &&       /* ... or NULL char            (see
1381:C:\Micrium\Software\uC-LIB\lib_str.c ****            (*pstr_char != (      CPU_CHAR  )srch_char) &&       /* ... or srch char found      (see
1382:C:\Micrium\Software\uC-LIB\lib_str.c ****            ( len_srch  <  (      CPU_SIZE_T)len_max)) {         /* ... or max nbr chars srch'd (see
1383:C:\Micrium\Software\uC-LIB\lib_str.c ****         pstr_char++;
 1190              		.loc 1 1383 0
 1191 0032 3B69     		ldr	r3, [r7, #16]
 1192 0034 03F10103 		add	r3, r3, #1
 1193 0038 3B61     		str	r3, [r7, #16]
1384:C:\Micrium\Software\uC-LIB\lib_str.c ****         len_srch++;
 1194              		.loc 1 1384 0
 1195 003a 7B69     		ldr	r3, [r7, #20]
 1196 003c 03F10103 		add	r3, r3, #1
 1197 0040 7B61     		str	r3, [r7, #20]
 1198              	.L82:
 1199              		.loc 1 1379 0
 1200 0042 3B69     		ldr	r3, [r7, #16]
 1201 0044 002B     		cmp	r3, #0
 1202 0046 0CD0     		beq	.L83
 1203              		.loc 1 1380 0
 1204 0048 3B69     		ldr	r3, [r7, #16]
 1205 004a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1206              		.loc 1 1379 0
 1207 004c 002B     		cmp	r3, #0
 1208 004e 08D0     		beq	.L83
 1209              		.loc 1 1381 0
 1210 0050 3B69     		ldr	r3, [r7, #16]
 1211 0052 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1212              		.loc 1 1379 0
 1213 0054 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1214 0056 9A42     		cmp	r2, r3
 1215 0058 03D0     		beq	.L83
 1216 005a 7A69     		ldr	r2, [r7, #20]
 1217 005c BB68     		ldr	r3, [r7, #8]
 1218 005e 9A42     		cmp	r2, r3
 1219 0060 E7D3     		bcc	.L84
 1220              	.L83:
1385:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
1386:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1387:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1388:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (pstr_char == (const CPU_CHAR *)0) {                     /* Rtn NULL if NULL ptr found      
 1221              		.loc 1 1388 0
 1222 0062 3B69     		ldr	r3, [r7, #16]
 1223 0064 002B     		cmp	r3, #0
 1224 0066 02D1     		bne	.L85
1389:C:\Micrium\Software\uC-LIB\lib_str.c ****         return ((CPU_CHAR *)0);
 1225              		.loc 1 1389 0
 1226 0068 4FF00003 		mov	r3, #0
 1227 006c 0FE0     		b	.L80
 1228              	.L85:
1390:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 47


1391:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1392:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (len_srch >= len_max) {                                  /* Rtn NULL if srch char NOT found 
 1229              		.loc 1 1392 0
 1230 006e 7A69     		ldr	r2, [r7, #20]
 1231 0070 BB68     		ldr	r3, [r7, #8]
 1232 0072 9A42     		cmp	r2, r3
 1233 0074 02D3     		bcc	.L86
1393:C:\Micrium\Software\uC-LIB\lib_str.c ****         return ((CPU_CHAR *)0);                                 /* ... within max nbr of chars     
 1234              		.loc 1 1393 0
 1235 0076 4FF00003 		mov	r3, #0
 1236 007a 08E0     		b	.L80
 1237              	.L86:
1394:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
1395:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1396:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (*pstr_char != srch_char) {                              /* Rtn NULL if srch char NOT found 
 1238              		.loc 1 1396 0
 1239 007c 3B69     		ldr	r3, [r7, #16]
 1240 007e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1241 0080 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1242 0082 9A42     		cmp	r2, r3
 1243 0084 02D0     		beq	.L87
1397:C:\Micrium\Software\uC-LIB\lib_str.c ****          return ((CPU_CHAR *)0);
 1244              		.loc 1 1397 0
 1245 0086 4FF00003 		mov	r3, #0
 1246 008a 00E0     		b	.L80
 1247              	.L87:
1398:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
1399:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1400:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1401:C:\Micrium\Software\uC-LIB\lib_str.c ****     return ((CPU_CHAR *)pstr_char);                             /* Else rtn ptr to found srch char 
 1248              		.loc 1 1401 0
 1249 008c 3B69     		ldr	r3, [r7, #16]
 1250              	.L80:
1402:C:\Micrium\Software\uC-LIB\lib_str.c **** }
 1251              		.loc 1 1402 0
 1252 008e 1846     		mov	r0, r3
 1253 0090 07F11C07 		add	r7, r7, #28
 1254 0094 BD46     		mov	sp, r7
 1255 0096 80BC     		pop	{r7}
 1256 0098 7047     		bx	lr
 1257              		.cfi_endproc
 1258              	.LFE11:
 1259              		.size	Str_Char_N, .-Str_Char_N
 1260 009a 00BF     		.section	.text.Str_Char_Last,"ax",%progbits
 1261              		.align	2
 1262              		.global	Str_Char_Last
 1263              		.thumb
 1264              		.thumb_func
 1265              		.type	Str_Char_Last, %function
 1266              	Str_Char_Last:
 1267              	.LFB12:
1403:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1404:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1405:C:\Micrium\Software\uC-LIB\lib_str.c **** /*$PAGE*/
1406:C:\Micrium\Software\uC-LIB\lib_str.c **** /*
1407:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
1408:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                           Str_Char_Last()
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 48


1409:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1410:C:\Micrium\Software\uC-LIB\lib_str.c **** * Description : Search string for last occurrence of specific character.
1411:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1412:C:\Micrium\Software\uC-LIB\lib_str.c **** * Argument(s) : pstr            Pointer to string (see Note #1).
1413:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1414:C:\Micrium\Software\uC-LIB\lib_str.c **** *               srch_char       Search character.
1415:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1416:C:\Micrium\Software\uC-LIB\lib_str.c **** * Return(s)   : Pointer to last occurrence of search character in string, if any    (see Note #2b1)
1417:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1418:C:\Micrium\Software\uC-LIB\lib_str.c **** *               Pointer to NULL,                                          otherwise (see Note #2b2)
1419:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1420:C:\Micrium\Software\uC-LIB\lib_str.c **** * Caller(s)   : Application.
1421:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1422:C:\Micrium\Software\uC-LIB\lib_str.c **** * Note(s)     : (1) String buffer NOT modified.
1423:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1424:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strrchr() : DESCRIPTION' states tha
1425:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1426:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) "The strrchr() function shall locate the last occurrence of 'c' ('srch_
1427:C:\Micrium\Software\uC-LIB\lib_str.c **** *                            ... in the string pointed to by 's' ('pstr')."
1428:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) "The terminating null byte is considered to be part of the string."
1429:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1430:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strrchr() : RETURN VALUE' states th
1431:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       "upon successful completion, strrchr() shall return" :
1432:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1433:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) "a pointer to the byte" ...
1434:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) "or a null pointer if 'c' ('srch_char') does not occur in the string."
1435:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (A) #### Although NO strrchr() specification states to return NULL for 
1436:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               any other reason(s), NULL is also returned for any error(s).
1437:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1438:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (3) String search terminates when :
1439:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1440:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (a) String pointer passed a NULL pointer.
1441:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) No string search performed; NULL pointer returned.
1442:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1443:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) String pointer points to NULL.
1444:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) String overlaps with NULL address; NULL pointer returned.
1445:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1446:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (c) String searched from end to beginning.
1447:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) Search character NOT found in search string; NULL pointer returned.
1448:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) Applicable even if search character is the terminating NULL character 
1449:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (see Note #2a2).
1450:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1451:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (d) Search character found.
1452:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) Return pointer to last occurrence of search character in search string 
1453:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (see Note #2a1).
1454:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
1455:C:\Micrium\Software\uC-LIB\lib_str.c **** */
1456:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1457:C:\Micrium\Software\uC-LIB\lib_str.c **** CPU_CHAR  *Str_Char_Last (const  CPU_CHAR  *pstr,
1458:C:\Micrium\Software\uC-LIB\lib_str.c ****                                  CPU_CHAR   srch_char)
1459:C:\Micrium\Software\uC-LIB\lib_str.c **** {
 1268              		.loc 1 1459 0
 1269              		.cfi_startproc
 1270              		@ args = 0, pretend = 0, frame = 16
 1271              		@ frame_needed = 1, uses_anonymous_args = 0
 1272 0000 80B5     		push	{r7, lr}
 1273              	.LCFI36:
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 49


 1274              		.cfi_def_cfa_offset 8
 1275 0002 84B0     		sub	sp, sp, #16
 1276              	.LCFI37:
 1277              		.cfi_def_cfa_offset 24
 1278 0004 00AF     		add	r7, sp, #0
 1279              		.cfi_offset 14, -4
 1280              		.cfi_offset 7, -8
 1281              	.LCFI38:
 1282              		.cfi_def_cfa_register 7
 1283 0006 7860     		str	r0, [r7, #4]
 1284 0008 0B46     		mov	r3, r1
 1285 000a FB70     		strb	r3, [r7, #3]
1460:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_CHAR  *pstr_rtn;
1461:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1462:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1463:C:\Micrium\Software\uC-LIB\lib_str.c ****     pstr_rtn = Str_Char_Last_N(pstr,
 1286              		.loc 1 1463 0
 1287 000c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1288 000e 7868     		ldr	r0, [r7, #4]
 1289 0010 4FF0FF31 		mov	r1, #-1
 1290 0014 1A46     		mov	r2, r3
 1291 0016 FFF7FEFF 		bl	Str_Char_Last_N
 1292 001a 0346     		mov	r3, r0
 1293 001c FB60     		str	r3, [r7, #12]
1464:C:\Micrium\Software\uC-LIB\lib_str.c ****                                DEF_INT_CPU_U_MAX_VAL,
1465:C:\Micrium\Software\uC-LIB\lib_str.c ****                                srch_char);
1466:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1467:C:\Micrium\Software\uC-LIB\lib_str.c ****     return (pstr_rtn);
 1294              		.loc 1 1467 0
 1295 001e FB68     		ldr	r3, [r7, #12]
1468:C:\Micrium\Software\uC-LIB\lib_str.c **** }
 1296              		.loc 1 1468 0
 1297 0020 1846     		mov	r0, r3
 1298 0022 07F11007 		add	r7, r7, #16
 1299 0026 BD46     		mov	sp, r7
 1300 0028 80BD     		pop	{r7, pc}
 1301              		.cfi_endproc
 1302              	.LFE12:
 1303              		.size	Str_Char_Last, .-Str_Char_Last
 1304 002a 00BF     		.section	.text.Str_Char_Last_N,"ax",%progbits
 1305              		.align	2
 1306              		.global	Str_Char_Last_N
 1307              		.thumb
 1308              		.thumb_func
 1309              		.type	Str_Char_Last_N, %function
 1310              	Str_Char_Last_N:
 1311              	.LFB13:
1469:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1470:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1471:C:\Micrium\Software\uC-LIB\lib_str.c **** /*$PAGE*/
1472:C:\Micrium\Software\uC-LIB\lib_str.c **** /*
1473:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
1474:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                          Str_Char_Last_N()
1475:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1476:C:\Micrium\Software\uC-LIB\lib_str.c **** * Description : Search string for last occurrence of specific character, up to a maximum number 
1477:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   of characters.
1478:C:\Micrium\Software\uC-LIB\lib_str.c **** *
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 50


1479:C:\Micrium\Software\uC-LIB\lib_str.c **** * Argument(s) : pstr            Pointer to string (see Note #1).
1480:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1481:C:\Micrium\Software\uC-LIB\lib_str.c **** *               len_max         Maximum number of characters to search (see Notes #2c & #3e).
1482:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1483:C:\Micrium\Software\uC-LIB\lib_str.c **** *               srch_char       Search character.
1484:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1485:C:\Micrium\Software\uC-LIB\lib_str.c **** * Return(s)   : Pointer to last occurrence of search character in string, if any    (see Note #2b1)
1486:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1487:C:\Micrium\Software\uC-LIB\lib_str.c **** *               Pointer to NULL,                                          otherwise (see Note #2b2)
1488:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1489:C:\Micrium\Software\uC-LIB\lib_str.c **** * Caller(s)   : Application.
1490:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1491:C:\Micrium\Software\uC-LIB\lib_str.c **** * Note(s)     : (1) String buffer NOT modified.
1492:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1493:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strrchr() : DESCRIPTION' states tha
1494:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1495:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) "The strrchr() function shall locate the last occurrence of 'c' ('srch_
1496:C:\Micrium\Software\uC-LIB\lib_str.c **** *                            ... in the string pointed to by 's' ('pstr')."
1497:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) "The terminating null byte is considered to be part of the string."
1498:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1499:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strrchr() : RETURN VALUE' states th
1500:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       "upon successful completion, strrchr() shall return" :
1501:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1502:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) "a pointer to the byte" ...
1503:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) "or a null pointer if 'c' ('srch_char') does not occur in the string."
1504:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (A) #### Although NO strrchr() specification states to return NULL for 
1505:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               any other reason(s), NULL is also returned for any error(s).
1506:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1507:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (c) Ideally, the 'len_max' argument would be the last argument in this function
1508:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       argument list for consistency with all other custom string library function
1509:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       However, the 'len_max' argument is sequentially ordered as the second argum
1510:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       to comply with most standard library's strnrchr() argument list.
1511:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1512:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       See also 'Str_Char_N()  Note #2c'.
1513:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1514:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (3) String search terminates when :
1515:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1516:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (a) String pointer passed a NULL pointer.
1517:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) No string search performed; NULL pointer returned.
1518:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1519:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) String pointer points to NULL.
1520:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) String overlaps with NULL address; NULL pointer returned.
1521:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1522:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (c) String searched from end to beginning.
1523:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) Search character NOT found in search string; NULL pointer returned 
1524:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (see Note #2b2).
1525:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) Applicable even if search character is the terminating NULL character 
1526:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (see Note #2a2).
1527:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1528:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (d) Search character found.
1529:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) Return pointer to last occurrence of search character in search string 
1530:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (see Note #2a1).
1531:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1532:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (e) 'len_max' number of characters searched.
1533:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) Search character NOT found in search string within last 'len_max' numbe
1534:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           of characters; NULL pointer returned.
1535:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) 'len_max' number of characters MAY include terminating NULL character 
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 51


1536:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (see Note #2a2).
1537:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
1538:C:\Micrium\Software\uC-LIB\lib_str.c **** */
1539:C:\Micrium\Software\uC-LIB\lib_str.c **** /*$PAGE*/
1540:C:\Micrium\Software\uC-LIB\lib_str.c **** CPU_CHAR  *Str_Char_Last_N (const  CPU_CHAR    *pstr,
1541:C:\Micrium\Software\uC-LIB\lib_str.c ****                                    CPU_SIZE_T   len_max,
1542:C:\Micrium\Software\uC-LIB\lib_str.c ****                                    CPU_CHAR     srch_char)
1543:C:\Micrium\Software\uC-LIB\lib_str.c **** {
 1312              		.loc 1 1543 0
 1313              		.cfi_startproc
 1314              		@ args = 0, pretend = 0, frame = 32
 1315              		@ frame_needed = 1, uses_anonymous_args = 0
 1316 0000 80B5     		push	{r7, lr}
 1317              	.LCFI39:
 1318              		.cfi_def_cfa_offset 8
 1319 0002 88B0     		sub	sp, sp, #32
 1320              	.LCFI40:
 1321              		.cfi_def_cfa_offset 40
 1322 0004 00AF     		add	r7, sp, #0
 1323              		.cfi_offset 14, -4
 1324              		.cfi_offset 7, -8
 1325              	.LCFI41:
 1326              		.cfi_def_cfa_register 7
 1327 0006 F860     		str	r0, [r7, #12]
 1328 0008 B960     		str	r1, [r7, #8]
 1329 000a 1346     		mov	r3, r2
 1330 000c FB71     		strb	r3, [r7, #7]
1544:C:\Micrium\Software\uC-LIB\lib_str.c ****     const  CPU_CHAR    *pstr_char;
1545:C:\Micrium\Software\uC-LIB\lib_str.c ****            CPU_SIZE_T   str_len_max;
1546:C:\Micrium\Software\uC-LIB\lib_str.c ****            CPU_SIZE_T   str_len;
1547:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1548:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1549:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (pstr == (const CPU_CHAR *)0) {                          /* Rtn NULL if srch str ptr NULL (s
 1331              		.loc 1 1549 0
 1332 000e FB68     		ldr	r3, [r7, #12]
 1333 0010 002B     		cmp	r3, #0
 1334 0012 02D1     		bne	.L92
1550:C:\Micrium\Software\uC-LIB\lib_str.c ****         return ((CPU_CHAR *)0);
 1335              		.loc 1 1550 0
 1336 0014 4FF00003 		mov	r3, #0
 1337 0018 31E0     		b	.L93
 1338              	.L92:
1551:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
1552:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1553:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (len_max < 1) {                                          /* Rtn NULL if srch len = 0      (s
 1339              		.loc 1 1553 0
 1340 001a BB68     		ldr	r3, [r7, #8]
 1341 001c 002B     		cmp	r3, #0
 1342 001e 02D1     		bne	.L94
1554:C:\Micrium\Software\uC-LIB\lib_str.c ****         return ((CPU_CHAR *)0);
 1343              		.loc 1 1554 0
 1344 0020 4FF00003 		mov	r3, #0
 1345 0024 2BE0     		b	.L93
 1346              	.L94:
1555:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
1556:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1557:C:\Micrium\Software\uC-LIB\lib_str.c **** 
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 52


1558:C:\Micrium\Software\uC-LIB\lib_str.c ****     pstr_char    = pstr;
 1347              		.loc 1 1558 0
 1348 0026 FB68     		ldr	r3, [r7, #12]
 1349 0028 7B61     		str	r3, [r7, #20]
1559:C:\Micrium\Software\uC-LIB\lib_str.c ****      str_len_max = len_max - sizeof((CPU_CHAR)'\0');            /* Str len adj'd for NULL char len.
 1350              		.loc 1 1559 0
 1351 002a BB68     		ldr	r3, [r7, #8]
 1352 002c 03F1FF33 		add	r3, r3, #-1
 1353 0030 BB61     		str	r3, [r7, #24]
1560:C:\Micrium\Software\uC-LIB\lib_str.c ****      str_len     = Str_Len_N(pstr_char, str_len_max);
 1354              		.loc 1 1560 0
 1355 0032 7869     		ldr	r0, [r7, #20]
 1356 0034 B969     		ldr	r1, [r7, #24]
 1357 0036 FFF7FEFF 		bl	Str_Len_N
 1358 003a 0346     		mov	r3, r0
 1359 003c FB61     		str	r3, [r7, #28]
1561:C:\Micrium\Software\uC-LIB\lib_str.c ****     pstr_char   += str_len;
 1360              		.loc 1 1561 0
 1361 003e 7A69     		ldr	r2, [r7, #20]
 1362 0040 FB69     		ldr	r3, [r7, #28]
 1363 0042 1344     		add	r3, r2, r3
 1364 0044 7B61     		str	r3, [r7, #20]
1562:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1563:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (pstr_char == (const CPU_CHAR *)0) {                     /* Rtn NULL if NULL ptr found      
 1365              		.loc 1 1563 0
 1366 0046 7B69     		ldr	r3, [r7, #20]
 1367 0048 002B     		cmp	r3, #0
 1368 004a 06D1     		bne	.L96
1564:C:\Micrium\Software\uC-LIB\lib_str.c ****         return ((CPU_CHAR *)0);
 1369              		.loc 1 1564 0
 1370 004c 4FF00003 		mov	r3, #0
 1371 0050 15E0     		b	.L93
 1372              	.L98:
1565:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
1566:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1567:C:\Micrium\Software\uC-LIB\lib_str.c ****     while (( pstr_char != pstr) &&                              /* Srch str from end until beginnin
1568:C:\Micrium\Software\uC-LIB\lib_str.c ****            (*pstr_char != srch_char)) {                         /* ... until srch char found       
1569:C:\Micrium\Software\uC-LIB\lib_str.c ****         pstr_char--;
 1373              		.loc 1 1569 0
 1374 0052 7B69     		ldr	r3, [r7, #20]
 1375 0054 03F1FF33 		add	r3, r3, #-1
 1376 0058 7B61     		str	r3, [r7, #20]
 1377              	.L96:
 1378              		.loc 1 1567 0
 1379 005a 7A69     		ldr	r2, [r7, #20]
 1380 005c FB68     		ldr	r3, [r7, #12]
 1381 005e 9A42     		cmp	r2, r3
 1382 0060 04D0     		beq	.L97
 1383              		.loc 1 1568 0
 1384 0062 7B69     		ldr	r3, [r7, #20]
 1385 0064 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1386              		.loc 1 1567 0
 1387 0066 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1388 0068 9A42     		cmp	r2, r3
 1389 006a F2D1     		bne	.L98
 1390              	.L97:
1570:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 53


1571:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1572:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1573:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (*pstr_char != srch_char) {                              /* Rtn NULL if srch char NOT found 
 1391              		.loc 1 1573 0
 1392 006c 7B69     		ldr	r3, [r7, #20]
 1393 006e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1394 0070 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1395 0072 9A42     		cmp	r2, r3
 1396 0074 02D0     		beq	.L99
1574:C:\Micrium\Software\uC-LIB\lib_str.c ****          return ((CPU_CHAR *)0);
 1397              		.loc 1 1574 0
 1398 0076 4FF00003 		mov	r3, #0
 1399 007a 00E0     		b	.L93
 1400              	.L99:
1575:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
1576:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1577:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1578:C:\Micrium\Software\uC-LIB\lib_str.c ****     return ((CPU_CHAR *)pstr_char);                             /* Else rtn ptr to found srch char 
 1401              		.loc 1 1578 0
 1402 007c 7B69     		ldr	r3, [r7, #20]
 1403              	.L93:
1579:C:\Micrium\Software\uC-LIB\lib_str.c **** }
 1404              		.loc 1 1579 0
 1405 007e 1846     		mov	r0, r3
 1406 0080 07F12007 		add	r7, r7, #32
 1407 0084 BD46     		mov	sp, r7
 1408 0086 80BD     		pop	{r7, pc}
 1409              		.cfi_endproc
 1410              	.LFE13:
 1411              		.size	Str_Char_Last_N, .-Str_Char_Last_N
 1412              		.section	.text.Str_Char_Replace,"ax",%progbits
 1413              		.align	2
 1414              		.global	Str_Char_Replace
 1415              		.thumb
 1416              		.thumb_func
 1417              		.type	Str_Char_Replace, %function
 1418              	Str_Char_Replace:
 1419              	.LFB14:
1580:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1581:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1582:C:\Micrium\Software\uC-LIB\lib_str.c **** /*$PAGE*/
1583:C:\Micrium\Software\uC-LIB\lib_str.c **** /*
1584:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
1585:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                         Str_Char_Replace()
1586:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1587:C:\Micrium\Software\uC-LIB\lib_str.c **** * Description : Search string for specific character and replace it by another specific character.
1588:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1589:C:\Micrium\Software\uC-LIB\lib_str.c **** * Argument(s) : pstr            Pointer to string (see Note #1).
1590:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1591:C:\Micrium\Software\uC-LIB\lib_str.c **** *               char_srch       Search character.
1592:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1593:C:\Micrium\Software\uC-LIB\lib_str.c **** *               char_replace    Replace character.
1594:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1595:C:\Micrium\Software\uC-LIB\lib_str.c **** * Return(s)   : Pointer to string, if NO error(s).
1596:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1597:C:\Micrium\Software\uC-LIB\lib_str.c **** *               Pointer to NULL,   otherwise.
1598:C:\Micrium\Software\uC-LIB\lib_str.c **** *
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 54


1599:C:\Micrium\Software\uC-LIB\lib_str.c **** * Caller(s)   : Application.
1600:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1601:C:\Micrium\Software\uC-LIB\lib_str.c **** * Note(s)     : (1) String buffer modified.
1602:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1603:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (2) String search terminates when :
1604:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1605:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (a) String pointer passed a NULL pointer.
1606:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) No string search performed; NULL pointer returned.
1607:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1608:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) String pointer points to NULL.
1609:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) String overlaps with NULL address; NULL pointer returned.
1610:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1611:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (c) String's terminating NULL character found.
1612:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) Search character NOT found in search string; NULL pointer returned
1613:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) Applicable even if search character is the terminating NULL character
1614:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1615:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (d) Search character found.
1616:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) Replace character found by the specified character.
1617:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
1618:C:\Micrium\Software\uC-LIB\lib_str.c **** */
1619:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1620:C:\Micrium\Software\uC-LIB\lib_str.c **** CPU_CHAR  *Str_Char_Replace (CPU_CHAR  *pstr,
1621:C:\Micrium\Software\uC-LIB\lib_str.c ****                              CPU_CHAR   char_srch,
1622:C:\Micrium\Software\uC-LIB\lib_str.c ****                              CPU_CHAR   char_replace)
1623:C:\Micrium\Software\uC-LIB\lib_str.c **** {
 1420              		.loc 1 1623 0
 1421              		.cfi_startproc
 1422              		@ args = 0, pretend = 0, frame = 16
 1423              		@ frame_needed = 1, uses_anonymous_args = 0
 1424 0000 80B5     		push	{r7, lr}
 1425              	.LCFI42:
 1426              		.cfi_def_cfa_offset 8
 1427 0002 84B0     		sub	sp, sp, #16
 1428              	.LCFI43:
 1429              		.cfi_def_cfa_offset 24
 1430 0004 00AF     		add	r7, sp, #0
 1431              		.cfi_offset 14, -4
 1432              		.cfi_offset 7, -8
 1433              	.LCFI44:
 1434              		.cfi_def_cfa_register 7
 1435 0006 7860     		str	r0, [r7, #4]
 1436 0008 1346     		mov	r3, r2
 1437 000a 0A46     		mov	r2, r1
 1438 000c FA70     		strb	r2, [r7, #3]
 1439 000e BB70     		strb	r3, [r7, #2]
1624:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_CHAR  *pstr_rtn;
1625:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1626:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1627:C:\Micrium\Software\uC-LIB\lib_str.c ****     pstr_rtn = Str_Char_Replace_N(pstr,
 1440              		.loc 1 1627 0
 1441 0010 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1442 0012 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 1443 0014 7868     		ldr	r0, [r7, #4]
 1444 0016 1146     		mov	r1, r2
 1445 0018 1A46     		mov	r2, r3
 1446 001a 4FF0FF33 		mov	r3, #-1
 1447 001e FFF7FEFF 		bl	Str_Char_Replace_N
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 55


 1448 0022 0346     		mov	r3, r0
 1449 0024 FB60     		str	r3, [r7, #12]
1628:C:\Micrium\Software\uC-LIB\lib_str.c ****                                   char_srch,
1629:C:\Micrium\Software\uC-LIB\lib_str.c ****                                   char_replace,
1630:C:\Micrium\Software\uC-LIB\lib_str.c ****                                   DEF_INT_CPU_U_MAX_VAL);
1631:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1632:C:\Micrium\Software\uC-LIB\lib_str.c ****     return (pstr_rtn);
 1450              		.loc 1 1632 0
 1451 0026 FB68     		ldr	r3, [r7, #12]
1633:C:\Micrium\Software\uC-LIB\lib_str.c **** }
 1452              		.loc 1 1633 0
 1453 0028 1846     		mov	r0, r3
 1454 002a 07F11007 		add	r7, r7, #16
 1455 002e BD46     		mov	sp, r7
 1456 0030 80BD     		pop	{r7, pc}
 1457              		.cfi_endproc
 1458              	.LFE14:
 1459              		.size	Str_Char_Replace, .-Str_Char_Replace
 1460              		.section	.text.Str_Char_Replace_N,"ax",%progbits
 1461              		.align	2
 1462              		.global	Str_Char_Replace_N
 1463              		.thumb
 1464              		.thumb_func
 1465              		.type	Str_Char_Replace_N, %function
 1466              	Str_Char_Replace_N:
 1467              	.LFB15:
1634:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1635:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1636:C:\Micrium\Software\uC-LIB\lib_str.c **** /*$PAGE*/
1637:C:\Micrium\Software\uC-LIB\lib_str.c **** /*
1638:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
1639:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                        Str_Char_Replace_N()
1640:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1641:C:\Micrium\Software\uC-LIB\lib_str.c **** * Description : Search string for specific character and replace it by another specific character, 
1642:C:\Micrium\Software\uC-LIB\lib_str.c **** *               a maximum number of characters.
1643:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1644:C:\Micrium\Software\uC-LIB\lib_str.c **** * Argument(s) : pstr            Pointer to string (see Note #1).
1645:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1646:C:\Micrium\Software\uC-LIB\lib_str.c **** *               char_srch       Search character.
1647:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1648:C:\Micrium\Software\uC-LIB\lib_str.c **** *               char_replace    Replace character.
1649:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1650:C:\Micrium\Software\uC-LIB\lib_str.c **** *               len_max         Maximum number of characters to search (see Notes #2c & #3e).
1651:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1652:C:\Micrium\Software\uC-LIB\lib_str.c **** * Return(s)   : Pointer to string, if NO error(s).
1653:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1654:C:\Micrium\Software\uC-LIB\lib_str.c **** *               Pointer to NULL,   otherwise.
1655:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1656:C:\Micrium\Software\uC-LIB\lib_str.c **** * Caller(s)   : Application.
1657:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1658:C:\Micrium\Software\uC-LIB\lib_str.c **** * Note(s)     : (1) String buffer modified.
1659:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1660:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (2) String search terminates when :
1661:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1662:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (a) String pointer passed a NULL pointer.
1663:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) No string search performed; NULL pointer returned.
1664:C:\Micrium\Software\uC-LIB\lib_str.c **** *
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 56


1665:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) String pointer points to NULL.
1666:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) String overlaps with NULL address; NULL pointer returned.
1667:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1668:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (c) String's terminating NULL character found.
1669:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) Search character NOT found in search string; NULL pointer returned
1670:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) Applicable even if search character is the terminating NULL character
1671:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1672:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (d) Search character found.
1673:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) Replace character found by the specified character.
1674:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1675:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (e) 'len_max' number of characters searched.
1676:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) Search character NOT found in search string within first 'len_max' numb
1677:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           of characters; NULL pointer returned.
1678:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) 'len_max' number of characters MAY include terminating NULL character
1679:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (see Note #2a2).
1680:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
1681:C:\Micrium\Software\uC-LIB\lib_str.c **** */
1682:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1683:C:\Micrium\Software\uC-LIB\lib_str.c **** CPU_CHAR  *Str_Char_Replace_N (CPU_CHAR    *pstr,
1684:C:\Micrium\Software\uC-LIB\lib_str.c ****                                CPU_CHAR     char_srch,
1685:C:\Micrium\Software\uC-LIB\lib_str.c ****                                CPU_CHAR     char_replace,
1686:C:\Micrium\Software\uC-LIB\lib_str.c ****                                CPU_SIZE_T   len_max)
1687:C:\Micrium\Software\uC-LIB\lib_str.c **** {
 1468              		.loc 1 1687 0
 1469              		.cfi_startproc
 1470              		@ args = 0, pretend = 0, frame = 24
 1471              		@ frame_needed = 1, uses_anonymous_args = 0
 1472              		@ link register save eliminated.
 1473 0000 80B4     		push	{r7}
 1474              	.LCFI45:
 1475              		.cfi_def_cfa_offset 4
 1476 0002 87B0     		sub	sp, sp, #28
 1477              	.LCFI46:
 1478              		.cfi_def_cfa_offset 32
 1479 0004 00AF     		add	r7, sp, #0
 1480              		.cfi_offset 7, -4
 1481              	.LCFI47:
 1482              		.cfi_def_cfa_register 7
 1483 0006 F860     		str	r0, [r7, #12]
 1484 0008 7B60     		str	r3, [r7, #4]
 1485 000a 0B46     		mov	r3, r1
 1486 000c FB72     		strb	r3, [r7, #11]
 1487 000e 1346     		mov	r3, r2
 1488 0010 BB72     		strb	r3, [r7, #10]
1688:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_CHAR    *pstr_char;
1689:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_SIZE_T   len;
1690:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1691:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1692:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (pstr == (const CPU_CHAR *)0) {                          /* Rtn NULL if srch str ptr NULL (s
 1489              		.loc 1 1692 0
 1490 0012 FB68     		ldr	r3, [r7, #12]
 1491 0014 002B     		cmp	r3, #0
 1492 0016 02D1     		bne	.L104
1693:C:\Micrium\Software\uC-LIB\lib_str.c ****         return ((CPU_CHAR *)0);
 1493              		.loc 1 1693 0
 1494 0018 4FF00003 		mov	r3, #0
 1495 001c 25E0     		b	.L105
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 57


 1496              	.L104:
1694:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
1695:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1696:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (len_max < 1) {                                          /* Rtn NULL if srch len = 0      (s
 1497              		.loc 1 1696 0
 1498 001e 7B68     		ldr	r3, [r7, #4]
 1499 0020 002B     		cmp	r3, #0
 1500 0022 02D1     		bne	.L106
1697:C:\Micrium\Software\uC-LIB\lib_str.c ****         return ((CPU_CHAR *)0);
 1501              		.loc 1 1697 0
 1502 0024 4FF00003 		mov	r3, #0
 1503 0028 1FE0     		b	.L105
 1504              	.L106:
1698:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
1699:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1700:C:\Micrium\Software\uC-LIB\lib_str.c ****     pstr_char = pstr;
 1505              		.loc 1 1700 0
 1506 002a FB68     		ldr	r3, [r7, #12]
 1507 002c 3B61     		str	r3, [r7, #16]
1701:C:\Micrium\Software\uC-LIB\lib_str.c ****     len       = len_max;
 1508              		.loc 1 1701 0
 1509 002e 7B68     		ldr	r3, [r7, #4]
 1510 0030 7B61     		str	r3, [r7, #20]
1702:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1703:C:\Micrium\Software\uC-LIB\lib_str.c ****     while (( pstr_char != (const CPU_CHAR *)0) &&               /* Srch str until NULL ptr     [see
 1511              		.loc 1 1703 0
 1512 0032 0FE0     		b	.L107
 1513              	.L110:
1704:C:\Micrium\Software\uC-LIB\lib_str.c ****            (*pstr_char !=  ASCII_CHAR_NULL   ) &&               /* ... or NULL char            (see
1705:C:\Micrium\Software\uC-LIB\lib_str.c ****            ( len        >                   0)) {               /* ... or max nbr chars srch'd (see
1706:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1707:C:\Micrium\Software\uC-LIB\lib_str.c ****         if (*pstr_char == char_srch) {
 1514              		.loc 1 1707 0
 1515 0034 3B69     		ldr	r3, [r7, #16]
 1516 0036 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1517 0038 FA7A     		ldrb	r2, [r7, #11]	@ zero_extendqisi2
 1518 003a 9A42     		cmp	r2, r3
 1519 003c 02D1     		bne	.L108
1708:C:\Micrium\Software\uC-LIB\lib_str.c ****             *pstr_char  = char_replace;                         /* Replace char if srch char is fou
 1520              		.loc 1 1708 0
 1521 003e 3B69     		ldr	r3, [r7, #16]
 1522 0040 BA7A     		ldrb	r2, [r7, #10]
 1523 0042 1A70     		strb	r2, [r3, #0]
 1524              	.L108:
1709:C:\Micrium\Software\uC-LIB\lib_str.c ****         }
1710:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1711:C:\Micrium\Software\uC-LIB\lib_str.c ****         pstr_char++;
 1525              		.loc 1 1711 0
 1526 0044 3B69     		ldr	r3, [r7, #16]
 1527 0046 03F10103 		add	r3, r3, #1
 1528 004a 3B61     		str	r3, [r7, #16]
1712:C:\Micrium\Software\uC-LIB\lib_str.c ****         len--;
 1529              		.loc 1 1712 0
 1530 004c 7B69     		ldr	r3, [r7, #20]
 1531 004e 03F1FF33 		add	r3, r3, #-1
 1532 0052 7B61     		str	r3, [r7, #20]
 1533              	.L107:
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 58


 1534              		.loc 1 1703 0
 1535 0054 3B69     		ldr	r3, [r7, #16]
 1536 0056 002B     		cmp	r3, #0
 1537 0058 06D0     		beq	.L109
 1538              		.loc 1 1704 0
 1539 005a 3B69     		ldr	r3, [r7, #16]
 1540 005c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1541              		.loc 1 1703 0
 1542 005e 002B     		cmp	r3, #0
 1543 0060 02D0     		beq	.L109
 1544 0062 7B69     		ldr	r3, [r7, #20]
 1545 0064 002B     		cmp	r3, #0
 1546 0066 E5D1     		bne	.L110
 1547              	.L109:
1713:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
1714:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1715:C:\Micrium\Software\uC-LIB\lib_str.c ****     return (pstr);
 1548              		.loc 1 1715 0
 1549 0068 FB68     		ldr	r3, [r7, #12]
 1550              	.L105:
1716:C:\Micrium\Software\uC-LIB\lib_str.c **** }
 1551              		.loc 1 1716 0
 1552 006a 1846     		mov	r0, r3
 1553 006c 07F11C07 		add	r7, r7, #28
 1554 0070 BD46     		mov	sp, r7
 1555 0072 80BC     		pop	{r7}
 1556 0074 7047     		bx	lr
 1557              		.cfi_endproc
 1558              	.LFE15:
 1559              		.size	Str_Char_Replace_N, .-Str_Char_Replace_N
 1560 0076 00BF     		.section	.text.Str_Str,"ax",%progbits
 1561              		.align	2
 1562              		.global	Str_Str
 1563              		.thumb
 1564              		.thumb_func
 1565              		.type	Str_Str, %function
 1566              	Str_Str:
 1567              	.LFB16:
1717:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1718:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1719:C:\Micrium\Software\uC-LIB\lib_str.c **** /*$PAGE*/
1720:C:\Micrium\Software\uC-LIB\lib_str.c **** /*
1721:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
1722:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                              Str_Str()
1723:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1724:C:\Micrium\Software\uC-LIB\lib_str.c **** * Description : Search string for first occurence of a specific search string.
1725:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1726:C:\Micrium\Software\uC-LIB\lib_str.c **** * Argument(s) : pstr            Pointer to        string (see Note #1).
1727:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1728:C:\Micrium\Software\uC-LIB\lib_str.c **** *               pstr_srch       Pointer to search string (see Note #1).
1729:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1730:C:\Micrium\Software\uC-LIB\lib_str.c **** * Return(s)   : Pointer to first occurrence of search string in string, if any                (see 
1731:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1732:C:\Micrium\Software\uC-LIB\lib_str.c **** *               Pointer to string,                                      if NULL search string (see 
1733:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1734:C:\Micrium\Software\uC-LIB\lib_str.c **** *               Pointer to NULL,                                        otherwise             (see 
1735:C:\Micrium\Software\uC-LIB\lib_str.c **** *
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 59


1736:C:\Micrium\Software\uC-LIB\lib_str.c **** * Caller(s)   : Application.
1737:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1738:C:\Micrium\Software\uC-LIB\lib_str.c **** * Note(s)     : (1) String buffers NOT modified.
1739:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1740:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strstr() : DESCRIPTION' states that
1741:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1742:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) "The strstr() function shall locate the first occurrence  in the string
1743:C:\Micrium\Software\uC-LIB\lib_str.c **** *                            pointed to by 's1' ('pstr') of the sequence of bytes ... in the string
1744:C:\Micrium\Software\uC-LIB\lib_str.c **** *                            pointed to by 's2' ('pstr_srch')" ...
1745:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) "(excluding the terminating null byte)."
1746:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1747:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strstr() : RETURN VALUE' states tha
1748:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1749:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) "Upon successful completion, strstr() shall return" :
1750:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (A) "a pointer to the located string" ...
1751:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (B) "or a null pointer if the string is not found."
1752:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               (1) #### Although NO strstr() specification states to return NULL f
1753:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   any other reason(s), NULL is also returned for any error(s).
1754:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1755:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) "If 's2' ('pstr_srch') points to a string with zero length, the functio
1756:C:\Micrium\Software\uC-LIB\lib_str.c **** *                            shall return 's1' ('pstr')."
1757:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1758:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (3) String search terminates when :
1759:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1760:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (a) String pointer(s) are passed NULL pointers.
1761:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) No string search performed; NULL pointer returned.
1762:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1763:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) String pointer(s) point to NULL.
1764:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) String buffer(s) overlap with NULL address; NULL pointer returned.
1765:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1766:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (c) Search string length equal to zero.
1767:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) No string search performed; string pointer returned (see Note #2b2).
1768:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1769:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (d) Search string length greater than string length.
1770:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) No string search performed; NULL   pointer returned (see Note #2b1B).
1771:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1772:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (e) Entire string has been searched.
1773:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) Search string not found; NULL pointer returned (see Note #2b1B).
1774:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1775:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (f) Search string found.
1776:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) Return pointer to first occurrence of search string in string (see Note
1777:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
1778:C:\Micrium\Software\uC-LIB\lib_str.c **** */
1779:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1780:C:\Micrium\Software\uC-LIB\lib_str.c **** CPU_CHAR  *Str_Str (const  CPU_CHAR  *pstr,
1781:C:\Micrium\Software\uC-LIB\lib_str.c ****                     const  CPU_CHAR  *pstr_srch)
1782:C:\Micrium\Software\uC-LIB\lib_str.c **** {
 1568              		.loc 1 1782 0
 1569              		.cfi_startproc
 1570              		@ args = 0, pretend = 0, frame = 16
 1571              		@ frame_needed = 1, uses_anonymous_args = 0
 1572 0000 80B5     		push	{r7, lr}
 1573              	.LCFI48:
 1574              		.cfi_def_cfa_offset 8
 1575 0002 84B0     		sub	sp, sp, #16
 1576              	.LCFI49:
 1577              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 60


 1578 0004 00AF     		add	r7, sp, #0
 1579              		.cfi_offset 14, -4
 1580              		.cfi_offset 7, -8
 1581              	.LCFI50:
 1582              		.cfi_def_cfa_register 7
 1583 0006 7860     		str	r0, [r7, #4]
 1584 0008 3960     		str	r1, [r7, #0]
1783:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_CHAR  *pstr_rtn;
1784:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1785:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1786:C:\Micrium\Software\uC-LIB\lib_str.c ****     pstr_rtn = Str_Str_N(pstr,
 1585              		.loc 1 1786 0
 1586 000a 7868     		ldr	r0, [r7, #4]
 1587 000c 3968     		ldr	r1, [r7, #0]
 1588 000e 4FF0FF32 		mov	r2, #-1
 1589 0012 FFF7FEFF 		bl	Str_Str_N
 1590 0016 0346     		mov	r3, r0
 1591 0018 FB60     		str	r3, [r7, #12]
1787:C:\Micrium\Software\uC-LIB\lib_str.c ****                          pstr_srch,
1788:C:\Micrium\Software\uC-LIB\lib_str.c ****                          DEF_INT_CPU_U_MAX_VAL);
1789:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1790:C:\Micrium\Software\uC-LIB\lib_str.c ****     return (pstr_rtn);
 1592              		.loc 1 1790 0
 1593 001a FB68     		ldr	r3, [r7, #12]
1791:C:\Micrium\Software\uC-LIB\lib_str.c **** }
 1594              		.loc 1 1791 0
 1595 001c 1846     		mov	r0, r3
 1596 001e 07F11007 		add	r7, r7, #16
 1597 0022 BD46     		mov	sp, r7
 1598 0024 80BD     		pop	{r7, pc}
 1599              		.cfi_endproc
 1600              	.LFE16:
 1601              		.size	Str_Str, .-Str_Str
 1602 0026 00BF     		.section	.text.Str_Str_N,"ax",%progbits
 1603              		.align	2
 1604              		.global	Str_Str_N
 1605              		.thumb
 1606              		.thumb_func
 1607              		.type	Str_Str_N, %function
 1608              	Str_Str_N:
 1609              	.LFB17:
1792:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1793:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1794:C:\Micrium\Software\uC-LIB\lib_str.c **** /*$PAGE*/
1795:C:\Micrium\Software\uC-LIB\lib_str.c **** /*
1796:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
1797:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                             Str_Str_N()
1798:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1799:C:\Micrium\Software\uC-LIB\lib_str.c **** * Description : Search string for first occurence of a specific search string, up to a maximum numb
1800:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   of characters.
1801:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1802:C:\Micrium\Software\uC-LIB\lib_str.c **** * Argument(s) : pstr            Pointer to        string (see Note #1).
1803:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1804:C:\Micrium\Software\uC-LIB\lib_str.c **** *               pstr_srch       Pointer to search string (see Note #1).
1805:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1806:C:\Micrium\Software\uC-LIB\lib_str.c **** *               len_max         Maximum number of characters to search (see Note #3g).
1807:C:\Micrium\Software\uC-LIB\lib_str.c **** *
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 61


1808:C:\Micrium\Software\uC-LIB\lib_str.c **** * Return(s)   : Pointer to first occurrence of search string in string, if any                (see 
1809:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1810:C:\Micrium\Software\uC-LIB\lib_str.c **** *               Pointer to string,                                      if NULL search string (see 
1811:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1812:C:\Micrium\Software\uC-LIB\lib_str.c **** *               Pointer to NULL,                                        otherwise             (see 
1813:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1814:C:\Micrium\Software\uC-LIB\lib_str.c **** * Caller(s)   : Application.
1815:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1816:C:\Micrium\Software\uC-LIB\lib_str.c **** * Note(s)     : (1) String buffers NOT modified.
1817:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1818:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strstr() : DESCRIPTION' states that
1819:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1820:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) "The strstr() function shall locate the first occurrence  in the string
1821:C:\Micrium\Software\uC-LIB\lib_str.c **** *                            pointed to by 's1' ('pstr') of the sequence of bytes ... in the string
1822:C:\Micrium\Software\uC-LIB\lib_str.c **** *                            pointed to by 's2' ('pstr_srch')" ...
1823:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) "(excluding the terminating null byte)."
1824:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1825:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) IEEE Std 1003.1, 2004 Edition, Section 'strstr() : RETURN VALUE' states tha
1826:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1827:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) "Upon successful completion, strstr() shall return" :
1828:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (A) "a pointer to the located string" ...
1829:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (B) "or a null pointer if the string is not found."
1830:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               (1) #### Although NO strstr() specification states to return NULL f
1831:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   any other reason(s), NULL is also returned for any error(s).
1832:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1833:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) "If 's2' ('pstr_srch') points to a string with zero length, the functio
1834:C:\Micrium\Software\uC-LIB\lib_str.c **** *                            shall return 's1' ('pstr')."
1835:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1836:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (3) String search terminates when :
1837:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1838:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (a) String pointer(s) are passed NULL pointers.
1839:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) No string search performed; NULL pointer returned.
1840:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1841:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) String pointer(s) point to NULL.
1842:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) String buffer(s) overlap with NULL address; NULL pointer returned.
1843:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1844:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (c) Search string length equal to zero.
1845:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) No string search performed; string pointer returned (see Note #2b2).
1846:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1847:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (d) Search string length greater than string length.
1848:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) No string search performed; NULL   pointer returned (see Note #2b1B).
1849:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1850:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (e) Entire string has been searched.
1851:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) Search string not found; NULL pointer returned (see Note #2b1B).
1852:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) Maximum size of the search is defined as the subtraction of the
1853:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           search string length from the string length.
1854:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1855:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (f) Search string found.
1856:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) Return pointer to first occurrence of search string in string (see Note
1857:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) Search string found via Str_Cmp_N().
1858:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1859:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (g) 'len_max' number of characters searched.
1860:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) 'len_max' number of characters does NOT include terminating NULL charac
1861:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (see Note #2a2).
1862:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
1863:C:\Micrium\Software\uC-LIB\lib_str.c **** */
1864:C:\Micrium\Software\uC-LIB\lib_str.c **** /*$PAGE*/
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 62


1865:C:\Micrium\Software\uC-LIB\lib_str.c **** CPU_CHAR  *Str_Str_N (const  CPU_CHAR    *pstr,
1866:C:\Micrium\Software\uC-LIB\lib_str.c ****                       const  CPU_CHAR    *pstr_srch,
1867:C:\Micrium\Software\uC-LIB\lib_str.c ****                              CPU_SIZE_T   len_max)
1868:C:\Micrium\Software\uC-LIB\lib_str.c **** {
 1610              		.loc 1 1868 0
 1611              		.cfi_startproc
 1612              		@ args = 0, pretend = 0, frame = 48
 1613              		@ frame_needed = 1, uses_anonymous_args = 0
 1614 0000 80B5     		push	{r7, lr}
 1615              	.LCFI51:
 1616              		.cfi_def_cfa_offset 8
 1617 0002 8CB0     		sub	sp, sp, #48
 1618              	.LCFI52:
 1619              		.cfi_def_cfa_offset 56
 1620 0004 00AF     		add	r7, sp, #0
 1621              		.cfi_offset 14, -4
 1622              		.cfi_offset 7, -8
 1623              	.LCFI53:
 1624              		.cfi_def_cfa_register 7
 1625 0006 F860     		str	r0, [r7, #12]
 1626 0008 B960     		str	r1, [r7, #8]
 1627 000a 7A60     		str	r2, [r7, #4]
1869:C:\Micrium\Software\uC-LIB\lib_str.c ****            CPU_SIZE_T    str_len;
1870:C:\Micrium\Software\uC-LIB\lib_str.c ****            CPU_SIZE_T    str_len_srch;
1871:C:\Micrium\Software\uC-LIB\lib_str.c ****            CPU_SIZE_T    len_max_srch;
1872:C:\Micrium\Software\uC-LIB\lib_str.c ****            CPU_SIZE_T    srch_len;
1873:C:\Micrium\Software\uC-LIB\lib_str.c ****            CPU_SIZE_T    srch_ix;
1874:C:\Micrium\Software\uC-LIB\lib_str.c ****            CPU_BOOLEAN   srch_done;
1875:C:\Micrium\Software\uC-LIB\lib_str.c ****            CPU_INT16S    srch_cmp;
1876:C:\Micrium\Software\uC-LIB\lib_str.c ****     const  CPU_CHAR     *pstr_str;
1877:C:\Micrium\Software\uC-LIB\lib_str.c ****     const  CPU_CHAR     *pstr_srch_ix;
1878:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1879:C:\Micrium\Software\uC-LIB\lib_str.c ****                                                                 /* Rtn NULL if str ptr(s) NULL (see
1880:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (pstr == (const CPU_CHAR *)0) {
 1628              		.loc 1 1880 0
 1629 000c FB68     		ldr	r3, [r7, #12]
 1630 000e 002B     		cmp	r3, #0
 1631 0010 02D1     		bne	.L115
1881:C:\Micrium\Software\uC-LIB\lib_str.c ****         return ((CPU_CHAR *)0);
 1632              		.loc 1 1881 0
 1633 0012 4FF00003 		mov	r3, #0
 1634 0016 79E0     		b	.L116
 1635              	.L115:
1882:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
1883:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (pstr_srch == (const CPU_CHAR *)0) {
 1636              		.loc 1 1883 0
 1637 0018 BB68     		ldr	r3, [r7, #8]
 1638 001a 002B     		cmp	r3, #0
 1639 001c 02D1     		bne	.L117
1884:C:\Micrium\Software\uC-LIB\lib_str.c ****         return ((CPU_CHAR *)0);
 1640              		.loc 1 1884 0
 1641 001e 4FF00003 		mov	r3, #0
 1642 0022 73E0     		b	.L116
 1643              	.L117:
1885:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
1886:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1887:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (len_max < 1) {                                          /* Rtn NULL if srch len = 0    (see
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 63


 1644              		.loc 1 1887 0
 1645 0024 7B68     		ldr	r3, [r7, #4]
 1646 0026 002B     		cmp	r3, #0
 1647 0028 02D1     		bne	.L118
1888:C:\Micrium\Software\uC-LIB\lib_str.c ****         return ((CPU_CHAR *)0);
 1648              		.loc 1 1888 0
 1649 002a 4FF00003 		mov	r3, #0
 1650 002e 6DE0     		b	.L116
 1651              	.L118:
1889:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
1890:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1891:C:\Micrium\Software\uC-LIB\lib_str.c ****                                                                 /* Lim max srch str len (to chk > s
1892:C:\Micrium\Software\uC-LIB\lib_str.c ****     len_max_srch = (len_max <       DEF_INT_CPU_U_MAX_VAL)
 1652              		.loc 1 1892 0
 1653 0030 7B68     		ldr	r3, [r7, #4]
 1654 0032 B3F1FF3F 		cmp	r3, #-1
 1655 0036 03D0     		beq	.L119
 1656 0038 7B68     		ldr	r3, [r7, #4]
 1657 003a 03F10103 		add	r3, r3, #1
 1658 003e 01E0     		b	.L120
 1659              	.L119:
 1660 0040 4FF0FF33 		mov	r3, #-1
 1661              	.L120:
 1662 0044 BB61     		str	r3, [r7, #24]
1893:C:\Micrium\Software\uC-LIB\lib_str.c ****                  ? (len_max + 1u) : DEF_INT_CPU_U_MAX_VAL;
1894:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1895:C:\Micrium\Software\uC-LIB\lib_str.c ****     str_len      = Str_Len_N(pstr,      len_max);
 1663              		.loc 1 1895 0
 1664 0046 F868     		ldr	r0, [r7, #12]
 1665 0048 7968     		ldr	r1, [r7, #4]
 1666 004a FFF7FEFF 		bl	Str_Len_N
 1667 004e 0346     		mov	r3, r0
 1668 0050 3B61     		str	r3, [r7, #16]
1896:C:\Micrium\Software\uC-LIB\lib_str.c ****     str_len_srch = Str_Len_N(pstr_srch, len_max_srch);
 1669              		.loc 1 1896 0
 1670 0052 B868     		ldr	r0, [r7, #8]
 1671 0054 B969     		ldr	r1, [r7, #24]
 1672 0056 FFF7FEFF 		bl	Str_Len_N
 1673 005a 0346     		mov	r3, r0
 1674 005c 7B61     		str	r3, [r7, #20]
1897:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (str_len_srch < 1) {                                     /* Rtn ptr to str if srch str len =
 1675              		.loc 1 1897 0
 1676 005e 7B69     		ldr	r3, [r7, #20]
 1677 0060 002B     		cmp	r3, #0
 1678 0062 01D1     		bne	.L121
1898:C:\Micrium\Software\uC-LIB\lib_str.c ****         return ((CPU_CHAR *)pstr);
 1679              		.loc 1 1898 0
 1680 0064 FB68     		ldr	r3, [r7, #12]
 1681 0066 51E0     		b	.L116
 1682              	.L121:
1899:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
1900:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (str_len_srch > str_len) {                               /* Rtn NULL if srch str len > str l
 1683              		.loc 1 1900 0
 1684 0068 7A69     		ldr	r2, [r7, #20]
 1685 006a 3B69     		ldr	r3, [r7, #16]
 1686 006c 9A42     		cmp	r2, r3
 1687 006e 02D9     		bls	.L122
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 64


1901:C:\Micrium\Software\uC-LIB\lib_str.c ****         return ((CPU_CHAR *)0);
 1688              		.loc 1 1901 0
 1689 0070 4FF00003 		mov	r3, #0
 1690 0074 4AE0     		b	.L116
 1691              	.L122:
1902:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
1903:C:\Micrium\Software\uC-LIB\lib_str.c ****                                                                 /* Rtn NULL if NULL ptr found      
1904:C:\Micrium\Software\uC-LIB\lib_str.c ****     pstr_str = pstr      + str_len;
 1692              		.loc 1 1904 0
 1693 0076 FA68     		ldr	r2, [r7, #12]
 1694 0078 3B69     		ldr	r3, [r7, #16]
 1695 007a 1344     		add	r3, r2, r3
 1696 007c BB62     		str	r3, [r7, #40]
1905:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (pstr_str == (const CPU_CHAR *)0) {
 1697              		.loc 1 1905 0
 1698 007e BB6A     		ldr	r3, [r7, #40]
 1699 0080 002B     		cmp	r3, #0
 1700 0082 02D1     		bne	.L123
1906:C:\Micrium\Software\uC-LIB\lib_str.c ****         return ((CPU_CHAR *)0);
 1701              		.loc 1 1906 0
 1702 0084 4FF00003 		mov	r3, #0
 1703 0088 40E0     		b	.L116
 1704              	.L123:
1907:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
1908:C:\Micrium\Software\uC-LIB\lib_str.c ****     pstr_str = pstr_srch + str_len_srch;
 1705              		.loc 1 1908 0
 1706 008a BA68     		ldr	r2, [r7, #8]
 1707 008c 7B69     		ldr	r3, [r7, #20]
 1708 008e 1344     		add	r3, r2, r3
 1709 0090 BB62     		str	r3, [r7, #40]
1909:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (pstr_str == (const CPU_CHAR *)0) {
 1710              		.loc 1 1909 0
 1711 0092 BB6A     		ldr	r3, [r7, #40]
 1712 0094 002B     		cmp	r3, #0
 1713 0096 02D1     		bne	.L124
1910:C:\Micrium\Software\uC-LIB\lib_str.c ****         return ((CPU_CHAR *)0);
 1714              		.loc 1 1910 0
 1715 0098 4FF00003 		mov	r3, #0
 1716 009c 36E0     		b	.L116
 1717              	.L124:
1911:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
1912:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1913:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1914:C:\Micrium\Software\uC-LIB\lib_str.c ****     srch_len  = str_len - str_len_srch;                         /* Calc srch len (see Note #3e2).  
 1718              		.loc 1 1914 0
 1719 009e 3A69     		ldr	r2, [r7, #16]
 1720 00a0 7B69     		ldr	r3, [r7, #20]
 1721 00a2 C3EB0203 		rsb	r3, r3, r2
 1722 00a6 FB61     		str	r3, [r7, #28]
1915:C:\Micrium\Software\uC-LIB\lib_str.c ****     srch_ix   = 0u;
 1723              		.loc 1 1915 0
 1724 00a8 4FF00003 		mov	r3, #0
 1725 00ac 3B62     		str	r3, [r7, #32]
1916:C:\Micrium\Software\uC-LIB\lib_str.c ****     srch_done = DEF_NO;
 1726              		.loc 1 1916 0
 1727 00ae 4FF00003 		mov	r3, #0
 1728 00b2 87F82530 		strb	r3, [r7, #37]
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 65


 1729              	.L128:
1917:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1918:C:\Micrium\Software\uC-LIB\lib_str.c ****     do {
1919:C:\Micrium\Software\uC-LIB\lib_str.c ****         pstr_srch_ix = (const CPU_CHAR *)(pstr + srch_ix);
 1730              		.loc 1 1919 0
 1731 00b6 FA68     		ldr	r2, [r7, #12]
 1732 00b8 3B6A     		ldr	r3, [r7, #32]
 1733 00ba 1344     		add	r3, r2, r3
 1734 00bc FB62     		str	r3, [r7, #44]
1920:C:\Micrium\Software\uC-LIB\lib_str.c ****         srch_cmp     =  Str_Cmp_N(pstr_srch_ix, pstr_srch, str_len_srch);
 1735              		.loc 1 1920 0
 1736 00be F86A     		ldr	r0, [r7, #44]
 1737 00c0 B968     		ldr	r1, [r7, #8]
 1738 00c2 7A69     		ldr	r2, [r7, #20]
 1739 00c4 FFF7FEFF 		bl	Str_Cmp_N
 1740 00c8 0346     		mov	r3, r0
 1741 00ca 9BB2     		uxth	r3, r3
 1742 00cc FB84     		strh	r3, [r7, #38]	@ movhi
1921:C:\Micrium\Software\uC-LIB\lib_str.c ****         srch_done    = (srch_cmp == 0) ? DEF_YES : DEF_NO;
 1743              		.loc 1 1921 0
 1744 00ce B7F92630 		ldrsh	r3, [r7, #38]
 1745 00d2 002B     		cmp	r3, #0
 1746 00d4 02D1     		bne	.L125
 1747 00d6 4FF00103 		mov	r3, #1
 1748 00da 01E0     		b	.L126
 1749              	.L125:
 1750 00dc 4FF00003 		mov	r3, #0
 1751              	.L126:
 1752 00e0 87F82530 		strb	r3, [r7, #37]
1922:C:\Micrium\Software\uC-LIB\lib_str.c ****         srch_ix++;
 1753              		.loc 1 1922 0
 1754 00e4 3B6A     		ldr	r3, [r7, #32]
 1755 00e6 03F10103 		add	r3, r3, #1
 1756 00ea 3B62     		str	r3, [r7, #32]
1923:C:\Micrium\Software\uC-LIB\lib_str.c ****     } while ((srch_done == DEF_NO) && (srch_ix <= srch_len));
 1757              		.loc 1 1923 0
 1758 00ec 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 1759 00f0 002B     		cmp	r3, #0
 1760 00f2 03D1     		bne	.L127
 1761 00f4 3A6A     		ldr	r2, [r7, #32]
 1762 00f6 FB69     		ldr	r3, [r7, #28]
 1763 00f8 9A42     		cmp	r2, r3
 1764 00fa DCD9     		bls	.L128
 1765              	.L127:
1924:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1925:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1926:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (srch_cmp != 0) {                                        /* Rtn NULL if srch str NOT found (
 1766              		.loc 1 1926 0
 1767 00fc B7F92630 		ldrsh	r3, [r7, #38]
 1768 0100 002B     		cmp	r3, #0
 1769 0102 02D0     		beq	.L129
1927:C:\Micrium\Software\uC-LIB\lib_str.c ****         return ((CPU_CHAR *)0);
 1770              		.loc 1 1927 0
 1771 0104 4FF00003 		mov	r3, #0
 1772 0108 00E0     		b	.L116
 1773              	.L129:
1928:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 66


1929:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1930:C:\Micrium\Software\uC-LIB\lib_str.c ****     return ((CPU_CHAR *)pstr_srch_ix);                          /* Else rtn ptr to found srch str (
 1774              		.loc 1 1930 0
 1775 010a FB6A     		ldr	r3, [r7, #44]
 1776              	.L116:
1931:C:\Micrium\Software\uC-LIB\lib_str.c **** }
 1777              		.loc 1 1931 0
 1778 010c 1846     		mov	r0, r3
 1779 010e 07F13007 		add	r7, r7, #48
 1780 0112 BD46     		mov	sp, r7
 1781 0114 80BD     		pop	{r7, pc}
 1782              		.cfi_endproc
 1783              	.LFE17:
 1784              		.size	Str_Str_N, .-Str_Str_N
 1785 0116 00BF     		.section	.text.Str_FmtNbr_Int32U,"ax",%progbits
 1786              		.align	2
 1787              		.global	Str_FmtNbr_Int32U
 1788              		.thumb
 1789              		.thumb_func
 1790              		.type	Str_FmtNbr_Int32U, %function
 1791              	Str_FmtNbr_Int32U:
 1792              	.LFB18:
1932:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1933:C:\Micrium\Software\uC-LIB\lib_str.c **** 
1934:C:\Micrium\Software\uC-LIB\lib_str.c **** /*$PAGE*/
1935:C:\Micrium\Software\uC-LIB\lib_str.c **** /*
1936:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
1937:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                         Str_FmtNbr_Int32U()
1938:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1939:C:\Micrium\Software\uC-LIB\lib_str.c **** * Description : Format 32-bit unsigned integer into a multi-digit character string.
1940:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1941:C:\Micrium\Software\uC-LIB\lib_str.c **** * Argument(s) : nbr             Number           to format.
1942:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1943:C:\Micrium\Software\uC-LIB\lib_str.c **** *               nbr_dig         Number of digits to format (see Note #1).
1944:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1945:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               The following may be used to specify the number of digits to format
1946:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1947:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   DEF_INT_32U_NBR_DIG_MIN     Minimum number of 32-bit unsigned d
1948:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   DEF_INT_32U_NBR_DIG_MAX     Maximum number of 32-bit unsigned d
1949:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1950:C:\Micrium\Software\uC-LIB\lib_str.c **** *               nbr_base        Base   of number to format (see Note #2).
1951:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1952:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               The following may be used to specify the number base :
1953:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1954:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   DEF_NBR_BASE_BIN            Base  2
1955:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   DEF_NBR_BASE_OCT            Base  8
1956:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   DEF_NBR_BASE_DEC            Base 10
1957:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   DEF_NBR_BASE_HEX            Base 16
1958:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1959:C:\Micrium\Software\uC-LIB\lib_str.c **** *               lead_char       Prepend leading character  (see Note #3) :
1960:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1961:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   '\0'                    Do NOT prepend leading character to str
1962:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                     Printable character          Prepend leading character to str
1963:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   Unprintable character   Format invalid string (see Note #6).
1964:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1965:C:\Micrium\Software\uC-LIB\lib_str.c **** *               lower_case      Format alphabetic characters (if any) in lower case :
1966:C:\Micrium\Software\uC-LIB\lib_str.c **** *
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 67


1967:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   DEF_NO          Format alphabetic characters in upper case.
1968:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   DEF_YES         Format alphabetic characters in lower case.
1969:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1970:C:\Micrium\Software\uC-LIB\lib_str.c **** *               nul             Append terminating NULL-character (see Note #4) :
1971:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1972:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   DEF_NO          Do NOT append terminating NULL-character to str
1973:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   DEF_YES                Append terminating NULL-character to str
1974:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1975:C:\Micrium\Software\uC-LIB\lib_str.c **** *               pstr            Pointer to character array to return formatted number string (see N
1976:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1977:C:\Micrium\Software\uC-LIB\lib_str.c **** * Return(s)   : Pointer to formatted string, if NO error(s).
1978:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1979:C:\Micrium\Software\uC-LIB\lib_str.c **** *               Pointer to NULL,             otherwise.
1980:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1981:C:\Micrium\Software\uC-LIB\lib_str.c **** * Caller(s)   : Application.
1982:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1983:C:\Micrium\Software\uC-LIB\lib_str.c **** * Note(s)     : (1) (a) If the number of digits to format ('nbr_dig') is zero; then NO formatting 
1984:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       is performed except possible NULL-termination of the string (see Note #4).
1985:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1986:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           Example :
1987:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1988:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               nbr      = 23456
1989:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               nbr_dig  = 0
1990:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               nbr_base = 10
1991:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1992:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               pstr     = ""                   See Note #6a
1993:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1994:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) If the number of digits to format ('nbr_dig') is less than the number of 
1995:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       significant integer digits of the number to format ('nbr'); then an invalid
1996:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       string is formatted instead of truncating any significant integer digits.
1997:C:\Micrium\Software\uC-LIB\lib_str.c **** *
1998:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           Example :
1999:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2000:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               nbr      = 23456
2001:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               nbr_dig  = 3
2002:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               nbr_base = 10
2003:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2004:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               pstr     = "???"                See Note #6b
2005:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2006:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (2) The number's base MUST be between 2 & 36, inclusive.
2007:C:\Micrium\Software\uC-LIB\lib_str.c **** *$PAGE*
2008:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (3) Leading character option prepends leading characters prior to the first non-zer
2009:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2010:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (a) (1) Leading character MUST be a printable ASCII character.
2011:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2012:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) (A) Leading character MUST NOT be a number base digit, ...
2013:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (B) with the exception of '0'.
2014:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2015:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) The number of leading characters is such that the total number of significa
2016:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       integer digits plus the number of leading characters is equal to the reques
2017:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       number of integer digits to format ('nbr_dig').
2018:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2019:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           Example :
2020:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2021:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               nbr       = 23456
2022:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               nbr_dig   = 7
2023:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               nbr_base  = 10
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 68


2024:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               lead_char = ' '
2025:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2026:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               pstr      = "  23456"
2027:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2028:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (c) (1) If the value of the number to format is     zero  ...
2029:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) ... & the number of digits to format is non-zero, ...
2030:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (3) ... but NO leading character available;           ...
2031:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (4) ... then one digit of '0' value is formatted.
2032:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2033:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           This is NOT a leading character; but a single integer digit of '0' valu
2034:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2035:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (4) (a) NULL-character terminate option DISABLED prevents overwriting previous char
2036:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       array formatting.
2037:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2038:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) WARNING: Unless 'pstr' character array is pre-/post-terminated, NULL-charac
2039:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       terminate option DISABLED will cause character string run-on.
2040:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2041:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (5) (a) Format buffer size NOT validated; buffer overruns MUST be prevented by call
2042:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2043:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) To prevent character buffer overrun :
2044:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2045:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           Character array size MUST be  >=  ('nbr_dig'          +
2046:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                                               1 'NUL' terminator)  characters
2047:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2048:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (6) For any unsuccessful string format or error(s), an invalid string of question m
2049:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   ('?') will be formatted, where the number of question marks is determined by th
2050:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   number of digits to format ('nbr_dig') :
2051:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2052:C:\Micrium\Software\uC-LIB\lib_str.c **** *                      Invalid string's     {  (a)   0 (NULL string)  ,  if 'nbr_dig' = 0
2053:C:\Micrium\Software\uC-LIB\lib_str.c **** *                          number of     =  {
2054:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       question marks      {  (b)  'nbr_dig'         ,  if 'nbr_dig' > 0
2055:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2056:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
2057:C:\Micrium\Software\uC-LIB\lib_str.c **** */
2058:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2059:C:\Micrium\Software\uC-LIB\lib_str.c **** CPU_CHAR  *Str_FmtNbr_Int32U (CPU_INT32U    nbr,
2060:C:\Micrium\Software\uC-LIB\lib_str.c ****                               CPU_INT08U    nbr_dig,
2061:C:\Micrium\Software\uC-LIB\lib_str.c ****                               CPU_INT08U    nbr_base,
2062:C:\Micrium\Software\uC-LIB\lib_str.c ****                               CPU_CHAR      lead_char,
2063:C:\Micrium\Software\uC-LIB\lib_str.c ****                               CPU_BOOLEAN   lower_case,
2064:C:\Micrium\Software\uC-LIB\lib_str.c ****                               CPU_BOOLEAN   nul,
2065:C:\Micrium\Software\uC-LIB\lib_str.c ****                               CPU_CHAR     *pstr)
2066:C:\Micrium\Software\uC-LIB\lib_str.c **** {
 1793              		.loc 1 2066 0
 1794              		.cfi_startproc
 1795              		@ args = 12, pretend = 0, frame = 16
 1796              		@ frame_needed = 1, uses_anonymous_args = 0
 1797 0000 80B5     		push	{r7, lr}
 1798              	.LCFI54:
 1799              		.cfi_def_cfa_offset 8
 1800 0002 88B0     		sub	sp, sp, #32
 1801              	.LCFI55:
 1802              		.cfi_def_cfa_offset 40
 1803 0004 04AF     		add	r7, sp, #16
 1804              		.cfi_offset 14, -4
 1805              		.cfi_offset 7, -8
 1806              	.LCFI56:
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 69


 1807              		.cfi_def_cfa 7, 24
 1808 0006 7860     		str	r0, [r7, #4]
 1809 0008 F970     		strb	r1, [r7, #3]
 1810 000a BA70     		strb	r2, [r7, #2]
 1811 000c 7B70     		strb	r3, [r7, #1]
2067:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_CHAR  *pstr_fmt;
2068:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2069:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2070:C:\Micrium\Software\uC-LIB\lib_str.c ****     pstr_fmt = Str_FmtNbr_Int32(nbr,                            /* Fmt unsigned int into str.      
 1812              		.loc 1 2070 0
 1813 000e FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 1814 0010 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 1815 0012 7978     		ldrb	r1, [r7, #1]	@ zero_extendqisi2
 1816 0014 0091     		str	r1, [sp, #0]
 1817 0016 397E     		ldrb	r1, [r7, #24]	@ zero_extendqisi2
 1818 0018 0191     		str	r1, [sp, #4]
 1819 001a 397F     		ldrb	r1, [r7, #28]	@ zero_extendqisi2
 1820 001c 0291     		str	r1, [sp, #8]
 1821 001e 396A     		ldr	r1, [r7, #32]
 1822 0020 0391     		str	r1, [sp, #12]
 1823 0022 7868     		ldr	r0, [r7, #4]
 1824 0024 1146     		mov	r1, r2
 1825 0026 1A46     		mov	r2, r3
 1826 0028 4FF00003 		mov	r3, #0
 1827 002c FFF7FEFF 		bl	Str_FmtNbr_Int32
 1828 0030 0346     		mov	r3, r0
 1829 0032 FB60     		str	r3, [r7, #12]
2071:C:\Micrium\Software\uC-LIB\lib_str.c ****                                 nbr_dig,
2072:C:\Micrium\Software\uC-LIB\lib_str.c ****                                 nbr_base,
2073:C:\Micrium\Software\uC-LIB\lib_str.c ****                                 DEF_NO,
2074:C:\Micrium\Software\uC-LIB\lib_str.c ****                                 lead_char,
2075:C:\Micrium\Software\uC-LIB\lib_str.c ****                                 lower_case,
2076:C:\Micrium\Software\uC-LIB\lib_str.c ****                                 nul,
2077:C:\Micrium\Software\uC-LIB\lib_str.c ****                                 pstr);
2078:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2079:C:\Micrium\Software\uC-LIB\lib_str.c ****     return (pstr_fmt);
 1830              		.loc 1 2079 0
 1831 0034 FB68     		ldr	r3, [r7, #12]
2080:C:\Micrium\Software\uC-LIB\lib_str.c **** }
 1832              		.loc 1 2080 0
 1833 0036 1846     		mov	r0, r3
 1834 0038 07F11007 		add	r7, r7, #16
 1835 003c BD46     		mov	sp, r7
 1836 003e 80BD     		pop	{r7, pc}
 1837              		.cfi_endproc
 1838              	.LFE18:
 1839              		.size	Str_FmtNbr_Int32U, .-Str_FmtNbr_Int32U
 1840              		.section	.text.Str_FmtNbr_Int32S,"ax",%progbits
 1841              		.align	2
 1842              		.global	Str_FmtNbr_Int32S
 1843              		.thumb
 1844              		.thumb_func
 1845              		.type	Str_FmtNbr_Int32S, %function
 1846              	Str_FmtNbr_Int32S:
 1847              	.LFB19:
2081:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2082:C:\Micrium\Software\uC-LIB\lib_str.c **** 
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 70


2083:C:\Micrium\Software\uC-LIB\lib_str.c **** /*$PAGE*/
2084:C:\Micrium\Software\uC-LIB\lib_str.c **** /*
2085:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
2086:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                         Str_FmtNbr_Int32S()
2087:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2088:C:\Micrium\Software\uC-LIB\lib_str.c **** * Description : Format 32-bit signed integer into a multi-digit character string.
2089:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2090:C:\Micrium\Software\uC-LIB\lib_str.c **** * Argument(s) : nbr             Number           to format.
2091:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2092:C:\Micrium\Software\uC-LIB\lib_str.c **** *               nbr_dig         Number of digits to format (see Note #1).
2093:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2094:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               The following may be used to specify the number of digits to format
2095:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2096:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   DEF_INT_32S_NBR_DIG_MIN + 1     Minimum number of 32-bit signed
2097:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   DEF_INT_32S_NBR_DIG_MAX + 1     Maximum number of 32-bit signed
2098:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                                                   (plus 1 digit for possible nega
2099:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2100:C:\Micrium\Software\uC-LIB\lib_str.c **** *               nbr_base        Base   of number to format (see Note #2).
2101:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2102:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               The following may be used to specify the number base :
2103:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2104:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   DEF_NBR_BASE_BIN            Base  2
2105:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   DEF_NBR_BASE_OCT            Base  8
2106:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   DEF_NBR_BASE_DEC            Base 10
2107:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   DEF_NBR_BASE_HEX            Base 16
2108:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2109:C:\Micrium\Software\uC-LIB\lib_str.c **** *               lead_char       Prepend leading character  (see Note #3) :
2110:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2111:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   '\0'                    Do NOT prepend leading character to str
2112:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                     Printable character          Prepend leading character to str
2113:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   Unprintable character   Format invalid string (see Note #6).
2114:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2115:C:\Micrium\Software\uC-LIB\lib_str.c **** *               lower_case      Format alphabetic characters (if any) in lower case :
2116:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2117:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   DEF_NO          Format alphabetic characters in upper case.
2118:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   DEF_YES         Format alphabetic characters in lower case.
2119:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2120:C:\Micrium\Software\uC-LIB\lib_str.c **** *               nul             Append terminating NULL-character (see Note #4) :
2121:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2122:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   DEF_NO          Do NOT append terminating NULL-character to str
2123:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   DEF_YES                Append terminating NULL-character to str
2124:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2125:C:\Micrium\Software\uC-LIB\lib_str.c **** *               pstr            Pointer to character array to return formatted number string (see N
2126:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2127:C:\Micrium\Software\uC-LIB\lib_str.c **** * Return(s)   : Pointer to formatted string, if NO error(s).
2128:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2129:C:\Micrium\Software\uC-LIB\lib_str.c **** *               Pointer to NULL,             otherwise.
2130:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2131:C:\Micrium\Software\uC-LIB\lib_str.c **** * Caller(s)   : Application.
2132:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2133:C:\Micrium\Software\uC-LIB\lib_str.c **** * Note(s)     : (1) (a) If the number of digits to format ('nbr_dig') is zero; then NO formatting 
2134:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       is performed except possible NULL-termination of the string (see Note #4).
2135:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2136:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           Example :
2137:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2138:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               nbr      = -23456
2139:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               nbr_dig  =  0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 71


2140:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               nbr_base = 10
2141:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2142:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               pstr     = ""                   See Note #6a
2143:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2144:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) If the number of digits to format ('nbr_dig') is less than the number of 
2145:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       significant integer digits of the number to format ('nbr'); then an invalid
2146:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       string is formatted instead of truncating any significant integer digits.
2147:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2148:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           Example :
2149:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2150:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               nbr      = 23456
2151:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               nbr_dig  = 3
2152:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               nbr_base = 10
2153:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2154:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               pstr     = "???"                See Note #6b
2155:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2156:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (c) If the number to format ('nbr') is negative but the number of digits to for
2157:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       ('nbr_dig') is equal to the number of significant integer digits of the num
2158:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       to format ('nbr'); then an invalid string is formatted instead of truncatin
2159:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       the negative sign.
2160:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2161:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           Example :
2162:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2163:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               nbr      = -23456
2164:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               nbr_dig  =  5
2165:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               nbr_base = 10
2166:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2167:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               pstr     = "?????"              See Note #6b
2168:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2169:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (2) The number's base MUST be between 2 & 36, inclusive.
2170:C:\Micrium\Software\uC-LIB\lib_str.c **** *$PAGE*
2171:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (3) Leading character option prepends leading characters prior to the first non-zer
2172:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2173:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (a) (1) Leading character MUST be a printable ASCII character.
2174:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2175:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) (A) Leading character MUST NOT be a number base digit, ...
2176:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (B) with the exception of '0'.
2177:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2178:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) (1) The number of leading characters is such that the total number of signi
2179:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           integer digits plus the number of leading characters plus possible nega
2180:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           sign character is equal to the requested number of integer digits to fo
2181:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           ('nbr_dig').
2182:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2183:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               Examples :
2184:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2185:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   nbr       = 23456
2186:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   nbr_dig   = 7
2187:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   nbr_base  = 10
2188:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   lead_char = ' '
2189:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2190:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   pstr      = "  23456"
2191:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2192:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2193:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   nbr       = -23456
2194:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   nbr_dig   =  7
2195:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   nbr_base  = 10
2196:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   lead_char = ' '
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 72


2197:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2198:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   pstr      = " -23456"
2199:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2200:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) (A) If the number to format ('nbr') is negative AND the leading charact
2201:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               ('lead_char') is     a '0' digit; then the negative sign character 
2202:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               prefixes all leading characters prior to the formatted number.
2203:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2204:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   Examples :
2205:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2206:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       nbr        = -23456
2207:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       nbr_dig    =  8
2208:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       nbr_base   = 10
2209:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       lead_char  = '0'
2210:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2211:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       pstr       = "-0023456"
2212:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2213:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2214:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       nbr        = -43981
2215:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       nbr_dig    =  8
2216:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       nbr_base   = 16
2217:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       lead_char  = '0'
2218:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       lower_case = DEF_NO
2219:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2220:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       pstr       = "-000ABCD"
2221:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2222:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (B) If the number to format ('nbr') is negative AND the leading charact
2223:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               ('lead_char') is NOT a '0' digit; then the negative sign character 
2224:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               immediately prefixes the most significant digit of the formatted nu
2225:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2226:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   Examples :
2227:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2228:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       nbr        = -23456
2229:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       nbr_dig    =  8
2230:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       nbr_base   = 10
2231:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       lead_char  = '#'
2232:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2233:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       pstr       = "##-23456"
2234:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2235:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2236:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       nbr        = -43981
2237:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       nbr_dig    =  8
2238:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       nbr_base   = 16
2239:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       lead_char  = '#'
2240:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       lower_case = DEF_YES
2241:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2242:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       pstr       = "###-abcd"
2243:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2244:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (c) (1) If the value of the number to format is     zero  ...
2245:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) ... & the number of digits to format is non-zero, ...
2246:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (3) ... but NO leading character available;           ...
2247:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (4) ... then one digit of '0' value is formatted.
2248:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2249:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           This is NOT a leading character; but a single integer digit of '0' valu
2250:C:\Micrium\Software\uC-LIB\lib_str.c **** *$PAGE*
2251:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (4) (a) NULL-character terminate option DISABLED prevents overwriting previous char
2252:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       array formatting.
2253:C:\Micrium\Software\uC-LIB\lib_str.c **** *
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 73


2254:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) WARNING: Unless 'pstr' character array is pre-/post-terminated, NULL-charac
2255:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       terminate option DISABLED will cause character string run-on.
2256:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2257:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (5) (a) Format buffer size NOT validated; buffer overruns MUST be prevented by call
2258:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2259:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) To prevent character buffer overrun :
2260:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2261:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           Character array size MUST be  >=  ('nbr_dig'          +
2262:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                                               1 negative sign   +
2263:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                                               1 'NUL' terminator)  characters
2264:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2265:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (6) For any unsuccessful string format or error(s), an invalid string of question m
2266:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   ('?') will be formatted, where the number of question marks is determined by th
2267:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   number of digits to format ('nbr_dig') :
2268:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2269:C:\Micrium\Software\uC-LIB\lib_str.c **** *                      Invalid string's     {  (a)   0 (NULL string)  ,  if 'nbr_dig' = 0
2270:C:\Micrium\Software\uC-LIB\lib_str.c **** *                          number of     =  {
2271:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       question marks      {  (b)  'nbr_dig'         ,  if 'nbr_dig' > 0
2272:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2273:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
2274:C:\Micrium\Software\uC-LIB\lib_str.c **** */
2275:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2276:C:\Micrium\Software\uC-LIB\lib_str.c **** CPU_CHAR  *Str_FmtNbr_Int32S (CPU_INT32S    nbr,
2277:C:\Micrium\Software\uC-LIB\lib_str.c ****                               CPU_INT08U    nbr_dig,
2278:C:\Micrium\Software\uC-LIB\lib_str.c ****                               CPU_INT08U    nbr_base,
2279:C:\Micrium\Software\uC-LIB\lib_str.c ****                               CPU_CHAR      lead_char,
2280:C:\Micrium\Software\uC-LIB\lib_str.c ****                               CPU_BOOLEAN   lower_case,
2281:C:\Micrium\Software\uC-LIB\lib_str.c ****                               CPU_BOOLEAN   nul,
2282:C:\Micrium\Software\uC-LIB\lib_str.c ****                               CPU_CHAR     *pstr)
2283:C:\Micrium\Software\uC-LIB\lib_str.c **** {
 1848              		.loc 1 2283 0
 1849              		.cfi_startproc
 1850              		@ args = 12, pretend = 0, frame = 24
 1851              		@ frame_needed = 1, uses_anonymous_args = 0
 1852 0000 80B5     		push	{r7, lr}
 1853              	.LCFI57:
 1854              		.cfi_def_cfa_offset 8
 1855 0002 8AB0     		sub	sp, sp, #40
 1856              	.LCFI58:
 1857              		.cfi_def_cfa_offset 48
 1858 0004 04AF     		add	r7, sp, #16
 1859              		.cfi_offset 14, -4
 1860              		.cfi_offset 7, -8
 1861              	.LCFI59:
 1862              		.cfi_def_cfa 7, 32
 1863 0006 7860     		str	r0, [r7, #4]
 1864 0008 F970     		strb	r1, [r7, #3]
 1865 000a BA70     		strb	r2, [r7, #2]
 1866 000c 7B70     		strb	r3, [r7, #1]
2284:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_CHAR     *pstr_fmt;
2285:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_INT32S    nbr_fmt;
2286:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_BOOLEAN   nbr_neg;
2287:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2288:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2289:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (nbr < 0) {                                              /* If nbr neg, ...                 
 1867              		.loc 1 2289 0
 1868 000e 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 74


 1869 0010 002B     		cmp	r3, #0
 1870 0012 07DA     		bge	.L134
2290:C:\Micrium\Software\uC-LIB\lib_str.c ****         nbr_fmt = -nbr;                                         /* ... negate nbr.                 
 1871              		.loc 1 2290 0
 1872 0014 7B68     		ldr	r3, [r7, #4]
 1873 0016 C3F10003 		rsb	r3, r3, #0
 1874 001a 3B61     		str	r3, [r7, #16]
2291:C:\Micrium\Software\uC-LIB\lib_str.c ****         nbr_neg =  DEF_YES;
 1875              		.loc 1 2291 0
 1876 001c 4FF00103 		mov	r3, #1
 1877 0020 FB75     		strb	r3, [r7, #23]
 1878 0022 04E0     		b	.L135
 1879              	.L134:
2292:C:\Micrium\Software\uC-LIB\lib_str.c ****     } else {
2293:C:\Micrium\Software\uC-LIB\lib_str.c ****         nbr_fmt =  nbr;
 1880              		.loc 1 2293 0
 1881 0024 7B68     		ldr	r3, [r7, #4]
 1882 0026 3B61     		str	r3, [r7, #16]
2294:C:\Micrium\Software\uC-LIB\lib_str.c ****         nbr_neg =  DEF_NO;
 1883              		.loc 1 2294 0
 1884 0028 4FF00003 		mov	r3, #0
 1885 002c FB75     		strb	r3, [r7, #23]
 1886              	.L135:
2295:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
2296:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2297:C:\Micrium\Software\uC-LIB\lib_str.c ****     pstr_fmt = Str_FmtNbr_Int32((CPU_INT32U)nbr_fmt,            /* Fmt signed int into str.        
 1887              		.loc 1 2297 0
 1888 002e 3869     		ldr	r0, [r7, #16]
 1889 0030 F978     		ldrb	r1, [r7, #3]	@ zero_extendqisi2
 1890 0032 BA78     		ldrb	r2, [r7, #2]	@ zero_extendqisi2
 1891 0034 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 1892 0036 97F801C0 		ldrb	ip, [r7, #1]	@ zero_extendqisi2
 1893 003a CDF800C0 		str	ip, [sp, #0]
 1894 003e 97F820C0 		ldrb	ip, [r7, #32]	@ zero_extendqisi2
 1895 0042 CDF804C0 		str	ip, [sp, #4]
 1896 0046 97F824C0 		ldrb	ip, [r7, #36]	@ zero_extendqisi2
 1897 004a CDF808C0 		str	ip, [sp, #8]
 1898 004e D7F828C0 		ldr	ip, [r7, #40]
 1899 0052 CDF80CC0 		str	ip, [sp, #12]
 1900 0056 FFF7FEFF 		bl	Str_FmtNbr_Int32
 1901 005a 0346     		mov	r3, r0
 1902 005c FB60     		str	r3, [r7, #12]
2298:C:\Micrium\Software\uC-LIB\lib_str.c ****                                             nbr_dig,
2299:C:\Micrium\Software\uC-LIB\lib_str.c ****                                             nbr_base,
2300:C:\Micrium\Software\uC-LIB\lib_str.c ****                                             nbr_neg,
2301:C:\Micrium\Software\uC-LIB\lib_str.c ****                                             lead_char,
2302:C:\Micrium\Software\uC-LIB\lib_str.c ****                                             lower_case,
2303:C:\Micrium\Software\uC-LIB\lib_str.c ****                                             nul,
2304:C:\Micrium\Software\uC-LIB\lib_str.c ****                                             pstr);
2305:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2306:C:\Micrium\Software\uC-LIB\lib_str.c ****     return (pstr_fmt);
 1903              		.loc 1 2306 0
 1904 005e FB68     		ldr	r3, [r7, #12]
2307:C:\Micrium\Software\uC-LIB\lib_str.c **** }
 1905              		.loc 1 2307 0
 1906 0060 1846     		mov	r0, r3
 1907 0062 07F11807 		add	r7, r7, #24
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 75


 1908 0066 BD46     		mov	sp, r7
 1909 0068 80BD     		pop	{r7, pc}
 1910              		.cfi_endproc
 1911              	.LFE19:
 1912              		.size	Str_FmtNbr_Int32S, .-Str_FmtNbr_Int32S
 1913 006a 00BF     		.section	.text.Str_ParseNbr_Int32U,"ax",%progbits
 1914              		.align	2
 1915              		.global	Str_ParseNbr_Int32U
 1916              		.thumb
 1917              		.thumb_func
 1918              		.type	Str_ParseNbr_Int32U, %function
 1919              	Str_ParseNbr_Int32U:
 1920              	.LFB20:
2308:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2309:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2310:C:\Micrium\Software\uC-LIB\lib_str.c **** /*$PAGE*/
2311:C:\Micrium\Software\uC-LIB\lib_str.c **** /*
2312:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
2313:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                           Str_FmtNbr_32()
2314:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2315:C:\Micrium\Software\uC-LIB\lib_str.c **** * Description : Format number into a multi-digit character string.
2316:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2317:C:\Micrium\Software\uC-LIB\lib_str.c **** * Argument(s) : nbr             Number                         to format (see Note #1).
2318:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2319:C:\Micrium\Software\uC-LIB\lib_str.c **** *               nbr_dig         Number of decimal       digits to format (see Note #2).
2320:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2321:C:\Micrium\Software\uC-LIB\lib_str.c **** *               nbr_dp          Number of decimal point digits to format.
2322:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2323:C:\Micrium\Software\uC-LIB\lib_str.c **** *               lead_char       Prepend leading character (see Note #3) :
2324:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2325:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   '\0'                    Do NOT prepend leading character to str
2326:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                     Printable character          Prepend leading character to str
2327:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   Unprintable character   Format invalid string (see Note #6d).
2328:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2329:C:\Micrium\Software\uC-LIB\lib_str.c **** *               nul             Append terminating NULL-character (see Note #4) :
2330:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2331:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   DEF_NO          Do NOT append terminating NULL-character to str
2332:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   DEF_YES                Append terminating NULL-character to str
2333:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2334:C:\Micrium\Software\uC-LIB\lib_str.c **** *               pstr            Pointer to character array to return formatted number string (see N
2335:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2336:C:\Micrium\Software\uC-LIB\lib_str.c **** * Return(s)   : Pointer to formatted string, if NO error(s) [see Note #6c].
2337:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2338:C:\Micrium\Software\uC-LIB\lib_str.c **** *               Pointer to NULL,             otherwise.
2339:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2340:C:\Micrium\Software\uC-LIB\lib_str.c **** * Caller(s)   : Application.
2341:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2342:C:\Micrium\Software\uC-LIB\lib_str.c **** * Note(s)     : (1) (a) The maximum accuracy for 32-bit floating-point numbers :
2343:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2344:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2345:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                 Maximum Accuracy            log [Internal-Base ^ (Number-Internal
2346:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           32-bit Floating-point Number  =  --------------------------------------
2347:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                                                             log [External-Base]
2348:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2349:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                                             log [2 ^ 24]
2350:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                                         =  --------------
2351:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                                               log [10]
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 76


2352:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2353:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                                         <  7.225  Base-10 Digits
2354:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2355:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               where
2356:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       Internal-Base                   Internal number base of flo
2357:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                                                           point numbers (i.e.  2)
2358:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       External-Base                   External number base of flo
2359:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                                                           point numbers (i.e. 10)
2360:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       Number-Internal-Base-Digits     Number of internal number b
2361:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                                                           significant digits (i.e
2362:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2363:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) Some CPUs' &/or compilers' floating-point implementations MAY further reduc
2364:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       maximum accuracy.
2365:C:\Micrium\Software\uC-LIB\lib_str.c **** *$PAGE*
2366:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (2) (a) If the total number of digits to format ('nbr_dig + nbr_dp') is zero; then 
2367:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       formatting is performed except possible NULL-termination of the string (see
2368:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2369:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           Example :
2370:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2371:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               nbr     = -23456.789
2372:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               nbr_dig =  0
2373:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               nbr_dp  =  0
2374:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2375:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               pstr    = ""                        See Note #7a
2376:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2377:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) (1) If the number of digits to format ('nbr_dig') is less than the number o
2378:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           significant integer digits of the number to format ('nbr'); then an inv
2379:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           string is formatted instead of truncating any significant integer digit
2380:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2381:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               Example :
2382:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2383:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   nbr     = 23456.789
2384:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   nbr_dig = 3
2385:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   nbr_dp  = 2
2386:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2387:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   pstr    = "??????"              See Note #7d
2388:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2389:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) If the number to format ('nbr') is negative but the number of digits to
2390:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           ('nbr_dig') is equal to the number of significant integer digits of the
2391:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           to format ('nbr'); then an invalid string is formatted instead of trunc
2392:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           the negative sign.
2393:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2394:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               Example :
2395:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2396:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   nbr     = -23456.789
2397:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   nbr_dig =  5
2398:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   nbr_dp  =  2
2399:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2400:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   pstr    = "????????"            See Note #7d
2401:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2402:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (3) If the number to format ('nbr') is negative but the number of significa
2403:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           integer digits is zero, & the number of digits to format ('nbr_dig') is
2404:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           but the number of decimal point digits to format ('nbr_dp') is zero; th
2405:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           an invalid string is formatted instead of truncating the negative sign.
2406:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2407:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               Example :
2408:C:\Micrium\Software\uC-LIB\lib_str.c **** *
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 77


2409:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   nbr     = -0.7895
2410:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   nbr_dig =  1
2411:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   nbr_dp  =  0
2412:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2413:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   pstr    = "?"                   See Note #7d
2414:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2415:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (4) (A) If the number to format ('nbr') is negative but the number of signi
2416:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               integer digits is zero, & the number of digits to format ('nbr_dig'
2417:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               zero but the number of decimal point digits to format ('nbr_dp') is
2418:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               zero; then the negative sign immediately prefixes the decimal point
2419:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               with NO decimal digits formatted, NOT even a single decimal digit o
2420:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2421:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   Example :
2422:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2423:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       nbr     = -0.7895
2424:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       nbr_dig =  0
2425:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       nbr_dp  =  2
2426:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2427:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       pstr    = "-.78"
2428:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2429:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (B) If the number to format ('nbr') is positive but the number of signi
2430:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               integer digits is zero, & the number of digits to format ('nbr_dig'
2431:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               zero but the number of decimal point digits to format ('nbr_dp') is
2432:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               zero; then a single decimal digit of '0' prefixes the decimal point
2433:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2434:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               This '0' digit is used whenever a negative sign is not formatted (s
2435:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               Note #2b4A) so that the formatted string's decimal point is not flo
2436:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               but fixed in the string as the 2nd character.
2437:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2438:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   Example :
2439:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2440:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       nbr     =  0.7895
2441:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       nbr_dig =  0
2442:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       nbr_dp  =  2
2443:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2444:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       pstr    = "0.78"
2445:C:\Micrium\Software\uC-LIB\lib_str.c **** *$PAGE*
2446:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (c) (1) If the total number of digits to format ('nbr_dig + nbr_dp') is greater
2447:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2448:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (A) ... the maximum accuracy of the CPU's &/or compiler's 32-bit floati
2449:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               numbers, digits following all significantly-accurate digits of the 
2450:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               format ('nbr') will be inaccurate; ...
2451:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (B) ... the configured maximum accuracy ('LIB_STR_CFG_FP_MAX_NBR_DIG_SI
2452:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               digits or decimal places following all significantly-accurate digit
2453:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               number to format ('nbr') will be replaced & formatted with zeros ('
2454:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2455:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   Example :
2456:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2457:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       nbr                            = 123456789.012345
2458:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       nbr_dig                        = 9
2459:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       nbr_dp                         = 6
2460:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       LIB_STR_CFG_FP_MAX_NBR_DIG_SIG = 7
2461:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2462:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       pstr                           = "123456700.000000"
2463:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2464:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) Therefore, one or more least-significant digit(s) of the number to form
2465:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           MAY be rounded & not necessarily truncated due to the inaccuracy of the
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 78


2466:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           &/or compiler's floating-point implementation.
2467:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2468:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       See also Note #1.
2469:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2470:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (3) Leading character option prepends leading characters prior to the first non-zer
2471:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2472:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (a) (1) Leading character MUST be a printable ASCII character.
2473:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2474:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) (A) Leading character MUST NOT be a base-10 digit, ...
2475:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (B) with the exception of '0'.
2476:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2477:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) (1) The number of leading characters is such that the total number of signi
2478:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           integer digits plus the number of leading characters plus possible nega
2479:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           sign character is equal to the requested number of integer digits to fo
2480:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           ('nbr_dig').
2481:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2482:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               Examples :
2483:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2484:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   nbr       = 23456.789
2485:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   nbr_dig   = 7
2486:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   nbr_dp    = 2
2487:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   lead_char = ' '
2488:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2489:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   pstr      = "  23456.78"
2490:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2491:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2492:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   nbr       = -23456.789
2493:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   nbr_dig   =  7
2494:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   nbr_dp    =  2
2495:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   lead_char = ' '
2496:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2497:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   pstr      = " -23456.78"
2498:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2499:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) (A) If the number to format ('nbr') is negative AND the leading charact
2500:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               ('lead_char') is     a '0' digit; then the negative sign character 
2501:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               prefixes all leading characters prior to the formatted number.
2502:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2503:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   Example :
2504:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2505:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       nbr       = -23456.789
2506:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       nbr_dig   =  8
2507:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       nbr_dp    =  2
2508:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       lead_char = '0'
2509:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2510:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       pstr      = "-0023456.78"
2511:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2512:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (B) If the number to format ('nbr') is negative AND the leading charact
2513:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               ('lead_char') is NOT a '0' digit; then the negative sign character 
2514:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               immediately prefixes the most significant digit of the formatted nu
2515:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2516:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   Examples :
2517:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2518:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       nbr       = -23456.789
2519:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       nbr_dig   =  8
2520:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       nbr_dp    =  2
2521:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       lead_char = '#'
2522:C:\Micrium\Software\uC-LIB\lib_str.c **** *
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 79


2523:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       pstr      = "##-23456.78"
2524:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2525:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (c) (1) If the integer value of the number to format is zero & ...
2526:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) ... the number of digits to format is greater than one ...
2527:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (3) ... OR  the number is NOT negative,                    ...
2528:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (4) ... but NO leading character available;                ...
2529:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (5) ... then one digit of '0' value is formatted.
2530:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2531:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           This is NOT a leading character; but a single integer digit of '0' valu
2532:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2533:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       See also Note #2b4B.
2534:C:\Micrium\Software\uC-LIB\lib_str.c **** *$PAGE*
2535:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (4) (a) NULL-character terminate option DISABLED prevents overwriting previous char
2536:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       array formatting.
2537:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2538:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) WARNING: Unless 'pstr' character array is pre-/post-terminated, NULL-charac
2539:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       terminate option DISABLED will cause character string run-on.
2540:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2541:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (5) (a) Format buffer size NOT validated; buffer overruns MUST be prevented by call
2542:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2543:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) To prevent character buffer overrun :
2544:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2545:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           Character array size MUST be  >=  ('nbr_dig'          +
2546:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                                              'nbr_dp'           +
2547:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                                               1 negative sign   +
2548:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                                               1 decimal point   +
2549:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                                               1 'NUL' terminator)  characters
2550:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2551:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (6) String format terminates when :
2552:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2553:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (a) Format string pointer is passed a NULL pointer.
2554:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) No      string formatted;                NULL pointer returned.
2555:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2556:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) Total number of digits to format ('nbr_dig + nbr_dp') is zero.
2557:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) NULL    string formatted (see Note #7a); NULL pointer returned.
2558:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2559:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (c) Number of digits to format ('nbr_dig') is less than number of significant 
2560:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           integer digits of the number to format ('nbr'), including possible 
2561:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           negative sign.
2562:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) Invalid string formatted (see Note #7);  NULL pointer returned.
2563:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2564:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (d) Lead character is NOT a valid, printable character (see Note #3a).
2565:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) Invalid string formatted (see Note #7);  NULL pointer returned.
2566:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2567:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (e) Number successfully formatted into character string array.
2568:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2569:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (7) For any unsuccessful string format or error(s), an invalid string of question m
2570:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   ('?') will be formatted, where the number of question marks is determined by th
2571:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   number of digits ('nbr_dig') & number of decimal point digits ('nbr_dp') to for
2572:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2573:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                           {  (a)    0 (NULL string)          ,  if 'nbr_dig' = 0 
2574:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                           {                                        'nbr_dp'  = 0
2575:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                           {
2576:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                           {  (b)   'nbr_dig'                 ,  if 'nbr_dig' > 0 
2577:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                           {                                        'nbr_dp'  = 0
2578:C:\Micrium\Software\uC-LIB\lib_str.c **** *                      Invalid string's     {
2579:C:\Micrium\Software\uC-LIB\lib_str.c **** *                          number of     =  {  (c)  ['nbr_dp'               +  ,  if 'nbr_dig' = 0 
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 80


2580:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       question marks      {         1 (for decimal point) +        'nbr_dp'  > 0
2581:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                           {         1 (for negative sign) ]
2582:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                           {
2583:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                           {  (d)  ['nbr_dig'              +  ,  if 'nbr_dig' > 0 
2584:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                           {        'nbr_dp'               +        'nbr_dp'  > 0
2585:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                           {         1 (for decimal point) ]
2586:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2587:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
2588:C:\Micrium\Software\uC-LIB\lib_str.c **** */
2589:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2590:C:\Micrium\Software\uC-LIB\lib_str.c **** #if (LIB_STR_CFG_FP_EN == DEF_ENABLED)
2591:C:\Micrium\Software\uC-LIB\lib_str.c **** CPU_CHAR  *Str_FmtNbr_32 (CPU_FP32      nbr,
2592:C:\Micrium\Software\uC-LIB\lib_str.c ****                           CPU_INT08U    nbr_dig,
2593:C:\Micrium\Software\uC-LIB\lib_str.c ****                           CPU_INT08U    nbr_dp,
2594:C:\Micrium\Software\uC-LIB\lib_str.c ****                           CPU_CHAR      lead_char,
2595:C:\Micrium\Software\uC-LIB\lib_str.c ****                           CPU_BOOLEAN   nul,
2596:C:\Micrium\Software\uC-LIB\lib_str.c ****                           CPU_CHAR     *pstr)
2597:C:\Micrium\Software\uC-LIB\lib_str.c **** {
2598:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_CHAR     *pstr_fmt;
2599:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_DATA      i;
2600:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_FP32      nbr_fmt;
2601:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_FP32      nbr_log;
2602:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_INT32U    nbr_shiftd;
2603:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_INT16U    nbr_dig_max;
2604:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_INT16U    nbr_dig_sig;
2605:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_INT08U    nbr_neg_sign;
2606:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_INT08U    dig_val;
2607:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_FP32      dig_exp;
2608:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_FP32      dp_exp;
2609:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_BOOLEAN   lead_char_dig;
2610:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_BOOLEAN   lead_char_fmtd;
2611:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_BOOLEAN   lead_char_0;
2612:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_BOOLEAN   fmt_invalid;
2613:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_BOOLEAN   print_char;
2614:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_BOOLEAN   nbr_neg;
2615:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_BOOLEAN   nbr_neg_fmtd;
2616:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2617:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2618:C:\Micrium\Software\uC-LIB\lib_str.c **** /*$PAGE*/
2619:C:\Micrium\Software\uC-LIB\lib_str.c ****                                                                 /* ---------------- VALIDATE FMT AR
2620:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (pstr == (CPU_CHAR *)0) {                                /* Rtn NULL if str ptr NULL (see No
2621:C:\Micrium\Software\uC-LIB\lib_str.c ****         return ((CPU_CHAR *)0);
2622:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
2623:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2624:C:\Micrium\Software\uC-LIB\lib_str.c ****     fmt_invalid = DEF_NO;
2625:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2626:C:\Micrium\Software\uC-LIB\lib_str.c ****     if ((nbr_dig < 1) && (nbr_dp < 1)) {                        /* If nbr digs/dps = 0, ...        
2627:C:\Micrium\Software\uC-LIB\lib_str.c ****         fmt_invalid = DEF_YES;                                  /* ... fmt invalid str (see Note #6
2628:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
2629:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2630:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (lead_char != (CPU_CHAR)'\0') {
2631:C:\Micrium\Software\uC-LIB\lib_str.c ****         print_char =  ASCII_IsPrint(lead_char);
2632:C:\Micrium\Software\uC-LIB\lib_str.c ****         if (print_char != DEF_YES) {                            /* If lead char non-printable  (see
2633:C:\Micrium\Software\uC-LIB\lib_str.c ****             fmt_invalid = DEF_YES;                              /* ... fmt invalid str         (see
2634:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2635:C:\Micrium\Software\uC-LIB\lib_str.c ****         } else if (lead_char != '0') {                          /* Chk lead char for non-0 dig.    
2636:C:\Micrium\Software\uC-LIB\lib_str.c ****             lead_char_dig = ASCII_IsDig(lead_char);
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 81


2637:C:\Micrium\Software\uC-LIB\lib_str.c ****             if (lead_char_dig == DEF_YES) {                     /* If  lead char     non-0 dig (see
2638:C:\Micrium\Software\uC-LIB\lib_str.c ****                 fmt_invalid = DEF_YES;                          /* ... fmt invalid str         (see
2639:C:\Micrium\Software\uC-LIB\lib_str.c ****             }
2640:C:\Micrium\Software\uC-LIB\lib_str.c ****         }
2641:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
2642:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2643:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2644:C:\Micrium\Software\uC-LIB\lib_str.c ****                                                                 /* ----------------- PREPARE NBR FM
2645:C:\Micrium\Software\uC-LIB\lib_str.c ****     pstr_fmt = pstr;
2646:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2647:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (fmt_invalid == DEF_NO) {
2648:C:\Micrium\Software\uC-LIB\lib_str.c ****         if (nbr < 0.0f) {                                       /* If nbr neg, ...                 
2649:C:\Micrium\Software\uC-LIB\lib_str.c ****             nbr_fmt      = -nbr;                                /* ... negate nbr.                 
2650:C:\Micrium\Software\uC-LIB\lib_str.c ****             nbr_neg_sign =  1u;
2651:C:\Micrium\Software\uC-LIB\lib_str.c ****             nbr_neg      =  DEF_YES;
2652:C:\Micrium\Software\uC-LIB\lib_str.c ****         } else {
2653:C:\Micrium\Software\uC-LIB\lib_str.c ****             nbr_fmt      =  nbr;
2654:C:\Micrium\Software\uC-LIB\lib_str.c ****             nbr_neg_sign =  0u;
2655:C:\Micrium\Software\uC-LIB\lib_str.c ****             nbr_neg      =  DEF_NO;
2656:C:\Micrium\Software\uC-LIB\lib_str.c ****         }
2657:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2658:C:\Micrium\Software\uC-LIB\lib_str.c ****         nbr_log     = nbr_fmt;
2659:C:\Micrium\Software\uC-LIB\lib_str.c ****         nbr_dig_max = 0u;
2660:C:\Micrium\Software\uC-LIB\lib_str.c ****         while (nbr_log >= 1.0f) {                               /* While base-10 digs avail, ...   
2661:C:\Micrium\Software\uC-LIB\lib_str.c ****             nbr_dig_max++;                                      /* ... calc max nbr digs.          
2662:C:\Micrium\Software\uC-LIB\lib_str.c ****             nbr_log /= 10.0f;
2663:C:\Micrium\Software\uC-LIB\lib_str.c ****         }
2664:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2665:C:\Micrium\Software\uC-LIB\lib_str.c ****         if (((nbr_dig >= (nbr_dig_max + nbr_neg_sign)) ||       /* If req'd nbr digs >= (max nbr di
2666:C:\Micrium\Software\uC-LIB\lib_str.c ****              (nbr_dig_max < 1))                        &&       /* .. or NO nbr digs,              
2667:C:\Micrium\Software\uC-LIB\lib_str.c ****             ((nbr_dig     > 1) ||                               /* .. but NOT [(req'd nbr dig = 1) 
2668:C:\Micrium\Software\uC-LIB\lib_str.c ****              (nbr_dp      > 0) ||                               /* ..          (req'd nbr dp  = 0) 
2669:C:\Micrium\Software\uC-LIB\lib_str.c ****              (nbr_neg == DEF_NO))) {                            /* ..          (      nbr neg    )]
2670:C:\Micrium\Software\uC-LIB\lib_str.c ****                                                                 /* .. prepare nbr digs to fmt.     
2671:C:\Micrium\Software\uC-LIB\lib_str.c ****             dig_exp = 1.0f;
2672:C:\Micrium\Software\uC-LIB\lib_str.c ****             for (i = 1u; i < nbr_dig; i++) {
2673:C:\Micrium\Software\uC-LIB\lib_str.c ****                 dig_exp *= 10.0f;
2674:C:\Micrium\Software\uC-LIB\lib_str.c ****             }
2675:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2676:C:\Micrium\Software\uC-LIB\lib_str.c ****             nbr_neg_fmtd   =  DEF_NO;
2677:C:\Micrium\Software\uC-LIB\lib_str.c ****             nbr_dig_sig    =  0u;
2678:C:\Micrium\Software\uC-LIB\lib_str.c ****             lead_char_fmtd =  DEF_NO;
2679:C:\Micrium\Software\uC-LIB\lib_str.c ****             lead_char_0    = (lead_char == '0')                 /* Chk if lead char a '0' dig (see 
2680:C:\Micrium\Software\uC-LIB\lib_str.c ****                            ?  DEF_YES : DEF_NO;
2681:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2682:C:\Micrium\Software\uC-LIB\lib_str.c ****         } else {                                                /* Else if nbr trunc'd, ...        
2683:C:\Micrium\Software\uC-LIB\lib_str.c ****             fmt_invalid = DEF_YES;                              /* ... fmt invalid str (see Note #6
2684:C:\Micrium\Software\uC-LIB\lib_str.c ****         }
2685:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
2686:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2687:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2688:C:\Micrium\Software\uC-LIB\lib_str.c **** /*$PAGE*/
2689:C:\Micrium\Software\uC-LIB\lib_str.c ****                                                                 /* ------------------- FMT NBR STR 
2690:C:\Micrium\Software\uC-LIB\lib_str.c ****     for (i = nbr_dig; i > 0; i--) {                             /* Fmt str for desired nbr digs :  
2691:C:\Micrium\Software\uC-LIB\lib_str.c ****         if (fmt_invalid == DEF_NO) {
2692:C:\Micrium\Software\uC-LIB\lib_str.c ****             if (nbr_dig_sig < LIB_STR_CFG_FP_MAX_NBR_DIG_SIG) { /* If nbr sig digs < max, fmt str d
2693:C:\Micrium\Software\uC-LIB\lib_str.c ****                 nbr_shiftd = (CPU_INT32U)(nbr_fmt / dig_exp);
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 82


2694:C:\Micrium\Software\uC-LIB\lib_str.c ****                 if ((nbr_shiftd > 0) ||                         /* If shifted nbr > 0              
2695:C:\Micrium\Software\uC-LIB\lib_str.c ****                     (i == 1u)) {                                /* ... OR on one's dig to fmt (see 
2696:C:\Micrium\Software\uC-LIB\lib_str.c ****                                                                 /* ... calc & fmt dig val;         
2697:C:\Micrium\Software\uC-LIB\lib_str.c ****                     if ((nbr_neg      == DEF_YES) &&            /* If  nbr neg                     
2698:C:\Micrium\Software\uC-LIB\lib_str.c ****                         (nbr_neg_fmtd == DEF_NO )) {            /* ... but neg sign NOT yet fmt'd; 
2699:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2700:C:\Micrium\Software\uC-LIB\lib_str.c ****                         if (lead_char_fmtd == DEF_YES) {        /* ... & if lead char(s) fmt'd,    
2701:C:\Micrium\Software\uC-LIB\lib_str.c ****                             pstr_fmt--;                         /* ... replace last lead char w/   
2702:C:\Micrium\Software\uC-LIB\lib_str.c ****                         }
2703:C:\Micrium\Software\uC-LIB\lib_str.c ****                        *pstr_fmt++   = '-';                     /* ... prepend neg sign (see Notes 
2704:C:\Micrium\Software\uC-LIB\lib_str.c ****                         nbr_neg_fmtd = DEF_YES;
2705:C:\Micrium\Software\uC-LIB\lib_str.c ****                     }
2706:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2707:C:\Micrium\Software\uC-LIB\lib_str.c ****                     if (nbr_shiftd > 0) {                       /* If shifted nbr > 0,        ...  
2708:C:\Micrium\Software\uC-LIB\lib_str.c ****                         dig_val    = (CPU_INT08U)(nbr_shiftd % 10u);
2709:C:\Micrium\Software\uC-LIB\lib_str.c ****                        *pstr_fmt++ = (CPU_CHAR  )(dig_val    + '0');
2710:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2711:C:\Micrium\Software\uC-LIB\lib_str.c ****                         nbr_dig_sig++;                          /* ... inc nbr sig digs;      ...  
2712:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2713:C:\Micrium\Software\uC-LIB\lib_str.c ****                     } else if ((nbr_dig > 1) ||                 /* ... else if req'd digs > 1 ...  
2714:C:\Micrium\Software\uC-LIB\lib_str.c ****                                (nbr_neg == DEF_NO)) {           /* ... or non-neg nbr,        ...  
2715:C:\Micrium\Software\uC-LIB\lib_str.c ****                        *pstr_fmt++ = '0';                       /* ... fmt one '0' char (see Note #
2716:C:\Micrium\Software\uC-LIB\lib_str.c ****                     }
2717:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2718:C:\Micrium\Software\uC-LIB\lib_str.c ****                 } else if ((nbr_neg      == DEF_YES) &&         /* ... else if nbr neg             
2719:C:\Micrium\Software\uC-LIB\lib_str.c ****                            (lead_char_0  == DEF_YES) &&         /* ... & lead char a '0' dig       
2720:C:\Micrium\Software\uC-LIB\lib_str.c ****                            (nbr_neg_fmtd == DEF_NO )) {         /* ... but neg sign NOT yet fmt'd, 
2721:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2722:C:\Micrium\Software\uC-LIB\lib_str.c ****                    *pstr_fmt++   = '-';                         /* ... prepend neg sign (see Note #
2723:C:\Micrium\Software\uC-LIB\lib_str.c ****                     nbr_neg_fmtd = DEF_YES;
2724:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2725:C:\Micrium\Software\uC-LIB\lib_str.c ****                 } else if (lead_char != (CPU_CHAR)'\0') {       /* ... else if avail,              
2726:C:\Micrium\Software\uC-LIB\lib_str.c ****                    *pstr_fmt++     = lead_char;                 /* ... fmt lead char.              
2727:C:\Micrium\Software\uC-LIB\lib_str.c ****                     lead_char_fmtd = DEF_YES;
2728:C:\Micrium\Software\uC-LIB\lib_str.c ****                 }
2729:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2730:C:\Micrium\Software\uC-LIB\lib_str.c ****                 dig_exp /= 10.0f;                               /* Shift to next least-sig dig.    
2731:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2732:C:\Micrium\Software\uC-LIB\lib_str.c ****             } else {                                            /* ... else append non-sig 0's (see
2733:C:\Micrium\Software\uC-LIB\lib_str.c ****                *pstr_fmt++ = '0';
2734:C:\Micrium\Software\uC-LIB\lib_str.c ****             }
2735:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2736:C:\Micrium\Software\uC-LIB\lib_str.c ****         } else {                                                /* Else fmt '?' for invalid str (se
2737:C:\Micrium\Software\uC-LIB\lib_str.c ****            *pstr_fmt++ = '?';
2738:C:\Micrium\Software\uC-LIB\lib_str.c ****         }
2739:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
2740:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2741:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2742:C:\Micrium\Software\uC-LIB\lib_str.c **** /*$PAGE*/
2743:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (nbr_dp > 0) {                                           /* Fmt str for desired nbr dp :    
2744:C:\Micrium\Software\uC-LIB\lib_str.c ****         if (nbr_dig < 1) {                                      /* If NO digs fmt'd;               
2745:C:\Micrium\Software\uC-LIB\lib_str.c ****             if (fmt_invalid == DEF_NO) {                        /* ... nbr fmt valid,              
2746:C:\Micrium\Software\uC-LIB\lib_str.c ****                 if ((nbr_neg      == DEF_YES) &&                /* ... nbr neg                     
2747:C:\Micrium\Software\uC-LIB\lib_str.c ****                     (nbr_neg_fmtd == DEF_NO )) {                /* ... but neg sign NOT yet fmt'd, 
2748:C:\Micrium\Software\uC-LIB\lib_str.c ****                     *pstr_fmt++ = '-';                          /* ... prepend neg sign (see Notes 
2749:C:\Micrium\Software\uC-LIB\lib_str.c ****                 } else {                                        /* ... else prepend 1 dig of '0' (s
2750:C:\Micrium\Software\uC-LIB\lib_str.c ****                     *pstr_fmt++ = '0';
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 83


2751:C:\Micrium\Software\uC-LIB\lib_str.c ****                 }
2752:C:\Micrium\Software\uC-LIB\lib_str.c ****             } else {                                            /* ... else fmt '?' for invalid str
2753:C:\Micrium\Software\uC-LIB\lib_str.c ****                 *pstr_fmt++ = '?';
2754:C:\Micrium\Software\uC-LIB\lib_str.c ****             }
2755:C:\Micrium\Software\uC-LIB\lib_str.c ****         }
2756:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2757:C:\Micrium\Software\uC-LIB\lib_str.c ****         if (fmt_invalid == DEF_NO) {                            /* If nbr fmt valid, ...           
2758:C:\Micrium\Software\uC-LIB\lib_str.c ****            *pstr_fmt++ = '.';                                   /* ... append dp prior to dp conver
2759:C:\Micrium\Software\uC-LIB\lib_str.c ****         } else {                                                /* Else fmt '?' for invalid str (se
2760:C:\Micrium\Software\uC-LIB\lib_str.c ****            *pstr_fmt++ = '?';
2761:C:\Micrium\Software\uC-LIB\lib_str.c ****         }
2762:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2763:C:\Micrium\Software\uC-LIB\lib_str.c ****         dp_exp = 10.0f;
2764:C:\Micrium\Software\uC-LIB\lib_str.c ****         for (i = 0u; i < nbr_dp; i++) {
2765:C:\Micrium\Software\uC-LIB\lib_str.c ****             if (fmt_invalid == DEF_NO) {
2766:C:\Micrium\Software\uC-LIB\lib_str.c ****                                                                 /* If nbr sig digs < max, fmt str d
2767:C:\Micrium\Software\uC-LIB\lib_str.c ****                 if (nbr_dig_sig <  LIB_STR_CFG_FP_MAX_NBR_DIG_SIG) {
2768:C:\Micrium\Software\uC-LIB\lib_str.c ****                     nbr_shiftd  = (CPU_INT32U)(nbr_fmt * dp_exp);
2769:C:\Micrium\Software\uC-LIB\lib_str.c ****                     dig_val     = (CPU_INT32U)(nbr_shiftd % 10u);
2770:C:\Micrium\Software\uC-LIB\lib_str.c ****                    *pstr_fmt++  = (CPU_CHAR  )(dig_val    + '0');
2771:C:\Micrium\Software\uC-LIB\lib_str.c ****                     dp_exp     *=  10.0f;                       /* Shift to next least-sig dp.     
2772:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2773:C:\Micrium\Software\uC-LIB\lib_str.c ****                     if ((nbr_shiftd  > 0) ||                    /* If shifted nbr > 0              
2774:C:\Micrium\Software\uC-LIB\lib_str.c ****                         (nbr_dig_sig > 0)) {                    /* ... OR  > 0 sig digs already fmt
2775:C:\Micrium\Software\uC-LIB\lib_str.c ****                          nbr_dig_sig++;                         /* ... inc nbr sig digs.           
2776:C:\Micrium\Software\uC-LIB\lib_str.c ****                     }
2777:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2778:C:\Micrium\Software\uC-LIB\lib_str.c ****                 } else {                                        /* ... else append non-sig 0's (see
2779:C:\Micrium\Software\uC-LIB\lib_str.c ****                    *pstr_fmt++ = '0';
2780:C:\Micrium\Software\uC-LIB\lib_str.c ****                 }
2781:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2782:C:\Micrium\Software\uC-LIB\lib_str.c ****             } else {                                            /* Else fmt '?' for invalid str (se
2783:C:\Micrium\Software\uC-LIB\lib_str.c ****                *pstr_fmt++ = '?';
2784:C:\Micrium\Software\uC-LIB\lib_str.c ****             }
2785:C:\Micrium\Software\uC-LIB\lib_str.c ****         }
2786:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
2787:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2788:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2789:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (nul != DEF_NO) {                                        /* If NOT DISABLED, append NULL cha
2790:C:\Micrium\Software\uC-LIB\lib_str.c ****        *pstr_fmt = (CPU_CHAR)'\0';
2791:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
2792:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2793:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2794:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (fmt_invalid != DEF_NO) {                                /* Rtn NULL for invalid str fmt (se
2795:C:\Micrium\Software\uC-LIB\lib_str.c ****         return ((CPU_CHAR *)0);
2796:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
2797:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2798:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2799:C:\Micrium\Software\uC-LIB\lib_str.c ****     return (pstr);                                              /* Rtn ptr to fmt'd str (see Note #
2800:C:\Micrium\Software\uC-LIB\lib_str.c **** }
2801:C:\Micrium\Software\uC-LIB\lib_str.c **** #endif
2802:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2803:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2804:C:\Micrium\Software\uC-LIB\lib_str.c **** /*$PAGE*/
2805:C:\Micrium\Software\uC-LIB\lib_str.c **** /*
2806:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
2807:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                        Str_ParseNbr_Int32U()
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 84


2808:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2809:C:\Micrium\Software\uC-LIB\lib_str.c **** * Description : Parse 32-bit unsigned integer from string.
2810:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2811:C:\Micrium\Software\uC-LIB\lib_str.c **** * Argument(s) : pstr        Pointer to string (see Notes #1 & #2a).
2812:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2813:C:\Micrium\Software\uC-LIB\lib_str.c **** *               pstr_next   Optional pointer to a variable to ... :
2814:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2815:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               (a) Return a pointer to first character following the integer strin
2816:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       if NO error(s) [see Note #2a2B2];
2817:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               (b) Return a pointer to 'pstr',
2818:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       otherwise      (see Note #2a2A2).
2819:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2820:C:\Micrium\Software\uC-LIB\lib_str.c **** *               nbr_base    Base of number to parse (see Notes #2a1B1 & #2a2B1).
2821:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2822:C:\Micrium\Software\uC-LIB\lib_str.c **** * Return(s)   : Parsed integer,      if integer parsed with NO overflow   (see Note #2a3A).
2823:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2824:C:\Micrium\Software\uC-LIB\lib_str.c **** *               DEF_INT_32U_MAX_VAL, if integer parsed but     overflowed (see Note #2a3A1).
2825:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2826:C:\Micrium\Software\uC-LIB\lib_str.c **** *               0,                   otherwise                            (see Note #2a3B).
2827:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2828:C:\Micrium\Software\uC-LIB\lib_str.c **** * Caller(s)   : Application.
2829:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2830:C:\Micrium\Software\uC-LIB\lib_str.c **** * Note(s)     : (1) String buffer NOT modified.
2831:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2832:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strtoul() : DESCRIPTION' states tha
2833:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       functions shall convert the initial portion of the string pointed to by 'st
2834:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       to a type unsigned long ... representation" :
2835:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2836:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) "First, they decompose the input string into three parts" :
2837:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2838:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (A) "An initial, possibly empty, sequence of white-space characters [as
2839:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                by isspace()]."
2840:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2841:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               (1) "The subject sequence is defined as the longest initial subsequ
2842:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                    input string, starting with the first non-white-space characte
2843:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                    the expected form.  The subject sequence shall contain no char
2844:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                    input string is empty or consists entirely of white-space char
2845:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2846:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (B) (1) "A subject sequence interpreted as an integer represented in so
2847:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                    determined by the value of 'base' ('nbr_base')" :
2848:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2849:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   (a) "If the value of 'base' ('nbr_base') is 0, the expected for
2850:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                        subject sequence is that of a decimal constant, octal cons
2851:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                        hexadecimal constant" :
2852:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2853:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       (1) "A decimal constant begins with a non-zero digit, and c
2854:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                            sequence of decimal digits."
2855:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2856:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       (2) "An octal constant consists of the prefix '0' optionall
2857:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                            a sequence of the digits '0' to '7' only."
2858:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2859:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       (3) "A hexadecimal constant consists of the prefix '0x' or 
2860:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                            by a sequence of the decimal digits and letters 'a' (o
2861:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                            (or 'F') with values 10 to 15 respectively."
2862:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2863:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   (b) "If the value of 'base' ('nbr_base') is between 2 and 36, t
2864:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                        of the subject sequence is a sequence of letters and digit
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 85


2865:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                        an integer with the radix specified by 'base' ('nbr_base')
2866:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2867:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       (1) (A) "The letters from 'a' (or 'A') to 'z' (or 'Z') incl
2868:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                                ascribed the values 10 to 35"; ...
2869:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                           (B) "only letters whose ascribed values are less than t
2870:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                                are permitted."
2871:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2872:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       (2) (A) "If the value of 'base' ('nbr_base') is 16, the cha
2873:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                                '0X' may optionally precede the sequence of letter
2874:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2875:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                           (B) Although NO specification states that "if the value
2876:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                               ('nbr_base') is" 8, the '0' character "may optional
2877:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                               the sequence of letters and digits"; it seems reaso
2878:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                               allow the '0' character to be optionally parsed.
2879:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2880:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               (2) "A subject sequence .... may be preceded by a '+' or '-' sign."
2881:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2882:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   (a) However, it does NOT seem reasonable to parse & convert a n
2883:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       integer string into an unsigned integer.
2884:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2885:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (C) (1) (a) "A final string of one or more unrecognized characters,"  .
2886:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   (b) "including the terminating null byte of the input string" .
2887:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               (2) "other than a sign or a permissible letter or digit."
2888:C:\Micrium\Software\uC-LIB\lib_str.c **** *$PAGE*
2889:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) Second, "they shall attempt to convert the subject sequence to an unsig
2890:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2891:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (A) "If the subject sequence is empty or does not have the expected for
2892:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2893:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               (1) "no conversion [is] performed"; ...
2894:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               (2) "the value of 'str' ('pstr') [is] stored in the object pointed 
2895:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                    ('pstr_next'), provided that 'endptr' ('pstr_next') is not a n
2896:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2897:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (B) "If the subject sequence has the expected form" :
2898:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2899:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               (1) (a) "and the value of 'base' ('nbr_base') is 0, the sequence of
2900:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                        starting with the first digit shall be interpreted as an i
2901:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2902:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   (b) "and the value of 'base' ('nbr_base') is between 2 and 36, 
2903:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                        used as the base for conversion, ascribing to each letter 
2904:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                        given above" (see Note #2a1B1b1A).
2905:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2906:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               (2) "A pointer to the final string shall be stored in the object po
2907:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   'endptr' ('pstr_next'), provided that 'endptr' ('pstr_next') is
2908:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   pointer."
2909:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2910:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (3) Lastly, IEEE Std 1003.1, 2004 Edition, Section 'strtoul() : RETURN VALU
2911:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2912:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (A) "Upon successful completion, these functions shall return the conve
2913:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               (1) "If the correct value is outside the range of representable val
2914:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                    ... shall be returned."
2915:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2916:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (B) "If no conversion could be performed, 0 shall be returned."
2917:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2918:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) (1) IEEE Std 1003.1, 2004 Edition, Section 'strtoul() : ERRORS' states that
2919:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           shall fail if" :
2920:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2921:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (A) "[EINVAL] - The value of 'base' ('nbr_base') is not supported."
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 86


2922:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2923:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (B) "[ERANGE] - The value to be returned is not representable."
2924:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2925:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) IEEE Std 1003.1, 2004 Edition, Section 'strtoul() : ERRORS' states that
2926:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           may fail if" :
2927:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2928:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (A) "[EINVAL] - No conversion could be performed."
2929:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2930:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (3) Return integer value & next string pointer should be used to diagnose parse suc
2931:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2932:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (a) Valid parse string integer :
2933:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2934:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           pstr      = "     ABCDE xyz"
2935:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           nbr_base  = 16
2936:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2937:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           nbr       = 703710
2938:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           pstr_next = " xyz"
2939:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2940:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2941:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) Invalid parse string integer :
2942:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2943:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           pstr      = "     ABCDE"
2944:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           nbr_base  = 10
2945:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2946:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           nbr       =  0
2947:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           pstr_next = pstr = "     ABCDE"
2948:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2949:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2950:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (c) Valid hexadecimal parse string integer :
2951:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2952:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           pstr      = "     0xGABCDE"
2953:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           nbr_base  = 16
2954:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2955:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           nbr       =  0
2956:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           pstr_next = "xGABCDE"
2957:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2958:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2959:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (d) Valid decimal parse string integer ('0x' prefix ignored
2960:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               following invalid hexadecimal characters) :
2961:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2962:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           pstr      = "     0xGABCDE"
2963:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           nbr_base  =  0
2964:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2965:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           nbr       =  0
2966:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           pstr_next = "xGABCDE"
2967:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2968:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2969:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (e) Valid decimal parse string integer ('0'  prefix ignored
2970:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               following invalid octal       characters) :
2971:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2972:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           pstr      = "     0GABCDE"
2973:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           nbr_base  =  0
2974:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2975:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           nbr       =  0
2976:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           pstr_next = "GABCDE"
2977:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2978:C:\Micrium\Software\uC-LIB\lib_str.c **** *$PAGE*
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 87


2979:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (f) Parse string integer overflow :
2980:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2981:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           pstr      = "   12345678901234567890*123456"
2982:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           nbr_base  = 10
2983:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2984:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           nbr       = DEF_INT_32U_MAX_VAL
2985:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           pstr_next = "*123456"
2986:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2987:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2988:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (g) Invalid negative unsigned parse string :
2989:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2990:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           pstr      = "  -12345678901234567890*123456"
2991:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           nbr_base  = 10
2992:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2993:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           nbr       = 0
2994:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           pstr_next = pstr = "  -12345678901234567890*123456"
2995:C:\Micrium\Software\uC-LIB\lib_str.c **** *
2996:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
2997:C:\Micrium\Software\uC-LIB\lib_str.c **** */
2998:C:\Micrium\Software\uC-LIB\lib_str.c **** 
2999:C:\Micrium\Software\uC-LIB\lib_str.c **** CPU_INT32U  Str_ParseNbr_Int32U (const  CPU_CHAR     *pstr,
3000:C:\Micrium\Software\uC-LIB\lib_str.c ****                                         CPU_CHAR    **pstr_next,
3001:C:\Micrium\Software\uC-LIB\lib_str.c ****                                         CPU_INT08U    nbr_base)
3002:C:\Micrium\Software\uC-LIB\lib_str.c **** {
 1921              		.loc 1 3002 0
 1922              		.cfi_startproc
 1923              		@ args = 0, pretend = 0, frame = 24
 1924              		@ frame_needed = 1, uses_anonymous_args = 0
 1925 0000 80B5     		push	{r7, lr}
 1926              	.LCFI60:
 1927              		.cfi_def_cfa_offset 8
 1928 0002 88B0     		sub	sp, sp, #32
 1929              	.LCFI61:
 1930              		.cfi_def_cfa_offset 40
 1931 0004 02AF     		add	r7, sp, #8
 1932              		.cfi_offset 14, -4
 1933              		.cfi_offset 7, -8
 1934              	.LCFI62:
 1935              		.cfi_def_cfa 7, 32
 1936 0006 F860     		str	r0, [r7, #12]
 1937 0008 B960     		str	r1, [r7, #8]
 1938 000a 1346     		mov	r3, r2
 1939 000c FB71     		strb	r3, [r7, #7]
3003:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_INT32U  nbr;
3004:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3005:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3006:C:\Micrium\Software\uC-LIB\lib_str.c ****     nbr = Str_ParseNbr_Int32(               pstr,               /* Parse/convert str ...           
 1940              		.loc 1 3006 0
 1941 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1942 0010 4FF00002 		mov	r2, #0
 1943 0014 0092     		str	r2, [sp, #0]
 1944 0016 F868     		ldr	r0, [r7, #12]
 1945 0018 B968     		ldr	r1, [r7, #8]
 1946 001a 1A46     		mov	r2, r3
 1947 001c 4FF00003 		mov	r3, #0
 1948 0020 FFF7FEFF 		bl	Str_ParseNbr_Int32
 1949 0024 0346     		mov	r3, r0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 88


 1950 0026 7B61     		str	r3, [r7, #20]
3007:C:\Micrium\Software\uC-LIB\lib_str.c ****                                             pstr_next,
3008:C:\Micrium\Software\uC-LIB\lib_str.c ****                                             nbr_base,
3009:C:\Micrium\Software\uC-LIB\lib_str.c ****                                             DEF_NO,             /* ... as unsigned int (see Note #2
3010:C:\Micrium\Software\uC-LIB\lib_str.c ****                              (CPU_BOOLEAN *)0);
3011:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3012:C:\Micrium\Software\uC-LIB\lib_str.c ****     return (nbr);
 1951              		.loc 1 3012 0
 1952 0028 7B69     		ldr	r3, [r7, #20]
3013:C:\Micrium\Software\uC-LIB\lib_str.c **** }
 1953              		.loc 1 3013 0
 1954 002a 1846     		mov	r0, r3
 1955 002c 07F11807 		add	r7, r7, #24
 1956 0030 BD46     		mov	sp, r7
 1957 0032 80BD     		pop	{r7, pc}
 1958              		.cfi_endproc
 1959              	.LFE20:
 1960              		.size	Str_ParseNbr_Int32U, .-Str_ParseNbr_Int32U
 1961              		.section	.text.Str_ParseNbr_Int32S,"ax",%progbits
 1962              		.align	2
 1963              		.global	Str_ParseNbr_Int32S
 1964              		.thumb
 1965              		.thumb_func
 1966              		.type	Str_ParseNbr_Int32S, %function
 1967              	Str_ParseNbr_Int32S:
 1968              	.LFB21:
3014:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3015:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3016:C:\Micrium\Software\uC-LIB\lib_str.c **** /*$PAGE*/
3017:C:\Micrium\Software\uC-LIB\lib_str.c **** /*
3018:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
3019:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                        Str_ParseNbr_Int32S()
3020:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3021:C:\Micrium\Software\uC-LIB\lib_str.c **** * Description : Parse 32-bit signed integer from string.
3022:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3023:C:\Micrium\Software\uC-LIB\lib_str.c **** * Argument(s) : pstr        Pointer to string (see Notes #1 & #2a).
3024:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3025:C:\Micrium\Software\uC-LIB\lib_str.c **** *               pstr_next   Optional pointer to a variable to ... :
3026:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3027:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               (a) Return a pointer to first character following the integer strin
3028:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       if NO error(s) [see Note #2a2B2];
3029:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               (b) Return a pointer to 'pstr',
3030:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       otherwise      (see Note #2a2A2).
3031:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3032:C:\Micrium\Software\uC-LIB\lib_str.c **** *               nbr_base    Base of number to parse (see Notes #2a1B1 & #2a2B1).
3033:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3034:C:\Micrium\Software\uC-LIB\lib_str.c **** * Return(s)   : Parsed integer,      if integer parsed with NO over- or underflow (see Note #2a3A).
3035:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3036:C:\Micrium\Software\uC-LIB\lib_str.c **** *               DEF_INT_32S_MIN_VAL, if integer parsed but negatively underflowed (see Note #2a3A1a
3037:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3038:C:\Micrium\Software\uC-LIB\lib_str.c **** *               DEF_INT_32U_MAX_VAL, if integer parsed but positively overflowed  (see Note #2a3A1b
3039:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3040:C:\Micrium\Software\uC-LIB\lib_str.c **** *               0,                   otherwise                                    (see Note #2a3B).
3041:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3042:C:\Micrium\Software\uC-LIB\lib_str.c **** * Caller(s)   : Application.
3043:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3044:C:\Micrium\Software\uC-LIB\lib_str.c **** * Note(s)     : (1) String buffer NOT modified.
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 89


3045:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3046:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strtol() : DESCRIPTION' states that
3047:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       functions shall convert the initial portion of the string pointed to by 'st
3048:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       to a type long ... representation" :
3049:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3050:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) "First, they decompose the input string into three parts" :
3051:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3052:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (A) "An initial, possibly empty, sequence of white-space characters [as
3053:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                by isspace()]."
3054:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3055:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               (1) "The subject sequence is defined as the longest initial subsequ
3056:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                    input string, starting with the first non-white-space characte
3057:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                    the expected form.  The subject sequence shall contain no char
3058:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                    input string is empty or consists entirely of white-space char
3059:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3060:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (B) (1) "A subject sequence interpreted as an integer represented in so
3061:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                    determined by the value of 'base' ('nbr_base')" :
3062:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3063:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   (a) "If the value of 'base' ('nbr_base') is 0, the expected for
3064:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                        subject sequence is that of a decimal constant, octal cons
3065:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                        hexadecimal constant" :
3066:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3067:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       (1) "A decimal constant begins with a non-zero digit, and c
3068:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                            sequence of decimal digits."
3069:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3070:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       (2) "An octal constant consists of the prefix '0' optionall
3071:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                            a sequence of the digits '0' to '7' only."
3072:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3073:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       (3) "A hexadecimal constant consists of the prefix '0x' or 
3074:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                            by a sequence of the decimal digits and letters 'a' (o
3075:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                            (or 'F') with values 10 to 15 respectively."
3076:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3077:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   (b) "If the value of 'base' ('nbr_base') is between 2 and 36, t
3078:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                        of the subject sequence is a sequence of letters and digit
3079:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                        an integer with the radix specified by 'base' ('nbr_base')
3080:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3081:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       (1) (A) "The letters from 'a' (or 'A') to 'z' (or 'Z') incl
3082:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                                ascribed the values 10 to 35"; ...
3083:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                           (B) "only letters whose ascribed values are less than t
3084:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                                are permitted."
3085:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3086:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       (2) (A) "If the value of 'base' ('nbr_base') is 16, the cha
3087:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                                '0X' may optionally precede the sequence of letter
3088:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3089:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                           (B) Although NO specification states that "if the value
3090:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                               ('nbr_base') is" 8, the '0' character "may optional
3091:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                               the sequence of letters and digits"; it seems reaso
3092:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                               allow the '0' character to be optionally parsed.
3093:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3094:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               (2) "A subject sequence .... may be preceded by a '+' or '-' sign."
3095:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3096:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   (a) However, it does NOT seem reasonable to parse & convert a n
3097:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       integer string into an unsigned integer.
3098:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3099:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (C) (1) (a) "A final string of one or more unrecognized characters,"  .
3100:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   (b) "including the terminating null byte of the input string" .
3101:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               (2) "other than a sign or a permissible letter or digit."
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 90


3102:C:\Micrium\Software\uC-LIB\lib_str.c **** *$PAGE*
3103:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) Second, "they shall attempt to convert the subject sequence to an integ
3104:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3105:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (A) "If the subject sequence is empty or does not have the expected for
3106:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3107:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               (1) "no conversion is performed"; ...
3108:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               (2) "the value of 'str' ('pstr') is stored in the object pointed to
3109:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                    ('pstr_next'), provided that 'endptr' ('pstr_next') is not a n
3110:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3111:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (B) "If the subject sequence has the expected form" :
3112:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3113:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               (1) (a) "and the value of 'base' ('nbr_base') is 0, the sequence of
3114:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                        starting with the first digit shall be interpreted as an i
3115:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3116:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   (b) "and the value of 'base' ('nbr_base') is between 2 and 36, 
3117:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                        used as the base for conversion, ascribing to each letter 
3118:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                        given above" (see Note #2a1B1b1A).
3119:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3120:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               (2) "A pointer to the final string shall be stored in the object po
3121:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   'endptr' ('pstr_next'), provided that 'endptr' ('pstr_next') is
3122:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   pointer."
3123:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3124:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (3) Lastly, IEEE Std 1003.1, 2004 Edition, Section 'strtol() : RETURN VALUE
3125:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3126:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (A) "Upon successful completion, these functions shall return the conve
3127:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3128:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               (1) "If the correct value is outside the range of representable val
3129:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                    of the following "shall be returned" :
3130:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   (a) "{LONG_MIN}" or ...
3131:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   (b) "{LONG_MAX}"
3132:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3133:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (B) "If no conversion could be performed, 0 shall be returned."
3134:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3135:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) (1) IEEE Std 1003.1, 2004 Edition, Section 'strtoul() : ERRORS' states that
3136:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           shall fail if" :
3137:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3138:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (A) "[EINVAL] - The value of 'base' ('nbr_base') is not supported."
3139:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3140:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (B) "[ERANGE] - The value to be returned is not representable."
3141:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3142:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) IEEE Std 1003.1, 2004 Edition, Section 'strtoul() : ERRORS' states that
3143:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           may fail if" :
3144:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3145:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (A) "[EINVAL] - No conversion could be performed."
3146:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3147:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (3) Return integer value & next string pointer should be used to diagnose parse suc
3148:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3149:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (a) Valid parse string integer :
3150:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3151:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           pstr      = "     ABCDE xyz"
3152:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           nbr_base  = 16
3153:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3154:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           nbr       = 703710
3155:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           pstr_next = " xyz"
3156:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3157:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3158:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) Invalid parse string integer :
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 91


3159:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3160:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           pstr      = "     ABCDE"
3161:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           nbr_base  = 10
3162:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3163:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           nbr       =  0
3164:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           pstr_next = pstr = "     ABCDE"
3165:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3166:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3167:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (c) Valid hexadecimal parse string integer :
3168:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3169:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           pstr      = "     0xGABCDE"
3170:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           nbr_base  = 16
3171:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3172:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           nbr       =  0
3173:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           pstr_next = "xGABCDE"
3174:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3175:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3176:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (d) Valid decimal parse string integer ('0x' prefix ignored
3177:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               following invalid hexadecimal characters) :
3178:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3179:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           pstr      = "     0xGABCDE"
3180:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           nbr_base  =  0
3181:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3182:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           nbr       =  0
3183:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           pstr_next = "xGABCDE"
3184:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3185:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3186:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (e) Valid decimal parse string integer ('0'  prefix ignored
3187:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               following invalid octal       characters) :
3188:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3189:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           pstr      = "     0GABCDE"
3190:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           nbr_base  =  0
3191:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3192:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           nbr       =  0
3193:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           pstr_next = "GABCDE"
3194:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3195:C:\Micrium\Software\uC-LIB\lib_str.c **** *$PAGE*
3196:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (f) Parse string integer overflow :
3197:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3198:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           pstr      = "   12345678901234567890*123456"
3199:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           nbr_base  = 10
3200:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3201:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           nbr       = DEF_INT_32S_MAX_VAL
3202:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           pstr_next = "*123456"
3203:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3204:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3205:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (g) Parse string integer underflow :
3206:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3207:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           pstr      = "  -12345678901234567890*123456"
3208:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           nbr_base  = 10
3209:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3210:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           nbr       = DEF_INT_32S_MIN_VAL
3211:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           pstr_next = "*123456"
3212:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3213:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
3214:C:\Micrium\Software\uC-LIB\lib_str.c **** */
3215:C:\Micrium\Software\uC-LIB\lib_str.c **** 
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 92


3216:C:\Micrium\Software\uC-LIB\lib_str.c **** CPU_INT32S  Str_ParseNbr_Int32S (const  CPU_CHAR     *pstr,
3217:C:\Micrium\Software\uC-LIB\lib_str.c ****                                         CPU_CHAR    **pstr_next,
3218:C:\Micrium\Software\uC-LIB\lib_str.c ****                                         CPU_INT08U    nbr_base)
3219:C:\Micrium\Software\uC-LIB\lib_str.c **** {
 1969              		.loc 1 3219 0
 1970              		.cfi_startproc
 1971              		@ args = 0, pretend = 0, frame = 32
 1972              		@ frame_needed = 1, uses_anonymous_args = 0
 1973 0000 80B5     		push	{r7, lr}
 1974              	.LCFI63:
 1975              		.cfi_def_cfa_offset 8
 1976 0002 8AB0     		sub	sp, sp, #40
 1977              	.LCFI64:
 1978              		.cfi_def_cfa_offset 48
 1979 0004 02AF     		add	r7, sp, #8
 1980              		.cfi_offset 14, -4
 1981              		.cfi_offset 7, -8
 1982              	.LCFI65:
 1983              		.cfi_def_cfa 7, 40
 1984 0006 F860     		str	r0, [r7, #12]
 1985 0008 B960     		str	r1, [r7, #8]
 1986 000a 1346     		mov	r3, r2
 1987 000c FB71     		strb	r3, [r7, #7]
3220:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_INT32S   nbr;
3221:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_INT32U   nbr_abs;
3222:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_BOOLEAN  nbr_neg;
3223:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3224:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3225:C:\Micrium\Software\uC-LIB\lib_str.c ****     nbr_abs = Str_ParseNbr_Int32(pstr,                          /* Parse/convert str ...           
 1988              		.loc 1 3225 0
 1989 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1990 0010 07F11702 		add	r2, r7, #23
 1991 0014 0092     		str	r2, [sp, #0]
 1992 0016 F868     		ldr	r0, [r7, #12]
 1993 0018 B968     		ldr	r1, [r7, #8]
 1994 001a 1A46     		mov	r2, r3
 1995 001c 4FF00103 		mov	r3, #1
 1996 0020 FFF7FEFF 		bl	Str_ParseNbr_Int32
 1997 0024 0346     		mov	r3, r0
 1998 0026 FB61     		str	r3, [r7, #28]
3226:C:\Micrium\Software\uC-LIB\lib_str.c ****                                  pstr_next,
3227:C:\Micrium\Software\uC-LIB\lib_str.c ****                                  nbr_base,
3228:C:\Micrium\Software\uC-LIB\lib_str.c ****                                  DEF_YES,                       /* ... as signed int (see Note #2a2
3229:C:\Micrium\Software\uC-LIB\lib_str.c ****                                 &nbr_neg);
3230:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3231:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (nbr_neg == DEF_NO) {                                    /* Chk for neg nbr & ovf/undf (see 
 1999              		.loc 1 3231 0
 2000 0028 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 2001 002a 002B     		cmp	r3, #0
 2002 002c 08D1     		bne	.L140
3232:C:\Micrium\Software\uC-LIB\lib_str.c ****         nbr = (nbr_abs > (CPU_INT32U) DEF_INT_32S_MAX_VAL)          ?  (CPU_INT32S)DEF_INT_32S_MAX_
 2003              		.loc 1 3232 0
 2004 002e FB69     		ldr	r3, [r7, #28]
 2005 0030 002B     		cmp	r3, #0
 2006 0032 01DB     		blt	.L141
 2007 0034 FB69     		ldr	r3, [r7, #28]
 2008 0036 01E0     		b	.L142
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 93


 2009              	.L141:
 2010 0038 6FF00043 		mvn	r3, #-2147483648
 2011              	.L142:
 2012 003c BB61     		str	r3, [r7, #24]
 2013 003e 09E0     		b	.L143
 2014              	.L140:
3233:C:\Micrium\Software\uC-LIB\lib_str.c ****                                                                     :  (CPU_INT32S)nbr_abs;
3234:C:\Micrium\Software\uC-LIB\lib_str.c ****     } else {
3235:C:\Micrium\Software\uC-LIB\lib_str.c ****         nbr = (nbr_abs > (CPU_INT32U)-DEF_INT_32S_MIN_VAL_ONES_CPL) ?  (CPU_INT32S)DEF_INT_32S_MIN_
 2015              		.loc 1 3235 0
 2016 0040 FB69     		ldr	r3, [r7, #28]
 2017 0042 002B     		cmp	r3, #0
 2018 0044 03DB     		blt	.L144
3236:C:\Micrium\Software\uC-LIB\lib_str.c ****                                                                     : -(CPU_INT32S)nbr_abs;
 2019              		.loc 1 3236 0
 2020 0046 FB69     		ldr	r3, [r7, #28]
 2021              		.loc 1 3235 0
 2022 0048 C3F10003 		rsb	r3, r3, #0
 2023 004c 01E0     		b	.L145
 2024              	.L144:
 2025 004e 4FF00043 		mov	r3, #-2147483648
 2026              	.L145:
 2027 0052 BB61     		str	r3, [r7, #24]
 2028              	.L143:
3237:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
3238:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3239:C:\Micrium\Software\uC-LIB\lib_str.c ****     return (nbr);
 2029              		.loc 1 3239 0
 2030 0054 BB69     		ldr	r3, [r7, #24]
3240:C:\Micrium\Software\uC-LIB\lib_str.c **** }
 2031              		.loc 1 3240 0
 2032 0056 1846     		mov	r0, r3
 2033 0058 07F12007 		add	r7, r7, #32
 2034 005c BD46     		mov	sp, r7
 2035 005e 80BD     		pop	{r7, pc}
 2036              		.cfi_endproc
 2037              	.LFE21:
 2038              		.size	Str_ParseNbr_Int32S, .-Str_ParseNbr_Int32S
 2039              		.section	.text.Str_FmtNbr_Int32,"ax",%progbits
 2040              		.align	2
 2041              		.thumb
 2042              		.thumb_func
 2043              		.type	Str_FmtNbr_Int32, %function
 2044              	Str_FmtNbr_Int32:
 2045              	.LFB22:
3241:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3242:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3243:C:\Micrium\Software\uC-LIB\lib_str.c **** /*$PAGE*/
3244:C:\Micrium\Software\uC-LIB\lib_str.c **** /*
3245:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
3246:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
3247:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                           LOCAL FUNCTIONS
3248:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
3249:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
3250:C:\Micrium\Software\uC-LIB\lib_str.c **** */
3251:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3252:C:\Micrium\Software\uC-LIB\lib_str.c **** /*
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 94


3253:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
3254:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                         Str_FmtNbr_Int32()
3255:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3256:C:\Micrium\Software\uC-LIB\lib_str.c **** * Description : Format 32-bit integer into a multi-digit character string.
3257:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3258:C:\Micrium\Software\uC-LIB\lib_str.c **** * Argument(s) : nbr             Number           to format.
3259:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3260:C:\Micrium\Software\uC-LIB\lib_str.c **** *               nbr_dig         Number of digits to format (see Note #1).
3261:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3262:C:\Micrium\Software\uC-LIB\lib_str.c **** *               nbr_base        Base   of number to format (see Note #2).
3263:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3264:C:\Micrium\Software\uC-LIB\lib_str.c **** *               nbr_neg         Indicates whether number to format is negative :
3265:C:\Micrium\Software\uC-LIB\lib_str.c **** *               -------
3266:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   DEF_NO          Number is non-negative.
3267:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   DEF_YES         Number is     negative.
3268:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3269:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               Argument validated in Str_FmtNbr_Int32U(),
3270:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                                     Str_FmtNbr_Int32S().
3271:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3272:C:\Micrium\Software\uC-LIB\lib_str.c **** *               lead_char       Prepend leading character  (see Note #3) :
3273:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3274:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   '\0'                    Do NOT prepend leading character to str
3275:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                     Printable character          Prepend leading character to str
3276:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   Unprintable character   Format invalid string (see Note #6e).
3277:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3278:C:\Micrium\Software\uC-LIB\lib_str.c **** *               lower_case      Format alphabetic characters (if any) in lower case :
3279:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3280:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   DEF_NO          Format alphabetic characters in upper case.
3281:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   DEF_YES         Format alphabetic characters in lower case.
3282:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3283:C:\Micrium\Software\uC-LIB\lib_str.c **** *               nul             Append terminating NULL-character (see Note #4) :
3284:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3285:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   DEF_NO          Do NOT append terminating NULL-character to str
3286:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   DEF_YES                Append terminating NULL-character to str
3287:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3288:C:\Micrium\Software\uC-LIB\lib_str.c **** *               pstr            Pointer to character array to return formatted number string (see N
3289:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3290:C:\Micrium\Software\uC-LIB\lib_str.c **** * Return(s)   : Pointer to formatted string, if NO error(s) [see Note #6f].
3291:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3292:C:\Micrium\Software\uC-LIB\lib_str.c **** *               Pointer to NULL,             otherwise.
3293:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3294:C:\Micrium\Software\uC-LIB\lib_str.c **** * Caller(s)   : Str_FmtNbr_Int32U(),
3295:C:\Micrium\Software\uC-LIB\lib_str.c **** *               Str_FmtNbr_Int32S().
3296:C:\Micrium\Software\uC-LIB\lib_str.c **** *$PAGE*
3297:C:\Micrium\Software\uC-LIB\lib_str.c **** * Note(s)     : (1) (a) The maximum number of digits to format for 32-bit integer numbers :
3298:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3299:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3300:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               Maximum Number of             [  log (Number)      ]
3301:C:\Micrium\Software\uC-LIB\lib_str.c **** *                             32-bit Integer Digits  =  floor [ -------------- + 1 ]
3302:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   to Format                 [   log (Base)       ]
3303:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3304:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               where
3305:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       Number                  Number to format
3306:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       Base            Base of number to format
3307:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3308:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) (1) If the number of digits to format ('nbr_dig') is zero; then NO formatti
3309:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           is performed except possible NULL-termination of the string (see Note #
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 95


3310:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3311:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               Example :
3312:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3313:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   nbr      = -23456
3314:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   nbr_dig  =  0
3315:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   nbr_base = 10
3316:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3317:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   pstr     = ""                   See Note #7a
3318:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3319:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) If the number of digits to format ('nbr_dig') is less than the number o
3320:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           significant integer digits of the number to format ('nbr'); then an inv
3321:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           string is formatted instead of truncating any significant integer digit
3322:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3323:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               Example :
3324:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3325:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   nbr      = 23456
3326:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   nbr_dig  = 3
3327:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   nbr_base = 10
3328:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3329:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   pstr     = "???"                See Note #7b
3330:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3331:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (3) If the number to format ('nbr') is negative but the number of digits to
3332:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           ('nbr_dig') is equal to the number of significant integer digits of the
3333:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           to format ('nbr'); then an invalid string is formatted instead of trunc
3334:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           the negative sign.
3335:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3336:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               Example :
3337:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3338:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   nbr      = -23456
3339:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   nbr_dig  =  5
3340:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   nbr_base = 10
3341:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3342:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   pstr     = "?????"              See Note #7b
3343:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3344:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (2) The number's base MUST be between 2 & 36, inclusive.
3345:C:\Micrium\Software\uC-LIB\lib_str.c **** *$PAGE*
3346:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (3) Leading character option prepends leading characters prior to the first non-zer
3347:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3348:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (a) (1) Leading character MUST be a printable ASCII character.
3349:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3350:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) (A) Leading character MUST NOT be a number base digit, ...
3351:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (B) with the exception of '0'.
3352:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3353:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) (1) The number of leading characters is such that the total number of signi
3354:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           integer digits plus the number of leading characters plus possible nega
3355:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           sign character is equal to the requested number of integer digits to fo
3356:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           ('nbr_dig').
3357:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3358:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               Examples :
3359:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3360:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   nbr       = 23456
3361:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   nbr_dig   = 7
3362:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   nbr_base  = 10
3363:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   lead_char = ' '
3364:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3365:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   pstr      = "  23456"
3366:C:\Micrium\Software\uC-LIB\lib_str.c **** *
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 96


3367:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3368:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   nbr       = -23456
3369:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   nbr_dig   = 7
3370:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   nbr_base  = 10
3371:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   lead_char = ' '
3372:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3373:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   pstr      = " -23456"
3374:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3375:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) (A) If the number to format ('nbr') is negative AND the leading charact
3376:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               ('lead_char') is     a '0' digit; then the negative sign character 
3377:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               prefixes all leading characters prior to the formatted number.
3378:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3379:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   Examples :
3380:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3381:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       nbr        = -23456
3382:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       nbr_dig    =  8
3383:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       nbr_base   = 10
3384:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       lead_char  = '0'
3385:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3386:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       pstr       = "-0023456"
3387:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3388:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3389:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       nbr        = -43981
3390:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       nbr_dig    =  8
3391:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       nbr_base   = 16
3392:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       lead_char  = '0'
3393:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       lower_case = DEF_NO
3394:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3395:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       pstr       = "-000ABCD"
3396:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3397:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (B) If the number to format ('nbr') is negative AND the leading charact
3398:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               ('lead_char') is NOT a '0' digit; then the negative sign character 
3399:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               immediately prefixes the most significant digit of the formatted nu
3400:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3401:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   Examples :
3402:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3403:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       nbr        = -23456
3404:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       nbr_dig    =  8
3405:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       nbr_base   = 10
3406:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       lead_char  = '#'
3407:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3408:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       pstr       = "##-23456"
3409:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3410:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3411:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       nbr        = -43981
3412:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       nbr_dig    =  8
3413:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       nbr_base   = 16
3414:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       lead_char  = '#'
3415:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       lower_case = DEF_YES
3416:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3417:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       pstr       = "###-abcd"
3418:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3419:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (c) (1) If the value of the number to format is     zero  ...
3420:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) ... & the number of digits to format is non-zero, ...
3421:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (3) ... but NO leading character available;           ...
3422:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (4) ... then one digit of '0' value is formatted.
3423:C:\Micrium\Software\uC-LIB\lib_str.c **** *
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 97


3424:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           This is NOT a leading character; but a single integer digit of '0' valu
3425:C:\Micrium\Software\uC-LIB\lib_str.c **** *$PAGE*
3426:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (4) (a) NULL-character terminate option DISABLED prevents overwriting previous char
3427:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       array formatting.
3428:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3429:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) WARNING: Unless 'pstr' character array is pre-/post-terminated, NULL-charac
3430:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       terminate option DISABLED will cause character string run-on.
3431:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3432:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (5) (a) Format buffer size NOT validated; buffer overruns MUST be prevented by call
3433:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3434:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) To prevent character buffer overrun :
3435:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3436:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           Character array size MUST be  >=  ('nbr_dig'          +
3437:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                                               1 negative sign   +
3438:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                                               1 'NUL' terminator)  characters
3439:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3440:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (6) String format terminates when :
3441:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3442:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (a) Format string pointer is passed a NULL pointer.
3443:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) No      string formatted;                NULL pointer returned.
3444:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3445:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) Number of digits to format ('nbr_dig') is zero.
3446:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) NULL    string formatted (see Note #7a); NULL pointer returned.
3447:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3448:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (c) Number of digits to format ('nbr_dig') is less than number of significant 
3449:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           integer digits of the number to format ('nbr'), including possible 
3450:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           negative sign.
3451:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) Invalid string formatted (see Note #7);  NULL pointer returned.
3452:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3453:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (d) Base is passed an invalid base (see Note #2).
3454:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) Invalid string format performed; NULL pointer returned.
3455:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3456:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (e) Lead character is NOT a valid, printable character (see Note #3a).
3457:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) Invalid string formatted (see Note #7);  NULL pointer returned.
3458:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3459:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (f) Number successfully formatted into character string array.
3460:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3461:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (7) For any unsuccessful string format or error(s), an invalid string of question m
3462:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   ('?') will be formatted, where the number of question marks is determined by th
3463:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   number of digits to format ('nbr_dig') :
3464:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3465:C:\Micrium\Software\uC-LIB\lib_str.c **** *                      Invalid string's     {  (a)   0 (NULL string)  ,  if 'nbr_dig' = 0
3466:C:\Micrium\Software\uC-LIB\lib_str.c **** *                          number of     =  {
3467:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       question marks      {  (b)  'nbr_dig'         ,  if 'nbr_dig' > 0
3468:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3469:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
3470:C:\Micrium\Software\uC-LIB\lib_str.c **** */
3471:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3472:C:\Micrium\Software\uC-LIB\lib_str.c **** static  CPU_CHAR  *Str_FmtNbr_Int32 (CPU_INT32U    nbr,
3473:C:\Micrium\Software\uC-LIB\lib_str.c ****                                      CPU_INT08U    nbr_dig,
3474:C:\Micrium\Software\uC-LIB\lib_str.c ****                                      CPU_INT08U    nbr_base,
3475:C:\Micrium\Software\uC-LIB\lib_str.c ****                                      CPU_BOOLEAN   nbr_neg,
3476:C:\Micrium\Software\uC-LIB\lib_str.c ****                                      CPU_CHAR      lead_char,
3477:C:\Micrium\Software\uC-LIB\lib_str.c ****                                      CPU_BOOLEAN   lower_case,
3478:C:\Micrium\Software\uC-LIB\lib_str.c ****                                      CPU_BOOLEAN   nul,
3479:C:\Micrium\Software\uC-LIB\lib_str.c ****                                      CPU_CHAR     *pstr)
3480:C:\Micrium\Software\uC-LIB\lib_str.c **** {
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 98


 2046              		.loc 1 3480 0
 2047              		.cfi_startproc
 2048              		@ args = 16, pretend = 0, frame = 40
 2049              		@ frame_needed = 1, uses_anonymous_args = 0
 2050 0000 80B5     		push	{r7, lr}
 2051              	.LCFI66:
 2052              		.cfi_def_cfa_offset 8
 2053 0002 8AB0     		sub	sp, sp, #40
 2054              	.LCFI67:
 2055              		.cfi_def_cfa_offset 48
 2056 0004 00AF     		add	r7, sp, #0
 2057              		.cfi_offset 14, -4
 2058              		.cfi_offset 7, -8
 2059              	.LCFI68:
 2060              		.cfi_def_cfa_register 7
 2061 0006 7860     		str	r0, [r7, #4]
 2062 0008 F970     		strb	r1, [r7, #3]
 2063 000a BA70     		strb	r2, [r7, #2]
 2064 000c 7B70     		strb	r3, [r7, #1]
3481:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_CHAR     *pstr_fmt;
3482:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_DATA      i;
3483:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_INT32U    nbr_fmt;
3484:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_INT32U    nbr_log;
3485:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_INT08U    nbr_dig_max;
3486:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_INT08U    nbr_dig_min;
3487:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_INT08U    nbr_dig_fmtd;
3488:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_INT08U    nbr_neg_sign;
3489:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_INT08U    nbr_lead_char;
3490:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_INT08U    dig_val;
3491:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_INT08U    lead_char_delta_0;
3492:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_INT08U    lead_char_delta_a;
3493:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_BOOLEAN   lead_char_dig;
3494:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_BOOLEAN   lead_char_0;
3495:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_BOOLEAN   fmt_invalid;
3496:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_BOOLEAN   print_char;
3497:C:\Micrium\Software\uC-LIB\lib_str.c ****     CPU_BOOLEAN   nbr_neg_fmtd;
3498:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3499:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3500:C:\Micrium\Software\uC-LIB\lib_str.c **** /*$PAGE*/
3501:C:\Micrium\Software\uC-LIB\lib_str.c ****                                                                 /* ---------------- VALIDATE FMT AR
3502:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (pstr == (CPU_CHAR *)0) {                                /* Rtn NULL if str ptr NULL (see No
 2065              		.loc 1 3502 0
 2066 000e FB6B     		ldr	r3, [r7, #60]
 2067 0010 002B     		cmp	r3, #0
 2068 0012 02D1     		bne	.L148
3503:C:\Micrium\Software\uC-LIB\lib_str.c ****         return ((CPU_CHAR *)0);
 2069              		.loc 1 3503 0
 2070 0014 4FF00003 		mov	r3, #0
 2071 0018 76E1     		b	.L149
 2072              	.L148:
3504:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
3505:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3506:C:\Micrium\Software\uC-LIB\lib_str.c ****     fmt_invalid = DEF_NO;
 2073              		.loc 1 3506 0
 2074 001a 4FF00003 		mov	r3, #0
 2075 001e 87F82530 		strb	r3, [r7, #37]
3507:C:\Micrium\Software\uC-LIB\lib_str.c **** 
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 99


3508:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (nbr_dig < 1) {                                          /* If nbr digs = 0, ...            
 2076              		.loc 1 3508 0
 2077 0022 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 2078 0024 002B     		cmp	r3, #0
 2079 0026 03D1     		bne	.L150
3509:C:\Micrium\Software\uC-LIB\lib_str.c ****         fmt_invalid = DEF_YES;                                  /* ... fmt invalid str (see Note #6
 2080              		.loc 1 3509 0
 2081 0028 4FF00103 		mov	r3, #1
 2082 002c 87F82530 		strb	r3, [r7, #37]
 2083              	.L150:
3510:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
3511:C:\Micrium\Software\uC-LIB\lib_str.c ****                                                                 /* If invalid base, ...            
3512:C:\Micrium\Software\uC-LIB\lib_str.c ****     if ((nbr_base <  2u) ||
 2084              		.loc 1 3512 0
 2085 0030 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 2086 0032 012B     		cmp	r3, #1
 2087 0034 02D9     		bls	.L151
 2088 0036 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 2089 0038 242B     		cmp	r3, #36
 2090 003a 03D9     		bls	.L152
 2091              	.L151:
3513:C:\Micrium\Software\uC-LIB\lib_str.c ****         (nbr_base > 36u)) {
3514:C:\Micrium\Software\uC-LIB\lib_str.c ****         fmt_invalid = DEF_YES;                                  /* ... fmt invalid str (see Note #6
 2092              		.loc 1 3514 0
 2093 003c 4FF00103 		mov	r3, #1
 2094 0040 87F82530 		strb	r3, [r7, #37]
 2095              	.L152:
3515:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
3516:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3517:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (lead_char != (CPU_CHAR)'\0') {
 2096              		.loc 1 3517 0
 2097 0044 97F83030 		ldrb	r3, [r7, #48]	@ zero_extendqisi2
 2098 0048 002B     		cmp	r3, #0
 2099 004a 50D0     		beq	.L153
3518:C:\Micrium\Software\uC-LIB\lib_str.c ****         print_char =  ASCII_IsPrint(lead_char);
 2100              		.loc 1 3518 0
 2101 004c 97F83030 		ldrb	r3, [r7, #48]	@ zero_extendqisi2
 2102 0050 1846     		mov	r0, r3
 2103 0052 FFF7FEFF 		bl	ASCII_IsPrint
 2104 0056 0346     		mov	r3, r0
 2105 0058 87F82630 		strb	r3, [r7, #38]
3519:C:\Micrium\Software\uC-LIB\lib_str.c ****         if (print_char != DEF_YES) {                            /* If lead char non-printable (see 
 2106              		.loc 1 3519 0
 2107 005c 97F82630 		ldrb	r3, [r7, #38]	@ zero_extendqisi2
 2108 0060 012B     		cmp	r3, #1
 2109 0062 04D0     		beq	.L154
3520:C:\Micrium\Software\uC-LIB\lib_str.c ****             fmt_invalid = DEF_YES;                              /* ... fmt invalid str        (see 
 2110              		.loc 1 3520 0
 2111 0064 4FF00103 		mov	r3, #1
 2112 0068 87F82530 		strb	r3, [r7, #37]
 2113 006c 3FE0     		b	.L153
 2114              	.L154:
3521:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3522:C:\Micrium\Software\uC-LIB\lib_str.c ****         } else if (lead_char != '0') {                          /* Chk lead char for non-0 nbr base
 2115              		.loc 1 3522 0
 2116 006e 97F83030 		ldrb	r3, [r7, #48]	@ zero_extendqisi2
 2117 0072 302B     		cmp	r3, #48
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 100


 2118 0074 3BD0     		beq	.L153
3523:C:\Micrium\Software\uC-LIB\lib_str.c ****             lead_char_delta_0 = (CPU_INT08U)(lead_char - '0');
 2119              		.loc 1 3523 0
 2120 0076 97F83030 		ldrb	r3, [r7, #48]
 2121 007a A3F13003 		sub	r3, r3, #48
 2122 007e 87F82130 		strb	r3, [r7, #33]
3524:C:\Micrium\Software\uC-LIB\lib_str.c ****             if (lower_case != DEF_YES) {
 2123              		.loc 1 3524 0
 2124 0082 97F83430 		ldrb	r3, [r7, #52]	@ zero_extendqisi2
 2125 0086 012B     		cmp	r3, #1
 2126 0088 06D0     		beq	.L155
3525:C:\Micrium\Software\uC-LIB\lib_str.c ****                 lead_char_delta_a = (CPU_INT08U)(lead_char - 'A');
 2127              		.loc 1 3525 0
 2128 008a 97F83030 		ldrb	r3, [r7, #48]
 2129 008e A3F14103 		sub	r3, r3, #65
 2130 0092 87F82230 		strb	r3, [r7, #34]
 2131 0096 05E0     		b	.L156
 2132              	.L155:
3526:C:\Micrium\Software\uC-LIB\lib_str.c ****             } else {
3527:C:\Micrium\Software\uC-LIB\lib_str.c ****                 lead_char_delta_a = (CPU_INT08U)(lead_char - 'a');
 2133              		.loc 1 3527 0
 2134 0098 97F83030 		ldrb	r3, [r7, #48]
 2135 009c A3F16103 		sub	r3, r3, #97
 2136 00a0 87F82230 		strb	r3, [r7, #34]
 2137              	.L156:
3528:C:\Micrium\Software\uC-LIB\lib_str.c ****             }
3529:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3530:C:\Micrium\Software\uC-LIB\lib_str.c ****             lead_char_dig = (((nbr_base <= 10u) &&  (lead_char_delta_0 <  nbr_base))      ||
 2138              		.loc 1 3530 0
 2139 00a4 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 2140 00a6 0A2B     		cmp	r3, #10
 2141 00a8 04D8     		bhi	.L157
 2142 00aa 97F82120 		ldrb	r2, [r7, #33]	@ zero_extendqisi2
 2143 00ae BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 2144 00b0 9A42     		cmp	r2, r3
 2145 00b2 0DD3     		bcc	.L158
 2146              	.L157:
 2147 00b4 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 2148 00b6 0A2B     		cmp	r3, #10
 2149 00b8 0DD9     		bls	.L159
 2150 00ba 97F82130 		ldrb	r3, [r7, #33]	@ zero_extendqisi2
 2151 00be 092B     		cmp	r3, #9
 2152 00c0 06D9     		bls	.L158
3531:C:\Micrium\Software\uC-LIB\lib_str.c ****                              ((nbr_base >  10u) && ((lead_char_delta_0 <             10u) ||
3532:C:\Micrium\Software\uC-LIB\lib_str.c ****                                                     (lead_char_delta_a < (nbr_base - 10u))))) ? DEF
 2153              		.loc 1 3532 0
 2154 00c2 97F82220 		ldrb	r2, [r7, #34]	@ zero_extendqisi2
 2155 00c6 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 2156 00c8 A3F10A03 		sub	r3, r3, #10
 2157              		.loc 1 3530 0
 2158 00cc 9A42     		cmp	r2, r3
 2159 00ce 02D2     		bcs	.L159
 2160              	.L158:
 2161 00d0 4FF00103 		mov	r3, #1
 2162 00d4 01E0     		b	.L160
 2163              	.L159:
 2164 00d6 4FF00003 		mov	r3, #0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 101


 2165              	.L160:
 2166 00da 87F82330 		strb	r3, [r7, #35]
3533:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3534:C:\Micrium\Software\uC-LIB\lib_str.c ****             if (lead_char_dig == DEF_YES) {                     /* If lead char non-0 nbr base dig 
 2167              		.loc 1 3534 0
 2168 00de 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 2169 00e2 012B     		cmp	r3, #1
 2170 00e4 03D1     		bne	.L153
3535:C:\Micrium\Software\uC-LIB\lib_str.c ****                 fmt_invalid = DEF_YES;                          /* ... fmt invalid str             
 2171              		.loc 1 3535 0
 2172 00e6 4FF00103 		mov	r3, #1
 2173 00ea 87F82530 		strb	r3, [r7, #37]
 2174              	.L153:
3536:C:\Micrium\Software\uC-LIB\lib_str.c ****             }
3537:C:\Micrium\Software\uC-LIB\lib_str.c ****         }
3538:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
3539:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3540:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3541:C:\Micrium\Software\uC-LIB\lib_str.c ****                                                                 /* ----------------- PREPARE NBR FM
3542:C:\Micrium\Software\uC-LIB\lib_str.c ****     pstr_fmt = pstr;
 2175              		.loc 1 3542 0
 2176 00ee FB6B     		ldr	r3, [r7, #60]
 2177 00f0 BB60     		str	r3, [r7, #8]
3543:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3544:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (fmt_invalid == DEF_NO) {
 2178              		.loc 1 3544 0
 2179 00f2 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 2180 00f6 002B     		cmp	r3, #0
 2181 00f8 5CD1     		bne	.L161
3545:C:\Micrium\Software\uC-LIB\lib_str.c ****         nbr_fmt     = nbr;
 2182              		.loc 1 3545 0
 2183 00fa 7B68     		ldr	r3, [r7, #4]
 2184 00fc 3B61     		str	r3, [r7, #16]
3546:C:\Micrium\Software\uC-LIB\lib_str.c ****         nbr_log     = nbr;
 2185              		.loc 1 3546 0
 2186 00fe 7B68     		ldr	r3, [r7, #4]
 2187 0100 7B61     		str	r3, [r7, #20]
3547:C:\Micrium\Software\uC-LIB\lib_str.c ****         nbr_dig_max = 1u;
 2188              		.loc 1 3547 0
 2189 0102 4FF00103 		mov	r3, #1
 2190 0106 FB76     		strb	r3, [r7, #27]
3548:C:\Micrium\Software\uC-LIB\lib_str.c ****         while (nbr_log >= nbr_base) {                           /* While nbr base digs avail, ...  
 2191              		.loc 1 3548 0
 2192 0108 08E0     		b	.L162
 2193              	.L163:
3549:C:\Micrium\Software\uC-LIB\lib_str.c ****             nbr_dig_max++;                                      /* ... calc max nbr digs.          
 2194              		.loc 1 3549 0
 2195 010a FB7E     		ldrb	r3, [r7, #27]
 2196 010c 03F10103 		add	r3, r3, #1
 2197 0110 FB76     		strb	r3, [r7, #27]
3550:C:\Micrium\Software\uC-LIB\lib_str.c ****             nbr_log /= nbr_base;
 2198              		.loc 1 3550 0
 2199 0112 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 2200 0114 7A69     		ldr	r2, [r7, #20]
 2201 0116 B2FBF3F3 		udiv	r3, r2, r3
 2202 011a 7B61     		str	r3, [r7, #20]
 2203              	.L162:
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 102


 2204              		.loc 1 3548 0
 2205 011c BA78     		ldrb	r2, [r7, #2]	@ zero_extendqisi2
 2206 011e 7B69     		ldr	r3, [r7, #20]
 2207 0120 9A42     		cmp	r2, r3
 2208 0122 F2D9     		bls	.L163
3551:C:\Micrium\Software\uC-LIB\lib_str.c ****         }
3552:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3553:C:\Micrium\Software\uC-LIB\lib_str.c ****         nbr_neg_sign = (nbr_neg == DEF_YES) ? 1u : 0u;
 2209              		.loc 1 3553 0
 2210 0124 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 2211 0126 012B     		cmp	r3, #1
 2212 0128 02D1     		bne	.L164
 2213 012a 4FF00103 		mov	r3, #1
 2214 012e 01E0     		b	.L165
 2215              	.L164:
 2216 0130 4FF00003 		mov	r3, #0
 2217              	.L165:
 2218 0134 BB77     		strb	r3, [r7, #30]
3554:C:\Micrium\Software\uC-LIB\lib_str.c ****         if (nbr_dig >= (nbr_dig_max + nbr_neg_sign)) {          /* If req'd nbr digs >= (max nbr di
 2219              		.loc 1 3554 0
 2220 0136 FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 2221 0138 F97E     		ldrb	r1, [r7, #27]	@ zero_extendqisi2
 2222 013a BB7F     		ldrb	r3, [r7, #30]	@ zero_extendqisi2
 2223 013c 0B44     		add	r3, r1, r3
 2224 013e 9A42     		cmp	r2, r3
 2225 0140 34DB     		blt	.L166
3555:C:\Micrium\Software\uC-LIB\lib_str.c ****             nbr_neg_fmtd = DEF_NO;
 2226              		.loc 1 3555 0
 2227 0142 4FF00003 		mov	r3, #0
 2228 0146 87F82730 		strb	r3, [r7, #39]
3556:C:\Micrium\Software\uC-LIB\lib_str.c ****             nbr_dig_min  = DEF_MIN(nbr_dig_max, nbr_dig);
 2229              		.loc 1 3556 0
 2230 014a FA78     		ldrb	r2, [r7, #3]	@ zero_extendqisi2
 2231 014c FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 2232 014e 9A42     		cmp	r2, r3
 2233 0150 38BF     		it	cc
 2234 0152 1346     		movcc	r3, r2
 2235 0154 3B77     		strb	r3, [r7, #28]
3557:C:\Micrium\Software\uC-LIB\lib_str.c ****                                                                 /* ... calc nbr digs to fmt & nbr l
3558:C:\Micrium\Software\uC-LIB\lib_str.c ****             if (lead_char != (CPU_CHAR)'\0') {
 2236              		.loc 1 3558 0
 2237 0156 97F83030 		ldrb	r3, [r7, #48]	@ zero_extendqisi2
 2238 015a 002B     		cmp	r3, #0
 2239 015c 0BD0     		beq	.L167
3559:C:\Micrium\Software\uC-LIB\lib_str.c ****                 nbr_dig_fmtd  = nbr_dig;
 2240              		.loc 1 3559 0
 2241 015e FB78     		ldrb	r3, [r7, #3]
 2242 0160 7B77     		strb	r3, [r7, #29]
3560:C:\Micrium\Software\uC-LIB\lib_str.c ****                 nbr_lead_char = nbr_dig     -
 2243              		.loc 1 3560 0
 2244 0162 FA78     		ldrb	r2, [r7, #3]
 2245 0164 3B7F     		ldrb	r3, [r7, #28]
 2246 0166 C3EB0203 		rsb	r3, r3, r2
 2247 016a DAB2     		uxtb	r2, r3
 2248 016c BB7F     		ldrb	r3, [r7, #30]
 2249 016e C3EB0203 		rsb	r3, r3, r2
 2250 0172 FB77     		strb	r3, [r7, #31]
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 103


 2251 0174 06E0     		b	.L168
 2252              	.L167:
3561:C:\Micrium\Software\uC-LIB\lib_str.c ****                                 nbr_dig_min - nbr_neg_sign;
3562:C:\Micrium\Software\uC-LIB\lib_str.c ****             } else {
3563:C:\Micrium\Software\uC-LIB\lib_str.c ****                 nbr_dig_fmtd  = nbr_dig_min + nbr_neg_sign;
 2253              		.loc 1 3563 0
 2254 0176 3A7F     		ldrb	r2, [r7, #28]
 2255 0178 BB7F     		ldrb	r3, [r7, #30]
 2256 017a 1344     		add	r3, r2, r3
 2257 017c 7B77     		strb	r3, [r7, #29]
3564:C:\Micrium\Software\uC-LIB\lib_str.c ****                 nbr_lead_char = 0u;
 2258              		.loc 1 3564 0
 2259 017e 4FF00003 		mov	r3, #0
 2260 0182 FB77     		strb	r3, [r7, #31]
 2261              	.L168:
3565:C:\Micrium\Software\uC-LIB\lib_str.c ****             }
3566:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3567:C:\Micrium\Software\uC-LIB\lib_str.c ****             if (nbr_lead_char > 0) {                            /* If lead chars to fmt, ...       
 2262              		.loc 1 3567 0
 2263 0184 FB7F     		ldrb	r3, [r7, #31]	@ zero_extendqisi2
 2264 0186 002B     		cmp	r3, #0
 2265 0188 0BD0     		beq	.L169
3568:C:\Micrium\Software\uC-LIB\lib_str.c ****                 lead_char_0 = (lead_char == '0')                /* ... chk if lead char a '0' dig (
 2266              		.loc 1 3568 0
 2267 018a 97F83030 		ldrb	r3, [r7, #48]	@ zero_extendqisi2
 2268 018e 302B     		cmp	r3, #48
 2269 0190 02D1     		bne	.L170
 2270 0192 4FF00103 		mov	r3, #1
 2271 0196 01E0     		b	.L171
 2272              	.L170:
 2273 0198 4FF00003 		mov	r3, #0
 2274              	.L171:
 2275 019c 87F82430 		strb	r3, [r7, #36]
3569:C:\Micrium\Software\uC-LIB\lib_str.c ****                             ?  DEF_YES : DEF_NO;
3570:C:\Micrium\Software\uC-LIB\lib_str.c ****             } else {
3571:C:\Micrium\Software\uC-LIB\lib_str.c ****                 lead_char_0 =  DEF_NO;
 2276              		.loc 1 3571 0
 2277 01a0 08E0     		b	.L161
 2278              	.L169:
 2279 01a2 4FF00003 		mov	r3, #0
 2280 01a6 87F82430 		strb	r3, [r7, #36]
 2281 01aa 03E0     		b	.L161
 2282              	.L166:
3572:C:\Micrium\Software\uC-LIB\lib_str.c ****             }
3573:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3574:C:\Micrium\Software\uC-LIB\lib_str.c ****         } else {                                                /* Else if nbr trunc'd, ...        
3575:C:\Micrium\Software\uC-LIB\lib_str.c ****             fmt_invalid = DEF_YES;                              /* ... fmt invalid str (see Note #6
 2283              		.loc 1 3575 0
 2284 01ac 4FF00103 		mov	r3, #1
 2285 01b0 87F82530 		strb	r3, [r7, #37]
 2286              	.L161:
3576:C:\Micrium\Software\uC-LIB\lib_str.c ****         }
3577:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
3578:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3579:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (fmt_invalid != DEF_NO) {
 2287              		.loc 1 3579 0
 2288 01b4 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 104


 2289 01b8 002B     		cmp	r3, #0
 2290 01ba 01D0     		beq	.L173
3580:C:\Micrium\Software\uC-LIB\lib_str.c ****         nbr_dig_fmtd = nbr_dig;
 2291              		.loc 1 3580 0
 2292 01bc FB78     		ldrb	r3, [r7, #3]
 2293 01be 7B77     		strb	r3, [r7, #29]
 2294              	.L173:
3581:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
3582:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3583:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3584:C:\Micrium\Software\uC-LIB\lib_str.c **** /*$PAGE*/
3585:C:\Micrium\Software\uC-LIB\lib_str.c ****                                                                 /* ------------------- FMT NBR STR 
3586:C:\Micrium\Software\uC-LIB\lib_str.c ****     pstr_fmt += nbr_dig_fmtd;                                   /* Start fmt @ least-sig dig.      
 2295              		.loc 1 3586 0
 2296 01c0 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2297 01c2 BA68     		ldr	r2, [r7, #8]
 2298 01c4 1344     		add	r3, r2, r3
 2299 01c6 BB60     		str	r3, [r7, #8]
3587:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3588:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (nul != DEF_NO) {                                        /* If NOT DISABLED, append NULL cha
 2300              		.loc 1 3588 0
 2301 01c8 97F83830 		ldrb	r3, [r7, #56]	@ zero_extendqisi2
 2302 01cc 002B     		cmp	r3, #0
 2303 01ce 03D0     		beq	.L174
3589:C:\Micrium\Software\uC-LIB\lib_str.c ****        *pstr_fmt = (CPU_CHAR)'\0';
 2304              		.loc 1 3589 0
 2305 01d0 BB68     		ldr	r3, [r7, #8]
 2306 01d2 4FF00002 		mov	r2, #0
 2307 01d6 1A70     		strb	r2, [r3, #0]
 2308              	.L174:
3590:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
3591:C:\Micrium\Software\uC-LIB\lib_str.c ****     pstr_fmt--;
 2309              		.loc 1 3591 0
 2310 01d8 BB68     		ldr	r3, [r7, #8]
 2311 01da 03F1FF33 		add	r3, r3, #-1
 2312 01de BB60     		str	r3, [r7, #8]
3592:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3593:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3594:C:\Micrium\Software\uC-LIB\lib_str.c ****     for (i = 0u; i < nbr_dig_fmtd; i++) {                       /* Fmt str for desired nbr digs :  
 2313              		.loc 1 3594 0
 2314 01e0 4FF00003 		mov	r3, #0
 2315 01e4 FB60     		str	r3, [r7, #12]
 2316 01e6 82E0     		b	.L175
 2317              	.L187:
3595:C:\Micrium\Software\uC-LIB\lib_str.c ****         if (fmt_invalid == DEF_NO) {
 2318              		.loc 1 3595 0
 2319 01e8 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 2320 01ec 002B     		cmp	r3, #0
 2321 01ee 70D1     		bne	.L176
3596:C:\Micrium\Software\uC-LIB\lib_str.c ****             if ((nbr_fmt > 0) ||                                /* If fmt nbr > 0                  
 2322              		.loc 1 3596 0
 2323 01f0 3B69     		ldr	r3, [r7, #16]
 2324 01f2 002B     		cmp	r3, #0
 2325 01f4 02D1     		bne	.L177
 2326 01f6 FB68     		ldr	r3, [r7, #12]
 2327 01f8 002B     		cmp	r3, #0
 2328 01fa 3AD1     		bne	.L178
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 105


 2329              	.L177:
3597:C:\Micrium\Software\uC-LIB\lib_str.c ****                 (i == 0u)) {                                    /* ... OR on one's  dig to fmt (see
3598:C:\Micrium\Software\uC-LIB\lib_str.c ****                                                                 /* ... calc & fmt dig val;         
3599:C:\Micrium\Software\uC-LIB\lib_str.c ****                 dig_val = (CPU_INT08U)(nbr_fmt % nbr_base);
 2330              		.loc 1 3599 0
 2331 01fc BA78     		ldrb	r2, [r7, #2]	@ zero_extendqisi2
 2332 01fe 3B69     		ldr	r3, [r7, #16]
 2333 0200 B3FBF2F1 		udiv	r1, r3, r2
 2334 0204 02FB01F2 		mul	r2, r2, r1
 2335 0208 C2EB0303 		rsb	r3, r2, r3
 2336 020c 87F82030 		strb	r3, [r7, #32]
3600:C:\Micrium\Software\uC-LIB\lib_str.c ****                 if (dig_val < 10u) {
 2337              		.loc 1 3600 0
 2338 0210 97F82030 		ldrb	r3, [r7, #32]	@ zero_extendqisi2
 2339 0214 092B     		cmp	r3, #9
 2340 0216 0BD8     		bhi	.L179
3601:C:\Micrium\Software\uC-LIB\lib_str.c ****                    *pstr_fmt-- = (CPU_CHAR)(dig_val + '0');
 2341              		.loc 1 3601 0
 2342 0218 97F82030 		ldrb	r3, [r7, #32]
 2343 021c 03F13003 		add	r3, r3, #48
 2344 0220 DAB2     		uxtb	r2, r3
 2345 0222 BB68     		ldr	r3, [r7, #8]
 2346 0224 1A70     		strb	r2, [r3, #0]
 2347 0226 BB68     		ldr	r3, [r7, #8]
 2348 0228 03F1FF33 		add	r3, r3, #-1
 2349 022c BB60     		str	r3, [r7, #8]
 2350 022e 1AE0     		b	.L180
 2351              	.L179:
3602:C:\Micrium\Software\uC-LIB\lib_str.c ****                 } else {
3603:C:\Micrium\Software\uC-LIB\lib_str.c ****                     if (lower_case !=  DEF_YES) {
 2352              		.loc 1 3603 0
 2353 0230 97F83430 		ldrb	r3, [r7, #52]	@ zero_extendqisi2
 2354 0234 012B     		cmp	r3, #1
 2355 0236 0BD0     		beq	.L181
3604:C:\Micrium\Software\uC-LIB\lib_str.c ****                        *pstr_fmt--  = (CPU_CHAR)((dig_val - 10u) + 'A');
 2356              		.loc 1 3604 0
 2357 0238 97F82030 		ldrb	r3, [r7, #32]
 2358 023c 03F13703 		add	r3, r3, #55
 2359 0240 DAB2     		uxtb	r2, r3
 2360 0242 BB68     		ldr	r3, [r7, #8]
 2361 0244 1A70     		strb	r2, [r3, #0]
 2362 0246 BB68     		ldr	r3, [r7, #8]
 2363 0248 03F1FF33 		add	r3, r3, #-1
 2364 024c BB60     		str	r3, [r7, #8]
 2365 024e 0AE0     		b	.L180
 2366              	.L181:
3605:C:\Micrium\Software\uC-LIB\lib_str.c ****                     } else {
3606:C:\Micrium\Software\uC-LIB\lib_str.c ****                        *pstr_fmt--  = (CPU_CHAR)((dig_val - 10u) + 'a');
 2367              		.loc 1 3606 0
 2368 0250 97F82030 		ldrb	r3, [r7, #32]
 2369 0254 03F15703 		add	r3, r3, #87
 2370 0258 DAB2     		uxtb	r2, r3
 2371 025a BB68     		ldr	r3, [r7, #8]
 2372 025c 1A70     		strb	r2, [r3, #0]
 2373 025e BB68     		ldr	r3, [r7, #8]
 2374 0260 03F1FF33 		add	r3, r3, #-1
 2375 0264 BB60     		str	r3, [r7, #8]
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 106


 2376              	.L180:
3607:C:\Micrium\Software\uC-LIB\lib_str.c ****                     }
3608:C:\Micrium\Software\uC-LIB\lib_str.c ****                 }
3609:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3610:C:\Micrium\Software\uC-LIB\lib_str.c ****                 nbr_fmt /= nbr_base;                            /* Shift to next more-sig dig.     
 2377              		.loc 1 3610 0
 2378 0266 BB78     		ldrb	r3, [r7, #2]	@ zero_extendqisi2
 2379 0268 3A69     		ldr	r2, [r7, #16]
 2380 026a B2FBF3F3 		udiv	r3, r2, r3
 2381 026e 3B61     		str	r3, [r7, #16]
 2382              		.loc 1 3596 0
 2383 0270 39E0     		b	.L186
 2384              	.L178:
3611:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3612:C:\Micrium\Software\uC-LIB\lib_str.c ****             } else if ((nbr_neg      == DEF_YES)  &&            /* ... else if nbr neg             
 2385              		.loc 1 3612 0
 2386 0272 7B78     		ldrb	r3, [r7, #1]	@ zero_extendqisi2
 2387 0274 012B     		cmp	r3, #1
 2388 0276 1FD1     		bne	.L183
 2389 0278 97F82430 		ldrb	r3, [r7, #36]	@ zero_extendqisi2
 2390 027c 002B     		cmp	r3, #0
 2391 027e 03D1     		bne	.L184
 2392 0280 97F82730 		ldrb	r3, [r7, #39]	@ zero_extendqisi2
 2393 0284 002B     		cmp	r3, #0
 2394 0286 09D0     		beq	.L185
 2395              	.L184:
 2396 0288 97F82430 		ldrb	r3, [r7, #36]	@ zero_extendqisi2
 2397 028c 002B     		cmp	r3, #0
 2398 028e 13D0     		beq	.L183
3613:C:\Micrium\Software\uC-LIB\lib_str.c ****                      (((lead_char_0  == DEF_NO )  &&            /* ... lead char NOT a '0' dig     
3614:C:\Micrium\Software\uC-LIB\lib_str.c ****                        (nbr_neg_fmtd == DEF_NO )) ||            /* ... but neg sign NOT yet fmt'd  
3615:C:\Micrium\Software\uC-LIB\lib_str.c ****                       ((lead_char_0  != DEF_NO )  &&            /* ... lead char is  a '0' dig     
3616:C:\Micrium\Software\uC-LIB\lib_str.c ****                        (i == (nbr_dig_fmtd - 1u))))) {          /* ... & on most-sig dig to fmt,   
 2399              		.loc 1 3616 0
 2400 0290 7B7F     		ldrb	r3, [r7, #29]	@ zero_extendqisi2
 2401 0292 03F1FF32 		add	r2, r3, #-1
 2402              		.loc 1 3612 0
 2403 0296 FB68     		ldr	r3, [r7, #12]
 2404 0298 9A42     		cmp	r2, r3
 2405 029a 0DD1     		bne	.L183
 2406              	.L185:
3617:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3618:C:\Micrium\Software\uC-LIB\lib_str.c ****                *pstr_fmt--   = '-';                             /* ... prepend neg sign (see Note #
 2407              		.loc 1 3618 0
 2408 029c BB68     		ldr	r3, [r7, #8]
 2409 029e 4FF02D02 		mov	r2, #45
 2410 02a2 1A70     		strb	r2, [r3, #0]
 2411 02a4 BB68     		ldr	r3, [r7, #8]
 2412 02a6 03F1FF33 		add	r3, r3, #-1
 2413 02aa BB60     		str	r3, [r7, #8]
3619:C:\Micrium\Software\uC-LIB\lib_str.c ****                 nbr_neg_fmtd = DEF_YES;
 2414              		.loc 1 3619 0
 2415 02ac 4FF00103 		mov	r3, #1
 2416 02b0 87F82730 		strb	r3, [r7, #39]
 2417              		.loc 1 3612 0
 2418 02b4 00BF     		nop
 2419 02b6 16E0     		b	.L186
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 107


 2420              	.L183:
3620:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3621:C:\Micrium\Software\uC-LIB\lib_str.c ****             } else if (lead_char != (CPU_CHAR)'\0') {           /* ... else if avail,              
 2421              		.loc 1 3621 0
 2422 02b8 97F83030 		ldrb	r3, [r7, #48]	@ zero_extendqisi2
 2423 02bc 002B     		cmp	r3, #0
 2424 02be 11D0     		beq	.L190
3622:C:\Micrium\Software\uC-LIB\lib_str.c ****                *pstr_fmt-- = lead_char;                         /* ... fmt lead char.              
 2425              		.loc 1 3622 0
 2426 02c0 BB68     		ldr	r3, [r7, #8]
 2427 02c2 97F83020 		ldrb	r2, [r7, #48]
 2428 02c6 1A70     		strb	r2, [r3, #0]
 2429 02c8 BB68     		ldr	r3, [r7, #8]
 2430 02ca 03F1FF33 		add	r3, r3, #-1
 2431 02ce BB60     		str	r3, [r7, #8]
 2432 02d0 09E0     		b	.L186
 2433              	.L176:
3623:C:\Micrium\Software\uC-LIB\lib_str.c ****             }
3624:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3625:C:\Micrium\Software\uC-LIB\lib_str.c ****         } else {                                                /* Else fmt '?' for invalid str (se
3626:C:\Micrium\Software\uC-LIB\lib_str.c ****            *pstr_fmt-- = '?';
 2434              		.loc 1 3626 0
 2435 02d2 BB68     		ldr	r3, [r7, #8]
 2436 02d4 4FF03F02 		mov	r2, #63
 2437 02d8 1A70     		strb	r2, [r3, #0]
 2438 02da BB68     		ldr	r3, [r7, #8]
 2439 02dc 03F1FF33 		add	r3, r3, #-1
 2440 02e0 BB60     		str	r3, [r7, #8]
 2441 02e2 00E0     		b	.L186
 2442              	.L190:
 2443              		.loc 1 3622 0
 2444 02e4 00BF     		nop
 2445              	.L186:
 2446              		.loc 1 3594 0
 2447 02e6 FB68     		ldr	r3, [r7, #12]
 2448 02e8 03F10103 		add	r3, r3, #1
 2449 02ec FB60     		str	r3, [r7, #12]
 2450              	.L175:
 2451 02ee 7A7F     		ldrb	r2, [r7, #29]	@ zero_extendqisi2
 2452 02f0 FB68     		ldr	r3, [r7, #12]
 2453 02f2 9A42     		cmp	r2, r3
 2454 02f4 3FF678AF 		bhi	.L187
3627:C:\Micrium\Software\uC-LIB\lib_str.c ****         }
3628:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
3629:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3630:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3631:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (fmt_invalid != DEF_NO) {                                /* Rtn NULL for invalid str fmt (se
 2455              		.loc 1 3631 0
 2456 02f8 97F82530 		ldrb	r3, [r7, #37]	@ zero_extendqisi2
 2457 02fc 002B     		cmp	r3, #0
 2458 02fe 02D0     		beq	.L188
3632:C:\Micrium\Software\uC-LIB\lib_str.c ****         return ((CPU_CHAR *)0);
 2459              		.loc 1 3632 0
 2460 0300 4FF00003 		mov	r3, #0
 2461 0304 00E0     		b	.L149
 2462              	.L188:
3633:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 108


3634:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3635:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3636:C:\Micrium\Software\uC-LIB\lib_str.c ****     return (pstr);                                              /* Rtn ptr to fmt'd str (see Note #
 2463              		.loc 1 3636 0
 2464 0306 FB6B     		ldr	r3, [r7, #60]
 2465              	.L149:
3637:C:\Micrium\Software\uC-LIB\lib_str.c **** }
 2466              		.loc 1 3637 0
 2467 0308 1846     		mov	r0, r3
 2468 030a 07F12807 		add	r7, r7, #40
 2469 030e BD46     		mov	sp, r7
 2470 0310 80BD     		pop	{r7, pc}
 2471              		.cfi_endproc
 2472              	.LFE22:
 2473              		.size	Str_FmtNbr_Int32, .-Str_FmtNbr_Int32
 2474 0312 00BF     		.section	.text.Str_ParseNbr_Int32,"ax",%progbits
 2475              		.align	2
 2476              		.thumb
 2477              		.thumb_func
 2478              		.type	Str_ParseNbr_Int32, %function
 2479              	Str_ParseNbr_Int32:
 2480              	.LFB23:
3638:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3639:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3640:C:\Micrium\Software\uC-LIB\lib_str.c **** /*$PAGE*/
3641:C:\Micrium\Software\uC-LIB\lib_str.c **** /*
3642:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
3643:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                        Str_ParseNbr_Int32()
3644:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3645:C:\Micrium\Software\uC-LIB\lib_str.c **** * Description : Parse 32-bit integer from string.
3646:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3647:C:\Micrium\Software\uC-LIB\lib_str.c **** * Argument(s) : pstr            Pointer to string (see Notes #1 & #2a).
3648:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3649:C:\Micrium\Software\uC-LIB\lib_str.c **** *               pstr_next       Optional pointer to a variable to ... :
3650:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3651:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   (a) Return a pointer to first character following the integer s
3652:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                           if NO error(s) [see Note #2a2B2];
3653:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   (b) Return a pointer to 'pstr',
3654:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                           otherwise      (see Note #2a2A2).
3655:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3656:C:\Micrium\Software\uC-LIB\lib_str.c **** *               nbr_base        Base of number to parse (see Notes #2a1B1 & #2a2B1).
3657:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3658:C:\Micrium\Software\uC-LIB\lib_str.c **** *               nbr_signed      Indicates whether number to parse is signed :
3659:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3660:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   DEF_NO                  Number is unsigned.
3661:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   DEF_YES                 Number is   signed.
3662:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3663:C:\Micrium\Software\uC-LIB\lib_str.c **** *               pnbr_neg        Pointer to a variable to return if the parsed (signed) number is ne
3664:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3665:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   DEF_NO                  Number is non-negative.
3666:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   DEF_YES                 Number is     negative.
3667:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3668:C:\Micrium\Software\uC-LIB\lib_str.c **** * Return(s)   : Parsed integer,      if integer parsed with NO overflow   (see Note #2a3A).
3669:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3670:C:\Micrium\Software\uC-LIB\lib_str.c **** *               DEF_INT_32U_MAX_VAL, if integer parsed but     overflowed (see Note #2a3A1).
3671:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3672:C:\Micrium\Software\uC-LIB\lib_str.c **** *               0,                   otherwise                            (see Note #2a3B).
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 109


3673:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3674:C:\Micrium\Software\uC-LIB\lib_str.c **** * Caller(s)   : Str_ParseNbr_Int32U(),
3675:C:\Micrium\Software\uC-LIB\lib_str.c **** *               Str_ParseNbr_Int32S().
3676:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3677:C:\Micrium\Software\uC-LIB\lib_str.c **** * Note(s)     : (1) String buffer NOT modified.
3678:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3679:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (2) (a) IEEE Std 1003.1, 2004 Edition, Section 'strtol() : DESCRIPTION' states that
3680:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       functions shall convert the initial portion of the string pointed to by 'st
3681:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       to a type long ... representation" :
3682:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3683:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) "First, they decompose the input string into three parts" :
3684:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3685:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (A) "An initial, possibly empty, sequence of white-space characters [as
3686:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                by isspace()]."
3687:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3688:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               (1) "The subject sequence is defined as the longest initial subsequ
3689:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                    input string, starting with the first non-white-space characte
3690:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                    the expected form.  The subject sequence shall contain no char
3691:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                    input string is empty or consists entirely of white-space char
3692:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3693:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (B) (1) "A subject sequence interpreted as an integer represented in so
3694:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                    determined by the value of 'base' ('nbr_base')" :
3695:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3696:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   (a) "If the value of 'base' ('nbr_base') is 0, the expected for
3697:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                        subject sequence is that of a decimal constant, octal cons
3698:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                        hexadecimal constant" :
3699:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3700:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       (1) "A decimal constant begins with a non-zero digit, and c
3701:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                            sequence of decimal digits."
3702:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3703:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       (2) "An octal constant consists of the prefix '0' optionall
3704:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                            a sequence of the digits '0' to '7' only."
3705:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3706:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       (3) "A hexadecimal constant consists of the prefix '0x' or 
3707:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                            by a sequence of the decimal digits and letters 'a' (o
3708:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                            (or 'F') with values 10 to 15 respectively."
3709:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3710:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   (b) "If the value of 'base' ('nbr_base') is between 2 and 36, t
3711:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                        of the subject sequence is a sequence of letters and digit
3712:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                        an integer with the radix specified by 'base' ('nbr_base')
3713:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3714:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       (1) (A) "The letters from 'a' (or 'A') to 'z' (or 'Z') incl
3715:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                                ascribed the values 10 to 35"; ...
3716:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                           (B) "only letters whose ascribed values are less than t
3717:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                                are permitted."
3718:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3719:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       (2) (A) "If the value of 'base' ('nbr_base') is 16, the cha
3720:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                               '0X' may optionally precede the sequence of letters
3721:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3722:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                           (B) Although NO specification states that "if the value
3723:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                               ('nbr_base') is" 8, the '0' character "may optional
3724:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                               the sequence of letters and digits"; it seems reaso
3725:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                               allow the '0' character to be optionally parsed.
3726:C:\Micrium\Software\uC-LIB\lib_str.c **** *$PAGE*
3727:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               (2) "A subject sequence .... may be preceded by a '+' or '-' sign."
3728:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3729:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   (a) It does NOT seem reasonable to parse & convert a negative n
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 110


3730:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       integer string into an unsigned integer.  However, a negati
3731:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       for an unsigned integer will automatically be parsed as an 
3732:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                       character (see Note #2aC1).
3733:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3734:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (C) (1) (a) "A final string of one or more unrecognized characters,"  .
3735:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   (b) "including the terminating null byte of the input string" .
3736:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               (2) "other than a sign or a permissible letter or digit."
3737:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3738:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) Second, "they shall attempt to convert the subject sequence to an integ
3739:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3740:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (A) "If the subject sequence is empty or does not have the expected for
3741:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3742:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               (1) "no conversion is performed"; ...
3743:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               (2) "the value of 'str' ('pstr') is stored in the object pointed to
3744:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                    ('pstr_next'), provided that 'endptr' ('pstr_next') is not a n
3745:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3746:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (B) "If the subject sequence has the expected form" :
3747:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3748:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               (1) (a) "and the value of 'base' ('nbr_base') is 0, the sequence of
3749:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                        starting with the first digit shall be interpreted as an i
3750:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3751:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   (b) "and the value of 'base' ('nbr_base') is between 2 and 36, 
3752:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                        used as the base for conversion, ascribing to each letter 
3753:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                        given above" (see Note #2a1B1b1A).
3754:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3755:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               (2) "A pointer to the final string shall be stored in the object po
3756:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   'endptr' ('pstr_next'), provided that 'endptr' ('pstr_next') is
3757:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                   pointer."
3758:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3759:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (3) Lastly, IEEE Std 1003.1, 2004 Edition, Section 'strtol() : RETURN VALUE
3760:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3761:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (A) "Upon successful completion, these functions shall return the conve
3762:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               (1) "If the correct value is outside the range of representable val
3763:C:\Micrium\Software\uC-LIB\lib_str.c **** *                                    [or] {LONG_MAX} ... shall be returned."
3764:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3765:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (B) "If no conversion could be performed, 0 shall be returned."
3766:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3767:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) (1) IEEE Std 1003.1, 2004 Edition, Section 'strtoul() : ERRORS' states that
3768:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           shall fail if" :
3769:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3770:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (A) "[EINVAL] - The value of 'base' ('nbr_base') is not supported."
3771:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3772:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (B) "[ERANGE] - The value to be returned is not representable."
3773:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3774:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) IEEE Std 1003.1, 2004 Edition, Section 'strtoul() : ERRORS' states that
3775:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           may fail if" :
3776:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3777:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (A) "[EINVAL] - No conversion could be performed."
3778:C:\Micrium\Software\uC-LIB\lib_str.c **** *$PAGE*
3779:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (3) Return integer value & next string pointer should be used to diagnose parse suc
3780:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3781:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (a) Valid parse string integer :
3782:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3783:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           pstr      = "     ABCDE xyz"
3784:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           nbr_base  = 16
3785:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3786:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           nbr       = 703710
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 111


3787:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           pstr_next = " xyz"
3788:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3789:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3790:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) Invalid parse string integer :
3791:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3792:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           pstr      = "     ABCDE"
3793:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           nbr_base  = 10
3794:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3795:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           nbr       =  0
3796:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           pstr_next = pstr = "     ABCDE"
3797:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3798:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3799:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (c) Valid hexadecimal parse string integer :
3800:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3801:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           pstr      = "     0xGABCDE"
3802:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           nbr_base  = 16
3803:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3804:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           nbr       =  0
3805:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           pstr_next = "xGABCDE"
3806:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3807:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3808:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (d) Valid decimal parse string integer ('0x' prefix ignored
3809:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               following invalid hexadecimal characters) :
3810:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3811:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           pstr      = "     0xGABCDE"
3812:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           nbr_base  =  0
3813:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3814:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           nbr       =  0
3815:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           pstr_next = "xGABCDE"
3816:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3817:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3818:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (e) Valid decimal parse string integer ('0'  prefix ignored
3819:C:\Micrium\Software\uC-LIB\lib_str.c **** *                               following invalid octal       characters) :
3820:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3821:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           pstr      = "     0GABCDE"
3822:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           nbr_base  =  0
3823:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3824:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           nbr       =  0
3825:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           pstr_next = "GABCDE"
3826:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3827:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3828:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (f) Parse string integer overflow :
3829:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3830:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           pstr      = "   12345678901234567890*123456"
3831:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           nbr_base  = 10
3832:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3833:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           nbr       = DEF_INT_32U_MAX_VAL
3834:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           pstr_next = "*123456"
3835:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3836:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3837:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (g) Parse string integer underflow :
3838:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3839:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           pstr      = "  -12345678901234567890*123456"
3840:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           nbr_base  = 10
3841:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3842:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           nbr       = DEF_INT_32S_MIN_VAL
3843:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           pstr_next = "*123456"
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 112


3844:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3845:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3846:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (4) String parse terminates when :
3847:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3848:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (a) Base passed an invalid base (see Note #2a1B1b).
3849:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (1) No conversion performed; 0 returned.
3850:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3851:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   (b) (1) Parse string passed a NULL pointer OR empty integer sequence (see Note 
3852:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (A) No conversion performed; 0 returned.
3853:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3854:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (2) Invalid parse string character found (see Note #2a1C).
3855:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (A) Parsed integer returned.
3856:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (B) 'pstr_next' points to invalid character.
3857:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3858:C:\Micrium\Software\uC-LIB\lib_str.c **** *                       (3) Entire  parse string converted (see Note #2a2B).
3859:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (A) Parsed integer returned.
3860:C:\Micrium\Software\uC-LIB\lib_str.c **** *                           (B) 'pstr_next' points to terminating NULL character.
3861:C:\Micrium\Software\uC-LIB\lib_str.c **** *
3862:C:\Micrium\Software\uC-LIB\lib_str.c **** *               (5) Pointers to variables that return values MUST be initialized PRIOR to all other
3863:C:\Micrium\Software\uC-LIB\lib_str.c **** *                   validation or function handling in case of any error(s).
3864:C:\Micrium\Software\uC-LIB\lib_str.c **** ***************************************************************************************************
3865:C:\Micrium\Software\uC-LIB\lib_str.c **** */
3866:C:\Micrium\Software\uC-LIB\lib_str.c **** /*$PAGE*/
3867:C:\Micrium\Software\uC-LIB\lib_str.c **** static  CPU_INT32U  Str_ParseNbr_Int32 (const  CPU_CHAR      *pstr,
3868:C:\Micrium\Software\uC-LIB\lib_str.c ****                                                CPU_CHAR     **pstr_next,
3869:C:\Micrium\Software\uC-LIB\lib_str.c ****                                                CPU_INT08U     nbr_base,
3870:C:\Micrium\Software\uC-LIB\lib_str.c ****                                                CPU_BOOLEAN    nbr_signed,
3871:C:\Micrium\Software\uC-LIB\lib_str.c ****                                                CPU_BOOLEAN   *pnbr_neg)
3872:C:\Micrium\Software\uC-LIB\lib_str.c **** {
 2481              		.loc 1 3872 0
 2482              		.cfi_startproc
 2483              		@ args = 4, pretend = 0, frame = 48
 2484              		@ frame_needed = 1, uses_anonymous_args = 0
 2485 0000 80B5     		push	{r7, lr}
 2486              	.LCFI69:
 2487              		.cfi_def_cfa_offset 8
 2488 0002 8CB0     		sub	sp, sp, #48
 2489              	.LCFI70:
 2490              		.cfi_def_cfa_offset 56
 2491 0004 00AF     		add	r7, sp, #0
 2492              		.cfi_offset 14, -4
 2493              		.cfi_offset 7, -8
 2494              	.LCFI71:
 2495              		.cfi_def_cfa_register 7
 2496 0006 F860     		str	r0, [r7, #12]
 2497 0008 B960     		str	r1, [r7, #8]
 2498 000a FA71     		strb	r2, [r7, #7]
 2499 000c BB71     		strb	r3, [r7, #6]
3873:C:\Micrium\Software\uC-LIB\lib_str.c ****     const  CPU_CHAR     *pstr_parse;
3874:C:\Micrium\Software\uC-LIB\lib_str.c ****     const  CPU_CHAR     *pstr_parse_nbr;
3875:C:\Micrium\Software\uC-LIB\lib_str.c ****            CPU_CHAR     *pstr_parse_unused;
3876:C:\Micrium\Software\uC-LIB\lib_str.c ****            CPU_CHAR      parse_char;
3877:C:\Micrium\Software\uC-LIB\lib_str.c ****            CPU_INT08U    parse_dig;
3878:C:\Micrium\Software\uC-LIB\lib_str.c ****            CPU_INT32U    nbr;
3879:C:\Micrium\Software\uC-LIB\lib_str.c ****            CPU_BOOLEAN   nbr_neg_unused;
3880:C:\Micrium\Software\uC-LIB\lib_str.c ****            CPU_BOOLEAN   nbr_dig;
3881:C:\Micrium\Software\uC-LIB\lib_str.c ****            CPU_BOOLEAN   nbr_alpha;
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 113


3882:C:\Micrium\Software\uC-LIB\lib_str.c ****            CPU_BOOLEAN   nbr_hex;
3883:C:\Micrium\Software\uC-LIB\lib_str.c ****            CPU_BOOLEAN   nbr_hex_lower;
3884:C:\Micrium\Software\uC-LIB\lib_str.c ****            CPU_BOOLEAN   whitespace;
3885:C:\Micrium\Software\uC-LIB\lib_str.c ****            CPU_BOOLEAN   neg;
3886:C:\Micrium\Software\uC-LIB\lib_str.c ****            CPU_BOOLEAN   ovf;
3887:C:\Micrium\Software\uC-LIB\lib_str.c ****            CPU_BOOLEAN   done;
3888:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3889:C:\Micrium\Software\uC-LIB\lib_str.c ****                                                                 /* --------------- VALIDATE PARSE A
3890:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (pstr_next == (CPU_CHAR **) 0) {                         /* If NOT avail, ...               
 2500              		.loc 1 3890 0
 2501 000e BB68     		ldr	r3, [r7, #8]
 2502 0010 002B     		cmp	r3, #0
 2503 0012 02D1     		bne	.L192
3891:C:\Micrium\Software\uC-LIB\lib_str.c ****         pstr_next  = (CPU_CHAR **)&pstr_parse_unused;           /* ... re-cfg NULL rtn ptr to unuse
 2504              		.loc 1 3891 0
 2505 0014 07F11403 		add	r3, r7, #20
 2506 0018 BB60     		str	r3, [r7, #8]
 2507              	.L192:
3892:C:\Micrium\Software\uC-LIB\lib_str.c ****        (void)&pstr_parse_unused;                                /* Prevent possible 'variable unuse
3893:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
3894:C:\Micrium\Software\uC-LIB\lib_str.c ****    *pstr_next = (CPU_CHAR *)pstr;                               /* Init rtn str for err (see Note #
 2508              		.loc 1 3894 0
 2509 001a BB68     		ldr	r3, [r7, #8]
 2510 001c FA68     		ldr	r2, [r7, #12]
 2511 001e 1A60     		str	r2, [r3, #0]
3895:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3896:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (pnbr_neg == (CPU_BOOLEAN *) 0) {                        /* If NOT avail, ...               
 2512              		.loc 1 3896 0
 2513 0020 BB6B     		ldr	r3, [r7, #56]
 2514 0022 002B     		cmp	r3, #0
 2515 0024 02D1     		bne	.L193
3897:C:\Micrium\Software\uC-LIB\lib_str.c ****         pnbr_neg  = (CPU_BOOLEAN *)&nbr_neg_unused;             /* ... re-cfg NULL rtn ptr to unuse
 2516              		.loc 1 3897 0
 2517 0026 07F11303 		add	r3, r7, #19
 2518 002a BB63     		str	r3, [r7, #56]
 2519              	.L193:
3898:C:\Micrium\Software\uC-LIB\lib_str.c ****        (void)&nbr_neg_unused;                                   /* Prevent possible 'variable unuse
3899:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
3900:C:\Micrium\Software\uC-LIB\lib_str.c ****    *pnbr_neg = DEF_NO;                                          /* Init nbr neg for err (see Note #
 2520              		.loc 1 3900 0
 2521 002c BB6B     		ldr	r3, [r7, #56]
 2522 002e 4FF00002 		mov	r2, #0
 2523 0032 1A70     		strb	r2, [r3, #0]
3901:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3902:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3903:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (pstr == (CPU_CHAR *)0) {                                /* Rtn zero if str ptr NULL (see No
 2524              		.loc 1 3903 0
 2525 0034 FB68     		ldr	r3, [r7, #12]
 2526 0036 002B     		cmp	r3, #0
 2527 0038 02D1     		bne	.L194
3904:C:\Micrium\Software\uC-LIB\lib_str.c ****         return (0u);
 2528              		.loc 1 3904 0
 2529 003a 4FF00003 		mov	r3, #0
 2530 003e 4AE1     		b	.L195
 2531              	.L194:
3905:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
3906:C:\Micrium\Software\uC-LIB\lib_str.c ****                                                                 /* Rtn zero if invalid base (see No
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 114


3907:C:\Micrium\Software\uC-LIB\lib_str.c ****     if ((nbr_base == 1u) ||
 2532              		.loc 1 3907 0
 2533 0040 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2534 0042 012B     		cmp	r3, #1
 2535 0044 02D0     		beq	.L196
 2536 0046 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2537 0048 242B     		cmp	r3, #36
 2538 004a 02D9     		bls	.L197
 2539              	.L196:
3908:C:\Micrium\Software\uC-LIB\lib_str.c ****         (nbr_base > 36u)) {
3909:C:\Micrium\Software\uC-LIB\lib_str.c ****         return (0u);
 2540              		.loc 1 3909 0
 2541 004c 4FF00003 		mov	r3, #0
 2542 0050 41E1     		b	.L195
 2543              	.L197:
3910:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
3911:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3912:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3913:C:\Micrium\Software\uC-LIB\lib_str.c ****                                                                 /* ------------- IGNORE PRECEDING C
3914:C:\Micrium\Software\uC-LIB\lib_str.c ****     pstr_parse = pstr;                                          /* Save ptr to init'l str for err (
 2544              		.loc 1 3914 0
 2545 0052 FB68     		ldr	r3, [r7, #12]
 2546 0054 BB61     		str	r3, [r7, #24]
3915:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3916:C:\Micrium\Software\uC-LIB\lib_str.c ****     whitespace = ASCII_IsSpace(*pstr_parse);
 2547              		.loc 1 3916 0
 2548 0056 BB69     		ldr	r3, [r7, #24]
 2549 0058 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2550 005a 1846     		mov	r0, r3
 2551 005c FFF7FEFF 		bl	ASCII_IsSpace
 2552 0060 0346     		mov	r3, r0
 2553 0062 87F82C30 		strb	r3, [r7, #44]
3917:C:\Micrium\Software\uC-LIB\lib_str.c ****     while (whitespace == DEF_YES) {                             /* Ignore initial white-space char(
 2554              		.loc 1 3917 0
 2555 0066 0BE0     		b	.L198
 2556              	.L199:
3918:C:\Micrium\Software\uC-LIB\lib_str.c ****         pstr_parse++;
 2557              		.loc 1 3918 0
 2558 0068 BB69     		ldr	r3, [r7, #24]
 2559 006a 03F10103 		add	r3, r3, #1
 2560 006e BB61     		str	r3, [r7, #24]
3919:C:\Micrium\Software\uC-LIB\lib_str.c ****         whitespace = ASCII_IsSpace(*pstr_parse);
 2561              		.loc 1 3919 0
 2562 0070 BB69     		ldr	r3, [r7, #24]
 2563 0072 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2564 0074 1846     		mov	r0, r3
 2565 0076 FFF7FEFF 		bl	ASCII_IsSpace
 2566 007a 0346     		mov	r3, r0
 2567 007c 87F82C30 		strb	r3, [r7, #44]
 2568              	.L198:
 2569              		.loc 1 3917 0
 2570 0080 97F82C30 		ldrb	r3, [r7, #44]	@ zero_extendqisi2
 2571 0084 012B     		cmp	r3, #1
 2572 0086 EFD0     		beq	.L199
3920:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
3921:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3922:C:\Micrium\Software\uC-LIB\lib_str.c ****     switch (*pstr_parse) {
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 115


 2573              		.loc 1 3922 0
 2574 0088 BB69     		ldr	r3, [r7, #24]
 2575 008a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2576 008c 2B2B     		cmp	r3, #43
 2577 008e 02D0     		beq	.L201
 2578 0090 2D2B     		cmp	r3, #45
 2579 0092 09D0     		beq	.L202
 2580 0094 14E0     		b	.L232
 2581              	.L201:
3923:C:\Micrium\Software\uC-LIB\lib_str.c ****         case '+':                                               /* Ignore   pos sign (see Note #2a1
3924:C:\Micrium\Software\uC-LIB\lib_str.c ****              pstr_parse++;
 2582              		.loc 1 3924 0
 2583 0096 BB69     		ldr	r3, [r7, #24]
 2584 0098 03F10103 		add	r3, r3, #1
 2585 009c BB61     		str	r3, [r7, #24]
3925:C:\Micrium\Software\uC-LIB\lib_str.c ****              neg = DEF_NO;
 2586              		.loc 1 3925 0
 2587 009e 4FF00003 		mov	r3, #0
 2588 00a2 87F82D30 		strb	r3, [r7, #45]
3926:C:\Micrium\Software\uC-LIB\lib_str.c ****              break;
 2589              		.loc 1 3926 0
 2590 00a6 0FE0     		b	.L203
 2591              	.L202:
3927:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3928:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3929:C:\Micrium\Software\uC-LIB\lib_str.c ****         case '-':                                               /* Validate neg sign (see Note #2a1
3930:C:\Micrium\Software\uC-LIB\lib_str.c ****              if (nbr_signed == DEF_YES) {
 2592              		.loc 1 3930 0
 2593 00a8 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2594 00aa 012B     		cmp	r3, #1
 2595 00ac 03D1     		bne	.L204
3931:C:\Micrium\Software\uC-LIB\lib_str.c ****                  pstr_parse++;
 2596              		.loc 1 3931 0
 2597 00ae BB69     		ldr	r3, [r7, #24]
 2598 00b0 03F10103 		add	r3, r3, #1
 2599 00b4 BB61     		str	r3, [r7, #24]
 2600              	.L204:
3932:C:\Micrium\Software\uC-LIB\lib_str.c ****              }
3933:C:\Micrium\Software\uC-LIB\lib_str.c ****              neg = DEF_YES;
 2601              		.loc 1 3933 0
 2602 00b6 4FF00103 		mov	r3, #1
 2603 00ba 87F82D30 		strb	r3, [r7, #45]
3934:C:\Micrium\Software\uC-LIB\lib_str.c ****              break;
 2604              		.loc 1 3934 0
 2605 00be 03E0     		b	.L203
 2606              	.L232:
3935:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3936:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3937:C:\Micrium\Software\uC-LIB\lib_str.c ****         default:
3938:C:\Micrium\Software\uC-LIB\lib_str.c ****              neg = DEF_NO;
 2607              		.loc 1 3938 0
 2608 00c0 4FF00003 		mov	r3, #0
 2609 00c4 87F82D30 		strb	r3, [r7, #45]
 2610              	.L203:
3939:C:\Micrium\Software\uC-LIB\lib_str.c ****              break;
3940:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
3941:C:\Micrium\Software\uC-LIB\lib_str.c **** 
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 116


3942:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3943:C:\Micrium\Software\uC-LIB\lib_str.c **** /*$PAGE*/
3944:C:\Micrium\Software\uC-LIB\lib_str.c ****                                                                 /* --------- IGNORE NBR BASE PRECED
3945:C:\Micrium\Software\uC-LIB\lib_str.c ****     pstr_parse_nbr = pstr_parse;                                /* Save ptr to str's nbr (see Note 
 2611              		.loc 1 3945 0
 2612 00c8 BB69     		ldr	r3, [r7, #24]
 2613 00ca FB61     		str	r3, [r7, #28]
3946:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3947:C:\Micrium\Software\uC-LIB\lib_str.c ****     switch (nbr_base) {
 2614              		.loc 1 3947 0
 2615 00cc FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2616 00ce 082B     		cmp	r3, #8
 2617 00d0 34D0     		beq	.L207
 2618 00d2 102B     		cmp	r3, #16
 2619 00d4 3BD0     		beq	.L208
 2620 00d6 002B     		cmp	r3, #0
 2621 00d8 5FD1     		bne	.L205
 2622              	.L206:
3948:C:\Micrium\Software\uC-LIB\lib_str.c ****         case  0u:                                               /* Determine unspecified nbr base (
3949:C:\Micrium\Software\uC-LIB\lib_str.c ****              if (*pstr_parse == '0') {                          /* If avail, ...                   
 2623              		.loc 1 3949 0
 2624 00da BB69     		ldr	r3, [r7, #24]
 2625 00dc 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2626 00de 302B     		cmp	r3, #48
 2627 00e0 28D1     		bne	.L209
3950:C:\Micrium\Software\uC-LIB\lib_str.c ****                   pstr_parse++;                                 /* ... adv past '0'  prefix (see No
 2628              		.loc 1 3950 0
 2629 00e2 BB69     		ldr	r3, [r7, #24]
 2630 00e4 03F10103 		add	r3, r3, #1
 2631 00e8 BB61     		str	r3, [r7, #24]
3951:C:\Micrium\Software\uC-LIB\lib_str.c ****                   switch (*pstr_parse) {
 2632              		.loc 1 3951 0
 2633 00ea BB69     		ldr	r3, [r7, #24]
 2634 00ec 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2635 00ee 582B     		cmp	r3, #88
 2636 00f0 01D0     		beq	.L211
 2637 00f2 782B     		cmp	r3, #120
 2638 00f4 1AD1     		bne	.L233
 2639              	.L211:
3952:C:\Micrium\Software\uC-LIB\lib_str.c ****                       case 'x':                                 /* For '0x' prefix, ...            
3953:C:\Micrium\Software\uC-LIB\lib_str.c ****                       case 'X':
3954:C:\Micrium\Software\uC-LIB\lib_str.c ****                            nbr_base   = 16u;                    /* ... set nbr base = 16    (see No
 2640              		.loc 1 3954 0
 2641 00f6 4FF01003 		mov	r3, #16
 2642 00fa FB71     		strb	r3, [r7, #7]
3955:C:\Micrium\Software\uC-LIB\lib_str.c ****                            parse_char = (CPU_CHAR)(*(pstr_parse + 1));
 2643              		.loc 1 3955 0
 2644 00fc BB69     		ldr	r3, [r7, #24]
 2645 00fe 03F10103 		add	r3, r3, #1
 2646 0102 1B78     		ldrb	r3, [r3, #0]
 2647 0104 87F82230 		strb	r3, [r7, #34]
3956:C:\Micrium\Software\uC-LIB\lib_str.c ****                            nbr_hex    =  ASCII_IsDigHex(parse_char);
 2648              		.loc 1 3956 0
 2649 0108 97F82230 		ldrb	r3, [r7, #34]	@ zero_extendqisi2
 2650 010c 1846     		mov	r0, r3
 2651 010e FFF7FEFF 		bl	ASCII_IsDigHex
 2652 0112 0346     		mov	r3, r0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 117


 2653 0114 87F82A30 		strb	r3, [r7, #42]
3957:C:\Micrium\Software\uC-LIB\lib_str.c ****                            if (nbr_hex == DEF_YES) {            /* If next char is valid hex dig, .
 2654              		.loc 1 3957 0
 2655 0118 97F82A30 		ldrb	r3, [r7, #42]	@ zero_extendqisi2
 2656 011c 012B     		cmp	r3, #1
 2657 011e 03D1     		bne	.L212
3958:C:\Micrium\Software\uC-LIB\lib_str.c ****                                pstr_parse++;                    /* ... adv past '0x' prefix (see No
 2658              		.loc 1 3958 0
 2659 0120 BB69     		ldr	r3, [r7, #24]
 2660 0122 03F10103 		add	r3, r3, #1
 2661 0126 BB61     		str	r3, [r7, #24]
 2662              	.L212:
3959:C:\Micrium\Software\uC-LIB\lib_str.c ****                            }
3960:C:\Micrium\Software\uC-LIB\lib_str.c ****                            break;
 2663              		.loc 1 3960 0
 2664 0128 00BF     		nop
3961:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3962:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3963:C:\Micrium\Software\uC-LIB\lib_str.c ****                       default:                                  /* For '0'  prefix, ...            
3964:C:\Micrium\Software\uC-LIB\lib_str.c ****                            nbr_base =  8u;                      /* ... set nbr base =  8    (see No
3965:C:\Micrium\Software\uC-LIB\lib_str.c ****                            break;
3966:C:\Micrium\Software\uC-LIB\lib_str.c ****                   }
3967:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3968:C:\Micrium\Software\uC-LIB\lib_str.c ****              } else {                                           /* For non-'0' prefix, ...         
3969:C:\Micrium\Software\uC-LIB\lib_str.c ****                  nbr_base = 10u;                                /* ... set nbr base = 10    (see No
3970:C:\Micrium\Software\uC-LIB\lib_str.c ****              }
3971:C:\Micrium\Software\uC-LIB\lib_str.c ****              break;
 2665              		.loc 1 3971 0
 2666 012a 36E0     		b	.L205
 2667              	.L233:
 2668              		.loc 1 3964 0
 2669 012c 4FF00803 		mov	r3, #8
 2670 0130 FB71     		strb	r3, [r7, #7]
 2671              		.loc 1 3971 0
 2672 0132 32E0     		b	.L205
 2673              	.L209:
 2674              		.loc 1 3969 0
 2675 0134 4FF00A03 		mov	r3, #10
 2676 0138 FB71     		strb	r3, [r7, #7]
 2677              		.loc 1 3971 0
 2678 013a 2EE0     		b	.L205
 2679              	.L207:
3972:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3973:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3974:C:\Micrium\Software\uC-LIB\lib_str.c ****         case  8u:                                               /* See Note #2a1B1a2.              
3975:C:\Micrium\Software\uC-LIB\lib_str.c ****              if (*pstr_parse == '0') {                          /* If avail, ...                   
 2680              		.loc 1 3975 0
 2681 013c BB69     		ldr	r3, [r7, #24]
 2682 013e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2683 0140 302B     		cmp	r3, #48
 2684 0142 29D1     		bne	.L234
3976:C:\Micrium\Software\uC-LIB\lib_str.c ****                   pstr_parse++;                                 /* ... adv past '0'  prefix (see No
 2685              		.loc 1 3976 0
 2686 0144 BB69     		ldr	r3, [r7, #24]
 2687 0146 03F10103 		add	r3, r3, #1
 2688 014a BB61     		str	r3, [r7, #24]
3977:C:\Micrium\Software\uC-LIB\lib_str.c ****              }
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 118


3978:C:\Micrium\Software\uC-LIB\lib_str.c ****              break;
 2689              		.loc 1 3978 0
 2690 014c 25E0     		b	.L205
 2691              	.L208:
3979:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3980:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3981:C:\Micrium\Software\uC-LIB\lib_str.c ****         case 16u:                                               /* See Note #2a1B1a3.              
3982:C:\Micrium\Software\uC-LIB\lib_str.c ****              if (*pstr_parse == '0') {                          /* If avail, ...                   
 2692              		.loc 1 3982 0
 2693 014e BB69     		ldr	r3, [r7, #24]
 2694 0150 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2695 0152 302B     		cmp	r3, #48
 2696 0154 21D1     		bne	.L205
3983:C:\Micrium\Software\uC-LIB\lib_str.c ****                   pstr_parse++;                                 /* ... adv past '0'  prefix (see No
 2697              		.loc 1 3983 0
 2698 0156 BB69     		ldr	r3, [r7, #24]
 2699 0158 03F10103 		add	r3, r3, #1
 2700 015c BB61     		str	r3, [r7, #24]
3984:C:\Micrium\Software\uC-LIB\lib_str.c ****                   switch (*pstr_parse) {
 2701              		.loc 1 3984 0
 2702 015e BB69     		ldr	r3, [r7, #24]
 2703 0160 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2704 0162 582B     		cmp	r3, #88
 2705 0164 01D0     		beq	.L216
 2706 0166 782B     		cmp	r3, #120
 2707 0168 17D1     		bne	.L205
 2708              	.L216:
3985:C:\Micrium\Software\uC-LIB\lib_str.c ****                       case 'x':
3986:C:\Micrium\Software\uC-LIB\lib_str.c ****                       case 'X':
3987:C:\Micrium\Software\uC-LIB\lib_str.c ****                            parse_char = (CPU_CHAR)(*(pstr_parse + 1));
 2709              		.loc 1 3987 0
 2710 016a BB69     		ldr	r3, [r7, #24]
 2711 016c 03F10103 		add	r3, r3, #1
 2712 0170 1B78     		ldrb	r3, [r3, #0]
 2713 0172 87F82230 		strb	r3, [r7, #34]
3988:C:\Micrium\Software\uC-LIB\lib_str.c ****                            nbr_hex    =  ASCII_IsDigHex(parse_char);
 2714              		.loc 1 3988 0
 2715 0176 97F82230 		ldrb	r3, [r7, #34]	@ zero_extendqisi2
 2716 017a 1846     		mov	r0, r3
 2717 017c FFF7FEFF 		bl	ASCII_IsDigHex
 2718 0180 0346     		mov	r3, r0
 2719 0182 87F82A30 		strb	r3, [r7, #42]
3989:C:\Micrium\Software\uC-LIB\lib_str.c ****                            if (nbr_hex == DEF_YES) {            /* If next char is valid hex dig, .
 2720              		.loc 1 3989 0
 2721 0186 97F82A30 		ldrb	r3, [r7, #42]	@ zero_extendqisi2
 2722 018a 012B     		cmp	r3, #1
 2723 018c 05D1     		bne	.L205
3990:C:\Micrium\Software\uC-LIB\lib_str.c ****                                pstr_parse++;                    /* ... adv past '0x' prefix (see No
 2724              		.loc 1 3990 0
 2725 018e BB69     		ldr	r3, [r7, #24]
 2726 0190 03F10103 		add	r3, r3, #1
 2727 0194 BB61     		str	r3, [r7, #24]
 2728 0196 00E0     		b	.L205
 2729              	.L234:
 2730              		.loc 1 3978 0
 2731 0198 00BF     		nop
 2732              	.L205:
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 119


3991:C:\Micrium\Software\uC-LIB\lib_str.c ****                            }
3992:C:\Micrium\Software\uC-LIB\lib_str.c ****                            break;
3993:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3994:C:\Micrium\Software\uC-LIB\lib_str.c **** 
3995:C:\Micrium\Software\uC-LIB\lib_str.c ****                       default:
3996:C:\Micrium\Software\uC-LIB\lib_str.c ****                            break;
3997:C:\Micrium\Software\uC-LIB\lib_str.c ****                   }
3998:C:\Micrium\Software\uC-LIB\lib_str.c ****              }
3999:C:\Micrium\Software\uC-LIB\lib_str.c ****              break;
4000:C:\Micrium\Software\uC-LIB\lib_str.c **** 
4001:C:\Micrium\Software\uC-LIB\lib_str.c **** 
4002:C:\Micrium\Software\uC-LIB\lib_str.c ****         default:                                                /* See Note #2a1B1b.               
4003:C:\Micrium\Software\uC-LIB\lib_str.c ****              break;
4004:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
4005:C:\Micrium\Software\uC-LIB\lib_str.c **** 
4006:C:\Micrium\Software\uC-LIB\lib_str.c **** 
4007:C:\Micrium\Software\uC-LIB\lib_str.c **** /*$PAGE*/
4008:C:\Micrium\Software\uC-LIB\lib_str.c ****                                                                 /* ------------------ PARSE INT STR
4009:C:\Micrium\Software\uC-LIB\lib_str.c ****     nbr  = 0u;
 2733              		.loc 1 4009 0
 2734 019a 4FF00003 		mov	r3, #0
 2735 019e 7B62     		str	r3, [r7, #36]
4010:C:\Micrium\Software\uC-LIB\lib_str.c ****     ovf  = DEF_NO;
 2736              		.loc 1 4010 0
 2737 01a0 4FF00003 		mov	r3, #0
 2738 01a4 87F82E30 		strb	r3, [r7, #46]
4011:C:\Micrium\Software\uC-LIB\lib_str.c ****     done = DEF_NO;
 2739              		.loc 1 4011 0
 2740 01a8 4FF00003 		mov	r3, #0
 2741 01ac 87F82F30 		strb	r3, [r7, #47]
4012:C:\Micrium\Software\uC-LIB\lib_str.c **** 
4013:C:\Micrium\Software\uC-LIB\lib_str.c ****     while (done == DEF_NO) {                                    /* Parse str for desired nbr base d
 2742              		.loc 1 4013 0
 2743 01b0 76E0     		b	.L217
 2744              	.L227:
4014:C:\Micrium\Software\uC-LIB\lib_str.c ****         parse_char = (CPU_CHAR)*pstr_parse;
 2745              		.loc 1 4014 0
 2746 01b2 BB69     		ldr	r3, [r7, #24]
 2747 01b4 1B78     		ldrb	r3, [r3, #0]
 2748 01b6 87F82230 		strb	r3, [r7, #34]
4015:C:\Micrium\Software\uC-LIB\lib_str.c ****         nbr_alpha  =  ASCII_IsAlphaNum(parse_char);
 2749              		.loc 1 4015 0
 2750 01ba 97F82230 		ldrb	r3, [r7, #34]	@ zero_extendqisi2
 2751 01be 1846     		mov	r0, r3
 2752 01c0 FFF7FEFF 		bl	ASCII_IsAlphaNum
 2753 01c4 0346     		mov	r3, r0
 2754 01c6 87F82930 		strb	r3, [r7, #41]
4016:C:\Micrium\Software\uC-LIB\lib_str.c ****         if (nbr_alpha == DEF_YES) {                             /* If valid alpha num nbr dig avail
 2755              		.loc 1 4016 0
 2756 01ca 97F82930 		ldrb	r3, [r7, #41]	@ zero_extendqisi2
 2757 01ce 012B     		cmp	r3, #1
 2758 01d0 62D1     		bne	.L218
4017:C:\Micrium\Software\uC-LIB\lib_str.c ****                                                                 /* ... convert parse char into nbr 
4018:C:\Micrium\Software\uC-LIB\lib_str.c ****             nbr_dig = ASCII_IsDig(parse_char);
 2759              		.loc 1 4018 0
 2760 01d2 97F82230 		ldrb	r3, [r7, #34]	@ zero_extendqisi2
 2761 01d6 1846     		mov	r0, r3
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 120


 2762 01d8 FFF7FEFF 		bl	ASCII_IsDig
 2763 01dc 0346     		mov	r3, r0
 2764 01de 87F82830 		strb	r3, [r7, #40]
4019:C:\Micrium\Software\uC-LIB\lib_str.c ****             if (nbr_dig == DEF_YES) {
 2765              		.loc 1 4019 0
 2766 01e2 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 2767 01e6 012B     		cmp	r3, #1
 2768 01e8 06D1     		bne	.L219
4020:C:\Micrium\Software\uC-LIB\lib_str.c ****                 parse_dig = (CPU_INT08U)(parse_char - '0');
 2769              		.loc 1 4020 0
 2770 01ea 97F82230 		ldrb	r3, [r7, #34]
 2771 01ee A3F13003 		sub	r3, r3, #48
 2772 01f2 87F82330 		strb	r3, [r7, #35]
 2773 01f6 18E0     		b	.L220
 2774              	.L219:
4021:C:\Micrium\Software\uC-LIB\lib_str.c ****             } else {
4022:C:\Micrium\Software\uC-LIB\lib_str.c ****                 nbr_hex_lower = ASCII_IsLower(parse_char);
 2775              		.loc 1 4022 0
 2776 01f8 97F82230 		ldrb	r3, [r7, #34]	@ zero_extendqisi2
 2777 01fc 1846     		mov	r0, r3
 2778 01fe FFF7FEFF 		bl	ASCII_IsLower
 2779 0202 0346     		mov	r3, r0
 2780 0204 87F82B30 		strb	r3, [r7, #43]
4023:C:\Micrium\Software\uC-LIB\lib_str.c ****                 if (nbr_hex_lower == DEF_YES) {
 2781              		.loc 1 4023 0
 2782 0208 97F82B30 		ldrb	r3, [r7, #43]	@ zero_extendqisi2
 2783 020c 012B     		cmp	r3, #1
 2784 020e 06D1     		bne	.L221
4024:C:\Micrium\Software\uC-LIB\lib_str.c ****                     parse_dig = (CPU_INT08U)((parse_char - 'a') + 10u);
 2785              		.loc 1 4024 0
 2786 0210 97F82230 		ldrb	r3, [r7, #34]
 2787 0214 A3F15703 		sub	r3, r3, #87
 2788 0218 87F82330 		strb	r3, [r7, #35]
 2789 021c 05E0     		b	.L220
 2790              	.L221:
4025:C:\Micrium\Software\uC-LIB\lib_str.c ****                 } else {
4026:C:\Micrium\Software\uC-LIB\lib_str.c ****                     parse_dig = (CPU_INT08U)((parse_char - 'A') + 10u);
 2791              		.loc 1 4026 0
 2792 021e 97F82230 		ldrb	r3, [r7, #34]
 2793 0222 A3F13703 		sub	r3, r3, #55
 2794 0226 87F82330 		strb	r3, [r7, #35]
 2795              	.L220:
4027:C:\Micrium\Software\uC-LIB\lib_str.c ****                 }
4028:C:\Micrium\Software\uC-LIB\lib_str.c ****             }
4029:C:\Micrium\Software\uC-LIB\lib_str.c **** 
4030:C:\Micrium\Software\uC-LIB\lib_str.c ****             if (parse_dig < nbr_base) {                         /* If parse char valid for nbr base
 2796              		.loc 1 4030 0
 2797 022a 97F82320 		ldrb	r2, [r7, #35]	@ zero_extendqisi2
 2798 022e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2799 0230 9A42     		cmp	r2, r3
 2800 0232 2CD2     		bcs	.L222
4031:C:\Micrium\Software\uC-LIB\lib_str.c ****                 if (ovf == DEF_NO) {                            /* ... & nbr NOT yet ovf'd,        
 2801              		.loc 1 4031 0
 2802 0234 97F82E30 		ldrb	r3, [r7, #46]	@ zero_extendqisi2
 2803 0238 002B     		cmp	r3, #0
 2804 023a 23D1     		bne	.L223
4032:C:\Micrium\Software\uC-LIB\lib_str.c ****                     if (nbr <= Str_MultOvfThTbl_Int32U[nbr_base]) {
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 121


 2805              		.loc 1 4032 0
 2806 023c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2807 023e 40F20003 		movw	r3, #:lower16:Str_MultOvfThTbl_Int32U
 2808 0242 C0F20003 		movt	r3, #:upper16:Str_MultOvfThTbl_Int32U
 2809 0246 53F82220 		ldr	r2, [r3, r2, lsl #2]
 2810 024a 7B6A     		ldr	r3, [r7, #36]
 2811 024c 9A42     		cmp	r2, r3
 2812 024e 13D3     		bcc	.L224
4033:C:\Micrium\Software\uC-LIB\lib_str.c ****                                                                 /* ... merge parse char dig into nb
4034:C:\Micrium\Software\uC-LIB\lib_str.c ****                         nbr *= nbr_base;
 2813              		.loc 1 4034 0
 2814 0250 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 2815 0252 7B6A     		ldr	r3, [r7, #36]
 2816 0254 02FB03F3 		mul	r3, r2, r3
 2817 0258 7B62     		str	r3, [r7, #36]
4035:C:\Micrium\Software\uC-LIB\lib_str.c ****                         nbr += parse_dig;
 2818              		.loc 1 4035 0
 2819 025a 97F82330 		ldrb	r3, [r7, #35]	@ zero_extendqisi2
 2820 025e 7A6A     		ldr	r2, [r7, #36]
 2821 0260 1344     		add	r3, r2, r3
 2822 0262 7B62     		str	r3, [r7, #36]
4036:C:\Micrium\Software\uC-LIB\lib_str.c ****                         if (nbr < parse_dig) {
 2823              		.loc 1 4036 0
 2824 0264 97F82320 		ldrb	r2, [r7, #35]	@ zero_extendqisi2
 2825 0268 7B6A     		ldr	r3, [r7, #36]
 2826 026a 9A42     		cmp	r2, r3
 2827 026c 09D9     		bls	.L235
4037:C:\Micrium\Software\uC-LIB\lib_str.c ****                             ovf = DEF_YES;
 2828              		.loc 1 4037 0
 2829 026e 4FF00103 		mov	r3, #1
 2830 0272 87F82E30 		strb	r3, [r7, #46]
 2831 0276 05E0     		b	.L223
 2832              	.L224:
4038:C:\Micrium\Software\uC-LIB\lib_str.c ****                         }
4039:C:\Micrium\Software\uC-LIB\lib_str.c ****                     } else {
4040:C:\Micrium\Software\uC-LIB\lib_str.c ****                         ovf = DEF_YES;
 2833              		.loc 1 4040 0
 2834 0278 4FF00103 		mov	r3, #1
 2835 027c 87F82E30 		strb	r3, [r7, #46]
 2836 0280 00E0     		b	.L223
 2837              	.L235:
 2838              		.loc 1 4037 0
 2839 0282 00BF     		nop
 2840              	.L223:
4041:C:\Micrium\Software\uC-LIB\lib_str.c ****                     }
4042:C:\Micrium\Software\uC-LIB\lib_str.c ****                 }
4043:C:\Micrium\Software\uC-LIB\lib_str.c ****                 pstr_parse++;
 2841              		.loc 1 4043 0
 2842 0284 BB69     		ldr	r3, [r7, #24]
 2843 0286 03F10103 		add	r3, r3, #1
 2844 028a BB61     		str	r3, [r7, #24]
4044:C:\Micrium\Software\uC-LIB\lib_str.c **** 
4045:C:\Micrium\Software\uC-LIB\lib_str.c ****             } else {                                            /* Invalid         char parsed (see
4046:C:\Micrium\Software\uC-LIB\lib_str.c ****                 done = DEF_YES;
 2845              		.loc 1 4046 0
 2846 028c 08E0     		b	.L217
 2847              	.L222:
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 122


 2848 028e 4FF00103 		mov	r3, #1
 2849 0292 87F82F30 		strb	r3, [r7, #47]
 2850 0296 03E0     		b	.L217
 2851              	.L218:
4047:C:\Micrium\Software\uC-LIB\lib_str.c ****             }
4048:C:\Micrium\Software\uC-LIB\lib_str.c **** 
4049:C:\Micrium\Software\uC-LIB\lib_str.c ****         } else {                                                /* Invalid OR NULL char parsed (see
4050:C:\Micrium\Software\uC-LIB\lib_str.c ****             done = DEF_YES;
 2852              		.loc 1 4050 0
 2853 0298 4FF00103 		mov	r3, #1
 2854 029c 87F82F30 		strb	r3, [r7, #47]
 2855              	.L217:
 2856              		.loc 1 4013 0
 2857 02a0 97F82F30 		ldrb	r3, [r7, #47]	@ zero_extendqisi2
 2858 02a4 002B     		cmp	r3, #0
 2859 02a6 84D0     		beq	.L227
4051:C:\Micrium\Software\uC-LIB\lib_str.c ****         }
4052:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
4053:C:\Micrium\Software\uC-LIB\lib_str.c **** 
4054:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (ovf == DEF_YES) {                                       /* If nbr ovf'd, ...               
 2860              		.loc 1 4054 0
 2861 02a8 97F82E30 		ldrb	r3, [r7, #46]	@ zero_extendqisi2
 2862 02ac 012B     		cmp	r3, #1
 2863 02ae 02D1     		bne	.L228
4055:C:\Micrium\Software\uC-LIB\lib_str.c ****         nbr  = DEF_INT_32U_MAX_VAL;                             /* ... rtn max int val (see Note #2
 2864              		.loc 1 4055 0
 2865 02b0 4FF0FF33 		mov	r3, #-1
 2866 02b4 7B62     		str	r3, [r7, #36]
 2867              	.L228:
4056:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
4057:C:\Micrium\Software\uC-LIB\lib_str.c **** 
4058:C:\Micrium\Software\uC-LIB\lib_str.c **** 
4059:C:\Micrium\Software\uC-LIB\lib_str.c ****     if (pstr_parse !=             pstr_parse_nbr) {             /* If final parse str != init'l par
 2868              		.loc 1 4059 0
 2869 02b6 BA69     		ldr	r2, [r7, #24]
 2870 02b8 FB69     		ldr	r3, [r7, #28]
 2871 02ba 9A42     		cmp	r2, r3
 2872 02bc 03D0     		beq	.L229
4060:C:\Micrium\Software\uC-LIB\lib_str.c ****        *pstr_next   = (CPU_CHAR *)pstr_parse;                   /* .. rtn   parse str's next char (
 2873              		.loc 1 4060 0
 2874 02be BB68     		ldr	r3, [r7, #8]
 2875 02c0 BA69     		ldr	r2, [r7, #24]
 2876 02c2 1A60     		str	r2, [r3, #0]
 2877 02c4 02E0     		b	.L230
 2878              	.L229:
4061:C:\Micrium\Software\uC-LIB\lib_str.c ****     } else {
4062:C:\Micrium\Software\uC-LIB\lib_str.c ****        *pstr_next   = (CPU_CHAR *)pstr;                         /* .. else rtn initial parse str  (
 2879              		.loc 1 4062 0
 2880 02c6 BB68     		ldr	r3, [r7, #8]
 2881 02c8 FA68     		ldr	r2, [r7, #12]
 2882 02ca 1A60     		str	r2, [r3, #0]
 2883              	.L230:
4063:C:\Micrium\Software\uC-LIB\lib_str.c ****     }
4064:C:\Micrium\Software\uC-LIB\lib_str.c **** 
4065:C:\Micrium\Software\uC-LIB\lib_str.c ****    *pnbr_neg = neg;                                             /* Rtn neg nbr status.             
 2884              		.loc 1 4065 0
 2885 02cc BB6B     		ldr	r3, [r7, #56]
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 123


 2886 02ce 97F82D20 		ldrb	r2, [r7, #45]
 2887 02d2 1A70     		strb	r2, [r3, #0]
4066:C:\Micrium\Software\uC-LIB\lib_str.c **** 
4067:C:\Micrium\Software\uC-LIB\lib_str.c **** 
4068:C:\Micrium\Software\uC-LIB\lib_str.c ****     return (nbr);
 2888              		.loc 1 4068 0
 2889 02d4 7B6A     		ldr	r3, [r7, #36]
 2890              	.L195:
4069:C:\Micrium\Software\uC-LIB\lib_str.c **** }
 2891              		.loc 1 4069 0
 2892 02d6 1846     		mov	r0, r3
 2893 02d8 07F13007 		add	r7, r7, #48
 2894 02dc BD46     		mov	sp, r7
 2895 02de 80BD     		pop	{r7, pc}
 2896              		.cfi_endproc
 2897              	.LFE23:
 2898              		.size	Str_ParseNbr_Int32, .-Str_ParseNbr_Int32
 2899              		.text
 2900              	.Letext0:
 2901              		.section	.debug_loc,"",%progbits
 2902              	.Ldebug_loc0:
 2903              	.LLST0:
 2904 0000 00000000 		.4byte	.LFB0
 2905 0004 02000000 		.4byte	.LCFI0
 2906 0008 0100     		.2byte	0x1
 2907 000a 5D       		.byte	0x5d
 2908 000b 02000000 		.4byte	.LCFI0
 2909 000f 04000000 		.4byte	.LCFI1
 2910 0013 0200     		.2byte	0x2
 2911 0015 7D       		.byte	0x7d
 2912 0016 08       		.sleb128 8
 2913 0017 04000000 		.4byte	.LCFI1
 2914 001b 06000000 		.4byte	.LCFI2
 2915 001f 0200     		.2byte	0x2
 2916 0021 7D       		.byte	0x7d
 2917 0022 18       		.sleb128 24
 2918 0023 06000000 		.4byte	.LCFI2
 2919 0027 22000000 		.4byte	.LFE0
 2920 002b 0200     		.2byte	0x2
 2921 002d 77       		.byte	0x77
 2922 002e 18       		.sleb128 24
 2923 002f 00000000 		.4byte	0x0
 2924 0033 00000000 		.4byte	0x0
 2925              	.LLST1:
 2926 0037 00000000 		.4byte	.LFB1
 2927 003b 02000000 		.4byte	.LCFI3
 2928 003f 0100     		.2byte	0x1
 2929 0041 5D       		.byte	0x5d
 2930 0042 02000000 		.4byte	.LCFI3
 2931 0046 04000000 		.4byte	.LCFI4
 2932 004a 0200     		.2byte	0x2
 2933 004c 7D       		.byte	0x7d
 2934 004d 04       		.sleb128 4
 2935 004e 04000000 		.4byte	.LCFI4
 2936 0052 06000000 		.4byte	.LCFI5
 2937 0056 0200     		.2byte	0x2
 2938 0058 7D       		.byte	0x7d
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 124


 2939 0059 18       		.sleb128 24
 2940 005a 06000000 		.4byte	.LCFI5
 2941 005e 4A000000 		.4byte	.LFE1
 2942 0062 0200     		.2byte	0x2
 2943 0064 77       		.byte	0x77
 2944 0065 18       		.sleb128 24
 2945 0066 00000000 		.4byte	0x0
 2946 006a 00000000 		.4byte	0x0
 2947              	.LLST2:
 2948 006e 00000000 		.4byte	.LFB2
 2949 0072 02000000 		.4byte	.LCFI6
 2950 0076 0100     		.2byte	0x1
 2951 0078 5D       		.byte	0x5d
 2952 0079 02000000 		.4byte	.LCFI6
 2953 007d 04000000 		.4byte	.LCFI7
 2954 0081 0200     		.2byte	0x2
 2955 0083 7D       		.byte	0x7d
 2956 0084 08       		.sleb128 8
 2957 0085 04000000 		.4byte	.LCFI7
 2958 0089 06000000 		.4byte	.LCFI8
 2959 008d 0200     		.2byte	0x2
 2960 008f 7D       		.byte	0x7d
 2961 0090 18       		.sleb128 24
 2962 0091 06000000 		.4byte	.LCFI8
 2963 0095 26000000 		.4byte	.LFE2
 2964 0099 0200     		.2byte	0x2
 2965 009b 77       		.byte	0x77
 2966 009c 18       		.sleb128 24
 2967 009d 00000000 		.4byte	0x0
 2968 00a1 00000000 		.4byte	0x0
 2969              	.LLST3:
 2970 00a5 00000000 		.4byte	.LFB3
 2971 00a9 02000000 		.4byte	.LCFI9
 2972 00ad 0100     		.2byte	0x1
 2973 00af 5D       		.byte	0x5d
 2974 00b0 02000000 		.4byte	.LCFI9
 2975 00b4 04000000 		.4byte	.LCFI10
 2976 00b8 0200     		.2byte	0x2
 2977 00ba 7D       		.byte	0x7d
 2978 00bb 04       		.sleb128 4
 2979 00bc 04000000 		.4byte	.LCFI10
 2980 00c0 06000000 		.4byte	.LCFI11
 2981 00c4 0200     		.2byte	0x2
 2982 00c6 7D       		.byte	0x7d
 2983 00c7 28       		.sleb128 40
 2984 00c8 06000000 		.4byte	.LCFI11
 2985 00cc A0000000 		.4byte	.LFE3
 2986 00d0 0200     		.2byte	0x2
 2987 00d2 77       		.byte	0x77
 2988 00d3 28       		.sleb128 40
 2989 00d4 00000000 		.4byte	0x0
 2990 00d8 00000000 		.4byte	0x0
 2991              	.LLST4:
 2992 00dc 00000000 		.4byte	.LFB4
 2993 00e0 02000000 		.4byte	.LCFI12
 2994 00e4 0100     		.2byte	0x1
 2995 00e6 5D       		.byte	0x5d
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 125


 2996 00e7 02000000 		.4byte	.LCFI12
 2997 00eb 04000000 		.4byte	.LCFI13
 2998 00ef 0200     		.2byte	0x2
 2999 00f1 7D       		.byte	0x7d
 3000 00f2 08       		.sleb128 8
 3001 00f3 04000000 		.4byte	.LCFI13
 3002 00f7 06000000 		.4byte	.LCFI14
 3003 00fb 0200     		.2byte	0x2
 3004 00fd 7D       		.byte	0x7d
 3005 00fe 18       		.sleb128 24
 3006 00ff 06000000 		.4byte	.LCFI14
 3007 0103 26000000 		.4byte	.LFE4
 3008 0107 0200     		.2byte	0x2
 3009 0109 77       		.byte	0x77
 3010 010a 18       		.sleb128 24
 3011 010b 00000000 		.4byte	0x0
 3012 010f 00000000 		.4byte	0x0
 3013              	.LLST5:
 3014 0113 00000000 		.4byte	.LFB5
 3015 0117 02000000 		.4byte	.LCFI15
 3016 011b 0100     		.2byte	0x1
 3017 011d 5D       		.byte	0x5d
 3018 011e 02000000 		.4byte	.LCFI15
 3019 0122 04000000 		.4byte	.LCFI16
 3020 0126 0200     		.2byte	0x2
 3021 0128 7D       		.byte	0x7d
 3022 0129 04       		.sleb128 4
 3023 012a 04000000 		.4byte	.LCFI16
 3024 012e 06000000 		.4byte	.LCFI17
 3025 0132 0200     		.2byte	0x2
 3026 0134 7D       		.byte	0x7d
 3027 0135 28       		.sleb128 40
 3028 0136 06000000 		.4byte	.LCFI17
 3029 013a C6000000 		.4byte	.LFE5
 3030 013e 0200     		.2byte	0x2
 3031 0140 77       		.byte	0x77
 3032 0141 28       		.sleb128 40
 3033 0142 00000000 		.4byte	0x0
 3034 0146 00000000 		.4byte	0x0
 3035              	.LLST6:
 3036 014a 00000000 		.4byte	.LFB6
 3037 014e 02000000 		.4byte	.LCFI18
 3038 0152 0100     		.2byte	0x1
 3039 0154 5D       		.byte	0x5d
 3040 0155 02000000 		.4byte	.LCFI18
 3041 0159 04000000 		.4byte	.LCFI19
 3042 015d 0200     		.2byte	0x2
 3043 015f 7D       		.byte	0x7d
 3044 0160 08       		.sleb128 8
 3045 0161 04000000 		.4byte	.LCFI19
 3046 0165 06000000 		.4byte	.LCFI20
 3047 0169 0200     		.2byte	0x2
 3048 016b 7D       		.byte	0x7d
 3049 016c 18       		.sleb128 24
 3050 016d 06000000 		.4byte	.LCFI20
 3051 0171 2A000000 		.4byte	.LFE6
 3052 0175 0200     		.2byte	0x2
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 126


 3053 0177 77       		.byte	0x77
 3054 0178 18       		.sleb128 24
 3055 0179 00000000 		.4byte	0x0
 3056 017d 00000000 		.4byte	0x0
 3057              	.LLST7:
 3058 0181 00000000 		.4byte	.LFB7
 3059 0185 02000000 		.4byte	.LCFI21
 3060 0189 0100     		.2byte	0x1
 3061 018b 5D       		.byte	0x5d
 3062 018c 02000000 		.4byte	.LCFI21
 3063 0190 04000000 		.4byte	.LCFI22
 3064 0194 0200     		.2byte	0x2
 3065 0196 7D       		.byte	0x7d
 3066 0197 04       		.sleb128 4
 3067 0198 04000000 		.4byte	.LCFI22
 3068 019c 06000000 		.4byte	.LCFI23
 3069 01a0 0200     		.2byte	0x2
 3070 01a2 7D       		.byte	0x7d
 3071 01a3 30       		.sleb128 48
 3072 01a4 06000000 		.4byte	.LCFI23
 3073 01a8 34010000 		.4byte	.LFE7
 3074 01ac 0200     		.2byte	0x2
 3075 01ae 77       		.byte	0x77
 3076 01af 30       		.sleb128 48
 3077 01b0 00000000 		.4byte	0x0
 3078 01b4 00000000 		.4byte	0x0
 3079              	.LLST8:
 3080 01b8 00000000 		.4byte	.LFB8
 3081 01bc 02000000 		.4byte	.LCFI24
 3082 01c0 0100     		.2byte	0x1
 3083 01c2 5D       		.byte	0x5d
 3084 01c3 02000000 		.4byte	.LCFI24
 3085 01c7 04000000 		.4byte	.LCFI25
 3086 01cb 0200     		.2byte	0x2
 3087 01cd 7D       		.byte	0x7d
 3088 01ce 08       		.sleb128 8
 3089 01cf 04000000 		.4byte	.LCFI25
 3090 01d3 06000000 		.4byte	.LCFI26
 3091 01d7 0200     		.2byte	0x2
 3092 01d9 7D       		.byte	0x7d
 3093 01da 18       		.sleb128 24
 3094 01db 06000000 		.4byte	.LCFI26
 3095 01df 2A000000 		.4byte	.LFE8
 3096 01e3 0200     		.2byte	0x2
 3097 01e5 77       		.byte	0x77
 3098 01e6 18       		.sleb128 24
 3099 01e7 00000000 		.4byte	0x0
 3100 01eb 00000000 		.4byte	0x0
 3101              	.LLST9:
 3102 01ef 00000000 		.4byte	.LFB9
 3103 01f3 02000000 		.4byte	.LCFI27
 3104 01f7 0100     		.2byte	0x1
 3105 01f9 5D       		.byte	0x5d
 3106 01fa 02000000 		.4byte	.LCFI27
 3107 01fe 04000000 		.4byte	.LCFI28
 3108 0202 0200     		.2byte	0x2
 3109 0204 7D       		.byte	0x7d
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 127


 3110 0205 08       		.sleb128 8
 3111 0206 04000000 		.4byte	.LCFI28
 3112 020a 06000000 		.4byte	.LCFI29
 3113 020e 0200     		.2byte	0x2
 3114 0210 7D       		.byte	0x7d
 3115 0211 30       		.sleb128 48
 3116 0212 06000000 		.4byte	.LCFI29
 3117 0216 B0010000 		.4byte	.LFE9
 3118 021a 0200     		.2byte	0x2
 3119 021c 77       		.byte	0x77
 3120 021d 30       		.sleb128 48
 3121 021e 00000000 		.4byte	0x0
 3122 0222 00000000 		.4byte	0x0
 3123              	.LLST10:
 3124 0226 00000000 		.4byte	.LFB10
 3125 022a 02000000 		.4byte	.LCFI30
 3126 022e 0100     		.2byte	0x1
 3127 0230 5D       		.byte	0x5d
 3128 0231 02000000 		.4byte	.LCFI30
 3129 0235 04000000 		.4byte	.LCFI31
 3130 0239 0200     		.2byte	0x2
 3131 023b 7D       		.byte	0x7d
 3132 023c 08       		.sleb128 8
 3133 023d 04000000 		.4byte	.LCFI31
 3134 0241 06000000 		.4byte	.LCFI32
 3135 0245 0200     		.2byte	0x2
 3136 0247 7D       		.byte	0x7d
 3137 0248 18       		.sleb128 24
 3138 0249 06000000 		.4byte	.LCFI32
 3139 024d 2A000000 		.4byte	.LFE10
 3140 0251 0200     		.2byte	0x2
 3141 0253 77       		.byte	0x77
 3142 0254 18       		.sleb128 24
 3143 0255 00000000 		.4byte	0x0
 3144 0259 00000000 		.4byte	0x0
 3145              	.LLST11:
 3146 025d 00000000 		.4byte	.LFB11
 3147 0261 02000000 		.4byte	.LCFI33
 3148 0265 0100     		.2byte	0x1
 3149 0267 5D       		.byte	0x5d
 3150 0268 02000000 		.4byte	.LCFI33
 3151 026c 04000000 		.4byte	.LCFI34
 3152 0270 0200     		.2byte	0x2
 3153 0272 7D       		.byte	0x7d
 3154 0273 04       		.sleb128 4
 3155 0274 04000000 		.4byte	.LCFI34
 3156 0278 06000000 		.4byte	.LCFI35
 3157 027c 0200     		.2byte	0x2
 3158 027e 7D       		.byte	0x7d
 3159 027f 20       		.sleb128 32
 3160 0280 06000000 		.4byte	.LCFI35
 3161 0284 9A000000 		.4byte	.LFE11
 3162 0288 0200     		.2byte	0x2
 3163 028a 77       		.byte	0x77
 3164 028b 20       		.sleb128 32
 3165 028c 00000000 		.4byte	0x0
 3166 0290 00000000 		.4byte	0x0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 128


 3167              	.LLST12:
 3168 0294 00000000 		.4byte	.LFB12
 3169 0298 02000000 		.4byte	.LCFI36
 3170 029c 0100     		.2byte	0x1
 3171 029e 5D       		.byte	0x5d
 3172 029f 02000000 		.4byte	.LCFI36
 3173 02a3 04000000 		.4byte	.LCFI37
 3174 02a7 0200     		.2byte	0x2
 3175 02a9 7D       		.byte	0x7d
 3176 02aa 08       		.sleb128 8
 3177 02ab 04000000 		.4byte	.LCFI37
 3178 02af 06000000 		.4byte	.LCFI38
 3179 02b3 0200     		.2byte	0x2
 3180 02b5 7D       		.byte	0x7d
 3181 02b6 18       		.sleb128 24
 3182 02b7 06000000 		.4byte	.LCFI38
 3183 02bb 2A000000 		.4byte	.LFE12
 3184 02bf 0200     		.2byte	0x2
 3185 02c1 77       		.byte	0x77
 3186 02c2 18       		.sleb128 24
 3187 02c3 00000000 		.4byte	0x0
 3188 02c7 00000000 		.4byte	0x0
 3189              	.LLST13:
 3190 02cb 00000000 		.4byte	.LFB13
 3191 02cf 02000000 		.4byte	.LCFI39
 3192 02d3 0100     		.2byte	0x1
 3193 02d5 5D       		.byte	0x5d
 3194 02d6 02000000 		.4byte	.LCFI39
 3195 02da 04000000 		.4byte	.LCFI40
 3196 02de 0200     		.2byte	0x2
 3197 02e0 7D       		.byte	0x7d
 3198 02e1 08       		.sleb128 8
 3199 02e2 04000000 		.4byte	.LCFI40
 3200 02e6 06000000 		.4byte	.LCFI41
 3201 02ea 0200     		.2byte	0x2
 3202 02ec 7D       		.byte	0x7d
 3203 02ed 28       		.sleb128 40
 3204 02ee 06000000 		.4byte	.LCFI41
 3205 02f2 88000000 		.4byte	.LFE13
 3206 02f6 0200     		.2byte	0x2
 3207 02f8 77       		.byte	0x77
 3208 02f9 28       		.sleb128 40
 3209 02fa 00000000 		.4byte	0x0
 3210 02fe 00000000 		.4byte	0x0
 3211              	.LLST14:
 3212 0302 00000000 		.4byte	.LFB14
 3213 0306 02000000 		.4byte	.LCFI42
 3214 030a 0100     		.2byte	0x1
 3215 030c 5D       		.byte	0x5d
 3216 030d 02000000 		.4byte	.LCFI42
 3217 0311 04000000 		.4byte	.LCFI43
 3218 0315 0200     		.2byte	0x2
 3219 0317 7D       		.byte	0x7d
 3220 0318 08       		.sleb128 8
 3221 0319 04000000 		.4byte	.LCFI43
 3222 031d 06000000 		.4byte	.LCFI44
 3223 0321 0200     		.2byte	0x2
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 129


 3224 0323 7D       		.byte	0x7d
 3225 0324 18       		.sleb128 24
 3226 0325 06000000 		.4byte	.LCFI44
 3227 0329 32000000 		.4byte	.LFE14
 3228 032d 0200     		.2byte	0x2
 3229 032f 77       		.byte	0x77
 3230 0330 18       		.sleb128 24
 3231 0331 00000000 		.4byte	0x0
 3232 0335 00000000 		.4byte	0x0
 3233              	.LLST15:
 3234 0339 00000000 		.4byte	.LFB15
 3235 033d 02000000 		.4byte	.LCFI45
 3236 0341 0100     		.2byte	0x1
 3237 0343 5D       		.byte	0x5d
 3238 0344 02000000 		.4byte	.LCFI45
 3239 0348 04000000 		.4byte	.LCFI46
 3240 034c 0200     		.2byte	0x2
 3241 034e 7D       		.byte	0x7d
 3242 034f 04       		.sleb128 4
 3243 0350 04000000 		.4byte	.LCFI46
 3244 0354 06000000 		.4byte	.LCFI47
 3245 0358 0200     		.2byte	0x2
 3246 035a 7D       		.byte	0x7d
 3247 035b 20       		.sleb128 32
 3248 035c 06000000 		.4byte	.LCFI47
 3249 0360 76000000 		.4byte	.LFE15
 3250 0364 0200     		.2byte	0x2
 3251 0366 77       		.byte	0x77
 3252 0367 20       		.sleb128 32
 3253 0368 00000000 		.4byte	0x0
 3254 036c 00000000 		.4byte	0x0
 3255              	.LLST16:
 3256 0370 00000000 		.4byte	.LFB16
 3257 0374 02000000 		.4byte	.LCFI48
 3258 0378 0100     		.2byte	0x1
 3259 037a 5D       		.byte	0x5d
 3260 037b 02000000 		.4byte	.LCFI48
 3261 037f 04000000 		.4byte	.LCFI49
 3262 0383 0200     		.2byte	0x2
 3263 0385 7D       		.byte	0x7d
 3264 0386 08       		.sleb128 8
 3265 0387 04000000 		.4byte	.LCFI49
 3266 038b 06000000 		.4byte	.LCFI50
 3267 038f 0200     		.2byte	0x2
 3268 0391 7D       		.byte	0x7d
 3269 0392 18       		.sleb128 24
 3270 0393 06000000 		.4byte	.LCFI50
 3271 0397 26000000 		.4byte	.LFE16
 3272 039b 0200     		.2byte	0x2
 3273 039d 77       		.byte	0x77
 3274 039e 18       		.sleb128 24
 3275 039f 00000000 		.4byte	0x0
 3276 03a3 00000000 		.4byte	0x0
 3277              	.LLST17:
 3278 03a7 00000000 		.4byte	.LFB17
 3279 03ab 02000000 		.4byte	.LCFI51
 3280 03af 0100     		.2byte	0x1
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 130


 3281 03b1 5D       		.byte	0x5d
 3282 03b2 02000000 		.4byte	.LCFI51
 3283 03b6 04000000 		.4byte	.LCFI52
 3284 03ba 0200     		.2byte	0x2
 3285 03bc 7D       		.byte	0x7d
 3286 03bd 08       		.sleb128 8
 3287 03be 04000000 		.4byte	.LCFI52
 3288 03c2 06000000 		.4byte	.LCFI53
 3289 03c6 0200     		.2byte	0x2
 3290 03c8 7D       		.byte	0x7d
 3291 03c9 38       		.sleb128 56
 3292 03ca 06000000 		.4byte	.LCFI53
 3293 03ce 16010000 		.4byte	.LFE17
 3294 03d2 0200     		.2byte	0x2
 3295 03d4 77       		.byte	0x77
 3296 03d5 38       		.sleb128 56
 3297 03d6 00000000 		.4byte	0x0
 3298 03da 00000000 		.4byte	0x0
 3299              	.LLST18:
 3300 03de 00000000 		.4byte	.LFB18
 3301 03e2 02000000 		.4byte	.LCFI54
 3302 03e6 0100     		.2byte	0x1
 3303 03e8 5D       		.byte	0x5d
 3304 03e9 02000000 		.4byte	.LCFI54
 3305 03ed 04000000 		.4byte	.LCFI55
 3306 03f1 0200     		.2byte	0x2
 3307 03f3 7D       		.byte	0x7d
 3308 03f4 08       		.sleb128 8
 3309 03f5 04000000 		.4byte	.LCFI55
 3310 03f9 06000000 		.4byte	.LCFI56
 3311 03fd 0200     		.2byte	0x2
 3312 03ff 7D       		.byte	0x7d
 3313 0400 28       		.sleb128 40
 3314 0401 06000000 		.4byte	.LCFI56
 3315 0405 40000000 		.4byte	.LFE18
 3316 0409 0200     		.2byte	0x2
 3317 040b 77       		.byte	0x77
 3318 040c 18       		.sleb128 24
 3319 040d 00000000 		.4byte	0x0
 3320 0411 00000000 		.4byte	0x0
 3321              	.LLST19:
 3322 0415 00000000 		.4byte	.LFB19
 3323 0419 02000000 		.4byte	.LCFI57
 3324 041d 0100     		.2byte	0x1
 3325 041f 5D       		.byte	0x5d
 3326 0420 02000000 		.4byte	.LCFI57
 3327 0424 04000000 		.4byte	.LCFI58
 3328 0428 0200     		.2byte	0x2
 3329 042a 7D       		.byte	0x7d
 3330 042b 08       		.sleb128 8
 3331 042c 04000000 		.4byte	.LCFI58
 3332 0430 06000000 		.4byte	.LCFI59
 3333 0434 0200     		.2byte	0x2
 3334 0436 7D       		.byte	0x7d
 3335 0437 30       		.sleb128 48
 3336 0438 06000000 		.4byte	.LCFI59
 3337 043c 6A000000 		.4byte	.LFE19
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 131


 3338 0440 0200     		.2byte	0x2
 3339 0442 77       		.byte	0x77
 3340 0443 20       		.sleb128 32
 3341 0444 00000000 		.4byte	0x0
 3342 0448 00000000 		.4byte	0x0
 3343              	.LLST20:
 3344 044c 00000000 		.4byte	.LFB20
 3345 0450 02000000 		.4byte	.LCFI60
 3346 0454 0100     		.2byte	0x1
 3347 0456 5D       		.byte	0x5d
 3348 0457 02000000 		.4byte	.LCFI60
 3349 045b 04000000 		.4byte	.LCFI61
 3350 045f 0200     		.2byte	0x2
 3351 0461 7D       		.byte	0x7d
 3352 0462 08       		.sleb128 8
 3353 0463 04000000 		.4byte	.LCFI61
 3354 0467 06000000 		.4byte	.LCFI62
 3355 046b 0200     		.2byte	0x2
 3356 046d 7D       		.byte	0x7d
 3357 046e 28       		.sleb128 40
 3358 046f 06000000 		.4byte	.LCFI62
 3359 0473 34000000 		.4byte	.LFE20
 3360 0477 0200     		.2byte	0x2
 3361 0479 77       		.byte	0x77
 3362 047a 20       		.sleb128 32
 3363 047b 00000000 		.4byte	0x0
 3364 047f 00000000 		.4byte	0x0
 3365              	.LLST21:
 3366 0483 00000000 		.4byte	.LFB21
 3367 0487 02000000 		.4byte	.LCFI63
 3368 048b 0100     		.2byte	0x1
 3369 048d 5D       		.byte	0x5d
 3370 048e 02000000 		.4byte	.LCFI63
 3371 0492 04000000 		.4byte	.LCFI64
 3372 0496 0200     		.2byte	0x2
 3373 0498 7D       		.byte	0x7d
 3374 0499 08       		.sleb128 8
 3375 049a 04000000 		.4byte	.LCFI64
 3376 049e 06000000 		.4byte	.LCFI65
 3377 04a2 0200     		.2byte	0x2
 3378 04a4 7D       		.byte	0x7d
 3379 04a5 30       		.sleb128 48
 3380 04a6 06000000 		.4byte	.LCFI65
 3381 04aa 60000000 		.4byte	.LFE21
 3382 04ae 0200     		.2byte	0x2
 3383 04b0 77       		.byte	0x77
 3384 04b1 28       		.sleb128 40
 3385 04b2 00000000 		.4byte	0x0
 3386 04b6 00000000 		.4byte	0x0
 3387              	.LLST22:
 3388 04ba 00000000 		.4byte	.LFB22
 3389 04be 02000000 		.4byte	.LCFI66
 3390 04c2 0100     		.2byte	0x1
 3391 04c4 5D       		.byte	0x5d
 3392 04c5 02000000 		.4byte	.LCFI66
 3393 04c9 04000000 		.4byte	.LCFI67
 3394 04cd 0200     		.2byte	0x2
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 132


 3395 04cf 7D       		.byte	0x7d
 3396 04d0 08       		.sleb128 8
 3397 04d1 04000000 		.4byte	.LCFI67
 3398 04d5 06000000 		.4byte	.LCFI68
 3399 04d9 0200     		.2byte	0x2
 3400 04db 7D       		.byte	0x7d
 3401 04dc 30       		.sleb128 48
 3402 04dd 06000000 		.4byte	.LCFI68
 3403 04e1 12030000 		.4byte	.LFE22
 3404 04e5 0200     		.2byte	0x2
 3405 04e7 77       		.byte	0x77
 3406 04e8 30       		.sleb128 48
 3407 04e9 00000000 		.4byte	0x0
 3408 04ed 00000000 		.4byte	0x0
 3409              	.LLST23:
 3410 04f1 00000000 		.4byte	.LFB23
 3411 04f5 02000000 		.4byte	.LCFI69
 3412 04f9 0100     		.2byte	0x1
 3413 04fb 5D       		.byte	0x5d
 3414 04fc 02000000 		.4byte	.LCFI69
 3415 0500 04000000 		.4byte	.LCFI70
 3416 0504 0200     		.2byte	0x2
 3417 0506 7D       		.byte	0x7d
 3418 0507 08       		.sleb128 8
 3419 0508 04000000 		.4byte	.LCFI70
 3420 050c 06000000 		.4byte	.LCFI71
 3421 0510 0200     		.2byte	0x2
 3422 0512 7D       		.byte	0x7d
 3423 0513 38       		.sleb128 56
 3424 0514 06000000 		.4byte	.LCFI71
 3425 0518 E0020000 		.4byte	.LFE23
 3426 051c 0200     		.2byte	0x2
 3427 051e 77       		.byte	0x77
 3428 051f 38       		.sleb128 56
 3429 0520 00000000 		.4byte	0x0
 3430 0524 00000000 		.4byte	0x0
 3431              		.file 2 "..\\..\\..\\..\\..\\..\\uC-CPU\\ARM-Cortex-M3\\GNU/cpu.h"
 3432              		.section	.debug_info
 3433 0000 A80D0000 		.4byte	0xda8
 3434 0004 0200     		.2byte	0x2
 3435 0006 00000000 		.4byte	.Ldebug_abbrev0
 3436 000a 04       		.byte	0x4
 3437 000b 01       		.uleb128 0x1
 3438 000c 9E050000 		.4byte	.LASF119
 3439 0010 01       		.byte	0x1
 3440 0011 AB000000 		.4byte	.LASF120
 3441 0015 24040000 		.4byte	.LASF121
 3442 0019 00000000 		.4byte	0x0
 3443 001d 00000000 		.4byte	0x0
 3444 0021 00000000 		.4byte	.Ldebug_ranges0+0x0
 3445 0025 00000000 		.4byte	.Ldebug_line0
 3446 0029 02       		.uleb128 0x2
 3447 002a 66030000 		.4byte	.LASF0
 3448 002e 02       		.byte	0x2
 3449 002f 76       		.byte	0x76
 3450 0030 34000000 		.4byte	0x34
 3451 0034 03       		.uleb128 0x3
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 133


 3452 0035 01       		.byte	0x1
 3453 0036 08       		.byte	0x8
 3454 0037 F9030000 		.4byte	.LASF2
 3455 003b 02       		.uleb128 0x2
 3456 003c 3C020000 		.4byte	.LASF1
 3457 0040 02       		.byte	0x2
 3458 0041 77       		.byte	0x77
 3459 0042 46000000 		.4byte	0x46
 3460 0046 03       		.uleb128 0x3
 3461 0047 01       		.byte	0x1
 3462 0048 08       		.byte	0x8
 3463 0049 F1020000 		.4byte	.LASF3
 3464 004d 02       		.uleb128 0x2
 3465 004e EE030000 		.4byte	.LASF4
 3466 0052 02       		.byte	0x2
 3467 0053 78       		.byte	0x78
 3468 0054 46000000 		.4byte	0x46
 3469 0058 03       		.uleb128 0x3
 3470 0059 01       		.byte	0x1
 3471 005a 06       		.byte	0x6
 3472 005b 2E030000 		.4byte	.LASF5
 3473 005f 03       		.uleb128 0x3
 3474 0060 02       		.byte	0x2
 3475 0061 07       		.byte	0x7
 3476 0062 CA030000 		.4byte	.LASF6
 3477 0066 02       		.uleb128 0x2
 3478 0067 FD050000 		.4byte	.LASF7
 3479 006b 02       		.byte	0x2
 3480 006c 7B       		.byte	0x7b
 3481 006d 71000000 		.4byte	0x71
 3482 0071 03       		.uleb128 0x3
 3483 0072 02       		.byte	0x2
 3484 0073 05       		.byte	0x5
 3485 0074 E5000000 		.4byte	.LASF8
 3486 0078 02       		.uleb128 0x2
 3487 0079 D4040000 		.4byte	.LASF9
 3488 007d 02       		.byte	0x2
 3489 007e 7C       		.byte	0x7c
 3490 007f 83000000 		.4byte	0x83
 3491 0083 03       		.uleb128 0x3
 3492 0084 04       		.byte	0x4
 3493 0085 07       		.byte	0x7
 3494 0086 6F030000 		.4byte	.LASF10
 3495 008a 02       		.uleb128 0x2
 3496 008b C9040000 		.4byte	.LASF11
 3497 008f 02       		.byte	0x2
 3498 0090 7D       		.byte	0x7d
 3499 0091 95000000 		.4byte	0x95
 3500 0095 04       		.uleb128 0x4
 3501 0096 04       		.byte	0x4
 3502 0097 05       		.byte	0x5
 3503 0098 696E7400 		.ascii	"int\000"
 3504 009c 03       		.uleb128 0x3
 3505 009d 08       		.byte	0x8
 3506 009e 07       		.byte	0x7
 3507 009f 3A030000 		.4byte	.LASF12
 3508 00a3 03       		.uleb128 0x3
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 134


 3509 00a4 08       		.byte	0x8
 3510 00a5 05       		.byte	0x5
 3511 00a6 0A020000 		.4byte	.LASF13
 3512 00aa 03       		.uleb128 0x3
 3513 00ab 04       		.byte	0x4
 3514 00ac 04       		.byte	0x4
 3515 00ad F0010000 		.4byte	.LASF14
 3516 00b1 03       		.uleb128 0x3
 3517 00b2 08       		.byte	0x8
 3518 00b3 04       		.byte	0x4
 3519 00b4 22050000 		.4byte	.LASF15
 3520 00b8 02       		.uleb128 0x2
 3521 00b9 D7010000 		.4byte	.LASF16
 3522 00bd 02       		.byte	0x2
 3523 00be B5       		.byte	0xb5
 3524 00bf 78000000 		.4byte	0x78
 3525 00c3 02       		.uleb128 0x2
 3526 00c4 E5030000 		.4byte	.LASF17
 3527 00c8 02       		.byte	0x2
 3528 00c9 BE       		.byte	0xbe
 3529 00ca 78000000 		.4byte	0x78
 3530 00ce 02       		.uleb128 0x2
 3531 00cf 5E050000 		.4byte	.LASF18
 3532 00d3 02       		.byte	0x2
 3533 00d4 C7       		.byte	0xc7
 3534 00d5 B8000000 		.4byte	0xb8
 3535 00d9 05       		.uleb128 0x5
 3536 00da 01       		.byte	0x1
 3537 00db D6020000 		.4byte	.LASF19
 3538 00df 01       		.byte	0x1
 3539 00e0 DB       		.byte	0xdb
 3540 00e1 01       		.byte	0x1
 3541 00e2 CE000000 		.4byte	0xce
 3542 00e6 00000000 		.4byte	.LFB0
 3543 00ea 22000000 		.4byte	.LFE0
 3544 00ee 00000000 		.4byte	.LLST0
 3545 00f2 13010000 		.4byte	0x113
 3546 00f6 06       		.uleb128 0x6
 3547 00f7 36050000 		.4byte	.LASF21
 3548 00fb 01       		.byte	0x1
 3549 00fc DB       		.byte	0xdb
 3550 00fd 13010000 		.4byte	0x113
 3551 0101 02       		.byte	0x2
 3552 0102 91       		.byte	0x91
 3553 0103 6C       		.sleb128 -20
 3554 0104 07       		.uleb128 0x7
 3555 0105 6C656E00 		.ascii	"len\000"
 3556 0109 01       		.byte	0x1
 3557 010a DD       		.byte	0xdd
 3558 010b CE000000 		.4byte	0xce
 3559 010f 02       		.byte	0x2
 3560 0110 91       		.byte	0x91
 3561 0111 74       		.sleb128 -12
 3562 0112 00       		.byte	0x0
 3563 0113 08       		.uleb128 0x8
 3564 0114 04       		.byte	0x4
 3565 0115 19010000 		.4byte	0x119
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 135


 3566 0119 09       		.uleb128 0x9
 3567 011a 29000000 		.4byte	0x29
 3568 011e 0A       		.uleb128 0xa
 3569 011f 01       		.byte	0x1
 3570 0120 E1050000 		.4byte	.LASF20
 3571 0124 01       		.byte	0x1
 3572 0125 1701     		.2byte	0x117
 3573 0127 01       		.byte	0x1
 3574 0128 CE000000 		.4byte	0xce
 3575 012c 00000000 		.4byte	.LFB1
 3576 0130 4A000000 		.4byte	.LFE1
 3577 0134 37000000 		.4byte	.LLST1
 3578 0138 79010000 		.4byte	0x179
 3579 013c 0B       		.uleb128 0xb
 3580 013d 36050000 		.4byte	.LASF21
 3581 0141 01       		.byte	0x1
 3582 0142 1701     		.2byte	0x117
 3583 0144 13010000 		.4byte	0x113
 3584 0148 02       		.byte	0x2
 3585 0149 91       		.byte	0x91
 3586 014a 6C       		.sleb128 -20
 3587 014b 0B       		.uleb128 0xb
 3588 014c 5C020000 		.4byte	.LASF22
 3589 0150 01       		.byte	0x1
 3590 0151 1801     		.2byte	0x118
 3591 0153 CE000000 		.4byte	0xce
 3592 0157 02       		.byte	0x2
 3593 0158 91       		.byte	0x91
 3594 0159 68       		.sleb128 -24
 3595 015a 0C       		.uleb128 0xc
 3596 015b B3010000 		.4byte	.LASF23
 3597 015f 01       		.byte	0x1
 3598 0160 1A01     		.2byte	0x11a
 3599 0162 13010000 		.4byte	0x113
 3600 0166 02       		.byte	0x2
 3601 0167 91       		.byte	0x91
 3602 0168 70       		.sleb128 -16
 3603 0169 0D       		.uleb128 0xd
 3604 016a 6C656E00 		.ascii	"len\000"
 3605 016e 01       		.byte	0x1
 3606 016f 1B01     		.2byte	0x11b
 3607 0171 CE000000 		.4byte	0xce
 3608 0175 02       		.byte	0x2
 3609 0176 91       		.byte	0x91
 3610 0177 74       		.sleb128 -12
 3611 0178 00       		.byte	0x0
 3612 0179 0A       		.uleb128 0xa
 3613 017a 01       		.byte	0x1
 3614 017b A4030000 		.4byte	.LASF24
 3615 017f 01       		.byte	0x1
 3616 0180 6001     		.2byte	0x160
 3617 0182 01       		.byte	0x1
 3618 0183 C5010000 		.4byte	0x1c5
 3619 0187 00000000 		.4byte	.LFB2
 3620 018b 26000000 		.4byte	.LFE2
 3621 018f 6E000000 		.4byte	.LLST2
 3622 0193 C5010000 		.4byte	0x1c5
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 136


 3623 0197 0B       		.uleb128 0xb
 3624 0198 34000000 		.4byte	.LASF25
 3625 019c 01       		.byte	0x1
 3626 019d 6001     		.2byte	0x160
 3627 019f C5010000 		.4byte	0x1c5
 3628 01a3 02       		.byte	0x2
 3629 01a4 91       		.byte	0x91
 3630 01a5 6C       		.sleb128 -20
 3631 01a6 0B       		.uleb128 0xb
 3632 01a7 80050000 		.4byte	.LASF26
 3633 01ab 01       		.byte	0x1
 3634 01ac 6101     		.2byte	0x161
 3635 01ae 13010000 		.4byte	0x113
 3636 01b2 02       		.byte	0x2
 3637 01b3 91       		.byte	0x91
 3638 01b4 68       		.sleb128 -24
 3639 01b5 0C       		.uleb128 0xc
 3640 01b6 AD030000 		.4byte	.LASF27
 3641 01ba 01       		.byte	0x1
 3642 01bb 6301     		.2byte	0x163
 3643 01bd C5010000 		.4byte	0x1c5
 3644 01c1 02       		.byte	0x2
 3645 01c2 91       		.byte	0x91
 3646 01c3 74       		.sleb128 -12
 3647 01c4 00       		.byte	0x0
 3648 01c5 08       		.uleb128 0x8
 3649 01c6 04       		.byte	0x4
 3650 01c7 29000000 		.4byte	0x29
 3651 01cb 0A       		.uleb128 0xa
 3652 01cc 01       		.byte	0x1
 3653 01cd FE030000 		.4byte	.LASF28
 3654 01d1 01       		.byte	0x1
 3655 01d2 BB01     		.2byte	0x1bb
 3656 01d4 01       		.byte	0x1
 3657 01d5 C5010000 		.4byte	0x1c5
 3658 01d9 00000000 		.4byte	.LFB3
 3659 01dd A0000000 		.4byte	.LFE3
 3660 01e1 A5000000 		.4byte	.LLST3
 3661 01e5 44020000 		.4byte	0x244
 3662 01e9 0B       		.uleb128 0xb
 3663 01ea 34000000 		.4byte	.LASF25
 3664 01ee 01       		.byte	0x1
 3665 01ef BB01     		.2byte	0x1bb
 3666 01f1 C5010000 		.4byte	0x1c5
 3667 01f5 02       		.byte	0x2
 3668 01f6 91       		.byte	0x91
 3669 01f7 64       		.sleb128 -28
 3670 01f8 0B       		.uleb128 0xb
 3671 01f9 80050000 		.4byte	.LASF26
 3672 01fd 01       		.byte	0x1
 3673 01fe BC01     		.2byte	0x1bc
 3674 0200 13010000 		.4byte	0x113
 3675 0204 02       		.byte	0x2
 3676 0205 91       		.byte	0x91
 3677 0206 60       		.sleb128 -32
 3678 0207 0B       		.uleb128 0xb
 3679 0208 5C020000 		.4byte	.LASF22
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 137


 3680 020c 01       		.byte	0x1
 3681 020d BD01     		.2byte	0x1bd
 3682 020f CE000000 		.4byte	0xce
 3683 0213 02       		.byte	0x2
 3684 0214 91       		.byte	0x91
 3685 0215 5C       		.sleb128 -36
 3686 0216 0C       		.uleb128 0xc
 3687 0217 B9050000 		.4byte	.LASF29
 3688 021b 01       		.byte	0x1
 3689 021c BF01     		.2byte	0x1bf
 3690 021e C5010000 		.4byte	0x1c5
 3691 0222 02       		.byte	0x2
 3692 0223 91       		.byte	0x91
 3693 0224 6C       		.sleb128 -20
 3694 0225 0C       		.uleb128 0xc
 3695 0226 00000000 		.4byte	.LASF30
 3696 022a 01       		.byte	0x1
 3697 022b C001     		.2byte	0x1c0
 3698 022d 13010000 		.4byte	0x113
 3699 0231 02       		.byte	0x2
 3700 0232 91       		.byte	0x91
 3701 0233 70       		.sleb128 -16
 3702 0234 0C       		.uleb128 0xc
 3703 0235 69050000 		.4byte	.LASF31
 3704 0239 01       		.byte	0x1
 3705 023a C101     		.2byte	0x1c1
 3706 023c CE000000 		.4byte	0xce
 3707 0240 02       		.byte	0x2
 3708 0241 91       		.byte	0x91
 3709 0242 74       		.sleb128 -12
 3710 0243 00       		.byte	0x0
 3711 0244 0A       		.uleb128 0xa
 3712 0245 01       		.byte	0x1
 3713 0246 CE020000 		.4byte	.LASF32
 3714 024a 01       		.byte	0x1
 3715 024b 2102     		.2byte	0x221
 3716 024d 01       		.byte	0x1
 3717 024e C5010000 		.4byte	0x1c5
 3718 0252 00000000 		.4byte	.LFB4
 3719 0256 26000000 		.4byte	.LFE4
 3720 025a DC000000 		.4byte	.LLST4
 3721 025e 90020000 		.4byte	0x290
 3722 0262 0B       		.uleb128 0xb
 3723 0263 34000000 		.4byte	.LASF25
 3724 0267 01       		.byte	0x1
 3725 0268 2102     		.2byte	0x221
 3726 026a C5010000 		.4byte	0x1c5
 3727 026e 02       		.byte	0x2
 3728 026f 91       		.byte	0x91
 3729 0270 6C       		.sleb128 -20
 3730 0271 0B       		.uleb128 0xb
 3731 0272 AA010000 		.4byte	.LASF33
 3732 0276 01       		.byte	0x1
 3733 0277 2202     		.2byte	0x222
 3734 0279 13010000 		.4byte	0x113
 3735 027d 02       		.byte	0x2
 3736 027e 91       		.byte	0x91
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 138


 3737 027f 68       		.sleb128 -24
 3738 0280 0C       		.uleb128 0xc
 3739 0281 AD030000 		.4byte	.LASF27
 3740 0285 01       		.byte	0x1
 3741 0286 2402     		.2byte	0x224
 3742 0288 C5010000 		.4byte	0x1c5
 3743 028c 02       		.byte	0x2
 3744 028d 91       		.byte	0x91
 3745 028e 74       		.sleb128 -12
 3746 028f 00       		.byte	0x0
 3747 0290 0A       		.uleb128 0xa
 3748 0291 01       		.byte	0x1
 3749 0292 8A000000 		.4byte	.LASF34
 3750 0296 01       		.byte	0x1
 3751 0297 7402     		.2byte	0x274
 3752 0299 01       		.byte	0x1
 3753 029a C5010000 		.4byte	0x1c5
 3754 029e 00000000 		.4byte	.LFB5
 3755 02a2 C6000000 		.4byte	.LFE5
 3756 02a6 13010000 		.4byte	.LLST5
 3757 02aa 09030000 		.4byte	0x309
 3758 02ae 0B       		.uleb128 0xb
 3759 02af 34000000 		.4byte	.LASF25
 3760 02b3 01       		.byte	0x1
 3761 02b4 7402     		.2byte	0x274
 3762 02b6 C5010000 		.4byte	0x1c5
 3763 02ba 02       		.byte	0x2
 3764 02bb 91       		.byte	0x91
 3765 02bc 64       		.sleb128 -28
 3766 02bd 0B       		.uleb128 0xb
 3767 02be AA010000 		.4byte	.LASF33
 3768 02c2 01       		.byte	0x1
 3769 02c3 7502     		.2byte	0x275
 3770 02c5 13010000 		.4byte	0x113
 3771 02c9 02       		.byte	0x2
 3772 02ca 91       		.byte	0x91
 3773 02cb 60       		.sleb128 -32
 3774 02cc 0B       		.uleb128 0xb
 3775 02cd 5C020000 		.4byte	.LASF22
 3776 02d1 01       		.byte	0x1
 3777 02d2 7602     		.2byte	0x276
 3778 02d4 CE000000 		.4byte	0xce
 3779 02d8 02       		.byte	0x2
 3780 02d9 91       		.byte	0x91
 3781 02da 5C       		.sleb128 -36
 3782 02db 0C       		.uleb128 0xc
 3783 02dc 0F030000 		.4byte	.LASF35
 3784 02e0 01       		.byte	0x1
 3785 02e1 7802     		.2byte	0x278
 3786 02e3 C5010000 		.4byte	0x1c5
 3787 02e7 02       		.byte	0x2
 3788 02e8 91       		.byte	0x91
 3789 02e9 6C       		.sleb128 -20
 3790 02ea 0C       		.uleb128 0xc
 3791 02eb DF040000 		.4byte	.LASF36
 3792 02ef 01       		.byte	0x1
 3793 02f0 7902     		.2byte	0x279
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 139


 3794 02f2 13010000 		.4byte	0x113
 3795 02f6 02       		.byte	0x2
 3796 02f7 91       		.byte	0x91
 3797 02f8 70       		.sleb128 -16
 3798 02f9 0C       		.uleb128 0xc
 3799 02fa 96050000 		.4byte	.LASF37
 3800 02fe 01       		.byte	0x1
 3801 02ff 7A02     		.2byte	0x27a
 3802 0301 CE000000 		.4byte	0xce
 3803 0305 02       		.byte	0x2
 3804 0306 91       		.byte	0x91
 3805 0307 74       		.sleb128 -12
 3806 0308 00       		.byte	0x0
 3807 0309 0A       		.uleb128 0xa
 3808 030a 01       		.byte	0x1
 3809 030b 98010000 		.4byte	.LASF38
 3810 030f 01       		.byte	0x1
 3811 0310 F702     		.2byte	0x2f7
 3812 0312 01       		.byte	0x1
 3813 0313 66000000 		.4byte	0x66
 3814 0317 00000000 		.4byte	.LFB6
 3815 031b 2A000000 		.4byte	.LFE6
 3816 031f 4A010000 		.4byte	.LLST6
 3817 0323 55030000 		.4byte	0x355
 3818 0327 0B       		.uleb128 0xb
 3819 0328 EA020000 		.4byte	.LASF39
 3820 032c 01       		.byte	0x1
 3821 032d F702     		.2byte	0x2f7
 3822 032f 13010000 		.4byte	0x113
 3823 0333 02       		.byte	0x2
 3824 0334 91       		.byte	0x91
 3825 0335 6C       		.sleb128 -20
 3826 0336 0B       		.uleb128 0xb
 3827 0337 57050000 		.4byte	.LASF40
 3828 033b 01       		.byte	0x1
 3829 033c F802     		.2byte	0x2f8
 3830 033e 13010000 		.4byte	0x113
 3831 0342 02       		.byte	0x2
 3832 0343 91       		.byte	0x91
 3833 0344 68       		.sleb128 -24
 3834 0345 0C       		.uleb128 0xc
 3835 0346 82000000 		.4byte	.LASF41
 3836 034a 01       		.byte	0x1
 3837 034b FA02     		.2byte	0x2fa
 3838 034d 66000000 		.4byte	0x66
 3839 0351 02       		.byte	0x2
 3840 0352 91       		.byte	0x91
 3841 0353 76       		.sleb128 -10
 3842 0354 00       		.byte	0x0
 3843 0355 0A       		.uleb128 0xa
 3844 0356 01       		.byte	0x1
 3845 0357 A0010000 		.4byte	.LASF42
 3846 035b 01       		.byte	0x1
 3847 035c 5D03     		.2byte	0x35d
 3848 035e 01       		.byte	0x1
 3849 035f 66000000 		.4byte	0x66
 3850 0363 00000000 		.4byte	.LFB7
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 140


 3851 0367 34010000 		.4byte	.LFE7
 3852 036b 81010000 		.4byte	.LLST7
 3853 036f FB030000 		.4byte	0x3fb
 3854 0373 0B       		.uleb128 0xb
 3855 0374 EA020000 		.4byte	.LASF39
 3856 0378 01       		.byte	0x1
 3857 0379 5D03     		.2byte	0x35d
 3858 037b 13010000 		.4byte	0x113
 3859 037f 02       		.byte	0x2
 3860 0380 91       		.byte	0x91
 3861 0381 5C       		.sleb128 -36
 3862 0382 0B       		.uleb128 0xb
 3863 0383 57050000 		.4byte	.LASF40
 3864 0387 01       		.byte	0x1
 3865 0388 5E03     		.2byte	0x35e
 3866 038a 13010000 		.4byte	0x113
 3867 038e 02       		.byte	0x2
 3868 038f 91       		.byte	0x91
 3869 0390 58       		.sleb128 -40
 3870 0391 0B       		.uleb128 0xb
 3871 0392 5C020000 		.4byte	.LASF22
 3872 0396 01       		.byte	0x1
 3873 0397 5F03     		.2byte	0x35f
 3874 0399 CE000000 		.4byte	0xce
 3875 039d 02       		.byte	0x2
 3876 039e 91       		.byte	0x91
 3877 039f 54       		.sleb128 -44
 3878 03a0 0C       		.uleb128 0xc
 3879 03a1 99020000 		.4byte	.LASF43
 3880 03a5 01       		.byte	0x1
 3881 03a6 6103     		.2byte	0x361
 3882 03a8 13010000 		.4byte	0x113
 3883 03ac 02       		.byte	0x2
 3884 03ad 91       		.byte	0x91
 3885 03ae 60       		.sleb128 -32
 3886 03af 0C       		.uleb128 0xc
 3887 03b0 48020000 		.4byte	.LASF44
 3888 03b4 01       		.byte	0x1
 3889 03b5 6203     		.2byte	0x362
 3890 03b7 13010000 		.4byte	0x113
 3891 03bb 02       		.byte	0x2
 3892 03bc 91       		.byte	0x91
 3893 03bd 64       		.sleb128 -28
 3894 03be 0C       		.uleb128 0xc
 3895 03bf FF020000 		.4byte	.LASF45
 3896 03c3 01       		.byte	0x1
 3897 03c4 6303     		.2byte	0x363
 3898 03c6 13010000 		.4byte	0x113
 3899 03ca 02       		.byte	0x2
 3900 03cb 91       		.byte	0x91
 3901 03cc 68       		.sleb128 -24
 3902 03cd 0C       		.uleb128 0xc
 3903 03ce 18020000 		.4byte	.LASF46
 3904 03d2 01       		.byte	0x1
 3905 03d3 6403     		.2byte	0x364
 3906 03d5 13010000 		.4byte	0x113
 3907 03d9 02       		.byte	0x2
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 141


 3908 03da 91       		.byte	0x91
 3909 03db 6C       		.sleb128 -20
 3910 03dc 0C       		.uleb128 0xc
 3911 03dd 82000000 		.4byte	.LASF41
 3912 03e1 01       		.byte	0x1
 3913 03e2 6503     		.2byte	0x365
 3914 03e4 66000000 		.4byte	0x66
 3915 03e8 02       		.byte	0x2
 3916 03e9 91       		.byte	0x91
 3917 03ea 72       		.sleb128 -14
 3918 03eb 0C       		.uleb128 0xc
 3919 03ec C4010000 		.4byte	.LASF47
 3920 03f0 01       		.byte	0x1
 3921 03f1 6603     		.2byte	0x366
 3922 03f3 CE000000 		.4byte	0xce
 3923 03f7 02       		.byte	0x2
 3924 03f8 91       		.byte	0x91
 3925 03f9 74       		.sleb128 -12
 3926 03fa 00       		.byte	0x0
 3927 03fb 0A       		.uleb128 0xa
 3928 03fc 01       		.byte	0x1
 3929 03fd 61010000 		.4byte	.LASF48
 3930 0401 01       		.byte	0x1
 3931 0402 0204     		.2byte	0x402
 3932 0404 01       		.byte	0x1
 3933 0405 66000000 		.4byte	0x66
 3934 0409 00000000 		.4byte	.LFB8
 3935 040d 2A000000 		.4byte	.LFE8
 3936 0411 B8010000 		.4byte	.LLST8
 3937 0415 47040000 		.4byte	0x447
 3938 0419 0B       		.uleb128 0xb
 3939 041a EA020000 		.4byte	.LASF39
 3940 041e 01       		.byte	0x1
 3941 041f 0204     		.2byte	0x402
 3942 0421 13010000 		.4byte	0x113
 3943 0425 02       		.byte	0x2
 3944 0426 91       		.byte	0x91
 3945 0427 6C       		.sleb128 -20
 3946 0428 0B       		.uleb128 0xb
 3947 0429 57050000 		.4byte	.LASF40
 3948 042d 01       		.byte	0x1
 3949 042e 0304     		.2byte	0x403
 3950 0430 13010000 		.4byte	0x113
 3951 0434 02       		.byte	0x2
 3952 0435 91       		.byte	0x91
 3953 0436 68       		.sleb128 -24
 3954 0437 0C       		.uleb128 0xc
 3955 0438 82000000 		.4byte	.LASF41
 3956 043c 01       		.byte	0x1
 3957 043d 0504     		.2byte	0x405
 3958 043f 66000000 		.4byte	0x66
 3959 0443 02       		.byte	0x2
 3960 0444 91       		.byte	0x91
 3961 0445 76       		.sleb128 -10
 3962 0446 00       		.byte	0x0
 3963 0447 0A       		.uleb128 0xa
 3964 0448 01       		.byte	0x1
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 142


 3965 0449 28020000 		.4byte	.LASF49
 3966 044d 01       		.byte	0x1
 3967 044e 7204     		.2byte	0x472
 3968 0450 01       		.byte	0x1
 3969 0451 66000000 		.4byte	0x66
 3970 0455 00000000 		.4byte	.LFB9
 3971 0459 B0010000 		.4byte	.LFE9
 3972 045d EF010000 		.4byte	.LLST9
 3973 0461 0B050000 		.4byte	0x50b
 3974 0465 0B       		.uleb128 0xb
 3975 0466 EA020000 		.4byte	.LASF39
 3976 046a 01       		.byte	0x1
 3977 046b 7204     		.2byte	0x472
 3978 046d 13010000 		.4byte	0x113
 3979 0471 02       		.byte	0x2
 3980 0472 91       		.byte	0x91
 3981 0473 5C       		.sleb128 -36
 3982 0474 0B       		.uleb128 0xb
 3983 0475 57050000 		.4byte	.LASF40
 3984 0479 01       		.byte	0x1
 3985 047a 7304     		.2byte	0x473
 3986 047c 13010000 		.4byte	0x113
 3987 0480 02       		.byte	0x2
 3988 0481 91       		.byte	0x91
 3989 0482 58       		.sleb128 -40
 3990 0483 0B       		.uleb128 0xb
 3991 0484 5C020000 		.4byte	.LASF22
 3992 0488 01       		.byte	0x1
 3993 0489 7404     		.2byte	0x474
 3994 048b CE000000 		.4byte	0xce
 3995 048f 02       		.byte	0x2
 3996 0490 91       		.byte	0x91
 3997 0491 54       		.sleb128 -44
 3998 0492 0C       		.uleb128 0xc
 3999 0493 99020000 		.4byte	.LASF43
 4000 0497 01       		.byte	0x1
 4001 0498 7604     		.2byte	0x476
 4002 049a 13010000 		.4byte	0x113
 4003 049e 02       		.byte	0x2
 4004 049f 91       		.byte	0x91
 4005 04a0 60       		.sleb128 -32
 4006 04a1 0C       		.uleb128 0xc
 4007 04a2 48020000 		.4byte	.LASF44
 4008 04a6 01       		.byte	0x1
 4009 04a7 7704     		.2byte	0x477
 4010 04a9 13010000 		.4byte	0x113
 4011 04ad 02       		.byte	0x2
 4012 04ae 91       		.byte	0x91
 4013 04af 64       		.sleb128 -28
 4014 04b0 0C       		.uleb128 0xc
 4015 04b1 FF020000 		.4byte	.LASF45
 4016 04b5 01       		.byte	0x1
 4017 04b6 7804     		.2byte	0x478
 4018 04b8 13010000 		.4byte	0x113
 4019 04bc 02       		.byte	0x2
 4020 04bd 91       		.byte	0x91
 4021 04be 68       		.sleb128 -24
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 143


 4022 04bf 0C       		.uleb128 0xc
 4023 04c0 18020000 		.4byte	.LASF46
 4024 04c4 01       		.byte	0x1
 4025 04c5 7904     		.2byte	0x479
 4026 04c7 13010000 		.4byte	0x113
 4027 04cb 02       		.byte	0x2
 4028 04cc 91       		.byte	0x91
 4029 04cd 6C       		.sleb128 -20
 4030 04ce 0C       		.uleb128 0xc
 4031 04cf F8000000 		.4byte	.LASF50
 4032 04d3 01       		.byte	0x1
 4033 04d4 7A04     		.2byte	0x47a
 4034 04d6 29000000 		.4byte	0x29
 4035 04da 02       		.byte	0x2
 4036 04db 91       		.byte	0x91
 4037 04dc 70       		.sleb128 -16
 4038 04dd 0C       		.uleb128 0xc
 4039 04de FF000000 		.4byte	.LASF51
 4040 04e2 01       		.byte	0x1
 4041 04e3 7B04     		.2byte	0x47b
 4042 04e5 29000000 		.4byte	0x29
 4043 04e9 02       		.byte	0x2
 4044 04ea 91       		.byte	0x91
 4045 04eb 71       		.sleb128 -15
 4046 04ec 0C       		.uleb128 0xc
 4047 04ed 82000000 		.4byte	.LASF41
 4048 04f1 01       		.byte	0x1
 4049 04f2 7C04     		.2byte	0x47c
 4050 04f4 66000000 		.4byte	0x66
 4051 04f8 02       		.byte	0x2
 4052 04f9 91       		.byte	0x91
 4053 04fa 72       		.sleb128 -14
 4054 04fb 0C       		.uleb128 0xc
 4055 04fc C4010000 		.4byte	.LASF47
 4056 0500 01       		.byte	0x1
 4057 0501 7D04     		.2byte	0x47d
 4058 0503 CE000000 		.4byte	0xce
 4059 0507 02       		.byte	0x2
 4060 0508 91       		.byte	0x91
 4061 0509 74       		.sleb128 -12
 4062 050a 00       		.byte	0x0
 4063 050b 0A       		.uleb128 0xa
 4064 050c 01       		.byte	0x1
 4065 050d 7C010000 		.4byte	.LASF52
 4066 0511 01       		.byte	0x1
 4067 0512 FE04     		.2byte	0x4fe
 4068 0514 01       		.byte	0x1
 4069 0515 C5010000 		.4byte	0x1c5
 4070 0519 00000000 		.4byte	.LFB10
 4071 051d 2A000000 		.4byte	.LFE10
 4072 0521 26020000 		.4byte	.LLST10
 4073 0525 57050000 		.4byte	0x557
 4074 0529 0B       		.uleb128 0xb
 4075 052a 36050000 		.4byte	.LASF21
 4076 052e 01       		.byte	0x1
 4077 052f FE04     		.2byte	0x4fe
 4078 0531 13010000 		.4byte	0x113
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 144


 4079 0535 02       		.byte	0x2
 4080 0536 91       		.byte	0x91
 4081 0537 6C       		.sleb128 -20
 4082 0538 0B       		.uleb128 0xb
 4083 0539 B6030000 		.4byte	.LASF53
 4084 053d 01       		.byte	0x1
 4085 053e FF04     		.2byte	0x4ff
 4086 0540 29000000 		.4byte	0x29
 4087 0544 02       		.byte	0x2
 4088 0545 91       		.byte	0x91
 4089 0546 6B       		.sleb128 -21
 4090 0547 0C       		.uleb128 0xc
 4091 0548 AD030000 		.4byte	.LASF27
 4092 054c 01       		.byte	0x1
 4093 054d 0105     		.2byte	0x501
 4094 054f C5010000 		.4byte	0x1c5
 4095 0553 02       		.byte	0x2
 4096 0554 91       		.byte	0x91
 4097 0555 74       		.sleb128 -12
 4098 0556 00       		.byte	0x0
 4099 0557 0A       		.uleb128 0xa
 4100 0558 01       		.byte	0x1
 4101 0559 CC010000 		.4byte	.LASF54
 4102 055d 01       		.byte	0x1
 4103 055e 4F05     		.2byte	0x54f
 4104 0560 01       		.byte	0x1
 4105 0561 C5010000 		.4byte	0x1c5
 4106 0565 00000000 		.4byte	.LFB11
 4107 0569 9A000000 		.4byte	.LFE11
 4108 056d 5D020000 		.4byte	.LLST11
 4109 0571 C1050000 		.4byte	0x5c1
 4110 0575 0B       		.uleb128 0xb
 4111 0576 36050000 		.4byte	.LASF21
 4112 057a 01       		.byte	0x1
 4113 057b 4F05     		.2byte	0x54f
 4114 057d 13010000 		.4byte	0x113
 4115 0581 02       		.byte	0x2
 4116 0582 91       		.byte	0x91
 4117 0583 6C       		.sleb128 -20
 4118 0584 0B       		.uleb128 0xb
 4119 0585 5C020000 		.4byte	.LASF22
 4120 0589 01       		.byte	0x1
 4121 058a 5005     		.2byte	0x550
 4122 058c CE000000 		.4byte	0xce
 4123 0590 02       		.byte	0x2
 4124 0591 91       		.byte	0x91
 4125 0592 68       		.sleb128 -24
 4126 0593 0B       		.uleb128 0xb
 4127 0594 B6030000 		.4byte	.LASF53
 4128 0598 01       		.byte	0x1
 4129 0599 5105     		.2byte	0x551
 4130 059b 29000000 		.4byte	0x29
 4131 059f 02       		.byte	0x2
 4132 05a0 91       		.byte	0x91
 4133 05a1 67       		.sleb128 -25
 4134 05a2 0C       		.uleb128 0xc
 4135 05a3 C0030000 		.4byte	.LASF55
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 145


 4136 05a7 01       		.byte	0x1
 4137 05a8 5305     		.2byte	0x553
 4138 05aa 13010000 		.4byte	0x113
 4139 05ae 02       		.byte	0x2
 4140 05af 91       		.byte	0x91
 4141 05b0 70       		.sleb128 -16
 4142 05b1 0C       		.uleb128 0xc
 4143 05b2 EF000000 		.4byte	.LASF56
 4144 05b6 01       		.byte	0x1
 4145 05b7 5405     		.2byte	0x554
 4146 05b9 CE000000 		.4byte	0xce
 4147 05bd 02       		.byte	0x2
 4148 05be 91       		.byte	0x91
 4149 05bf 74       		.sleb128 -12
 4150 05c0 00       		.byte	0x0
 4151 05c1 0A       		.uleb128 0xa
 4152 05c2 01       		.byte	0x1
 4153 05c3 6C020000 		.4byte	.LASF57
 4154 05c7 01       		.byte	0x1
 4155 05c8 B105     		.2byte	0x5b1
 4156 05ca 01       		.byte	0x1
 4157 05cb C5010000 		.4byte	0x1c5
 4158 05cf 00000000 		.4byte	.LFB12
 4159 05d3 2A000000 		.4byte	.LFE12
 4160 05d7 94020000 		.4byte	.LLST12
 4161 05db 0D060000 		.4byte	0x60d
 4162 05df 0B       		.uleb128 0xb
 4163 05e0 36050000 		.4byte	.LASF21
 4164 05e4 01       		.byte	0x1
 4165 05e5 B105     		.2byte	0x5b1
 4166 05e7 13010000 		.4byte	0x113
 4167 05eb 02       		.byte	0x2
 4168 05ec 91       		.byte	0x91
 4169 05ed 6C       		.sleb128 -20
 4170 05ee 0B       		.uleb128 0xb
 4171 05ef B6030000 		.4byte	.LASF53
 4172 05f3 01       		.byte	0x1
 4173 05f4 B205     		.2byte	0x5b2
 4174 05f6 29000000 		.4byte	0x29
 4175 05fa 02       		.byte	0x2
 4176 05fb 91       		.byte	0x91
 4177 05fc 6B       		.sleb128 -21
 4178 05fd 0C       		.uleb128 0xc
 4179 05fe AD030000 		.4byte	.LASF27
 4180 0602 01       		.byte	0x1
 4181 0603 B405     		.2byte	0x5b4
 4182 0605 C5010000 		.4byte	0x1c5
 4183 0609 02       		.byte	0x2
 4184 060a 91       		.byte	0x91
 4185 060b 74       		.sleb128 -12
 4186 060c 00       		.byte	0x0
 4187 060d 0A       		.uleb128 0xa
 4188 060e 01       		.byte	0x1
 4189 060f 12050000 		.4byte	.LASF58
 4190 0613 01       		.byte	0x1
 4191 0614 0406     		.2byte	0x604
 4192 0616 01       		.byte	0x1
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 146


 4193 0617 C5010000 		.4byte	0x1c5
 4194 061b 00000000 		.4byte	.LFB13
 4195 061f 88000000 		.4byte	.LFE13
 4196 0623 CB020000 		.4byte	.LLST13
 4197 0627 86060000 		.4byte	0x686
 4198 062b 0B       		.uleb128 0xb
 4199 062c 36050000 		.4byte	.LASF21
 4200 0630 01       		.byte	0x1
 4201 0631 0406     		.2byte	0x604
 4202 0633 13010000 		.4byte	0x113
 4203 0637 02       		.byte	0x2
 4204 0638 91       		.byte	0x91
 4205 0639 64       		.sleb128 -28
 4206 063a 0B       		.uleb128 0xb
 4207 063b 5C020000 		.4byte	.LASF22
 4208 063f 01       		.byte	0x1
 4209 0640 0506     		.2byte	0x605
 4210 0642 CE000000 		.4byte	0xce
 4211 0646 02       		.byte	0x2
 4212 0647 91       		.byte	0x91
 4213 0648 60       		.sleb128 -32
 4214 0649 0B       		.uleb128 0xb
 4215 064a B6030000 		.4byte	.LASF53
 4216 064e 01       		.byte	0x1
 4217 064f 0606     		.2byte	0x606
 4218 0651 29000000 		.4byte	0x29
 4219 0655 02       		.byte	0x2
 4220 0656 91       		.byte	0x91
 4221 0657 5F       		.sleb128 -33
 4222 0658 0C       		.uleb128 0xc
 4223 0659 C0030000 		.4byte	.LASF55
 4224 065d 01       		.byte	0x1
 4225 065e 0806     		.2byte	0x608
 4226 0660 13010000 		.4byte	0x113
 4227 0664 02       		.byte	0x2
 4228 0665 91       		.byte	0x91
 4229 0666 6C       		.sleb128 -20
 4230 0667 0C       		.uleb128 0xc
 4231 0668 01050000 		.4byte	.LASF59
 4232 066c 01       		.byte	0x1
 4233 066d 0906     		.2byte	0x609
 4234 066f CE000000 		.4byte	0xce
 4235 0673 02       		.byte	0x2
 4236 0674 91       		.byte	0x91
 4237 0675 70       		.sleb128 -16
 4238 0676 0C       		.uleb128 0xc
 4239 0677 E0010000 		.4byte	.LASF60
 4240 067b 01       		.byte	0x1
 4241 067c 0A06     		.2byte	0x60a
 4242 067e CE000000 		.4byte	0xce
 4243 0682 02       		.byte	0x2
 4244 0683 91       		.byte	0x91
 4245 0684 74       		.sleb128 -12
 4246 0685 00       		.byte	0x0
 4247 0686 0A       		.uleb128 0xa
 4248 0687 01       		.byte	0x1
 4249 0688 71000000 		.4byte	.LASF61
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 147


 4250 068c 01       		.byte	0x1
 4251 068d 5406     		.2byte	0x654
 4252 068f 01       		.byte	0x1
 4253 0690 C5010000 		.4byte	0x1c5
 4254 0694 00000000 		.4byte	.LFB14
 4255 0698 32000000 		.4byte	.LFE14
 4256 069c 02030000 		.4byte	.LLST14
 4257 06a0 E1060000 		.4byte	0x6e1
 4258 06a4 0B       		.uleb128 0xb
 4259 06a5 36050000 		.4byte	.LASF21
 4260 06a9 01       		.byte	0x1
 4261 06aa 5406     		.2byte	0x654
 4262 06ac C5010000 		.4byte	0x1c5
 4263 06b0 02       		.byte	0x2
 4264 06b1 91       		.byte	0x91
 4265 06b2 6C       		.sleb128 -20
 4266 06b3 0B       		.uleb128 0xb
 4267 06b4 51030000 		.4byte	.LASF62
 4268 06b8 01       		.byte	0x1
 4269 06b9 5506     		.2byte	0x655
 4270 06bb 29000000 		.4byte	0x29
 4271 06bf 02       		.byte	0x2
 4272 06c0 91       		.byte	0x91
 4273 06c1 6B       		.sleb128 -21
 4274 06c2 0B       		.uleb128 0xb
 4275 06c3 29050000 		.4byte	.LASF63
 4276 06c7 01       		.byte	0x1
 4277 06c8 5606     		.2byte	0x656
 4278 06ca 29000000 		.4byte	0x29
 4279 06ce 02       		.byte	0x2
 4280 06cf 91       		.byte	0x91
 4281 06d0 6A       		.sleb128 -22
 4282 06d1 0C       		.uleb128 0xc
 4283 06d2 AD030000 		.4byte	.LASF27
 4284 06d6 01       		.byte	0x1
 4285 06d7 5806     		.2byte	0x658
 4286 06d9 C5010000 		.4byte	0x1c5
 4287 06dd 02       		.byte	0x2
 4288 06de 91       		.byte	0x91
 4289 06df 74       		.sleb128 -12
 4290 06e0 00       		.byte	0x0
 4291 06e1 0A       		.uleb128 0xa
 4292 06e2 01       		.byte	0x1
 4293 06e3 5E000000 		.4byte	.LASF64
 4294 06e7 01       		.byte	0x1
 4295 06e8 9306     		.2byte	0x693
 4296 06ea 01       		.byte	0x1
 4297 06eb C5010000 		.4byte	0x1c5
 4298 06ef 00000000 		.4byte	.LFB15
 4299 06f3 76000000 		.4byte	.LFE15
 4300 06f7 39030000 		.4byte	.LLST15
 4301 06fb 5A070000 		.4byte	0x75a
 4302 06ff 0B       		.uleb128 0xb
 4303 0700 36050000 		.4byte	.LASF21
 4304 0704 01       		.byte	0x1
 4305 0705 9306     		.2byte	0x693
 4306 0707 C5010000 		.4byte	0x1c5
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 148


 4307 070b 02       		.byte	0x2
 4308 070c 91       		.byte	0x91
 4309 070d 6C       		.sleb128 -20
 4310 070e 0B       		.uleb128 0xb
 4311 070f 51030000 		.4byte	.LASF62
 4312 0713 01       		.byte	0x1
 4313 0714 9406     		.2byte	0x694
 4314 0716 29000000 		.4byte	0x29
 4315 071a 02       		.byte	0x2
 4316 071b 91       		.byte	0x91
 4317 071c 6B       		.sleb128 -21
 4318 071d 0B       		.uleb128 0xb
 4319 071e 29050000 		.4byte	.LASF63
 4320 0722 01       		.byte	0x1
 4321 0723 9506     		.2byte	0x695
 4322 0725 29000000 		.4byte	0x29
 4323 0729 02       		.byte	0x2
 4324 072a 91       		.byte	0x91
 4325 072b 6A       		.sleb128 -22
 4326 072c 0B       		.uleb128 0xb
 4327 072d 5C020000 		.4byte	.LASF22
 4328 0731 01       		.byte	0x1
 4329 0732 9606     		.2byte	0x696
 4330 0734 CE000000 		.4byte	0xce
 4331 0738 02       		.byte	0x2
 4332 0739 91       		.byte	0x91
 4333 073a 64       		.sleb128 -28
 4334 073b 0C       		.uleb128 0xc
 4335 073c C0030000 		.4byte	.LASF55
 4336 0740 01       		.byte	0x1
 4337 0741 9806     		.2byte	0x698
 4338 0743 C5010000 		.4byte	0x1c5
 4339 0747 02       		.byte	0x2
 4340 0748 91       		.byte	0x91
 4341 0749 70       		.sleb128 -16
 4342 074a 0D       		.uleb128 0xd
 4343 074b 6C656E00 		.ascii	"len\000"
 4344 074f 01       		.byte	0x1
 4345 0750 9906     		.2byte	0x699
 4346 0752 CE000000 		.4byte	0xce
 4347 0756 02       		.byte	0x2
 4348 0757 91       		.byte	0x91
 4349 0758 74       		.sleb128 -12
 4350 0759 00       		.byte	0x0
 4351 075a 0A       		.uleb128 0xa
 4352 075b 01       		.byte	0x1
 4353 075c DD030000 		.4byte	.LASF65
 4354 0760 01       		.byte	0x1
 4355 0761 F406     		.2byte	0x6f4
 4356 0763 01       		.byte	0x1
 4357 0764 C5010000 		.4byte	0x1c5
 4358 0768 00000000 		.4byte	.LFB16
 4359 076c 26000000 		.4byte	.LFE16
 4360 0770 70030000 		.4byte	.LLST16
 4361 0774 A6070000 		.4byte	0x7a6
 4362 0778 0B       		.uleb128 0xb
 4363 0779 36050000 		.4byte	.LASF21
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 149


 4364 077d 01       		.byte	0x1
 4365 077e F406     		.2byte	0x6f4
 4366 0780 13010000 		.4byte	0x113
 4367 0784 02       		.byte	0x2
 4368 0785 91       		.byte	0x91
 4369 0786 6C       		.sleb128 -20
 4370 0787 0B       		.uleb128 0xb
 4371 0788 D0000000 		.4byte	.LASF66
 4372 078c 01       		.byte	0x1
 4373 078d F506     		.2byte	0x6f5
 4374 078f 13010000 		.4byte	0x113
 4375 0793 02       		.byte	0x2
 4376 0794 91       		.byte	0x91
 4377 0795 68       		.sleb128 -24
 4378 0796 0C       		.uleb128 0xc
 4379 0797 AD030000 		.4byte	.LASF27
 4380 079b 01       		.byte	0x1
 4381 079c F706     		.2byte	0x6f7
 4382 079e C5010000 		.4byte	0x1c5
 4383 07a2 02       		.byte	0x2
 4384 07a3 91       		.byte	0x91
 4385 07a4 74       		.sleb128 -12
 4386 07a5 00       		.byte	0x0
 4387 07a6 0A       		.uleb128 0xa
 4388 07a7 01       		.byte	0x1
 4389 07a8 4D050000 		.4byte	.LASF67
 4390 07ac 01       		.byte	0x1
 4391 07ad 4907     		.2byte	0x749
 4392 07af 01       		.byte	0x1
 4393 07b0 C5010000 		.4byte	0x1c5
 4394 07b4 00000000 		.4byte	.LFB17
 4395 07b8 16010000 		.4byte	.LFE17
 4396 07bc A7030000 		.4byte	.LLST17
 4397 07c0 79080000 		.4byte	0x879
 4398 07c4 0B       		.uleb128 0xb
 4399 07c5 36050000 		.4byte	.LASF21
 4400 07c9 01       		.byte	0x1
 4401 07ca 4907     		.2byte	0x749
 4402 07cc 13010000 		.4byte	0x113
 4403 07d0 02       		.byte	0x2
 4404 07d1 91       		.byte	0x91
 4405 07d2 54       		.sleb128 -44
 4406 07d3 0B       		.uleb128 0xb
 4407 07d4 D0000000 		.4byte	.LASF66
 4408 07d8 01       		.byte	0x1
 4409 07d9 4A07     		.2byte	0x74a
 4410 07db 13010000 		.4byte	0x113
 4411 07df 02       		.byte	0x2
 4412 07e0 91       		.byte	0x91
 4413 07e1 50       		.sleb128 -48
 4414 07e2 0B       		.uleb128 0xb
 4415 07e3 5C020000 		.4byte	.LASF22
 4416 07e7 01       		.byte	0x1
 4417 07e8 4B07     		.2byte	0x74b
 4418 07ea CE000000 		.4byte	0xce
 4419 07ee 02       		.byte	0x2
 4420 07ef 91       		.byte	0x91
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 150


 4421 07f0 4C       		.sleb128 -52
 4422 07f1 0C       		.uleb128 0xc
 4423 07f2 E0010000 		.4byte	.LASF60
 4424 07f6 01       		.byte	0x1
 4425 07f7 4D07     		.2byte	0x74d
 4426 07f9 CE000000 		.4byte	0xce
 4427 07fd 02       		.byte	0x2
 4428 07fe 91       		.byte	0x91
 4429 07ff 58       		.sleb128 -40
 4430 0800 0C       		.uleb128 0xc
 4431 0801 27010000 		.4byte	.LASF68
 4432 0805 01       		.byte	0x1
 4433 0806 4E07     		.2byte	0x74e
 4434 0808 CE000000 		.4byte	0xce
 4435 080c 02       		.byte	0x2
 4436 080d 91       		.byte	0x91
 4437 080e 5C       		.sleb128 -36
 4438 080f 0C       		.uleb128 0xc
 4439 0810 89050000 		.4byte	.LASF69
 4440 0814 01       		.byte	0x1
 4441 0815 4F07     		.2byte	0x74f
 4442 0817 CE000000 		.4byte	0xce
 4443 081b 02       		.byte	0x2
 4444 081c 91       		.byte	0x91
 4445 081d 60       		.sleb128 -32
 4446 081e 0C       		.uleb128 0xc
 4447 081f 53020000 		.4byte	.LASF70
 4448 0823 01       		.byte	0x1
 4449 0824 5007     		.2byte	0x750
 4450 0826 CE000000 		.4byte	0xce
 4451 082a 02       		.byte	0x2
 4452 082b 91       		.byte	0x91
 4453 082c 64       		.sleb128 -28
 4454 082d 0C       		.uleb128 0xc
 4455 082e E8010000 		.4byte	.LASF71
 4456 0832 01       		.byte	0x1
 4457 0833 5107     		.2byte	0x751
 4458 0835 CE000000 		.4byte	0xce
 4459 0839 02       		.byte	0x2
 4460 083a 91       		.byte	0x91
 4461 083b 68       		.sleb128 -24
 4462 083c 0C       		.uleb128 0xc
 4463 083d 20060000 		.4byte	.LASF72
 4464 0841 01       		.byte	0x1
 4465 0842 5207     		.2byte	0x752
 4466 0844 3B000000 		.4byte	0x3b
 4467 0848 02       		.byte	0x2
 4468 0849 91       		.byte	0x91
 4469 084a 6D       		.sleb128 -19
 4470 084b 0C       		.uleb128 0xc
 4471 084c 43010000 		.4byte	.LASF73
 4472 0850 01       		.byte	0x1
 4473 0851 5307     		.2byte	0x753
 4474 0853 66000000 		.4byte	0x66
 4475 0857 02       		.byte	0x2
 4476 0858 91       		.byte	0x91
 4477 0859 6E       		.sleb128 -18
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 151


 4478 085a 0C       		.uleb128 0xc
 4479 085b 01020000 		.4byte	.LASF74
 4480 085f 01       		.byte	0x1
 4481 0860 5407     		.2byte	0x754
 4482 0862 13010000 		.4byte	0x113
 4483 0866 02       		.byte	0x2
 4484 0867 91       		.byte	0x91
 4485 0868 70       		.sleb128 -16
 4486 0869 0C       		.uleb128 0xc
 4487 086a 10010000 		.4byte	.LASF75
 4488 086e 01       		.byte	0x1
 4489 086f 5507     		.2byte	0x755
 4490 0871 13010000 		.4byte	0x113
 4491 0875 02       		.byte	0x2
 4492 0876 91       		.byte	0x91
 4493 0877 74       		.sleb128 -12
 4494 0878 00       		.byte	0x0
 4495 0879 0A       		.uleb128 0xa
 4496 087a 01       		.byte	0x1
 4497 087b 4C000000 		.4byte	.LASF76
 4498 087f 01       		.byte	0x1
 4499 0880 0B08     		.2byte	0x80b
 4500 0882 01       		.byte	0x1
 4501 0883 C5010000 		.4byte	0x1c5
 4502 0887 00000000 		.4byte	.LFB18
 4503 088b 40000000 		.4byte	.LFE18
 4504 088f DE030000 		.4byte	.LLST18
 4505 0893 10090000 		.4byte	0x910
 4506 0897 0E       		.uleb128 0xe
 4507 0898 6E627200 		.ascii	"nbr\000"
 4508 089c 01       		.byte	0x1
 4509 089d 0B08     		.2byte	0x80b
 4510 089f 78000000 		.4byte	0x78
 4511 08a3 02       		.byte	0x2
 4512 08a4 91       		.byte	0x91
 4513 08a5 6C       		.sleb128 -20
 4514 08a6 0B       		.uleb128 0xb
 4515 08a7 2C000000 		.4byte	.LASF77
 4516 08ab 01       		.byte	0x1
 4517 08ac 0C08     		.2byte	0x80c
 4518 08ae 4D000000 		.4byte	0x4d
 4519 08b2 02       		.byte	0x2
 4520 08b3 91       		.byte	0x91
 4521 08b4 6B       		.sleb128 -21
 4522 08b5 0B       		.uleb128 0xb
 4523 08b6 73010000 		.4byte	.LASF78
 4524 08ba 01       		.byte	0x1
 4525 08bb 0D08     		.2byte	0x80d
 4526 08bd 4D000000 		.4byte	0x4d
 4527 08c1 02       		.byte	0x2
 4528 08c2 91       		.byte	0x91
 4529 08c3 6A       		.sleb128 -22
 4530 08c4 0B       		.uleb128 0xb
 4531 08c5 06010000 		.4byte	.LASF79
 4532 08c9 01       		.byte	0x1
 4533 08ca 0E08     		.2byte	0x80e
 4534 08cc 29000000 		.4byte	0x29
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 152


 4535 08d0 02       		.byte	0x2
 4536 08d1 91       		.byte	0x91
 4537 08d2 69       		.sleb128 -23
 4538 08d3 0B       		.uleb128 0xb
 4539 08d4 F6010000 		.4byte	.LASF80
 4540 08d8 01       		.byte	0x1
 4541 08d9 0F08     		.2byte	0x80f
 4542 08db 3B000000 		.4byte	0x3b
 4543 08df 02       		.byte	0x2
 4544 08e0 91       		.byte	0x91
 4545 08e1 00       		.sleb128 0
 4546 08e2 0E       		.uleb128 0xe
 4547 08e3 6E756C00 		.ascii	"nul\000"
 4548 08e7 01       		.byte	0x1
 4549 08e8 1008     		.2byte	0x810
 4550 08ea 3B000000 		.4byte	0x3b
 4551 08ee 02       		.byte	0x2
 4552 08ef 91       		.byte	0x91
 4553 08f0 04       		.sleb128 4
 4554 08f1 0B       		.uleb128 0xb
 4555 08f2 36050000 		.4byte	.LASF21
 4556 08f6 01       		.byte	0x1
 4557 08f7 1108     		.2byte	0x811
 4558 08f9 C5010000 		.4byte	0x1c5
 4559 08fd 02       		.byte	0x2
 4560 08fe 91       		.byte	0x91
 4561 08ff 08       		.sleb128 8
 4562 0900 0C       		.uleb128 0xc
 4563 0901 F8040000 		.4byte	.LASF81
 4564 0905 01       		.byte	0x1
 4565 0906 1308     		.2byte	0x813
 4566 0908 C5010000 		.4byte	0x1c5
 4567 090c 02       		.byte	0x2
 4568 090d 91       		.byte	0x91
 4569 090e 74       		.sleb128 -12
 4570 090f 00       		.byte	0x0
 4571 0910 0A       		.uleb128 0xa
 4572 0911 01       		.byte	0x1
 4573 0912 09040000 		.4byte	.LASF82
 4574 0916 01       		.byte	0x1
 4575 0917 E408     		.2byte	0x8e4
 4576 0919 01       		.byte	0x1
 4577 091a C5010000 		.4byte	0x1c5
 4578 091e 00000000 		.4byte	.LFB19
 4579 0922 6A000000 		.4byte	.LFE19
 4580 0926 15040000 		.4byte	.LLST19
 4581 092a C5090000 		.4byte	0x9c5
 4582 092e 0E       		.uleb128 0xe
 4583 092f 6E627200 		.ascii	"nbr\000"
 4584 0933 01       		.byte	0x1
 4585 0934 E408     		.2byte	0x8e4
 4586 0936 8A000000 		.4byte	0x8a
 4587 093a 02       		.byte	0x2
 4588 093b 91       		.byte	0x91
 4589 093c 64       		.sleb128 -28
 4590 093d 0B       		.uleb128 0xb
 4591 093e 2C000000 		.4byte	.LASF77
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 153


 4592 0942 01       		.byte	0x1
 4593 0943 E508     		.2byte	0x8e5
 4594 0945 4D000000 		.4byte	0x4d
 4595 0949 02       		.byte	0x2
 4596 094a 91       		.byte	0x91
 4597 094b 63       		.sleb128 -29
 4598 094c 0B       		.uleb128 0xb
 4599 094d 73010000 		.4byte	.LASF78
 4600 0951 01       		.byte	0x1
 4601 0952 E608     		.2byte	0x8e6
 4602 0954 4D000000 		.4byte	0x4d
 4603 0958 02       		.byte	0x2
 4604 0959 91       		.byte	0x91
 4605 095a 62       		.sleb128 -30
 4606 095b 0B       		.uleb128 0xb
 4607 095c 06010000 		.4byte	.LASF79
 4608 0960 01       		.byte	0x1
 4609 0961 E708     		.2byte	0x8e7
 4610 0963 29000000 		.4byte	0x29
 4611 0967 02       		.byte	0x2
 4612 0968 91       		.byte	0x91
 4613 0969 61       		.sleb128 -31
 4614 096a 0B       		.uleb128 0xb
 4615 096b F6010000 		.4byte	.LASF80
 4616 096f 01       		.byte	0x1
 4617 0970 E808     		.2byte	0x8e8
 4618 0972 3B000000 		.4byte	0x3b
 4619 0976 02       		.byte	0x2
 4620 0977 91       		.byte	0x91
 4621 0978 00       		.sleb128 0
 4622 0979 0E       		.uleb128 0xe
 4623 097a 6E756C00 		.ascii	"nul\000"
 4624 097e 01       		.byte	0x1
 4625 097f E908     		.2byte	0x8e9
 4626 0981 3B000000 		.4byte	0x3b
 4627 0985 02       		.byte	0x2
 4628 0986 91       		.byte	0x91
 4629 0987 04       		.sleb128 4
 4630 0988 0B       		.uleb128 0xb
 4631 0989 36050000 		.4byte	.LASF21
 4632 098d 01       		.byte	0x1
 4633 098e EA08     		.2byte	0x8ea
 4634 0990 C5010000 		.4byte	0x1c5
 4635 0994 02       		.byte	0x2
 4636 0995 91       		.byte	0x91
 4637 0996 08       		.sleb128 8
 4638 0997 0C       		.uleb128 0xc
 4639 0998 F8040000 		.4byte	.LASF81
 4640 099c 01       		.byte	0x1
 4641 099d EC08     		.2byte	0x8ec
 4642 099f C5010000 		.4byte	0x1c5
 4643 09a3 02       		.byte	0x2
 4644 09a4 91       		.byte	0x91
 4645 09a5 6C       		.sleb128 -20
 4646 09a6 0C       		.uleb128 0xc
 4647 09a7 64020000 		.4byte	.LASF83
 4648 09ab 01       		.byte	0x1
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 154


 4649 09ac ED08     		.2byte	0x8ed
 4650 09ae 8A000000 		.4byte	0x8a
 4651 09b2 02       		.byte	0x2
 4652 09b3 91       		.byte	0x91
 4653 09b4 70       		.sleb128 -16
 4654 09b5 0C       		.uleb128 0xc
 4655 09b6 BC010000 		.4byte	.LASF84
 4656 09ba 01       		.byte	0x1
 4657 09bb EE08     		.2byte	0x8ee
 4658 09bd 3B000000 		.4byte	0x3b
 4659 09c1 02       		.byte	0x2
 4660 09c2 91       		.byte	0x91
 4661 09c3 77       		.sleb128 -9
 4662 09c4 00       		.byte	0x0
 4663 09c5 0A       		.uleb128 0xa
 4664 09c6 01       		.byte	0x1
 4665 09c7 90030000 		.4byte	.LASF85
 4666 09cb 01       		.byte	0x1
 4667 09cc B70B     		.2byte	0xbb7
 4668 09ce 01       		.byte	0x1
 4669 09cf 78000000 		.4byte	0x78
 4670 09d3 00000000 		.4byte	.LFB20
 4671 09d7 34000000 		.4byte	.LFE20
 4672 09db 4C040000 		.4byte	.LLST20
 4673 09df 200A0000 		.4byte	0xa20
 4674 09e3 0B       		.uleb128 0xb
 4675 09e4 36050000 		.4byte	.LASF21
 4676 09e8 01       		.byte	0x1
 4677 09e9 B70B     		.2byte	0xbb7
 4678 09eb 13010000 		.4byte	0x113
 4679 09ef 02       		.byte	0x2
 4680 09f0 91       		.byte	0x91
 4681 09f1 6C       		.sleb128 -20
 4682 09f2 0B       		.uleb128 0xb
 4683 09f3 EB050000 		.4byte	.LASF86
 4684 09f7 01       		.byte	0x1
 4685 09f8 B80B     		.2byte	0xbb8
 4686 09fa 200A0000 		.4byte	0xa20
 4687 09fe 02       		.byte	0x2
 4688 09ff 91       		.byte	0x91
 4689 0a00 68       		.sleb128 -24
 4690 0a01 0B       		.uleb128 0xb
 4691 0a02 73010000 		.4byte	.LASF78
 4692 0a06 01       		.byte	0x1
 4693 0a07 B90B     		.2byte	0xbb9
 4694 0a09 4D000000 		.4byte	0x4d
 4695 0a0d 02       		.byte	0x2
 4696 0a0e 91       		.byte	0x91
 4697 0a0f 67       		.sleb128 -25
 4698 0a10 0D       		.uleb128 0xd
 4699 0a11 6E627200 		.ascii	"nbr\000"
 4700 0a15 01       		.byte	0x1
 4701 0a16 BB0B     		.2byte	0xbbb
 4702 0a18 78000000 		.4byte	0x78
 4703 0a1c 02       		.byte	0x2
 4704 0a1d 91       		.byte	0x91
 4705 0a1e 74       		.sleb128 -12
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 155


 4706 0a1f 00       		.byte	0x0
 4707 0a20 08       		.uleb128 0x8
 4708 0a21 04       		.byte	0x4
 4709 0a22 C5010000 		.4byte	0x1c5
 4710 0a26 0A       		.uleb128 0xa
 4711 0a27 01       		.byte	0x1
 4712 0a28 7C030000 		.4byte	.LASF87
 4713 0a2c 01       		.byte	0x1
 4714 0a2d 900C     		.2byte	0xc90
 4715 0a2f 01       		.byte	0x1
 4716 0a30 8A000000 		.4byte	0x8a
 4717 0a34 00000000 		.4byte	.LFB21
 4718 0a38 60000000 		.4byte	.LFE21
 4719 0a3c 83040000 		.4byte	.LLST21
 4720 0a40 9F0A0000 		.4byte	0xa9f
 4721 0a44 0B       		.uleb128 0xb
 4722 0a45 36050000 		.4byte	.LASF21
 4723 0a49 01       		.byte	0x1
 4724 0a4a 900C     		.2byte	0xc90
 4725 0a4c 13010000 		.4byte	0x113
 4726 0a50 02       		.byte	0x2
 4727 0a51 91       		.byte	0x91
 4728 0a52 64       		.sleb128 -28
 4729 0a53 0B       		.uleb128 0xb
 4730 0a54 EB050000 		.4byte	.LASF86
 4731 0a58 01       		.byte	0x1
 4732 0a59 910C     		.2byte	0xc91
 4733 0a5b 200A0000 		.4byte	0xa20
 4734 0a5f 02       		.byte	0x2
 4735 0a60 91       		.byte	0x91
 4736 0a61 60       		.sleb128 -32
 4737 0a62 0B       		.uleb128 0xb
 4738 0a63 73010000 		.4byte	.LASF78
 4739 0a67 01       		.byte	0x1
 4740 0a68 920C     		.2byte	0xc92
 4741 0a6a 4D000000 		.4byte	0x4d
 4742 0a6e 02       		.byte	0x2
 4743 0a6f 91       		.byte	0x91
 4744 0a70 5F       		.sleb128 -33
 4745 0a71 0D       		.uleb128 0xd
 4746 0a72 6E627200 		.ascii	"nbr\000"
 4747 0a76 01       		.byte	0x1
 4748 0a77 940C     		.2byte	0xc94
 4749 0a79 8A000000 		.4byte	0x8a
 4750 0a7d 02       		.byte	0x2
 4751 0a7e 91       		.byte	0x91
 4752 0a7f 70       		.sleb128 -16
 4753 0a80 0C       		.uleb128 0xc
 4754 0a81 85010000 		.4byte	.LASF88
 4755 0a85 01       		.byte	0x1
 4756 0a86 950C     		.2byte	0xc95
 4757 0a88 78000000 		.4byte	0x78
 4758 0a8c 02       		.byte	0x2
 4759 0a8d 91       		.byte	0x91
 4760 0a8e 74       		.sleb128 -12
 4761 0a8f 0C       		.uleb128 0xc
 4762 0a90 BC010000 		.4byte	.LASF84
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 156


 4763 0a94 01       		.byte	0x1
 4764 0a95 960C     		.2byte	0xc96
 4765 0a97 3B000000 		.4byte	0x3b
 4766 0a9b 02       		.byte	0x2
 4767 0a9c 91       		.byte	0x91
 4768 0a9d 6F       		.sleb128 -17
 4769 0a9e 00       		.byte	0x0
 4770 0a9f 0F       		.uleb128 0xf
 4771 0aa0 1D030000 		.4byte	.LASF103
 4772 0aa4 01       		.byte	0x1
 4773 0aa5 900D     		.2byte	0xd90
 4774 0aa7 01       		.byte	0x1
 4775 0aa8 C5010000 		.4byte	0x1c5
 4776 0aac 00000000 		.4byte	.LFB22
 4777 0ab0 12030000 		.4byte	.LFE22
 4778 0ab4 BA040000 		.4byte	.LLST22
 4779 0ab8 320C0000 		.4byte	0xc32
 4780 0abc 0E       		.uleb128 0xe
 4781 0abd 6E627200 		.ascii	"nbr\000"
 4782 0ac1 01       		.byte	0x1
 4783 0ac2 900D     		.2byte	0xd90
 4784 0ac4 78000000 		.4byte	0x78
 4785 0ac8 02       		.byte	0x2
 4786 0ac9 91       		.byte	0x91
 4787 0aca 54       		.sleb128 -44
 4788 0acb 0B       		.uleb128 0xb
 4789 0acc 2C000000 		.4byte	.LASF77
 4790 0ad0 01       		.byte	0x1
 4791 0ad1 910D     		.2byte	0xd91
 4792 0ad3 4D000000 		.4byte	0x4d
 4793 0ad7 02       		.byte	0x2
 4794 0ad8 91       		.byte	0x91
 4795 0ad9 53       		.sleb128 -45
 4796 0ada 0B       		.uleb128 0xb
 4797 0adb 73010000 		.4byte	.LASF78
 4798 0adf 01       		.byte	0x1
 4799 0ae0 920D     		.2byte	0xd92
 4800 0ae2 4D000000 		.4byte	0x4d
 4801 0ae6 02       		.byte	0x2
 4802 0ae7 91       		.byte	0x91
 4803 0ae8 52       		.sleb128 -46
 4804 0ae9 0B       		.uleb128 0xb
 4805 0aea BC010000 		.4byte	.LASF84
 4806 0aee 01       		.byte	0x1
 4807 0aef 930D     		.2byte	0xd93
 4808 0af1 3B000000 		.4byte	0x3b
 4809 0af5 02       		.byte	0x2
 4810 0af6 91       		.byte	0x91
 4811 0af7 51       		.sleb128 -47
 4812 0af8 0B       		.uleb128 0xb
 4813 0af9 06010000 		.4byte	.LASF79
 4814 0afd 01       		.byte	0x1
 4815 0afe 940D     		.2byte	0xd94
 4816 0b00 29000000 		.4byte	0x29
 4817 0b04 02       		.byte	0x2
 4818 0b05 91       		.byte	0x91
 4819 0b06 00       		.sleb128 0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 157


 4820 0b07 0B       		.uleb128 0xb
 4821 0b08 F6010000 		.4byte	.LASF80
 4822 0b0c 01       		.byte	0x1
 4823 0b0d 950D     		.2byte	0xd95
 4824 0b0f 3B000000 		.4byte	0x3b
 4825 0b13 02       		.byte	0x2
 4826 0b14 91       		.byte	0x91
 4827 0b15 04       		.sleb128 4
 4828 0b16 0E       		.uleb128 0xe
 4829 0b17 6E756C00 		.ascii	"nul\000"
 4830 0b1b 01       		.byte	0x1
 4831 0b1c 960D     		.2byte	0xd96
 4832 0b1e 3B000000 		.4byte	0x3b
 4833 0b22 02       		.byte	0x2
 4834 0b23 91       		.byte	0x91
 4835 0b24 08       		.sleb128 8
 4836 0b25 0B       		.uleb128 0xb
 4837 0b26 36050000 		.4byte	.LASF21
 4838 0b2a 01       		.byte	0x1
 4839 0b2b 970D     		.2byte	0xd97
 4840 0b2d C5010000 		.4byte	0x1c5
 4841 0b31 02       		.byte	0x2
 4842 0b32 91       		.byte	0x91
 4843 0b33 0C       		.sleb128 12
 4844 0b34 0C       		.uleb128 0xc
 4845 0b35 F8040000 		.4byte	.LASF81
 4846 0b39 01       		.byte	0x1
 4847 0b3a 990D     		.2byte	0xd99
 4848 0b3c C5010000 		.4byte	0x1c5
 4849 0b40 02       		.byte	0x2
 4850 0b41 91       		.byte	0x91
 4851 0b42 58       		.sleb128 -40
 4852 0b43 0D       		.uleb128 0xd
 4853 0b44 6900     		.ascii	"i\000"
 4854 0b46 01       		.byte	0x1
 4855 0b47 9A0D     		.2byte	0xd9a
 4856 0b49 C3000000 		.4byte	0xc3
 4857 0b4d 02       		.byte	0x2
 4858 0b4e 91       		.byte	0x91
 4859 0b4f 5C       		.sleb128 -36
 4860 0b50 0C       		.uleb128 0xc
 4861 0b51 64020000 		.4byte	.LASF83
 4862 0b55 01       		.byte	0x1
 4863 0b56 9B0D     		.2byte	0xd9b
 4864 0b58 78000000 		.4byte	0x78
 4865 0b5c 02       		.byte	0x2
 4866 0b5d 91       		.byte	0x91
 4867 0b5e 60       		.sleb128 -32
 4868 0b5f 0C       		.uleb128 0xc
 4869 0b60 4C010000 		.4byte	.LASF89
 4870 0b64 01       		.byte	0x1
 4871 0b65 9C0D     		.2byte	0xd9c
 4872 0b67 78000000 		.4byte	0x78
 4873 0b6b 02       		.byte	0x2
 4874 0b6c 91       		.byte	0x91
 4875 0b6d 64       		.sleb128 -28
 4876 0b6e 0C       		.uleb128 0xc
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 158


 4877 0b6f EC040000 		.4byte	.LASF90
 4878 0b73 01       		.byte	0x1
 4879 0b74 9D0D     		.2byte	0xd9d
 4880 0b76 4D000000 		.4byte	0x4d
 4881 0b7a 02       		.byte	0x2
 4882 0b7b 91       		.byte	0x91
 4883 0b7c 6B       		.sleb128 -21
 4884 0b7d 0C       		.uleb128 0xc
 4885 0b7e C8050000 		.4byte	.LASF91
 4886 0b82 01       		.byte	0x1
 4887 0b83 9E0D     		.2byte	0xd9e
 4888 0b85 4D000000 		.4byte	0x4d
 4889 0b89 02       		.byte	0x2
 4890 0b8a 91       		.byte	0x91
 4891 0b8b 6C       		.sleb128 -20
 4892 0b8c 0C       		.uleb128 0xc
 4893 0b8d 8C020000 		.4byte	.LASF92
 4894 0b91 01       		.byte	0x1
 4895 0b92 9F0D     		.2byte	0xd9f
 4896 0b94 4D000000 		.4byte	0x4d
 4897 0b98 02       		.byte	0x2
 4898 0b99 91       		.byte	0x91
 4899 0b9a 6D       		.sleb128 -19
 4900 0b9b 0C       		.uleb128 0xc
 4901 0b9c D4050000 		.4byte	.LASF93
 4902 0ba0 01       		.byte	0x1
 4903 0ba1 A00D     		.2byte	0xda0
 4904 0ba3 4D000000 		.4byte	0x4d
 4905 0ba7 02       		.byte	0x2
 4906 0ba8 91       		.byte	0x91
 4907 0ba9 6E       		.sleb128 -18
 4908 0baa 0C       		.uleb128 0xc
 4909 0bab C0020000 		.4byte	.LASF94
 4910 0baf 01       		.byte	0x1
 4911 0bb0 A10D     		.2byte	0xda1
 4912 0bb2 4D000000 		.4byte	0x4d
 4913 0bb6 02       		.byte	0x2
 4914 0bb7 91       		.byte	0x91
 4915 0bb8 6F       		.sleb128 -17
 4916 0bb9 0C       		.uleb128 0xc
 4917 0bba F5050000 		.4byte	.LASF95
 4918 0bbe 01       		.byte	0x1
 4919 0bbf A20D     		.2byte	0xda2
 4920 0bc1 4D000000 		.4byte	0x4d
 4921 0bc5 02       		.byte	0x2
 4922 0bc6 91       		.byte	0x91
 4923 0bc7 70       		.sleb128 -16
 4924 0bc8 0C       		.uleb128 0xc
 4925 0bc9 A4020000 		.4byte	.LASF96
 4926 0bcd 01       		.byte	0x1
 4927 0bce A30D     		.2byte	0xda3
 4928 0bd0 4D000000 		.4byte	0x4d
 4929 0bd4 02       		.byte	0x2
 4930 0bd5 91       		.byte	0x91
 4931 0bd6 71       		.sleb128 -15
 4932 0bd7 0C       		.uleb128 0xc
 4933 0bd8 3B050000 		.4byte	.LASF97
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 159


 4934 0bdc 01       		.byte	0x1
 4935 0bdd A40D     		.2byte	0xda4
 4936 0bdf 4D000000 		.4byte	0x4d
 4937 0be3 02       		.byte	0x2
 4938 0be4 91       		.byte	0x91
 4939 0be5 72       		.sleb128 -14
 4940 0be6 0C       		.uleb128 0xc
 4941 0be7 72050000 		.4byte	.LASF98
 4942 0beb 01       		.byte	0x1
 4943 0bec A50D     		.2byte	0xda5
 4944 0bee 3B000000 		.4byte	0x3b
 4945 0bf2 02       		.byte	0x2
 4946 0bf3 91       		.byte	0x91
 4947 0bf4 73       		.sleb128 -13
 4948 0bf5 0C       		.uleb128 0xc
 4949 0bf6 DE020000 		.4byte	.LASF99
 4950 0bfa 01       		.byte	0x1
 4951 0bfb A60D     		.2byte	0xda6
 4952 0bfd 3B000000 		.4byte	0x3b
 4953 0c01 02       		.byte	0x2
 4954 0c02 91       		.byte	0x91
 4955 0c03 74       		.sleb128 -12
 4956 0c04 0C       		.uleb128 0xc
 4957 0c05 94000000 		.4byte	.LASF100
 4958 0c09 01       		.byte	0x1
 4959 0c0a A70D     		.2byte	0xda7
 4960 0c0c 3B000000 		.4byte	0x3b
 4961 0c10 02       		.byte	0x2
 4962 0c11 91       		.byte	0x91
 4963 0c12 75       		.sleb128 -11
 4964 0c13 0C       		.uleb128 0xc
 4965 0c14 A0000000 		.4byte	.LASF101
 4966 0c18 01       		.byte	0x1
 4967 0c19 A80D     		.2byte	0xda8
 4968 0c1b 3B000000 		.4byte	0x3b
 4969 0c1f 02       		.byte	0x2
 4970 0c20 91       		.byte	0x91
 4971 0c21 76       		.sleb128 -10
 4972 0c22 0C       		.uleb128 0xc
 4973 0c23 54010000 		.4byte	.LASF102
 4974 0c27 01       		.byte	0x1
 4975 0c28 A90D     		.2byte	0xda9
 4976 0c2a 3B000000 		.4byte	0x3b
 4977 0c2e 02       		.byte	0x2
 4978 0c2f 91       		.byte	0x91
 4979 0c30 77       		.sleb128 -9
 4980 0c31 00       		.byte	0x0
 4981 0c32 0F       		.uleb128 0xf
 4982 0c33 0E000000 		.4byte	.LASF104
 4983 0c37 01       		.byte	0x1
 4984 0c38 1B0F     		.2byte	0xf1b
 4985 0c3a 01       		.byte	0x1
 4986 0c3b 78000000 		.4byte	0x78
 4987 0c3f 00000000 		.4byte	.LFB23
 4988 0c43 E0020000 		.4byte	.LFE23
 4989 0c47 F1040000 		.4byte	.LLST23
 4990 0c4b 7C0D0000 		.4byte	0xd7c
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 160


 4991 0c4f 0B       		.uleb128 0xb
 4992 0c50 36050000 		.4byte	.LASF21
 4993 0c54 01       		.byte	0x1
 4994 0c55 1B0F     		.2byte	0xf1b
 4995 0c57 13010000 		.4byte	0x113
 4996 0c5b 02       		.byte	0x2
 4997 0c5c 91       		.byte	0x91
 4998 0c5d 54       		.sleb128 -44
 4999 0c5e 0B       		.uleb128 0xb
 5000 0c5f EB050000 		.4byte	.LASF86
 5001 0c63 01       		.byte	0x1
 5002 0c64 1C0F     		.2byte	0xf1c
 5003 0c66 200A0000 		.4byte	0xa20
 5004 0c6a 02       		.byte	0x2
 5005 0c6b 91       		.byte	0x91
 5006 0c6c 50       		.sleb128 -48
 5007 0c6d 0B       		.uleb128 0xb
 5008 0c6e 73010000 		.4byte	.LASF78
 5009 0c72 01       		.byte	0x1
 5010 0c73 1D0F     		.2byte	0xf1d
 5011 0c75 4D000000 		.4byte	0x4d
 5012 0c79 02       		.byte	0x2
 5013 0c7a 91       		.byte	0x91
 5014 0c7b 4F       		.sleb128 -49
 5015 0c7c 0B       		.uleb128 0xb
 5016 0c7d 21000000 		.4byte	.LASF105
 5017 0c81 01       		.byte	0x1
 5018 0c82 1E0F     		.2byte	0xf1e
 5019 0c84 3B000000 		.4byte	0x3b
 5020 0c88 02       		.byte	0x2
 5021 0c89 91       		.byte	0x91
 5022 0c8a 4E       		.sleb128 -50
 5023 0c8b 0B       		.uleb128 0xb
 5024 0c8c 1B040000 		.4byte	.LASF106
 5025 0c90 01       		.byte	0x1
 5026 0c91 1F0F     		.2byte	0xf1f
 5027 0c93 7C0D0000 		.4byte	0xd7c
 5028 0c97 02       		.byte	0x2
 5029 0c98 91       		.byte	0x91
 5030 0c99 00       		.sleb128 0
 5031 0c9a 0C       		.uleb128 0xc
 5032 0c9b 8D010000 		.4byte	.LASF107
 5033 0c9f 01       		.byte	0x1
 5034 0ca0 210F     		.2byte	0xf21
 5035 0ca2 13010000 		.4byte	0x113
 5036 0ca6 02       		.byte	0x2
 5037 0ca7 91       		.byte	0x91
 5038 0ca8 60       		.sleb128 -32
 5039 0ca9 0C       		.uleb128 0xc
 5040 0caa AA050000 		.4byte	.LASF108
 5041 0cae 01       		.byte	0x1
 5042 0caf 220F     		.2byte	0xf22
 5043 0cb1 13010000 		.4byte	0x113
 5044 0cb5 02       		.byte	0x2
 5045 0cb6 91       		.byte	0x91
 5046 0cb7 64       		.sleb128 -28
 5047 0cb8 0C       		.uleb128 0xc
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 161


 5048 0cb9 7A020000 		.4byte	.LASF109
 5049 0cbd 01       		.byte	0x1
 5050 0cbe 230F     		.2byte	0xf23
 5051 0cc0 C5010000 		.4byte	0x1c5
 5052 0cc4 02       		.byte	0x2
 5053 0cc5 91       		.byte	0x91
 5054 0cc6 5C       		.sleb128 -36
 5055 0cc7 0C       		.uleb128 0xc
 5056 0cc8 DA000000 		.4byte	.LASF110
 5057 0ccc 01       		.byte	0x1
 5058 0ccd 240F     		.2byte	0xf24
 5059 0ccf 29000000 		.4byte	0x29
 5060 0cd3 02       		.byte	0x2
 5061 0cd4 91       		.byte	0x91
 5062 0cd5 6A       		.sleb128 -22
 5063 0cd6 0C       		.uleb128 0xc
 5064 0cd7 B6020000 		.4byte	.LASF111
 5065 0cdb 01       		.byte	0x1
 5066 0cdc 250F     		.2byte	0xf25
 5067 0cde 4D000000 		.4byte	0x4d
 5068 0ce2 02       		.byte	0x2
 5069 0ce3 91       		.byte	0x91
 5070 0ce4 6B       		.sleb128 -21
 5071 0ce5 0D       		.uleb128 0xd
 5072 0ce6 6E627200 		.ascii	"nbr\000"
 5073 0cea 01       		.byte	0x1
 5074 0ceb 260F     		.2byte	0xf26
 5075 0ced 78000000 		.4byte	0x78
 5076 0cf1 02       		.byte	0x2
 5077 0cf2 91       		.byte	0x91
 5078 0cf3 6C       		.sleb128 -20
 5079 0cf4 0C       		.uleb128 0xc
 5080 0cf5 34010000 		.4byte	.LASF112
 5081 0cf9 01       		.byte	0x1
 5082 0cfa 270F     		.2byte	0xf27
 5083 0cfc 3B000000 		.4byte	0x3b
 5084 0d00 02       		.byte	0x2
 5085 0d01 91       		.byte	0x91
 5086 0d02 5B       		.sleb128 -37
 5087 0d03 0C       		.uleb128 0xc
 5088 0d04 2C000000 		.4byte	.LASF77
 5089 0d08 01       		.byte	0x1
 5090 0d09 280F     		.2byte	0xf28
 5091 0d0b 3B000000 		.4byte	0x3b
 5092 0d0f 02       		.byte	0x2
 5093 0d10 91       		.byte	0x91
 5094 0d11 70       		.sleb128 -16
 5095 0d12 0C       		.uleb128 0xc
 5096 0d13 1D010000 		.4byte	.LASF113
 5097 0d17 01       		.byte	0x1
 5098 0d18 290F     		.2byte	0xf29
 5099 0d1a 3B000000 		.4byte	0x3b
 5100 0d1e 02       		.byte	0x2
 5101 0d1f 91       		.byte	0x91
 5102 0d20 71       		.sleb128 -15
 5103 0d21 0C       		.uleb128 0xc
 5104 0d22 C1040000 		.4byte	.LASF114
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 162


 5105 0d26 01       		.byte	0x1
 5106 0d27 2A0F     		.2byte	0xf2a
 5107 0d29 3B000000 		.4byte	0x3b
 5108 0d2d 02       		.byte	0x2
 5109 0d2e 91       		.byte	0x91
 5110 0d2f 72       		.sleb128 -14
 5111 0d30 0C       		.uleb128 0xc
 5112 0d31 3E000000 		.4byte	.LASF115
 5113 0d35 01       		.byte	0x1
 5114 0d36 2B0F     		.2byte	0xf2b
 5115 0d38 3B000000 		.4byte	0x3b
 5116 0d3c 02       		.byte	0x2
 5117 0d3d 91       		.byte	0x91
 5118 0d3e 73       		.sleb128 -13
 5119 0d3f 0C       		.uleb128 0xc
 5120 0d40 5B030000 		.4byte	.LASF116
 5121 0d44 01       		.byte	0x1
 5122 0d45 2C0F     		.2byte	0xf2c
 5123 0d47 3B000000 		.4byte	0x3b
 5124 0d4b 02       		.byte	0x2
 5125 0d4c 91       		.byte	0x91
 5126 0d4d 74       		.sleb128 -12
 5127 0d4e 0D       		.uleb128 0xd
 5128 0d4f 6E656700 		.ascii	"neg\000"
 5129 0d53 01       		.byte	0x1
 5130 0d54 2D0F     		.2byte	0xf2d
 5131 0d56 3B000000 		.4byte	0x3b
 5132 0d5a 02       		.byte	0x2
 5133 0d5b 91       		.byte	0x91
 5134 0d5c 75       		.sleb128 -11
 5135 0d5d 0D       		.uleb128 0xd
 5136 0d5e 6F766600 		.ascii	"ovf\000"
 5137 0d62 01       		.byte	0x1
 5138 0d63 2E0F     		.2byte	0xf2e
 5139 0d65 3B000000 		.4byte	0x3b
 5140 0d69 02       		.byte	0x2
 5141 0d6a 91       		.byte	0x91
 5142 0d6b 76       		.sleb128 -10
 5143 0d6c 0C       		.uleb128 0xc
 5144 0d6d 0D050000 		.4byte	.LASF117
 5145 0d71 01       		.byte	0x1
 5146 0d72 2F0F     		.2byte	0xf2f
 5147 0d74 3B000000 		.4byte	0x3b
 5148 0d78 02       		.byte	0x2
 5149 0d79 91       		.byte	0x91
 5150 0d7a 77       		.sleb128 -9
 5151 0d7b 00       		.byte	0x0
 5152 0d7c 08       		.uleb128 0x8
 5153 0d7d 04       		.byte	0x4
 5154 0d7e 3B000000 		.4byte	0x3b
 5155 0d82 10       		.uleb128 0x10
 5156 0d83 78000000 		.4byte	0x78
 5157 0d87 920D0000 		.4byte	0xd92
 5158 0d8b 11       		.uleb128 0x11
 5159 0d8c 920D0000 		.4byte	0xd92
 5160 0d90 24       		.byte	0x24
 5161 0d91 00       		.byte	0x0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 163


 5162 0d92 12       		.uleb128 0x12
 5163 0d93 04       		.byte	0x4
 5164 0d94 07       		.byte	0x7
 5165 0d95 13       		.uleb128 0x13
 5166 0d96 08060000 		.4byte	.LASF118
 5167 0d9a 01       		.byte	0x1
 5168 0d9b 65       		.byte	0x65
 5169 0d9c A60D0000 		.4byte	0xda6
 5170 0da0 05       		.byte	0x5
 5171 0da1 03       		.byte	0x3
 5172 0da2 00000000 		.4byte	Str_MultOvfThTbl_Int32U
 5173 0da6 09       		.uleb128 0x9
 5174 0da7 820D0000 		.4byte	0xd82
 5175 0dab 00       		.byte	0x0
 5176              		.section	.debug_abbrev
 5177 0000 01       		.uleb128 0x1
 5178 0001 11       		.uleb128 0x11
 5179 0002 01       		.byte	0x1
 5180 0003 25       		.uleb128 0x25
 5181 0004 0E       		.uleb128 0xe
 5182 0005 13       		.uleb128 0x13
 5183 0006 0B       		.uleb128 0xb
 5184 0007 03       		.uleb128 0x3
 5185 0008 0E       		.uleb128 0xe
 5186 0009 1B       		.uleb128 0x1b
 5187 000a 0E       		.uleb128 0xe
 5188 000b 11       		.uleb128 0x11
 5189 000c 01       		.uleb128 0x1
 5190 000d 52       		.uleb128 0x52
 5191 000e 01       		.uleb128 0x1
 5192 000f 55       		.uleb128 0x55
 5193 0010 06       		.uleb128 0x6
 5194 0011 10       		.uleb128 0x10
 5195 0012 06       		.uleb128 0x6
 5196 0013 00       		.byte	0x0
 5197 0014 00       		.byte	0x0
 5198 0015 02       		.uleb128 0x2
 5199 0016 16       		.uleb128 0x16
 5200 0017 00       		.byte	0x0
 5201 0018 03       		.uleb128 0x3
 5202 0019 0E       		.uleb128 0xe
 5203 001a 3A       		.uleb128 0x3a
 5204 001b 0B       		.uleb128 0xb
 5205 001c 3B       		.uleb128 0x3b
 5206 001d 0B       		.uleb128 0xb
 5207 001e 49       		.uleb128 0x49
 5208 001f 13       		.uleb128 0x13
 5209 0020 00       		.byte	0x0
 5210 0021 00       		.byte	0x0
 5211 0022 03       		.uleb128 0x3
 5212 0023 24       		.uleb128 0x24
 5213 0024 00       		.byte	0x0
 5214 0025 0B       		.uleb128 0xb
 5215 0026 0B       		.uleb128 0xb
 5216 0027 3E       		.uleb128 0x3e
 5217 0028 0B       		.uleb128 0xb
 5218 0029 03       		.uleb128 0x3
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 164


 5219 002a 0E       		.uleb128 0xe
 5220 002b 00       		.byte	0x0
 5221 002c 00       		.byte	0x0
 5222 002d 04       		.uleb128 0x4
 5223 002e 24       		.uleb128 0x24
 5224 002f 00       		.byte	0x0
 5225 0030 0B       		.uleb128 0xb
 5226 0031 0B       		.uleb128 0xb
 5227 0032 3E       		.uleb128 0x3e
 5228 0033 0B       		.uleb128 0xb
 5229 0034 03       		.uleb128 0x3
 5230 0035 08       		.uleb128 0x8
 5231 0036 00       		.byte	0x0
 5232 0037 00       		.byte	0x0
 5233 0038 05       		.uleb128 0x5
 5234 0039 2E       		.uleb128 0x2e
 5235 003a 01       		.byte	0x1
 5236 003b 3F       		.uleb128 0x3f
 5237 003c 0C       		.uleb128 0xc
 5238 003d 03       		.uleb128 0x3
 5239 003e 0E       		.uleb128 0xe
 5240 003f 3A       		.uleb128 0x3a
 5241 0040 0B       		.uleb128 0xb
 5242 0041 3B       		.uleb128 0x3b
 5243 0042 0B       		.uleb128 0xb
 5244 0043 27       		.uleb128 0x27
 5245 0044 0C       		.uleb128 0xc
 5246 0045 49       		.uleb128 0x49
 5247 0046 13       		.uleb128 0x13
 5248 0047 11       		.uleb128 0x11
 5249 0048 01       		.uleb128 0x1
 5250 0049 12       		.uleb128 0x12
 5251 004a 01       		.uleb128 0x1
 5252 004b 40       		.uleb128 0x40
 5253 004c 06       		.uleb128 0x6
 5254 004d 01       		.uleb128 0x1
 5255 004e 13       		.uleb128 0x13
 5256 004f 00       		.byte	0x0
 5257 0050 00       		.byte	0x0
 5258 0051 06       		.uleb128 0x6
 5259 0052 05       		.uleb128 0x5
 5260 0053 00       		.byte	0x0
 5261 0054 03       		.uleb128 0x3
 5262 0055 0E       		.uleb128 0xe
 5263 0056 3A       		.uleb128 0x3a
 5264 0057 0B       		.uleb128 0xb
 5265 0058 3B       		.uleb128 0x3b
 5266 0059 0B       		.uleb128 0xb
 5267 005a 49       		.uleb128 0x49
 5268 005b 13       		.uleb128 0x13
 5269 005c 02       		.uleb128 0x2
 5270 005d 0A       		.uleb128 0xa
 5271 005e 00       		.byte	0x0
 5272 005f 00       		.byte	0x0
 5273 0060 07       		.uleb128 0x7
 5274 0061 34       		.uleb128 0x34
 5275 0062 00       		.byte	0x0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 165


 5276 0063 03       		.uleb128 0x3
 5277 0064 08       		.uleb128 0x8
 5278 0065 3A       		.uleb128 0x3a
 5279 0066 0B       		.uleb128 0xb
 5280 0067 3B       		.uleb128 0x3b
 5281 0068 0B       		.uleb128 0xb
 5282 0069 49       		.uleb128 0x49
 5283 006a 13       		.uleb128 0x13
 5284 006b 02       		.uleb128 0x2
 5285 006c 0A       		.uleb128 0xa
 5286 006d 00       		.byte	0x0
 5287 006e 00       		.byte	0x0
 5288 006f 08       		.uleb128 0x8
 5289 0070 0F       		.uleb128 0xf
 5290 0071 00       		.byte	0x0
 5291 0072 0B       		.uleb128 0xb
 5292 0073 0B       		.uleb128 0xb
 5293 0074 49       		.uleb128 0x49
 5294 0075 13       		.uleb128 0x13
 5295 0076 00       		.byte	0x0
 5296 0077 00       		.byte	0x0
 5297 0078 09       		.uleb128 0x9
 5298 0079 26       		.uleb128 0x26
 5299 007a 00       		.byte	0x0
 5300 007b 49       		.uleb128 0x49
 5301 007c 13       		.uleb128 0x13
 5302 007d 00       		.byte	0x0
 5303 007e 00       		.byte	0x0
 5304 007f 0A       		.uleb128 0xa
 5305 0080 2E       		.uleb128 0x2e
 5306 0081 01       		.byte	0x1
 5307 0082 3F       		.uleb128 0x3f
 5308 0083 0C       		.uleb128 0xc
 5309 0084 03       		.uleb128 0x3
 5310 0085 0E       		.uleb128 0xe
 5311 0086 3A       		.uleb128 0x3a
 5312 0087 0B       		.uleb128 0xb
 5313 0088 3B       		.uleb128 0x3b
 5314 0089 05       		.uleb128 0x5
 5315 008a 27       		.uleb128 0x27
 5316 008b 0C       		.uleb128 0xc
 5317 008c 49       		.uleb128 0x49
 5318 008d 13       		.uleb128 0x13
 5319 008e 11       		.uleb128 0x11
 5320 008f 01       		.uleb128 0x1
 5321 0090 12       		.uleb128 0x12
 5322 0091 01       		.uleb128 0x1
 5323 0092 40       		.uleb128 0x40
 5324 0093 06       		.uleb128 0x6
 5325 0094 01       		.uleb128 0x1
 5326 0095 13       		.uleb128 0x13
 5327 0096 00       		.byte	0x0
 5328 0097 00       		.byte	0x0
 5329 0098 0B       		.uleb128 0xb
 5330 0099 05       		.uleb128 0x5
 5331 009a 00       		.byte	0x0
 5332 009b 03       		.uleb128 0x3
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 166


 5333 009c 0E       		.uleb128 0xe
 5334 009d 3A       		.uleb128 0x3a
 5335 009e 0B       		.uleb128 0xb
 5336 009f 3B       		.uleb128 0x3b
 5337 00a0 05       		.uleb128 0x5
 5338 00a1 49       		.uleb128 0x49
 5339 00a2 13       		.uleb128 0x13
 5340 00a3 02       		.uleb128 0x2
 5341 00a4 0A       		.uleb128 0xa
 5342 00a5 00       		.byte	0x0
 5343 00a6 00       		.byte	0x0
 5344 00a7 0C       		.uleb128 0xc
 5345 00a8 34       		.uleb128 0x34
 5346 00a9 00       		.byte	0x0
 5347 00aa 03       		.uleb128 0x3
 5348 00ab 0E       		.uleb128 0xe
 5349 00ac 3A       		.uleb128 0x3a
 5350 00ad 0B       		.uleb128 0xb
 5351 00ae 3B       		.uleb128 0x3b
 5352 00af 05       		.uleb128 0x5
 5353 00b0 49       		.uleb128 0x49
 5354 00b1 13       		.uleb128 0x13
 5355 00b2 02       		.uleb128 0x2
 5356 00b3 0A       		.uleb128 0xa
 5357 00b4 00       		.byte	0x0
 5358 00b5 00       		.byte	0x0
 5359 00b6 0D       		.uleb128 0xd
 5360 00b7 34       		.uleb128 0x34
 5361 00b8 00       		.byte	0x0
 5362 00b9 03       		.uleb128 0x3
 5363 00ba 08       		.uleb128 0x8
 5364 00bb 3A       		.uleb128 0x3a
 5365 00bc 0B       		.uleb128 0xb
 5366 00bd 3B       		.uleb128 0x3b
 5367 00be 05       		.uleb128 0x5
 5368 00bf 49       		.uleb128 0x49
 5369 00c0 13       		.uleb128 0x13
 5370 00c1 02       		.uleb128 0x2
 5371 00c2 0A       		.uleb128 0xa
 5372 00c3 00       		.byte	0x0
 5373 00c4 00       		.byte	0x0
 5374 00c5 0E       		.uleb128 0xe
 5375 00c6 05       		.uleb128 0x5
 5376 00c7 00       		.byte	0x0
 5377 00c8 03       		.uleb128 0x3
 5378 00c9 08       		.uleb128 0x8
 5379 00ca 3A       		.uleb128 0x3a
 5380 00cb 0B       		.uleb128 0xb
 5381 00cc 3B       		.uleb128 0x3b
 5382 00cd 05       		.uleb128 0x5
 5383 00ce 49       		.uleb128 0x49
 5384 00cf 13       		.uleb128 0x13
 5385 00d0 02       		.uleb128 0x2
 5386 00d1 0A       		.uleb128 0xa
 5387 00d2 00       		.byte	0x0
 5388 00d3 00       		.byte	0x0
 5389 00d4 0F       		.uleb128 0xf
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 167


 5390 00d5 2E       		.uleb128 0x2e
 5391 00d6 01       		.byte	0x1
 5392 00d7 03       		.uleb128 0x3
 5393 00d8 0E       		.uleb128 0xe
 5394 00d9 3A       		.uleb128 0x3a
 5395 00da 0B       		.uleb128 0xb
 5396 00db 3B       		.uleb128 0x3b
 5397 00dc 05       		.uleb128 0x5
 5398 00dd 27       		.uleb128 0x27
 5399 00de 0C       		.uleb128 0xc
 5400 00df 49       		.uleb128 0x49
 5401 00e0 13       		.uleb128 0x13
 5402 00e1 11       		.uleb128 0x11
 5403 00e2 01       		.uleb128 0x1
 5404 00e3 12       		.uleb128 0x12
 5405 00e4 01       		.uleb128 0x1
 5406 00e5 40       		.uleb128 0x40
 5407 00e6 06       		.uleb128 0x6
 5408 00e7 01       		.uleb128 0x1
 5409 00e8 13       		.uleb128 0x13
 5410 00e9 00       		.byte	0x0
 5411 00ea 00       		.byte	0x0
 5412 00eb 10       		.uleb128 0x10
 5413 00ec 01       		.uleb128 0x1
 5414 00ed 01       		.byte	0x1
 5415 00ee 49       		.uleb128 0x49
 5416 00ef 13       		.uleb128 0x13
 5417 00f0 01       		.uleb128 0x1
 5418 00f1 13       		.uleb128 0x13
 5419 00f2 00       		.byte	0x0
 5420 00f3 00       		.byte	0x0
 5421 00f4 11       		.uleb128 0x11
 5422 00f5 21       		.uleb128 0x21
 5423 00f6 00       		.byte	0x0
 5424 00f7 49       		.uleb128 0x49
 5425 00f8 13       		.uleb128 0x13
 5426 00f9 2F       		.uleb128 0x2f
 5427 00fa 0B       		.uleb128 0xb
 5428 00fb 00       		.byte	0x0
 5429 00fc 00       		.byte	0x0
 5430 00fd 12       		.uleb128 0x12
 5431 00fe 24       		.uleb128 0x24
 5432 00ff 00       		.byte	0x0
 5433 0100 0B       		.uleb128 0xb
 5434 0101 0B       		.uleb128 0xb
 5435 0102 3E       		.uleb128 0x3e
 5436 0103 0B       		.uleb128 0xb
 5437 0104 00       		.byte	0x0
 5438 0105 00       		.byte	0x0
 5439 0106 13       		.uleb128 0x13
 5440 0107 34       		.uleb128 0x34
 5441 0108 00       		.byte	0x0
 5442 0109 03       		.uleb128 0x3
 5443 010a 0E       		.uleb128 0xe
 5444 010b 3A       		.uleb128 0x3a
 5445 010c 0B       		.uleb128 0xb
 5446 010d 3B       		.uleb128 0x3b
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 168


 5447 010e 0B       		.uleb128 0xb
 5448 010f 49       		.uleb128 0x49
 5449 0110 13       		.uleb128 0x13
 5450 0111 02       		.uleb128 0x2
 5451 0112 0A       		.uleb128 0xa
 5452 0113 00       		.byte	0x0
 5453 0114 00       		.byte	0x0
 5454 0115 00       		.byte	0x0
 5455              		.section	.debug_pubnames,"",%progbits
 5456 0000 8A010000 		.4byte	0x18a
 5457 0004 0200     		.2byte	0x2
 5458 0006 00000000 		.4byte	.Ldebug_info0
 5459 000a AC0D0000 		.4byte	0xdac
 5460 000e D9000000 		.4byte	0xd9
 5461 0012 5374725F 		.ascii	"Str_Len\000"
 5461      4C656E00 
 5462 001a 1E010000 		.4byte	0x11e
 5463 001e 5374725F 		.ascii	"Str_Len_N\000"
 5463      4C656E5F 
 5463      4E00
 5464 0028 79010000 		.4byte	0x179
 5465 002c 5374725F 		.ascii	"Str_Copy\000"
 5465      436F7079 
 5465      00
 5466 0035 CB010000 		.4byte	0x1cb
 5467 0039 5374725F 		.ascii	"Str_Copy_N\000"
 5467      436F7079 
 5467      5F4E00
 5468 0044 44020000 		.4byte	0x244
 5469 0048 5374725F 		.ascii	"Str_Cat\000"
 5469      43617400 
 5470 0050 90020000 		.4byte	0x290
 5471 0054 5374725F 		.ascii	"Str_Cat_N\000"
 5471      4361745F 
 5471      4E00
 5472 005e 09030000 		.4byte	0x309
 5473 0062 5374725F 		.ascii	"Str_Cmp\000"
 5473      436D7000 
 5474 006a 55030000 		.4byte	0x355
 5475 006e 5374725F 		.ascii	"Str_Cmp_N\000"
 5475      436D705F 
 5475      4E00
 5476 0078 FB030000 		.4byte	0x3fb
 5477 007c 5374725F 		.ascii	"Str_CmpIgnoreCase\000"
 5477      436D7049 
 5477      676E6F72 
 5477      65436173 
 5477      6500
 5478 008e 47040000 		.4byte	0x447
 5479 0092 5374725F 		.ascii	"Str_CmpIgnoreCase_N\000"
 5479      436D7049 
 5479      676E6F72 
 5479      65436173 
 5479      655F4E00 
 5480 00a6 0B050000 		.4byte	0x50b
 5481 00aa 5374725F 		.ascii	"Str_Char\000"
 5481      43686172 
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 169


 5481      00
 5482 00b3 57050000 		.4byte	0x557
 5483 00b7 5374725F 		.ascii	"Str_Char_N\000"
 5483      43686172 
 5483      5F4E00
 5484 00c2 C1050000 		.4byte	0x5c1
 5485 00c6 5374725F 		.ascii	"Str_Char_Last\000"
 5485      43686172 
 5485      5F4C6173 
 5485      7400
 5486 00d4 0D060000 		.4byte	0x60d
 5487 00d8 5374725F 		.ascii	"Str_Char_Last_N\000"
 5487      43686172 
 5487      5F4C6173 
 5487      745F4E00 
 5488 00e8 86060000 		.4byte	0x686
 5489 00ec 5374725F 		.ascii	"Str_Char_Replace\000"
 5489      43686172 
 5489      5F526570 
 5489      6C616365 
 5489      00
 5490 00fd E1060000 		.4byte	0x6e1
 5491 0101 5374725F 		.ascii	"Str_Char_Replace_N\000"
 5491      43686172 
 5491      5F526570 
 5491      6C616365 
 5491      5F4E00
 5492 0114 5A070000 		.4byte	0x75a
 5493 0118 5374725F 		.ascii	"Str_Str\000"
 5493      53747200 
 5494 0120 A6070000 		.4byte	0x7a6
 5495 0124 5374725F 		.ascii	"Str_Str_N\000"
 5495      5374725F 
 5495      4E00
 5496 012e 79080000 		.4byte	0x879
 5497 0132 5374725F 		.ascii	"Str_FmtNbr_Int32U\000"
 5497      466D744E 
 5497      62725F49 
 5497      6E743332 
 5497      5500
 5498 0144 10090000 		.4byte	0x910
 5499 0148 5374725F 		.ascii	"Str_FmtNbr_Int32S\000"
 5499      466D744E 
 5499      62725F49 
 5499      6E743332 
 5499      5300
 5500 015a C5090000 		.4byte	0x9c5
 5501 015e 5374725F 		.ascii	"Str_ParseNbr_Int32U\000"
 5501      50617273 
 5501      654E6272 
 5501      5F496E74 
 5501      33325500 
 5502 0172 260A0000 		.4byte	0xa26
 5503 0176 5374725F 		.ascii	"Str_ParseNbr_Int32S\000"
 5503      50617273 
 5503      654E6272 
 5503      5F496E74 
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 170


 5503      33325300 
 5504 018a 00000000 		.4byte	0x0
 5505              		.section	.debug_aranges,"",%progbits
 5506 0000 D4000000 		.4byte	0xd4
 5507 0004 0200     		.2byte	0x2
 5508 0006 00000000 		.4byte	.Ldebug_info0
 5509 000a 04       		.byte	0x4
 5510 000b 00       		.byte	0x0
 5511 000c 0000     		.2byte	0x0
 5512 000e 0000     		.2byte	0x0
 5513 0010 00000000 		.4byte	.LFB0
 5514 0014 22000000 		.4byte	.LFE0-.LFB0
 5515 0018 00000000 		.4byte	.LFB1
 5516 001c 4A000000 		.4byte	.LFE1-.LFB1
 5517 0020 00000000 		.4byte	.LFB2
 5518 0024 26000000 		.4byte	.LFE2-.LFB2
 5519 0028 00000000 		.4byte	.LFB3
 5520 002c A0000000 		.4byte	.LFE3-.LFB3
 5521 0030 00000000 		.4byte	.LFB4
 5522 0034 26000000 		.4byte	.LFE4-.LFB4
 5523 0038 00000000 		.4byte	.LFB5
 5524 003c C6000000 		.4byte	.LFE5-.LFB5
 5525 0040 00000000 		.4byte	.LFB6
 5526 0044 2A000000 		.4byte	.LFE6-.LFB6
 5527 0048 00000000 		.4byte	.LFB7
 5528 004c 34010000 		.4byte	.LFE7-.LFB7
 5529 0050 00000000 		.4byte	.LFB8
 5530 0054 2A000000 		.4byte	.LFE8-.LFB8
 5531 0058 00000000 		.4byte	.LFB9
 5532 005c B0010000 		.4byte	.LFE9-.LFB9
 5533 0060 00000000 		.4byte	.LFB10
 5534 0064 2A000000 		.4byte	.LFE10-.LFB10
 5535 0068 00000000 		.4byte	.LFB11
 5536 006c 9A000000 		.4byte	.LFE11-.LFB11
 5537 0070 00000000 		.4byte	.LFB12
 5538 0074 2A000000 		.4byte	.LFE12-.LFB12
 5539 0078 00000000 		.4byte	.LFB13
 5540 007c 88000000 		.4byte	.LFE13-.LFB13
 5541 0080 00000000 		.4byte	.LFB14
 5542 0084 32000000 		.4byte	.LFE14-.LFB14
 5543 0088 00000000 		.4byte	.LFB15
 5544 008c 76000000 		.4byte	.LFE15-.LFB15
 5545 0090 00000000 		.4byte	.LFB16
 5546 0094 26000000 		.4byte	.LFE16-.LFB16
 5547 0098 00000000 		.4byte	.LFB17
 5548 009c 16010000 		.4byte	.LFE17-.LFB17
 5549 00a0 00000000 		.4byte	.LFB18
 5550 00a4 40000000 		.4byte	.LFE18-.LFB18
 5551 00a8 00000000 		.4byte	.LFB19
 5552 00ac 6A000000 		.4byte	.LFE19-.LFB19
 5553 00b0 00000000 		.4byte	.LFB20
 5554 00b4 34000000 		.4byte	.LFE20-.LFB20
 5555 00b8 00000000 		.4byte	.LFB21
 5556 00bc 60000000 		.4byte	.LFE21-.LFB21
 5557 00c0 00000000 		.4byte	.LFB22
 5558 00c4 12030000 		.4byte	.LFE22-.LFB22
 5559 00c8 00000000 		.4byte	.LFB23
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 171


 5560 00cc E0020000 		.4byte	.LFE23-.LFB23
 5561 00d0 00000000 		.4byte	0x0
 5562 00d4 00000000 		.4byte	0x0
 5563              		.section	.debug_ranges,"",%progbits
 5564              	.Ldebug_ranges0:
 5565 0000 00000000 		.4byte	.Ltext0
 5566 0004 00000000 		.4byte	.Letext0
 5567 0008 00000000 		.4byte	.LFB0
 5568 000c 22000000 		.4byte	.LFE0
 5569 0010 00000000 		.4byte	.LFB1
 5570 0014 4A000000 		.4byte	.LFE1
 5571 0018 00000000 		.4byte	.LFB2
 5572 001c 26000000 		.4byte	.LFE2
 5573 0020 00000000 		.4byte	.LFB3
 5574 0024 A0000000 		.4byte	.LFE3
 5575 0028 00000000 		.4byte	.LFB4
 5576 002c 26000000 		.4byte	.LFE4
 5577 0030 00000000 		.4byte	.LFB5
 5578 0034 C6000000 		.4byte	.LFE5
 5579 0038 00000000 		.4byte	.LFB6
 5580 003c 2A000000 		.4byte	.LFE6
 5581 0040 00000000 		.4byte	.LFB7
 5582 0044 34010000 		.4byte	.LFE7
 5583 0048 00000000 		.4byte	.LFB8
 5584 004c 2A000000 		.4byte	.LFE8
 5585 0050 00000000 		.4byte	.LFB9
 5586 0054 B0010000 		.4byte	.LFE9
 5587 0058 00000000 		.4byte	.LFB10
 5588 005c 2A000000 		.4byte	.LFE10
 5589 0060 00000000 		.4byte	.LFB11
 5590 0064 9A000000 		.4byte	.LFE11
 5591 0068 00000000 		.4byte	.LFB12
 5592 006c 2A000000 		.4byte	.LFE12
 5593 0070 00000000 		.4byte	.LFB13
 5594 0074 88000000 		.4byte	.LFE13
 5595 0078 00000000 		.4byte	.LFB14
 5596 007c 32000000 		.4byte	.LFE14
 5597 0080 00000000 		.4byte	.LFB15
 5598 0084 76000000 		.4byte	.LFE15
 5599 0088 00000000 		.4byte	.LFB16
 5600 008c 26000000 		.4byte	.LFE16
 5601 0090 00000000 		.4byte	.LFB17
 5602 0094 16010000 		.4byte	.LFE17
 5603 0098 00000000 		.4byte	.LFB18
 5604 009c 40000000 		.4byte	.LFE18
 5605 00a0 00000000 		.4byte	.LFB19
 5606 00a4 6A000000 		.4byte	.LFE19
 5607 00a8 00000000 		.4byte	.LFB20
 5608 00ac 34000000 		.4byte	.LFE20
 5609 00b0 00000000 		.4byte	.LFB21
 5610 00b4 60000000 		.4byte	.LFE21
 5611 00b8 00000000 		.4byte	.LFB22
 5612 00bc 12030000 		.4byte	.LFE22
 5613 00c0 00000000 		.4byte	.LFB23
 5614 00c4 E0020000 		.4byte	.LFE23
 5615 00c8 00000000 		.4byte	0x0
 5616 00cc 00000000 		.4byte	0x0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 172


 5617              		.section	.debug_str,"MS",%progbits,1
 5618              	.LASF30:
 5619 0000 70737472 		.ascii	"pstr_copy_src\000"
 5619      5F636F70 
 5619      795F7372 
 5619      6300
 5620              	.LASF104:
 5621 000e 5374725F 		.ascii	"Str_ParseNbr_Int32\000"
 5621      50617273 
 5621      654E6272 
 5621      5F496E74 
 5621      333200
 5622              	.LASF105:
 5623 0021 6E62725F 		.ascii	"nbr_signed\000"
 5623      7369676E 
 5623      656400
 5624              	.LASF77:
 5625 002c 6E62725F 		.ascii	"nbr_dig\000"
 5625      64696700 
 5626              	.LASF25:
 5627 0034 70737472 		.ascii	"pstr_dest\000"
 5627      5F646573 
 5627      7400
 5628              	.LASF115:
 5629 003e 6E62725F 		.ascii	"nbr_hex_lower\000"
 5629      6865785F 
 5629      6C6F7765 
 5629      7200
 5630              	.LASF76:
 5631 004c 5374725F 		.ascii	"Str_FmtNbr_Int32U\000"
 5631      466D744E 
 5631      62725F49 
 5631      6E743332 
 5631      5500
 5632              	.LASF64:
 5633 005e 5374725F 		.ascii	"Str_Char_Replace_N\000"
 5633      43686172 
 5633      5F526570 
 5633      6C616365 
 5633      5F4E00
 5634              	.LASF61:
 5635 0071 5374725F 		.ascii	"Str_Char_Replace\000"
 5635      43686172 
 5635      5F526570 
 5635      6C616365 
 5635      00
 5636              	.LASF41:
 5637 0082 636D705F 		.ascii	"cmp_val\000"
 5637      76616C00 
 5638              	.LASF34:
 5639 008a 5374725F 		.ascii	"Str_Cat_N\000"
 5639      4361745F 
 5639      4E00
 5640              	.LASF100:
 5641 0094 666D745F 		.ascii	"fmt_invalid\000"
 5641      696E7661 
 5641      6C696400 
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 173


 5642              	.LASF101:
 5643 00a0 7072696E 		.ascii	"print_char\000"
 5643      745F6368 
 5643      617200
 5644              	.LASF120:
 5645 00ab 433A5C4D 		.ascii	"C:\\Micrium\\Software\\uC-LIB\\lib_str.c\000"
 5645      69637269 
 5645      756D5C53 
 5645      6F667477 
 5645      6172655C 
 5646              	.LASF66:
 5647 00d0 70737472 		.ascii	"pstr_srch\000"
 5647      5F737263 
 5647      6800
 5648              	.LASF110:
 5649 00da 70617273 		.ascii	"parse_char\000"
 5649      655F6368 
 5649      617200
 5650              	.LASF8:
 5651 00e5 73686F72 		.ascii	"short int\000"
 5651      7420696E 
 5651      7400
 5652              	.LASF56:
 5653 00ef 6C656E5F 		.ascii	"len_srch\000"
 5653      73726368 
 5653      00
 5654              	.LASF50:
 5655 00f8 63686172 		.ascii	"char_1\000"
 5655      5F3100
 5656              	.LASF51:
 5657 00ff 63686172 		.ascii	"char_2\000"
 5657      5F3200
 5658              	.LASF79:
 5659 0106 6C656164 		.ascii	"lead_char\000"
 5659      5F636861 
 5659      7200
 5660              	.LASF75:
 5661 0110 70737472 		.ascii	"pstr_srch_ix\000"
 5661      5F737263 
 5661      685F6978 
 5661      00
 5662              	.LASF113:
 5663 011d 6E62725F 		.ascii	"nbr_alpha\000"
 5663      616C7068 
 5663      6100
 5664              	.LASF68:
 5665 0127 7374725F 		.ascii	"str_len_srch\000"
 5665      6C656E5F 
 5665      73726368 
 5665      00
 5666              	.LASF112:
 5667 0134 6E62725F 		.ascii	"nbr_neg_unused\000"
 5667      6E65675F 
 5667      756E7573 
 5667      656400
 5668              	.LASF73:
 5669 0143 73726368 		.ascii	"srch_cmp\000"
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 174


 5669      5F636D70 
 5669      00
 5670              	.LASF89:
 5671 014c 6E62725F 		.ascii	"nbr_log\000"
 5671      6C6F6700 
 5672              	.LASF102:
 5673 0154 6E62725F 		.ascii	"nbr_neg_fmtd\000"
 5673      6E65675F 
 5673      666D7464 
 5673      00
 5674              	.LASF48:
 5675 0161 5374725F 		.ascii	"Str_CmpIgnoreCase\000"
 5675      436D7049 
 5675      676E6F72 
 5675      65436173 
 5675      6500
 5676              	.LASF78:
 5677 0173 6E62725F 		.ascii	"nbr_base\000"
 5677      62617365 
 5677      00
 5678              	.LASF52:
 5679 017c 5374725F 		.ascii	"Str_Char\000"
 5679      43686172 
 5679      00
 5680              	.LASF88:
 5681 0185 6E62725F 		.ascii	"nbr_abs\000"
 5681      61627300 
 5682              	.LASF107:
 5683 018d 70737472 		.ascii	"pstr_parse\000"
 5683      5F706172 
 5683      736500
 5684              	.LASF38:
 5685 0198 5374725F 		.ascii	"Str_Cmp\000"
 5685      436D7000 
 5686              	.LASF42:
 5687 01a0 5374725F 		.ascii	"Str_Cmp_N\000"
 5687      436D705F 
 5687      4E00
 5688              	.LASF33:
 5689 01aa 70737472 		.ascii	"pstr_cat\000"
 5689      5F636174 
 5689      00
 5690              	.LASF23:
 5691 01b3 70737472 		.ascii	"pstr_len\000"
 5691      5F6C656E 
 5691      00
 5692              	.LASF84:
 5693 01bc 6E62725F 		.ascii	"nbr_neg\000"
 5693      6E656700 
 5694              	.LASF47:
 5695 01c4 636D705F 		.ascii	"cmp_len\000"
 5695      6C656E00 
 5696              	.LASF54:
 5697 01cc 5374725F 		.ascii	"Str_Char_N\000"
 5697      43686172 
 5697      5F4E00
 5698              	.LASF16:
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 175


 5699 01d7 4350555F 		.ascii	"CPU_ADDR\000"
 5699      41444452 
 5699      00
 5700              	.LASF60:
 5701 01e0 7374725F 		.ascii	"str_len\000"
 5701      6C656E00 
 5702              	.LASF71:
 5703 01e8 73726368 		.ascii	"srch_ix\000"
 5703      5F697800 
 5704              	.LASF14:
 5705 01f0 666C6F61 		.ascii	"float\000"
 5705      7400
 5706              	.LASF80:
 5707 01f6 6C6F7765 		.ascii	"lower_case\000"
 5707      725F6361 
 5707      736500
 5708              	.LASF74:
 5709 0201 70737472 		.ascii	"pstr_str\000"
 5709      5F737472 
 5709      00
 5710              	.LASF13:
 5711 020a 6C6F6E67 		.ascii	"long long int\000"
 5711      206C6F6E 
 5711      6720696E 
 5711      7400
 5712              	.LASF46:
 5713 0218 70325F73 		.ascii	"p2_str_cmp_next\000"
 5713      74725F63 
 5713      6D705F6E 
 5713      65787400 
 5714              	.LASF49:
 5715 0228 5374725F 		.ascii	"Str_CmpIgnoreCase_N\000"
 5715      436D7049 
 5715      676E6F72 
 5715      65436173 
 5715      655F4E00 
 5716              	.LASF1:
 5717 023c 4350555F 		.ascii	"CPU_BOOLEAN\000"
 5717      424F4F4C 
 5717      45414E00 
 5718              	.LASF44:
 5719 0248 70325F73 		.ascii	"p2_str_cmp\000"
 5719      74725F63 
 5719      6D7000
 5720              	.LASF70:
 5721 0253 73726368 		.ascii	"srch_len\000"
 5721      5F6C656E 
 5721      00
 5722              	.LASF22:
 5723 025c 6C656E5F 		.ascii	"len_max\000"
 5723      6D617800 
 5724              	.LASF83:
 5725 0264 6E62725F 		.ascii	"nbr_fmt\000"
 5725      666D7400 
 5726              	.LASF57:
 5727 026c 5374725F 		.ascii	"Str_Char_Last\000"
 5727      43686172 
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 176


 5727      5F4C6173 
 5727      7400
 5728              	.LASF109:
 5729 027a 70737472 		.ascii	"pstr_parse_unused\000"
 5729      5F706172 
 5729      73655F75 
 5729      6E757365 
 5729      6400
 5730              	.LASF92:
 5731 028c 6E62725F 		.ascii	"nbr_dig_fmtd\000"
 5731      6469675F 
 5731      666D7464 
 5731      00
 5732              	.LASF43:
 5733 0299 70315F73 		.ascii	"p1_str_cmp\000"
 5733      74725F63 
 5733      6D7000
 5734              	.LASF96:
 5735 02a4 6C656164 		.ascii	"lead_char_delta_0\000"
 5735      5F636861 
 5735      725F6465 
 5735      6C74615F 
 5735      3000
 5736              	.LASF111:
 5737 02b6 70617273 		.ascii	"parse_dig\000"
 5737      655F6469 
 5737      6700
 5738              	.LASF94:
 5739 02c0 6E62725F 		.ascii	"nbr_lead_char\000"
 5739      6C656164 
 5739      5F636861 
 5739      7200
 5740              	.LASF32:
 5741 02ce 5374725F 		.ascii	"Str_Cat\000"
 5741      43617400 
 5742              	.LASF19:
 5743 02d6 5374725F 		.ascii	"Str_Len\000"
 5743      4C656E00 
 5744              	.LASF99:
 5745 02de 6C656164 		.ascii	"lead_char_0\000"
 5745      5F636861 
 5745      725F3000 
 5746              	.LASF39:
 5747 02ea 70315F73 		.ascii	"p1_str\000"
 5747      747200
 5748              	.LASF3:
 5749 02f1 756E7369 		.ascii	"unsigned char\000"
 5749      676E6564 
 5749      20636861 
 5749      7200
 5750              	.LASF45:
 5751 02ff 70315F73 		.ascii	"p1_str_cmp_next\000"
 5751      74725F63 
 5751      6D705F6E 
 5751      65787400 
 5752              	.LASF35:
 5753 030f 70737472 		.ascii	"pstr_cat_dest\000"
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 177


 5753      5F636174 
 5753      5F646573 
 5753      7400
 5754              	.LASF103:
 5755 031d 5374725F 		.ascii	"Str_FmtNbr_Int32\000"
 5755      466D744E 
 5755      62725F49 
 5755      6E743332 
 5755      00
 5756              	.LASF5:
 5757 032e 7369676E 		.ascii	"signed char\000"
 5757      65642063 
 5757      68617200 
 5758              	.LASF12:
 5759 033a 6C6F6E67 		.ascii	"long long unsigned int\000"
 5759      206C6F6E 
 5759      6720756E 
 5759      7369676E 
 5759      65642069 
 5760              	.LASF62:
 5761 0351 63686172 		.ascii	"char_srch\000"
 5761      5F737263 
 5761      6800
 5762              	.LASF116:
 5763 035b 77686974 		.ascii	"whitespace\000"
 5763      65737061 
 5763      636500
 5764              	.LASF0:
 5765 0366 4350555F 		.ascii	"CPU_CHAR\000"
 5765      43484152 
 5765      00
 5766              	.LASF10:
 5767 036f 756E7369 		.ascii	"unsigned int\000"
 5767      676E6564 
 5767      20696E74 
 5767      00
 5768              	.LASF87:
 5769 037c 5374725F 		.ascii	"Str_ParseNbr_Int32S\000"
 5769      50617273 
 5769      654E6272 
 5769      5F496E74 
 5769      33325300 
 5770              	.LASF85:
 5771 0390 5374725F 		.ascii	"Str_ParseNbr_Int32U\000"
 5771      50617273 
 5771      654E6272 
 5771      5F496E74 
 5771      33325500 
 5772              	.LASF24:
 5773 03a4 5374725F 		.ascii	"Str_Copy\000"
 5773      436F7079 
 5773      00
 5774              	.LASF27:
 5775 03ad 70737472 		.ascii	"pstr_rtn\000"
 5775      5F72746E 
 5775      00
 5776              	.LASF53:
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 178


 5777 03b6 73726368 		.ascii	"srch_char\000"
 5777      5F636861 
 5777      7200
 5778              	.LASF55:
 5779 03c0 70737472 		.ascii	"pstr_char\000"
 5779      5F636861 
 5779      7200
 5780              	.LASF6:
 5781 03ca 73686F72 		.ascii	"short unsigned int\000"
 5781      7420756E 
 5781      7369676E 
 5781      65642069 
 5781      6E7400
 5782              	.LASF65:
 5783 03dd 5374725F 		.ascii	"Str_Str\000"
 5783      53747200 
 5784              	.LASF17:
 5785 03e5 4350555F 		.ascii	"CPU_DATA\000"
 5785      44415441 
 5785      00
 5786              	.LASF4:
 5787 03ee 4350555F 		.ascii	"CPU_INT08U\000"
 5787      494E5430 
 5787      385500
 5788              	.LASF2:
 5789 03f9 63686172 		.ascii	"char\000"
 5789      00
 5790              	.LASF28:
 5791 03fe 5374725F 		.ascii	"Str_Copy_N\000"
 5791      436F7079 
 5791      5F4E00
 5792              	.LASF82:
 5793 0409 5374725F 		.ascii	"Str_FmtNbr_Int32S\000"
 5793      466D744E 
 5793      62725F49 
 5793      6E743332 
 5793      5300
 5794              	.LASF106:
 5795 041b 706E6272 		.ascii	"pnbr_neg\000"
 5795      5F6E6567 
 5795      00
 5796              	.LASF121:
 5797 0424 433A5C55 		.ascii	"C:\\Users\\daniel01\\Desktop\\CY8CKIT-050_uCOS-III\\"
 5797      73657273 
 5797      5C64616E 
 5797      69656C30 
 5797      315C4465 
 5798 0453 43593843 		.ascii	"CY8CKIT-050_uCOS-III\\Micrium\\Software\\EvalBoards"
 5798      4B49542D 
 5798      3035305F 
 5798      75434F53 
 5798      2D494949 
 5799 0483 5C437970 		.ascii	"\\Cypress\\CY8CKIT-050\\PSoC\\uCOS-III-Probe\\uCOS-"
 5799      72657373 
 5799      5C435938 
 5799      434B4954 
 5799      2D303530 
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 179


 5800 04b1 4949492D 		.ascii	"III-Probe.cydsn\000"
 5800      50726F62 
 5800      652E6379 
 5800      64736E00 
 5801              	.LASF114:
 5802 04c1 6E62725F 		.ascii	"nbr_hex\000"
 5802      68657800 
 5803              	.LASF11:
 5804 04c9 4350555F 		.ascii	"CPU_INT32S\000"
 5804      494E5433 
 5804      325300
 5805              	.LASF9:
 5806 04d4 4350555F 		.ascii	"CPU_INT32U\000"
 5806      494E5433 
 5806      325500
 5807              	.LASF36:
 5808 04df 70737472 		.ascii	"pstr_cat_src\000"
 5808      5F636174 
 5808      5F737263 
 5808      00
 5809              	.LASF90:
 5810 04ec 6E62725F 		.ascii	"nbr_dig_max\000"
 5810      6469675F 
 5810      6D617800 
 5811              	.LASF81:
 5812 04f8 70737472 		.ascii	"pstr_fmt\000"
 5812      5F666D74 
 5812      00
 5813              	.LASF59:
 5814 0501 7374725F 		.ascii	"str_len_max\000"
 5814      6C656E5F 
 5814      6D617800 
 5815              	.LASF117:
 5816 050d 646F6E65 		.ascii	"done\000"
 5816      00
 5817              	.LASF58:
 5818 0512 5374725F 		.ascii	"Str_Char_Last_N\000"
 5818      43686172 
 5818      5F4C6173 
 5818      745F4E00 
 5819              	.LASF15:
 5820 0522 646F7562 		.ascii	"double\000"
 5820      6C6500
 5821              	.LASF63:
 5822 0529 63686172 		.ascii	"char_replace\000"
 5822      5F726570 
 5822      6C616365 
 5822      00
 5823              	.LASF21:
 5824 0536 70737472 		.ascii	"pstr\000"
 5824      00
 5825              	.LASF97:
 5826 053b 6C656164 		.ascii	"lead_char_delta_a\000"
 5826      5F636861 
 5826      725F6465 
 5826      6C74615F 
 5826      6100
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 180


 5827              	.LASF67:
 5828 054d 5374725F 		.ascii	"Str_Str_N\000"
 5828      5374725F 
 5828      4E00
 5829              	.LASF40:
 5830 0557 70325F73 		.ascii	"p2_str\000"
 5830      747200
 5831              	.LASF18:
 5832 055e 4350555F 		.ascii	"CPU_SIZE_T\000"
 5832      53495A45 
 5832      5F5400
 5833              	.LASF31:
 5834 0569 6C656E5F 		.ascii	"len_copy\000"
 5834      636F7079 
 5834      00
 5835              	.LASF98:
 5836 0572 6C656164 		.ascii	"lead_char_dig\000"
 5836      5F636861 
 5836      725F6469 
 5836      6700
 5837              	.LASF26:
 5838 0580 70737472 		.ascii	"pstr_src\000"
 5838      5F737263 
 5838      00
 5839              	.LASF69:
 5840 0589 6C656E5F 		.ascii	"len_max_srch\000"
 5840      6D61785F 
 5840      73726368 
 5840      00
 5841              	.LASF37:
 5842 0596 6C656E5F 		.ascii	"len_cat\000"
 5842      63617400 
 5843              	.LASF119:
 5844 059e 474E5520 		.ascii	"GNU C 4.4.1\000"
 5844      4320342E 
 5844      342E3100 
 5845              	.LASF108:
 5846 05aa 70737472 		.ascii	"pstr_parse_nbr\000"
 5846      5F706172 
 5846      73655F6E 
 5846      627200
 5847              	.LASF29:
 5848 05b9 70737472 		.ascii	"pstr_copy_dest\000"
 5848      5F636F70 
 5848      795F6465 
 5848      737400
 5849              	.LASF91:
 5850 05c8 6E62725F 		.ascii	"nbr_dig_min\000"
 5850      6469675F 
 5850      6D696E00 
 5851              	.LASF93:
 5852 05d4 6E62725F 		.ascii	"nbr_neg_sign\000"
 5852      6E65675F 
 5852      7369676E 
 5852      00
 5853              	.LASF20:
 5854 05e1 5374725F 		.ascii	"Str_Len_N\000"
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\cctxXixn.s 			page 181


 5854      4C656E5F 
 5854      4E00
 5855              	.LASF86:
 5856 05eb 70737472 		.ascii	"pstr_next\000"
 5856      5F6E6578 
 5856      7400
 5857              	.LASF95:
 5858 05f5 6469675F 		.ascii	"dig_val\000"
 5858      76616C00 
 5859              	.LASF7:
 5860 05fd 4350555F 		.ascii	"CPU_INT16S\000"
 5860      494E5431 
 5860      365300
 5861              	.LASF118:
 5862 0608 5374725F 		.ascii	"Str_MultOvfThTbl_Int32U\000"
 5862      4D756C74 
 5862      4F766654 
 5862      6854626C 
 5862      5F496E74 
 5863              	.LASF72:
 5864 0620 73726368 		.ascii	"srch_done\000"
 5864      5F646F6E 
 5864      6500
 5865              		.ident	"GCC: (Sourcery G++ Lite 2010q1-188) 4.4.1"
