Loading plugins phase: Elapsed time ==> 0s.183ms
<CYPRESSTAG name="CyDsfit arguments...">
cydsfit arguments: -.fdsnotice -.fdswarpdepfile=warp_dependencies.txt -.fdselabdepfile=elab_dependencies.txt -.fdsbldfile=generated_files.txt -.fdsreffile=referenced_files.txt -p H:\BCC722-RTOS-moinho\UCoS\Micrium_2\Software\EvalBoards\Cypress\CY8CKIT-050\PSoC\uCOS-III-Probe\BCC722-RTOS-MOINHO.cydsn\BCC722-RTOS-MOINHO.cyprj -d CY8C5868AXI-LP032 -s H:\BCC722-RTOS-moinho\UCoS\Micrium_2\Software\EvalBoards\Cypress\CY8CKIT-050\PSoC\uCOS-III-Probe\BCC722-RTOS-MOINHO.cydsn\Generated_Source\PSoC5 -- -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE
</CYPRESSTAG>
<CYPRESSTAG name="Design elaboration results...">
ADD: sdb.M0065: information: Analog terminal "vdac_ref" on ADC_SAR_SEQ_v2_10 is unconnected.
 * C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_10\PSoC5\ADC_SAR_SEQ_v2_10.cysch (Signal: vdac_ref)
 * C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_10\PSoC5\ADC_SAR_SEQ_v2_10.cysch (Shape_798)
 * C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_SAR_SEQ_v2_10\PSoC5\ADC_SAR_SEQ_v2_10.cysch (Shape_885)

</CYPRESSTAG>
Elaboration phase: Elapsed time ==> 2s.259ms
<CYPRESSTAG name="HDL generation results...">
</CYPRESSTAG>
HDL generation phase: Elapsed time ==> 0s.080ms
<CYPRESSTAG name="Synthesis results...">

     | | | | | | |
   _________________
  -|               |-
  -|               |-
  -|               |-
  -|    CYPRESS    |-
  -|               |-
  -|               |-   Warp Verilog Synthesis Compiler: Version 6.3 IR 41
  -|               |-   Copyright (C) 1991-2001 Cypress Semiconductor
   |_______________|
     | | | | | | |

======================================================================
Compiling:  BCC722-RTOS-MOINHO.v
Program  :   C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\bin\warp.exe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=H:\BCC722-RTOS-moinho\UCoS\Micrium_2\Software\EvalBoards\Cypress\CY8CKIT-050\PSoC\uCOS-III-Probe\BCC722-RTOS-MOINHO.cydsn\BCC722-RTOS-MOINHO.cyprj -dcpsoc3 BCC722-RTOS-MOINHO.v -verilog
======================================================================

======================================================================
Compiling:  BCC722-RTOS-MOINHO.v
Program  :   C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\bin\warp.exe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=H:\BCC722-RTOS-moinho\UCoS\Micrium_2\Software\EvalBoards\Cypress\CY8CKIT-050\PSoC\uCOS-III-Probe\BCC722-RTOS-MOINHO.cydsn\BCC722-RTOS-MOINHO.cyprj -dcpsoc3 BCC722-RTOS-MOINHO.v -verilog
======================================================================

======================================================================
Compiling:  BCC722-RTOS-MOINHO.v
Program  :   vlogfe
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=H:\BCC722-RTOS-moinho\UCoS\Micrium_2\Software\EvalBoards\Cypress\CY8CKIT-050\PSoC\uCOS-III-Probe\BCC722-RTOS-MOINHO.cydsn\BCC722-RTOS-MOINHO.cyprj -dcpsoc3 -verilog BCC722-RTOS-MOINHO.v
======================================================================

vlogfe V6.3 IR 41:  Verilog parser
Thu Oct 20 09:55:04 2022


======================================================================
Compiling:  BCC722-RTOS-MOINHO.v
Program  :   vpp
Options  :    -yv2 -q10 BCC722-RTOS-MOINHO.v
======================================================================

vpp V6.3 IR 41:  Verilog Pre-Processor
Thu Oct 20 09:55:04 2022

Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\CyControlReg_v1_80\CyControlReg_v1_80.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\ZeroTerminal\ZeroTerminal.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_vref_v1_70\cy_vref_v1_70.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\or_v1_0\or_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cypress.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'
Flattening file 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cypress.v'

vpp:  No errors.

Library 'work' => directory 'lcpsoc3'
General_symbol_table
General_symbol_table
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Using control file 'BCC722-RTOS-MOINHO.ctl'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1113, col 55):  Note: Substituting module 'add_vv_vv' for '+'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1122, col 48):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1122, col 77):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1389, col 59):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1424, col 61):  Note: Substituting module 'cmp_vv_vv' for '/='.
C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1547, col 106):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1603, col 68):  Note: Substituting module 'cmp_vv_vv' for '<'.
C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v (line 1604, col 68):  Note: Substituting module 'cmp_vv_vv' for '<'.
BCC722-RTOS-MOINHO.v (line 942, col 82):  Note: Substituting module 'cmp_vv_vv' for '='.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.

vlogfe:  No errors.


======================================================================
Compiling:  BCC722-RTOS-MOINHO.v
Program  :   tovif
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=H:\BCC722-RTOS-moinho\UCoS\Micrium_2\Software\EvalBoards\Cypress\CY8CKIT-050\PSoC\uCOS-III-Probe\BCC722-RTOS-MOINHO.cydsn\BCC722-RTOS-MOINHO.cyprj -dcpsoc3 -verilog BCC722-RTOS-MOINHO.v
======================================================================

tovif V6.3 IR 41:  High-level synthesis
Thu Oct 20 09:55:04 2022

Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Linking 'H:\BCC722-RTOS-moinho\UCoS\Micrium_2\Software\EvalBoards\Cypress\CY8CKIT-050\PSoC\uCOS-III-Probe\BCC722-RTOS-MOINHO.cydsn\codegentemp\BCC722-RTOS-MOINHO.ctl'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\CyControlReg_v1_80\CyControlReg_v1_80.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cypress.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'.
Linking 'H:\BCC722-RTOS-moinho\UCoS\Micrium_2\Software\EvalBoards\Cypress\CY8CKIT-050\PSoC\uCOS-III-Probe\BCC722-RTOS-MOINHO.cydsn\codegentemp\BCC722-RTOS-MOINHO.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\ZeroTerminal\ZeroTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_vref_v1_70\cy_vref_v1_70.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\or_v1_0\or_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mcompare.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\lcpsoc3\stdlogic\mod_cnst.vif'.

tovif:  No errors.


======================================================================
Compiling:  BCC722-RTOS-MOINHO.v
Program  :   topld
Options  :    -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=H:\BCC722-RTOS-moinho\UCoS\Micrium_2\Software\EvalBoards\Cypress\CY8CKIT-050\PSoC\uCOS-III-Probe\BCC722-RTOS-MOINHO.cydsn\BCC722-RTOS-MOINHO.cyprj -dcpsoc3 -verilog BCC722-RTOS-MOINHO.v
======================================================================

topld V6.3 IR 41:  Synthesis and optimization
Thu Oct 20 09:55:05 2022

Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\std.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cypress.vhd'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\work\cypress.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\ieee\work\stdlogic.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\lpmpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\rtlpkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mod_mthv.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mod_genv.vif'.
Linking 'H:\BCC722-RTOS-moinho\UCoS\Micrium_2\Software\EvalBoards\Cypress\CY8CKIT-050\PSoC\uCOS-III-Probe\BCC722-RTOS-MOINHO.cydsn\codegentemp\BCC722-RTOS-MOINHO.ctl'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\CyControlReg_v1_80\CyControlReg_v1_80.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cypress.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\cy_psoc3_inc.v'.
Linking 'H:\BCC722-RTOS-moinho\UCoS\Micrium_2\Software\EvalBoards\Cypress\CY8CKIT-050\PSoC\uCOS-III-Probe\BCC722-RTOS-MOINHO.cydsn\codegentemp\BCC722-RTOS-MOINHO.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_virtualmux_v1_0\cy_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\B_UART_v2_50\B_UART_v2_50.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\ZeroTerminal\ZeroTerminal.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\ADC_AMUX_v2_0\ADC_AMUX_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_analog_virtualmux_v1_0\cy_analog_virtualmux_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_vref_v1_70\cy_vref_v1_70.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\or_v1_0\or_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_constant_v1_0\cy_constant_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyComponentLibrary\CyComponentLibrary.cylib\bADC_SAR_SEQ_v2_0\bADC_SAR_SEQ_v2_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\psoc\content\CyPrimitives\cyprimitives.cylib\cy_sync_v1_0\cy_sync_v1_0.v'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3pkg.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\cy_psoc3.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\common\stdlogic\mcompare.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\lcpsoc3\stdlogic\mod_cnst.vif'.
Linking 'C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\lib\lcpsoc3\stdlogic\cpsoc3.vif'.

----------------------------------------------------------
Detecting unused logic.
----------------------------------------------------------
    User names
	Net_251
	Net_252
	Net_253
	Net_254
	Net_255
	Net_256
	\ProbeUART:BUART:reset_sr\
	\ProbeUART:BUART:sRX:s23Poll:MODULE_2:g2:a0:b_1\
	\ProbeUART:BUART:sRX:s23Poll:MODULE_2:g2:a0:b_0\
	\ProbeUART:BUART:sRX:s23Poll:MODULE_3:g2:a0:gta_0\
	\ProbeUART:BUART:sRX:s23Poll:MODULE_4:g2:a0:gta_0\
	Net_260
	\ProbeUART:BUART:sRX:MODULE_5:g2:a0:gta_0\
	\ProbeUART:BUART:sRX:MODULE_6:g1:a0:gx:u0:albi_1\
	\ProbeUART:BUART:sRX:MODULE_6:g1:a0:gx:u0:agbi_1\
	\ProbeUART:BUART:sRX:MODULE_6:g1:a0:gx:u0:lt_0\
	\ProbeUART:BUART:sRX:MODULE_6:g1:a0:gx:u0:gt_0\
	\ProbeUART:BUART:sRX:MODULE_6:g1:a0:gx:u0:lti_0\
	\ProbeUART:BUART:sRX:MODULE_6:g1:a0:gx:u0:gti_0\
	\ProbeUART:BUART:sRX:MODULE_6:g1:a0:gx:u0:albi_0\
	\ProbeUART:BUART:sRX:MODULE_6:g1:a0:gx:u0:agbi_0\
	\ProbeUART:BUART:sRX:MODULE_6:g1:a0:xeq\
	\ProbeUART:BUART:sRX:MODULE_6:g1:a0:xlt\
	\ProbeUART:BUART:sRX:MODULE_6:g1:a0:xlte\
	\ProbeUART:BUART:sRX:MODULE_6:g1:a0:xgt\
	\ProbeUART:BUART:sRX:MODULE_6:g1:a0:xgte\
	\ProbeUART:BUART:sRX:MODULE_6:lt\
	\ProbeUART:BUART:sRX:MODULE_6:eq\
	\ProbeUART:BUART:sRX:MODULE_6:gt\
	\ProbeUART:BUART:sRX:MODULE_6:gte\
	\ProbeUART:BUART:sRX:MODULE_6:lte\
	\ADC_SAR_Seq:SAR:Net_221\
	\ADC_SAR_Seq:SAR:Net_383\
	\ADC_SAR_Seq:bSAR_SEQ:sw_soc\
	\ADC_SAR_Seq:soc_out\
	\ADC_SAR_Seq:Net_3905\
	\ADC_SAR_Seq:Net_3867\
	\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:albi_2\
	\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:agbi_2\
	\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:albi_1\
	\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:agbi_1\
	\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:albi_0\
	\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:agbi_0\
	\ADC_SAR_Seq:MODULE_1:g1:a0:xneq\
	\ADC_SAR_Seq:MODULE_1:g1:a0:xlt\
	\ADC_SAR_Seq:MODULE_1:g1:a0:xlte\
	\ADC_SAR_Seq:MODULE_1:g1:a0:xgt\
	\ADC_SAR_Seq:MODULE_1:g1:a0:xgte\
	\ADC_SAR_Seq:MODULE_1:lt\
	\ADC_SAR_Seq:MODULE_1:gt\
	\ADC_SAR_Seq:MODULE_1:gte\
	\ADC_SAR_Seq:MODULE_1:lte\
	\ADC_SAR_Seq:MODULE_1:neq\


Deleted 53 User equations/components.
Deleted 0 Synthesized equations/components.

------------------------------------------------------
Alias Detection
------------------------------------------------------
Aliasing \LED_Status:rst\ to \LED_Status:clk\
Aliasing tmpOE__LED_net_0 to tmpOE__LED_net_1
Aliasing zero to \LED_Status:clk\
Aliasing one to tmpOE__LED_net_1
Aliasing \LCD_Disp:tmpOE__LCDPort_net_6\ to tmpOE__LED_net_1
Aliasing \LCD_Disp:tmpOE__LCDPort_net_5\ to tmpOE__LED_net_1
Aliasing \LCD_Disp:tmpOE__LCDPort_net_4\ to tmpOE__LED_net_1
Aliasing \LCD_Disp:tmpOE__LCDPort_net_3\ to tmpOE__LED_net_1
Aliasing \LCD_Disp:tmpOE__LCDPort_net_2\ to tmpOE__LED_net_1
Aliasing \LCD_Disp:tmpOE__LCDPort_net_1\ to tmpOE__LED_net_1
Aliasing \LCD_Disp:tmpOE__LCDPort_net_0\ to tmpOE__LED_net_1
Aliasing tmpOE__PB_2_net_0 to tmpOE__LED_net_1
Aliasing Net_238 to \LED_Status:clk\
Aliasing \ProbeUART:BUART:tx_hd_send_break\ to \LED_Status:clk\
Aliasing \ProbeUART:BUART:HalfDuplexSend\ to \LED_Status:clk\
Aliasing \ProbeUART:BUART:FinalParityType_1\ to \LED_Status:clk\
Aliasing \ProbeUART:BUART:FinalParityType_0\ to \LED_Status:clk\
Aliasing \ProbeUART:BUART:FinalAddrMode_2\ to \LED_Status:clk\
Aliasing \ProbeUART:BUART:FinalAddrMode_1\ to \LED_Status:clk\
Aliasing \ProbeUART:BUART:FinalAddrMode_0\ to \LED_Status:clk\
Aliasing \ProbeUART:BUART:tx_ctrl_mark\ to \LED_Status:clk\
Aliasing \ProbeUART:BUART:tx_status_6\ to \LED_Status:clk\
Aliasing \ProbeUART:BUART:tx_status_5\ to \LED_Status:clk\
Aliasing \ProbeUART:BUART:tx_status_4\ to \LED_Status:clk\
Aliasing \ProbeUART:BUART:rx_count7_bit8_wire\ to \LED_Status:clk\
Aliasing \ProbeUART:BUART:sRX:s23Poll:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\ to tmpOE__LED_net_1
Aliasing \ProbeUART:BUART:sRX:s23Poll:MODIN4_1\ to \ProbeUART:BUART:sRX:s23Poll:MODIN3_1\
Aliasing \ProbeUART:BUART:sRX:s23Poll:MODIN4_0\ to \ProbeUART:BUART:sRX:s23Poll:MODIN3_0\
Aliasing \ProbeUART:BUART:sRX:s23Poll:MODULE_3:g2:a0:newb_1\ to \LED_Status:clk\
Aliasing \ProbeUART:BUART:sRX:s23Poll:MODULE_3:g2:a0:newb_0\ to tmpOE__LED_net_1
Aliasing \ProbeUART:BUART:sRX:s23Poll:MODIN5_1\ to \ProbeUART:BUART:sRX:s23Poll:MODIN3_1\
Aliasing \ProbeUART:BUART:sRX:s23Poll:MODIN5_0\ to \ProbeUART:BUART:sRX:s23Poll:MODIN3_0\
Aliasing \ProbeUART:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_1\ to tmpOE__LED_net_1
Aliasing \ProbeUART:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_0\ to \LED_Status:clk\
Aliasing \ProbeUART:BUART:rx_status_1\ to \LED_Status:clk\
Aliasing \ProbeUART:BUART:sRX:MODULE_5:g2:a0:newa_6\ to \LED_Status:clk\
Aliasing \ProbeUART:BUART:sRX:MODULE_5:g2:a0:newa_5\ to \LED_Status:clk\
Aliasing \ProbeUART:BUART:sRX:MODULE_5:g2:a0:newa_4\ to \LED_Status:clk\
Aliasing \ProbeUART:BUART:sRX:MODULE_5:g2:a0:newb_6\ to \LED_Status:clk\
Aliasing \ProbeUART:BUART:sRX:MODULE_5:g2:a0:newb_5\ to \LED_Status:clk\
Aliasing \ProbeUART:BUART:sRX:MODULE_5:g2:a0:newb_4\ to \LED_Status:clk\
Aliasing \ProbeUART:BUART:sRX:MODULE_5:g2:a0:newb_3\ to \LED_Status:clk\
Aliasing \ProbeUART:BUART:sRX:MODULE_5:g2:a0:newb_2\ to tmpOE__LED_net_1
Aliasing \ProbeUART:BUART:sRX:MODULE_5:g2:a0:newb_1\ to tmpOE__LED_net_1
Aliasing \ProbeUART:BUART:sRX:MODULE_5:g2:a0:newb_0\ to \LED_Status:clk\
Aliasing \ProbeUART:BUART:sRX:MODULE_6:g1:a0:gx:u0:aeqb_0\ to tmpOE__LED_net_1
Aliasing tmpOE__ProbeUART_Rx_net_0 to tmpOE__LED_net_1
Aliasing tmpOE__ProbeUART_Tx_net_0 to tmpOE__LED_net_1
Aliasing tmpOE__PB_3_net_0 to tmpOE__LED_net_1
Aliasing tmpOE__se_indut_motor_net_0 to tmpOE__LED_net_1
Aliasing tmpOE__se_indut_porta_net_0 to tmpOE__LED_net_1
Aliasing tmpOE__bt_liga_net_0 to tmpOE__LED_net_1
Aliasing tmpOE__si_liga_net_0 to tmpOE__LED_net_1
Aliasing tmpOE__si_desl_net_0 to tmpOE__LED_net_1
Aliasing tmpOE__si_rearme_net_0 to tmpOE__LED_net_1
Aliasing tmpOE__si_emerg_net_0 to tmpOE__LED_net_1
Aliasing tmpOE__si_alerta_net_0 to tmpOE__LED_net_1
Aliasing tmpOE__al_sonoro_net_0 to tmpOE__LED_net_1
Aliasing tmpOE__bt_desl_net_0 to tmpOE__LED_net_1
Aliasing tmpOE__bt_rearme_net_0 to tmpOE__LED_net_1
Aliasing tmpOE__bt_emerg_net_0 to tmpOE__LED_net_1
Aliasing \ADC_SAR_Seq:AMuxHw_2_Decoder_enable\ to tmpOE__LED_net_1
Aliasing \ADC_SAR_Seq:SAR:vp_ctl_0\ to \LED_Status:clk\
Aliasing \ADC_SAR_Seq:SAR:vp_ctl_2\ to \LED_Status:clk\
Aliasing \ADC_SAR_Seq:SAR:vn_ctl_1\ to \LED_Status:clk\
Aliasing \ADC_SAR_Seq:SAR:vn_ctl_3\ to \LED_Status:clk\
Aliasing \ADC_SAR_Seq:SAR:vp_ctl_1\ to \LED_Status:clk\
Aliasing \ADC_SAR_Seq:SAR:vp_ctl_3\ to \LED_Status:clk\
Aliasing \ADC_SAR_Seq:SAR:vn_ctl_0\ to \LED_Status:clk\
Aliasing \ADC_SAR_Seq:SAR:vn_ctl_2\ to \LED_Status:clk\
Aliasing \ADC_SAR_Seq:SAR:soc\ to \LED_Status:clk\
Aliasing \ADC_SAR_Seq:bSAR_SEQ:status_7\ to \LED_Status:clk\
Aliasing \ADC_SAR_Seq:bSAR_SEQ:status_6\ to \LED_Status:clk\
Aliasing \ADC_SAR_Seq:bSAR_SEQ:status_5\ to \LED_Status:clk\
Aliasing \ADC_SAR_Seq:bSAR_SEQ:status_4\ to \LED_Status:clk\
Aliasing \ADC_SAR_Seq:bSAR_SEQ:status_3\ to \LED_Status:clk\
Aliasing \ADC_SAR_Seq:bSAR_SEQ:status_2\ to \LED_Status:clk\
Aliasing \ADC_SAR_Seq:bSAR_SEQ:status_1\ to \LED_Status:clk\
Aliasing Net_1629 to \ADC_SAR_Seq:bSAR_SEQ:status_0\
Aliasing \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:aeqb_0\ to tmpOE__LED_net_1
Aliasing tmpOE__se_temp_motor_net_0 to tmpOE__LED_net_1
Aliasing tmpOE__se_temp_quadro_net_0 to tmpOE__LED_net_1
Aliasing tmpOE__Pin_SV01_VE_net_0 to tmpOE__LED_net_1
Aliasing tmpOE__Pin_BP01_net_0 to tmpOE__LED_net_1
Aliasing tmpOE__Pin_SP01_VE_net_0 to tmpOE__LED_net_1
Aliasing tmpOE__Pin_SV01_AM_net_0 to tmpOE__LED_net_1
Aliasing tmpOE__Pin_SV01_VM_net_0 to tmpOE__LED_net_1
Aliasing tmpOE__Pin_SP01_VM_net_0 to tmpOE__LED_net_1
Aliasing tmpOE__Pin_SV02_VE_net_0 to tmpOE__LED_net_1
Aliasing tmpOE__Pin_BP02_net_0 to tmpOE__LED_net_1
Aliasing tmpOE__Pin_SP02_VE_net_0 to tmpOE__LED_net_1
Aliasing tmpOE__Pin_SV02_AM_net_0 to tmpOE__LED_net_1
Aliasing tmpOE__Pin_SV02_VM_net_0 to tmpOE__LED_net_1
Aliasing tmpOE__Pin_SP02_VM_net_0 to tmpOE__LED_net_1
Aliasing tmpOE__ct_motor_net_0 to tmpOE__LED_net_1
Aliasing tmpOE__EOC_net_0 to tmpOE__LED_net_1
Aliasing Net_265D to \LED_Status:clk\
Aliasing \ProbeUART:BUART:rx_break_status\\D\ to \LED_Status:clk\
Aliasing \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\\D\ to \ADC_SAR_Seq:MODIN1_5\
Aliasing \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\\D\ to \ADC_SAR_Seq:MODIN1_4\
Aliasing \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\\D\ to \ADC_SAR_Seq:MODIN1_3\
Aliasing \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\\D\ to \ADC_SAR_Seq:MODIN1_2\
Aliasing \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\\D\ to \ADC_SAR_Seq:MODIN1_1\
Aliasing \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\\D\ to \ADC_SAR_Seq:MODIN1_0\
Removing Lhs of wire \LED_Status:rst\[1] = \LED_Status:clk\[0]
Removing Rhs of wire Net_167[2] = \LED_Status:control_out_0\[3]
Removing Rhs of wire Net_167[2] = \LED_Status:control_0\[26]
Removing Rhs of wire Net_213[4] = \LED_Status:control_out_1\[5]
Removing Rhs of wire Net_213[4] = \LED_Status:control_1\[25]
Removing Lhs of wire tmpOE__LED_net_0[29] = tmpOE__LED_net_1[28]
Removing Rhs of wire zero[35] = \LED_Status:clk\[0]
Removing Lhs of wire one[36] = tmpOE__LED_net_1[28]
Removing Lhs of wire \LCD_Disp:tmpOE__LCDPort_net_6\[39] = tmpOE__LED_net_1[28]
Removing Lhs of wire \LCD_Disp:tmpOE__LCDPort_net_5\[40] = tmpOE__LED_net_1[28]
Removing Lhs of wire \LCD_Disp:tmpOE__LCDPort_net_4\[41] = tmpOE__LED_net_1[28]
Removing Lhs of wire \LCD_Disp:tmpOE__LCDPort_net_3\[42] = tmpOE__LED_net_1[28]
Removing Lhs of wire \LCD_Disp:tmpOE__LCDPort_net_2\[43] = tmpOE__LED_net_1[28]
Removing Lhs of wire \LCD_Disp:tmpOE__LCDPort_net_1\[44] = tmpOE__LED_net_1[28]
Removing Lhs of wire \LCD_Disp:tmpOE__LCDPort_net_0\[45] = tmpOE__LED_net_1[28]
Removing Lhs of wire tmpOE__PB_2_net_0[63] = tmpOE__LED_net_1[28]
Removing Lhs of wire \ProbeUART:Net_61\[70] = \ProbeUART:Net_9\[69]
Removing Lhs of wire Net_238[74] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:tx_hd_send_break\[75] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:HalfDuplexSend\[76] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:FinalParityType_1\[77] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:FinalParityType_0\[78] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:FinalAddrMode_2\[79] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:FinalAddrMode_1\[80] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:FinalAddrMode_0\[81] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:tx_ctrl_mark\[82] = zero[35]
Removing Rhs of wire Net_239[87] = \ProbeUART:BUART:tx_interrupt_out\[88]
Removing Rhs of wire Net_240[89] = \ProbeUART:BUART:rx_interrupt_out\[90]
Removing Rhs of wire \ProbeUART:BUART:tx_bitclk_enable_pre\[94] = \ProbeUART:BUART:tx_bitclk_dp\[130]
Removing Lhs of wire \ProbeUART:BUART:tx_counter_tc\[140] = \ProbeUART:BUART:tx_counter_dp\[131]
Removing Lhs of wire \ProbeUART:BUART:tx_status_6\[141] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:tx_status_5\[142] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:tx_status_4\[143] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:tx_status_1\[145] = \ProbeUART:BUART:tx_fifo_empty\[108]
Removing Lhs of wire \ProbeUART:BUART:tx_status_3\[147] = \ProbeUART:BUART:tx_fifo_notfull\[107]
Removing Lhs of wire \ProbeUART:BUART:rx_count7_bit8_wire\[207] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:add_vv_vv_MODGEN_2_1\[215] = \ProbeUART:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_1\[226]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:add_vv_vv_MODGEN_2_0\[217] = \ProbeUART:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_0\[227]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:cmp_vv_vv_MODGEN_3\[218] = \ProbeUART:BUART:sRX:s23Poll:MODULE_3:g2:a0:lta_0\[243]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:cmp_vv_vv_MODGEN_4\[219] = \ProbeUART:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_0\[257]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:MODULE_2:g2:a0:a_1\[220] = \ProbeUART:BUART:sRX:s23Poll:MODIN3_1\[221]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:MODIN3_1\[221] = \ProbeUART:BUART:pollcount_1\[213]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:MODULE_2:g2:a0:a_0\[222] = \ProbeUART:BUART:sRX:s23Poll:MODIN3_0\[223]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:MODIN3_0\[223] = \ProbeUART:BUART:pollcount_0\[216]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_0\[229] = tmpOE__LED_net_1[28]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:MODULE_2:g2:a0:g1:z1:s0:g1:u0:b_0\[230] = tmpOE__LED_net_1[28]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:MODULE_3:g2:a0:newa_1\[231] = \ProbeUART:BUART:pollcount_1\[213]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:MODIN4_1\[232] = \ProbeUART:BUART:pollcount_1\[213]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:MODULE_3:g2:a0:newa_0\[233] = \ProbeUART:BUART:pollcount_0\[216]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:MODIN4_0\[234] = \ProbeUART:BUART:pollcount_0\[216]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:MODULE_3:g2:a0:newb_1\[235] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:MODULE_3:g2:a0:newb_0\[236] = tmpOE__LED_net_1[28]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:MODULE_3:g2:a0:dataa_1\[237] = \ProbeUART:BUART:pollcount_1\[213]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:MODULE_3:g2:a0:dataa_0\[238] = \ProbeUART:BUART:pollcount_0\[216]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:MODULE_3:g2:a0:datab_1\[239] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:MODULE_3:g2:a0:datab_0\[240] = tmpOE__LED_net_1[28]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:MODULE_4:g2:a0:newa_1\[245] = \ProbeUART:BUART:pollcount_1\[213]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:MODIN5_1\[246] = \ProbeUART:BUART:pollcount_1\[213]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:MODULE_4:g2:a0:newa_0\[247] = \ProbeUART:BUART:pollcount_0\[216]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:MODIN5_0\[248] = \ProbeUART:BUART:pollcount_0\[216]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_1\[249] = tmpOE__LED_net_1[28]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:MODULE_4:g2:a0:newb_0\[250] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:MODULE_4:g2:a0:dataa_1\[251] = \ProbeUART:BUART:pollcount_1\[213]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:MODULE_4:g2:a0:dataa_0\[252] = \ProbeUART:BUART:pollcount_0\[216]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:MODULE_4:g2:a0:datab_1\[253] = tmpOE__LED_net_1[28]
Removing Lhs of wire \ProbeUART:BUART:sRX:s23Poll:MODULE_4:g2:a0:datab_0\[254] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:rx_status_1\[261] = zero[35]
Removing Rhs of wire \ProbeUART:BUART:rx_status_2\[262] = \ProbeUART:BUART:rx_parity_error_status\[263]
Removing Rhs of wire \ProbeUART:BUART:rx_status_3\[264] = \ProbeUART:BUART:rx_stop_bit_error\[265]
Removing Lhs of wire \ProbeUART:BUART:sRX:cmp_vv_vv_MODGEN_5\[275] = \ProbeUART:BUART:sRX:MODULE_5:g2:a0:lta_0\[324]
Removing Lhs of wire \ProbeUART:BUART:sRX:cmp_vv_vv_MODGEN_6\[279] = \ProbeUART:BUART:sRX:MODULE_6:g1:a0:xneq\[346]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:newa_6\[280] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:newa_5\[281] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:newa_4\[282] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:newa_3\[283] = \ProbeUART:BUART:sRX:MODIN6_6\[284]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODIN6_6\[284] = \ProbeUART:BUART:rx_count_6\[202]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:newa_2\[285] = \ProbeUART:BUART:sRX:MODIN6_5\[286]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODIN6_5\[286] = \ProbeUART:BUART:rx_count_5\[203]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:newa_1\[287] = \ProbeUART:BUART:sRX:MODIN6_4\[288]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODIN6_4\[288] = \ProbeUART:BUART:rx_count_4\[204]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:newa_0\[289] = \ProbeUART:BUART:sRX:MODIN6_3\[290]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODIN6_3\[290] = \ProbeUART:BUART:rx_count_3\[205]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:newb_6\[291] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:newb_5\[292] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:newb_4\[293] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:newb_3\[294] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:newb_2\[295] = tmpOE__LED_net_1[28]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:newb_1\[296] = tmpOE__LED_net_1[28]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:newb_0\[297] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:dataa_6\[298] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:dataa_5\[299] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:dataa_4\[300] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:dataa_3\[301] = \ProbeUART:BUART:rx_count_6\[202]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:dataa_2\[302] = \ProbeUART:BUART:rx_count_5\[203]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:dataa_1\[303] = \ProbeUART:BUART:rx_count_4\[204]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:dataa_0\[304] = \ProbeUART:BUART:rx_count_3\[205]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:datab_6\[305] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:datab_5\[306] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:datab_4\[307] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:datab_3\[308] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:datab_2\[309] = tmpOE__LED_net_1[28]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:datab_1\[310] = tmpOE__LED_net_1[28]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_5:g2:a0:datab_0\[311] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_6:g1:a0:newa_0\[326] = \ProbeUART:BUART:rx_postpoll\[161]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_6:g1:a0:newb_0\[327] = \ProbeUART:BUART:rx_parity_bit\[278]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_6:g1:a0:dataa_0\[328] = \ProbeUART:BUART:rx_postpoll\[161]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_6:g1:a0:datab_0\[329] = \ProbeUART:BUART:rx_parity_bit\[278]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_6:g1:a0:gx:u0:a_0\[330] = \ProbeUART:BUART:rx_postpoll\[161]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_6:g1:a0:gx:u0:b_0\[331] = \ProbeUART:BUART:rx_parity_bit\[278]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_6:g1:a0:gx:u0:aeqb_0\[333] = tmpOE__LED_net_1[28]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_6:g1:a0:gx:u0:eq_0\[334] = \ProbeUART:BUART:sRX:MODULE_6:g1:a0:gx:u0:xnor_array_0\[332]
Removing Lhs of wire \ProbeUART:BUART:sRX:MODULE_6:g1:a0:gx:u0:eqi_0\[335] = \ProbeUART:BUART:sRX:MODULE_6:g1:a0:gx:u0:xnor_array_0\[332]
Removing Lhs of wire tmpOE__ProbeUART_Rx_net_0[357] = tmpOE__LED_net_1[28]
Removing Lhs of wire tmpOE__ProbeUART_Tx_net_0[362] = tmpOE__LED_net_1[28]
Removing Lhs of wire tmpOE__PB_3_net_0[370] = tmpOE__LED_net_1[28]
Removing Lhs of wire tmpOE__se_indut_motor_net_0[376] = tmpOE__LED_net_1[28]
Removing Lhs of wire tmpOE__se_indut_porta_net_0[382] = tmpOE__LED_net_1[28]
Removing Lhs of wire tmpOE__bt_liga_net_0[388] = tmpOE__LED_net_1[28]
Removing Lhs of wire tmpOE__si_liga_net_0[394] = tmpOE__LED_net_1[28]
Removing Lhs of wire tmpOE__si_desl_net_0[400] = tmpOE__LED_net_1[28]
Removing Lhs of wire tmpOE__si_rearme_net_0[406] = tmpOE__LED_net_1[28]
Removing Lhs of wire tmpOE__si_emerg_net_0[412] = tmpOE__LED_net_1[28]
Removing Lhs of wire tmpOE__si_alerta_net_0[418] = tmpOE__LED_net_1[28]
Removing Lhs of wire tmpOE__al_sonoro_net_0[424] = tmpOE__LED_net_1[28]
Removing Lhs of wire tmpOE__bt_desl_net_0[430] = tmpOE__LED_net_1[28]
Removing Lhs of wire tmpOE__bt_rearme_net_0[436] = tmpOE__LED_net_1[28]
Removing Lhs of wire tmpOE__bt_emerg_net_0[442] = tmpOE__LED_net_1[28]
Removing Lhs of wire \ADC_SAR_Seq:AMuxHw_2_Decoder_enable\[448] = tmpOE__LED_net_1[28]
Removing Lhs of wire \ADC_SAR_Seq:cmp_vv_vv_MODGEN_1\[450] = \ADC_SAR_Seq:MODULE_1:g1:a0:xeq\[785]
Removing Rhs of wire \ADC_SAR_Seq:clock\[451] = \ADC_SAR_Seq:Net_3874\[685]
Removing Rhs of wire \ADC_SAR_Seq:ch_addr_5\[453] = \ADC_SAR_Seq:bSAR_SEQ:count_5\[652]
Removing Rhs of wire \ADC_SAR_Seq:ch_addr_4\[455] = \ADC_SAR_Seq:bSAR_SEQ:count_4\[653]
Removing Rhs of wire \ADC_SAR_Seq:ch_addr_3\[457] = \ADC_SAR_Seq:bSAR_SEQ:count_3\[654]
Removing Rhs of wire \ADC_SAR_Seq:ch_addr_2\[459] = \ADC_SAR_Seq:bSAR_SEQ:count_2\[655]
Removing Rhs of wire \ADC_SAR_Seq:ch_addr_1\[461] = \ADC_SAR_Seq:bSAR_SEQ:count_1\[656]
Removing Rhs of wire \ADC_SAR_Seq:ch_addr_0\[463] = \ADC_SAR_Seq:bSAR_SEQ:count_0\[657]
Removing Lhs of wire \ADC_SAR_Seq:SAR:vp_ctl_0\[597] = zero[35]
Removing Lhs of wire \ADC_SAR_Seq:SAR:vp_ctl_2\[598] = zero[35]
Removing Lhs of wire \ADC_SAR_Seq:SAR:vn_ctl_1\[599] = zero[35]
Removing Lhs of wire \ADC_SAR_Seq:SAR:vn_ctl_3\[600] = zero[35]
Removing Lhs of wire \ADC_SAR_Seq:SAR:vp_ctl_1\[601] = zero[35]
Removing Lhs of wire \ADC_SAR_Seq:SAR:vp_ctl_3\[602] = zero[35]
Removing Lhs of wire \ADC_SAR_Seq:SAR:vn_ctl_0\[603] = zero[35]
Removing Lhs of wire \ADC_SAR_Seq:SAR:vn_ctl_2\[604] = zero[35]
Removing Lhs of wire \ADC_SAR_Seq:SAR:Net_188\[605] = \ADC_SAR_Seq:clock\[451]
Removing Lhs of wire \ADC_SAR_Seq:SAR:soc\[611] = zero[35]
Removing Rhs of wire \ADC_SAR_Seq:bSAR_SEQ:enable\[642] = \ADC_SAR_Seq:bSAR_SEQ:control_0\[643]
Removing Rhs of wire \ADC_SAR_Seq:bSAR_SEQ:load_period\[644] = \ADC_SAR_Seq:bSAR_SEQ:control_1\[645]
Removing Lhs of wire \ADC_SAR_Seq:bSAR_SEQ:status_7\[658] = zero[35]
Removing Lhs of wire \ADC_SAR_Seq:bSAR_SEQ:status_6\[659] = zero[35]
Removing Lhs of wire \ADC_SAR_Seq:bSAR_SEQ:status_5\[660] = zero[35]
Removing Lhs of wire \ADC_SAR_Seq:bSAR_SEQ:status_4\[661] = zero[35]
Removing Lhs of wire \ADC_SAR_Seq:bSAR_SEQ:status_3\[662] = zero[35]
Removing Lhs of wire \ADC_SAR_Seq:bSAR_SEQ:status_2\[663] = zero[35]
Removing Lhs of wire \ADC_SAR_Seq:bSAR_SEQ:status_1\[664] = zero[35]
Removing Rhs of wire \ADC_SAR_Seq:bSAR_SEQ:status_0\[665] = \ADC_SAR_Seq:bSAR_SEQ:nrq_edge_detect_reg\[666]
Removing Rhs of wire Net_1629[673] = \ADC_SAR_Seq:bSAR_SEQ:status_0\[665]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:newa_5\[696] = \ADC_SAR_Seq:MODIN1_5\[697]
Removing Lhs of wire \ADC_SAR_Seq:MODIN1_5\[697] = \ADC_SAR_Seq:ch_addr_5\[453]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:newa_4\[698] = \ADC_SAR_Seq:MODIN1_4\[699]
Removing Lhs of wire \ADC_SAR_Seq:MODIN1_4\[699] = \ADC_SAR_Seq:ch_addr_4\[455]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:newa_3\[700] = \ADC_SAR_Seq:MODIN1_3\[701]
Removing Lhs of wire \ADC_SAR_Seq:MODIN1_3\[701] = \ADC_SAR_Seq:ch_addr_3\[457]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:newa_2\[702] = \ADC_SAR_Seq:MODIN1_2\[703]
Removing Lhs of wire \ADC_SAR_Seq:MODIN1_2\[703] = \ADC_SAR_Seq:ch_addr_2\[459]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:newa_1\[704] = \ADC_SAR_Seq:MODIN1_1\[705]
Removing Lhs of wire \ADC_SAR_Seq:MODIN1_1\[705] = \ADC_SAR_Seq:ch_addr_1\[461]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:newa_0\[706] = \ADC_SAR_Seq:MODIN1_0\[707]
Removing Lhs of wire \ADC_SAR_Seq:MODIN1_0\[707] = \ADC_SAR_Seq:ch_addr_0\[463]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:newb_5\[708] = \ADC_SAR_Seq:MODIN2_5\[709]
Removing Lhs of wire \ADC_SAR_Seq:MODIN2_5\[709] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\[452]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:newb_4\[710] = \ADC_SAR_Seq:MODIN2_4\[711]
Removing Lhs of wire \ADC_SAR_Seq:MODIN2_4\[711] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\[454]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:newb_3\[712] = \ADC_SAR_Seq:MODIN2_3\[713]
Removing Lhs of wire \ADC_SAR_Seq:MODIN2_3\[713] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\[456]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:newb_2\[714] = \ADC_SAR_Seq:MODIN2_2\[715]
Removing Lhs of wire \ADC_SAR_Seq:MODIN2_2\[715] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\[458]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:newb_1\[716] = \ADC_SAR_Seq:MODIN2_1\[717]
Removing Lhs of wire \ADC_SAR_Seq:MODIN2_1\[717] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\[460]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:newb_0\[718] = \ADC_SAR_Seq:MODIN2_0\[719]
Removing Lhs of wire \ADC_SAR_Seq:MODIN2_0\[719] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\[462]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:dataa_5\[720] = \ADC_SAR_Seq:ch_addr_5\[453]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:dataa_4\[721] = \ADC_SAR_Seq:ch_addr_4\[455]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:dataa_3\[722] = \ADC_SAR_Seq:ch_addr_3\[457]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:dataa_2\[723] = \ADC_SAR_Seq:ch_addr_2\[459]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:dataa_1\[724] = \ADC_SAR_Seq:ch_addr_1\[461]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:dataa_0\[725] = \ADC_SAR_Seq:ch_addr_0\[463]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:datab_5\[726] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\[452]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:datab_4\[727] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\[454]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:datab_3\[728] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\[456]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:datab_2\[729] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\[458]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:datab_1\[730] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\[460]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:datab_0\[731] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\[462]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:a_5\[732] = \ADC_SAR_Seq:ch_addr_5\[453]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:a_4\[733] = \ADC_SAR_Seq:ch_addr_4\[455]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:a_3\[734] = \ADC_SAR_Seq:ch_addr_3\[457]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:a_2\[735] = \ADC_SAR_Seq:ch_addr_2\[459]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:a_1\[736] = \ADC_SAR_Seq:ch_addr_1\[461]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:a_0\[737] = \ADC_SAR_Seq:ch_addr_0\[463]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:b_5\[738] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\[452]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:b_4\[739] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\[454]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:b_3\[740] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\[456]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:b_2\[741] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\[458]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:b_1\[742] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\[460]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:b_0\[743] = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\[462]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:aeqb_0\[750] = tmpOE__LED_net_1[28]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:eq_0\[751] = \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:xnor_array_0\[749]
Removing Lhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:eqi_0\[757] = \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:eq_5\[756]
Removing Rhs of wire \ADC_SAR_Seq:MODULE_1:g1:a0:xeq\[785] = \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:aeqb_1\[758]
Removing Lhs of wire tmpOE__se_temp_motor_net_0[797] = tmpOE__LED_net_1[28]
Removing Lhs of wire tmpOE__se_temp_quadro_net_0[803] = tmpOE__LED_net_1[28]
Removing Lhs of wire tmpOE__Pin_SV01_VE_net_0[811] = tmpOE__LED_net_1[28]
Removing Lhs of wire tmpOE__Pin_BP01_net_0[818] = tmpOE__LED_net_1[28]
Removing Lhs of wire tmpOE__Pin_SP01_VE_net_0[825] = tmpOE__LED_net_1[28]
Removing Lhs of wire tmpOE__Pin_SV01_AM_net_0[832] = tmpOE__LED_net_1[28]
Removing Lhs of wire tmpOE__Pin_SV01_VM_net_0[839] = tmpOE__LED_net_1[28]
Removing Lhs of wire tmpOE__Pin_SP01_VM_net_0[846] = tmpOE__LED_net_1[28]
Removing Lhs of wire tmpOE__Pin_SV02_VE_net_0[854] = tmpOE__LED_net_1[28]
Removing Lhs of wire tmpOE__Pin_BP02_net_0[861] = tmpOE__LED_net_1[28]
Removing Lhs of wire tmpOE__Pin_SP02_VE_net_0[868] = tmpOE__LED_net_1[28]
Removing Lhs of wire tmpOE__Pin_SV02_AM_net_0[875] = tmpOE__LED_net_1[28]
Removing Lhs of wire tmpOE__Pin_SV02_VM_net_0[882] = tmpOE__LED_net_1[28]
Removing Lhs of wire tmpOE__Pin_SP02_VM_net_0[889] = tmpOE__LED_net_1[28]
Removing Lhs of wire tmpOE__ct_motor_net_0[935] = tmpOE__LED_net_1[28]
Removing Lhs of wire tmpOE__EOC_net_0[941] = tmpOE__LED_net_1[28]
Removing Lhs of wire \ProbeUART:BUART:reset_reg\\D\[946] = zero[35]
Removing Lhs of wire Net_265D[951] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:rx_bitclk\\D\[961] = \ProbeUART:BUART:rx_bitclk_pre\[196]
Removing Lhs of wire \ProbeUART:BUART:rx_parity_error_pre\\D\[970] = \ProbeUART:BUART:rx_parity_error_pre\[273]
Removing Lhs of wire \ProbeUART:BUART:rx_break_status\\D\[971] = zero[35]
Removing Lhs of wire \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\\D\[975] = \ADC_SAR_Seq:ch_addr_5\[453]
Removing Lhs of wire \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\\D\[976] = \ADC_SAR_Seq:ch_addr_4\[455]
Removing Lhs of wire \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\\D\[977] = \ADC_SAR_Seq:ch_addr_3\[457]
Removing Lhs of wire \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\\D\[978] = \ADC_SAR_Seq:ch_addr_2\[459]
Removing Lhs of wire \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\\D\[979] = \ADC_SAR_Seq:ch_addr_1\[461]
Removing Lhs of wire \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\\D\[980] = \ADC_SAR_Seq:ch_addr_0\[463]
Removing Lhs of wire \ADC_SAR_Seq:bSAR_SEQ:nrq_edge_detect_reg\\D\[1045] = \ADC_SAR_Seq:bSAR_SEQ:nrq_edge_detect\[672]
Removing Lhs of wire \ADC_SAR_Seq:bSAR_SEQ:nrq_reg\\D\[1047] = \ADC_SAR_Seq:bSAR_SEQ:bus_clk_nrq_reg\[669]

------------------------------------------------------
Aliased 0 equations, 238 wires.
------------------------------------------------------

----------------------------------------------------------
Circuit simplification
----------------------------------------------------------

Substituting virtuals - pass 1:

Note:  Expanding virtual equation for 'zero' (cost = 0):
zero <=  ('0') ;

Note:  Expanding virtual equation for 'tmpOE__LED_net_1' (cost = 0):
tmpOE__LED_net_1 <=  ('1') ;

Note:  Expanding virtual equation for '\ProbeUART:BUART:rx_addressmatch\' (cost = 0):
\ProbeUART:BUART:rx_addressmatch\ <= (\ProbeUART:BUART:rx_addressmatch2\
	OR \ProbeUART:BUART:rx_addressmatch1\);

Note:  Expanding virtual equation for '\ProbeUART:BUART:rx_bitclk_pre\' (cost = 1):
\ProbeUART:BUART:rx_bitclk_pre\ <= ((not \ProbeUART:BUART:rx_count_2\ and not \ProbeUART:BUART:rx_count_1\ and not \ProbeUART:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\ProbeUART:BUART:rx_bitclk_pre16x\' (cost = 0):
\ProbeUART:BUART:rx_bitclk_pre16x\ <= ((not \ProbeUART:BUART:rx_count_2\ and \ProbeUART:BUART:rx_count_1\ and \ProbeUART:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\ProbeUART:BUART:rx_poll_bit1\' (cost = 1):
\ProbeUART:BUART:rx_poll_bit1\ <= ((not \ProbeUART:BUART:rx_count_2\ and not \ProbeUART:BUART:rx_count_1\ and \ProbeUART:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\ProbeUART:BUART:rx_poll_bit2\' (cost = 1):
\ProbeUART:BUART:rx_poll_bit2\ <= ((not \ProbeUART:BUART:rx_count_2\ and not \ProbeUART:BUART:rx_count_1\ and not \ProbeUART:BUART:rx_count_0\));

Note:  Expanding virtual equation for '\ProbeUART:BUART:pollingrange\' (cost = 4):
\ProbeUART:BUART:pollingrange\ <= ((not \ProbeUART:BUART:rx_count_2\ and not \ProbeUART:BUART:rx_count_1\));

Note:  Expanding virtual equation for '\ProbeUART:BUART:sRX:s23Poll:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\' (cost = 0):
\ProbeUART:BUART:sRX:s23Poll:MODULE_2:g2:a0:g1:z1:s0:g1:u0:c_1\ <= (\ProbeUART:BUART:pollcount_0\);

Note:  Expanding virtual equation for '\ProbeUART:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_0\' (cost = 0):
\ProbeUART:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_0\ <= (not \ProbeUART:BUART:pollcount_0\);

Note:  Expanding virtual equation for '\ProbeUART:BUART:sRX:s23Poll:MODULE_3:g2:a0:lta_1\' (cost = 0):
\ProbeUART:BUART:sRX:s23Poll:MODULE_3:g2:a0:lta_1\ <=  ('0') ;

Note:  Expanding virtual equation for '\ProbeUART:BUART:sRX:s23Poll:MODULE_3:g2:a0:gta_1\' (cost = 0):
\ProbeUART:BUART:sRX:s23Poll:MODULE_3:g2:a0:gta_1\ <= (\ProbeUART:BUART:pollcount_1\);

Note:  Expanding virtual equation for '\ProbeUART:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_1\' (cost = 0):
\ProbeUART:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_1\ <= (not \ProbeUART:BUART:pollcount_1\);

Note:  Expanding virtual equation for '\ProbeUART:BUART:sRX:s23Poll:MODULE_4:g2:a0:gta_1\' (cost = 0):
\ProbeUART:BUART:sRX:s23Poll:MODULE_4:g2:a0:gta_1\ <=  ('0') ;

Note:  Expanding virtual equation for '\ProbeUART:BUART:sRX:MODULE_5:g2:a0:lta_6\' (cost = 0):
\ProbeUART:BUART:sRX:MODULE_5:g2:a0:lta_6\ <=  ('0') ;

Note:  Expanding virtual equation for '\ProbeUART:BUART:sRX:MODULE_5:g2:a0:gta_6\' (cost = 0):
\ProbeUART:BUART:sRX:MODULE_5:g2:a0:gta_6\ <=  ('0') ;

Note:  Expanding virtual equation for '\ProbeUART:BUART:sRX:MODULE_5:g2:a0:lta_5\' (cost = 0):
\ProbeUART:BUART:sRX:MODULE_5:g2:a0:lta_5\ <=  ('0') ;

Note:  Expanding virtual equation for '\ProbeUART:BUART:sRX:MODULE_5:g2:a0:gta_5\' (cost = 0):
\ProbeUART:BUART:sRX:MODULE_5:g2:a0:gta_5\ <=  ('0') ;

Note:  Expanding virtual equation for '\ProbeUART:BUART:sRX:MODULE_5:g2:a0:lta_4\' (cost = 0):
\ProbeUART:BUART:sRX:MODULE_5:g2:a0:lta_4\ <=  ('0') ;

Note:  Expanding virtual equation for '\ProbeUART:BUART:sRX:MODULE_5:g2:a0:gta_4\' (cost = 0):
\ProbeUART:BUART:sRX:MODULE_5:g2:a0:gta_4\ <=  ('0') ;

Note:  Expanding virtual equation for '\ProbeUART:BUART:sRX:MODULE_5:g2:a0:lta_3\' (cost = 0):
\ProbeUART:BUART:sRX:MODULE_5:g2:a0:lta_3\ <=  ('0') ;

Note:  Expanding virtual equation for '\ProbeUART:BUART:sRX:MODULE_5:g2:a0:gta_3\' (cost = 0):
\ProbeUART:BUART:sRX:MODULE_5:g2:a0:gta_3\ <= (\ProbeUART:BUART:rx_count_6\);

Note:  Expanding virtual equation for '\ProbeUART:BUART:sRX:MODULE_5:g2:a0:lta_2\' (cost = 1):
\ProbeUART:BUART:sRX:MODULE_5:g2:a0:lta_2\ <= ((not \ProbeUART:BUART:rx_count_6\ and not \ProbeUART:BUART:rx_count_5\));

Note:  Expanding virtual equation for '\ProbeUART:BUART:sRX:MODULE_5:g2:a0:gta_2\' (cost = 0):
\ProbeUART:BUART:sRX:MODULE_5:g2:a0:gta_2\ <= (\ProbeUART:BUART:rx_count_6\);

Note:  Expanding virtual equation for '\ProbeUART:BUART:sRX:MODULE_5:g2:a0:lta_1\' (cost = 2):
\ProbeUART:BUART:sRX:MODULE_5:g2:a0:lta_1\ <= ((not \ProbeUART:BUART:rx_count_6\ and not \ProbeUART:BUART:rx_count_4\)
	OR (not \ProbeUART:BUART:rx_count_6\ and not \ProbeUART:BUART:rx_count_5\));

Note:  Expanding virtual equation for '\ProbeUART:BUART:sRX:MODULE_5:g2:a0:gta_1\' (cost = 0):
\ProbeUART:BUART:sRX:MODULE_5:g2:a0:gta_1\ <= (\ProbeUART:BUART:rx_count_6\);

Note:  Expanding virtual equation for '\ProbeUART:BUART:sRX:MODULE_5:g2:a0:lta_0\' (cost = 8):
\ProbeUART:BUART:sRX:MODULE_5:g2:a0:lta_0\ <= ((not \ProbeUART:BUART:rx_count_6\ and not \ProbeUART:BUART:rx_count_4\)
	OR (not \ProbeUART:BUART:rx_count_6\ and not \ProbeUART:BUART:rx_count_5\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:xnor_array_5\' (cost = 6):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:xnor_array_5\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\)
	OR (\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:xnor_array_4\' (cost = 6):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:xnor_array_4\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\)
	OR (\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:xnor_array_3\' (cost = 2):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:xnor_array_3\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\)
	OR (\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:xnor_array_2\' (cost = 6):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:xnor_array_2\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\)
	OR (\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:xnor_array_1\' (cost = 6):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:xnor_array_1\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\)
	OR (\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:xnor_array_0\' (cost = 4):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:xnor_array_0\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\)
	OR (\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:eq_1\' (cost = 8):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:eq_1\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:eq_2\' (cost = 16):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:eq_2\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:eq_3\' (cost = 32):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:eq_3\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:eq_4\' (cost = 64):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:eq_4\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:eq_5\' (cost = 64):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:eq_5\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:lt_3\' (cost = 2):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:lt_3\ <= ((not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:gt_3\' (cost = 2):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:gt_3\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:lt_4\' (cost = 6):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:lt_4\ <= ((not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\)
	OR (not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\)
	OR (not \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:gt_4\' (cost = 6):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:gt_4\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:lt_0\' (cost = 2):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:lt_0\ <= ((not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:gt_0\' (cost = 2):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:gt_0\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:lt_1\' (cost = 6):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:lt_1\ <= ((not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\)
	OR (not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\)
	OR (not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:gt_1\' (cost = 6):
\ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:gt_1\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\));


Substituting virtuals - pass 2:

Note:  Expanding virtual equation for '\ProbeUART:BUART:sRX:s23Poll:MODULE_3:g2:a0:lta_0\' (cost = 4):
\ProbeUART:BUART:sRX:s23Poll:MODULE_3:g2:a0:lta_0\ <= ((not \ProbeUART:BUART:pollcount_1\ and not \ProbeUART:BUART:pollcount_0\));

Note:  Expanding virtual equation for '\ProbeUART:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_0\' (cost = 0):
\ProbeUART:BUART:sRX:s23Poll:MODULE_4:g2:a0:lta_0\ <= (not \ProbeUART:BUART:pollcount_1\);

Note:  Expanding virtual equation for '\ProbeUART:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_1\' (cost = 2):
\ProbeUART:BUART:sRX:s23Poll:MODULE_2:g2:a0:s_1\ <= ((not \ProbeUART:BUART:pollcount_0\ and \ProbeUART:BUART:pollcount_1\)
	OR (not \ProbeUART:BUART:pollcount_1\ and \ProbeUART:BUART:pollcount_0\));

Note:  Expanding virtual equation for '\ADC_SAR_Seq:MODULE_1:g1:a0:xeq\' (cost = 64):
\ADC_SAR_Seq:MODULE_1:g1:a0:xeq\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\));


Substituting virtuals - pass 3:

Note:  Expanding virtual equation for '\ProbeUART:BUART:rx_postpoll\' (cost = 72):
\ProbeUART:BUART:rx_postpoll\ <= (\ProbeUART:BUART:pollcount_1\
	OR (Net_227 and \ProbeUART:BUART:pollcount_0\));

Note:  Expanding virtual equation for '\ProbeUART:BUART:sRX:MODULE_6:g1:a0:gx:u0:xnor_array_0\' (cost = 4):
\ProbeUART:BUART:sRX:MODULE_6:g1:a0:gx:u0:xnor_array_0\ <= ((not \ProbeUART:BUART:pollcount_1\ and not Net_227 and not \ProbeUART:BUART:rx_parity_bit\)
	OR (not \ProbeUART:BUART:pollcount_1\ and not \ProbeUART:BUART:pollcount_0\ and not \ProbeUART:BUART:rx_parity_bit\)
	OR (\ProbeUART:BUART:pollcount_1\ and \ProbeUART:BUART:rx_parity_bit\)
	OR (Net_227 and \ProbeUART:BUART:pollcount_0\ and \ProbeUART:BUART:rx_parity_bit\));

Note:  Expanding virtual equation for '\ProbeUART:BUART:sRX:MODULE_6:g1:a0:gx:u0:aeqb_1\' (cost = 4):
\ProbeUART:BUART:sRX:MODULE_6:g1:a0:gx:u0:aeqb_1\ <= ((not \ProbeUART:BUART:pollcount_1\ and not Net_227 and not \ProbeUART:BUART:rx_parity_bit\)
	OR (not \ProbeUART:BUART:pollcount_1\ and not \ProbeUART:BUART:pollcount_0\ and not \ProbeUART:BUART:rx_parity_bit\)
	OR (\ProbeUART:BUART:pollcount_1\ and \ProbeUART:BUART:rx_parity_bit\)
	OR (Net_227 and \ProbeUART:BUART:pollcount_0\ and \ProbeUART:BUART:rx_parity_bit\));

Note:  Virtual signal \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ with ( cost: 128 or cost_inv: -1)  > 90 or with size: 64 > 102 has been made a (soft) node.
\ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ <= ((not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and not \ADC_SAR_Seq:ch_addr_0\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and not \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and not \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and not \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and not \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (not \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and not \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\)
	OR (\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ and \ADC_SAR_Seq:ch_addr_5\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ and \ADC_SAR_Seq:ch_addr_4\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ and \ADC_SAR_Seq:ch_addr_3\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ and \ADC_SAR_Seq:ch_addr_2\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ and \ADC_SAR_Seq:ch_addr_1\ and \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ and \ADC_SAR_Seq:ch_addr_0\));


Substituting virtuals - pass 4:


----------------------------------------------------------
Circuit simplification results:

	Expanded 53 signals.
	Turned 1 signals into soft nodes.
	Maximum default expansion cost was set at 3.
----------------------------------------------------------

------------------------------------------------------
Alias Detection
------------------------------------------------------
Aliasing \ProbeUART:BUART:rx_status_0\ to zero
Aliasing \ProbeUART:BUART:rx_status_6\ to zero
Aliasing \ProbeUART:BUART:rx_markspace_status\\D\ to zero
Aliasing \ProbeUART:BUART:rx_parity_error_status\\D\ to zero
Aliasing \ProbeUART:BUART:rx_addr_match_status\\D\ to zero
Removing Rhs of wire \ProbeUART:BUART:rx_bitclk_enable\[160] = \ProbeUART:BUART:rx_bitclk\[208]
Removing Lhs of wire \ProbeUART:BUART:rx_status_0\[259] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:rx_status_6\[268] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:tx_ctrl_mark_last\\D\[953] = \ProbeUART:BUART:tx_ctrl_mark_last\[151]
Removing Lhs of wire \ProbeUART:BUART:rx_markspace_status\\D\[965] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:rx_parity_error_status\\D\[966] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:rx_addr_match_status\\D\[968] = zero[35]
Removing Lhs of wire \ProbeUART:BUART:rx_markspace_pre\\D\[969] = \ProbeUART:BUART:rx_markspace_pre\[272]
Removing Lhs of wire \ProbeUART:BUART:rx_parity_bit\\D\[974] = \ProbeUART:BUART:rx_parity_bit\[278]

------------------------------------------------------
Aliased 0 equations, 9 wires.
------------------------------------------------------

----------------------------------------------------------
Circuit simplification
----------------------------------------------------------

Eliminating unused logic - pass 1:

Note:  Deleted unused equation:
\ProbeUART:BUART:sRX:MODULE_6:g1:a0:xneq\ <= ((not \ProbeUART:BUART:rx_parity_bit\ and Net_227 and \ProbeUART:BUART:pollcount_0\)
	OR (not \ProbeUART:BUART:pollcount_1\ and not \ProbeUART:BUART:pollcount_0\ and \ProbeUART:BUART:rx_parity_bit\)
	OR (not \ProbeUART:BUART:pollcount_1\ and not Net_227 and \ProbeUART:BUART:rx_parity_bit\)
	OR (not \ProbeUART:BUART:rx_parity_bit\ and \ProbeUART:BUART:pollcount_1\));


Eliminating unused logic - pass 2:


Substituting virtuals - pass 1:


----------------------------------------------------------
Circuit simplification results:

	Expanded 0 signals.
	Turned 0 signals into soft nodes.
	Maximum default expansion cost was set at 3.
----------------------------------------------------------

topld:  No errors.

CYPRESS_DIR    : C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp
Warp Program   : C:\Program Files (x86)\Cypress\PSoC Creator\4.4\PSoC Creator\warp\bin\warp.exe
Warp Arguments : -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=H:\BCC722-RTOS-moinho\UCoS\Micrium_2\Software\EvalBoards\Cypress\CY8CKIT-050\PSoC\uCOS-III-Probe\BCC722-RTOS-MOINHO.cydsn\BCC722-RTOS-MOINHO.cyprj -dcpsoc3 BCC722-RTOS-MOINHO.v -verilog
</CYPRESSTAG>
Warp synthesis phase: Elapsed time ==> 1s.522ms
<CYPRESSTAG name="Fitter results...">
<CYPRESSTAG name="Fitter startup details...">
cyp3fit: V4.4.0.80, Family: PSoC3, Started at: Thursday, 20 October 2022 09:55:05
Options: -yv2 -q10 -ygs -o2 -v3 -.fftcfgtype=LE -ya -.fftprj=H:\BCC722-RTOS-moinho\UCoS\Micrium_2\Software\EvalBoards\Cypress\CY8CKIT-050\PSoC\uCOS-III-Probe\BCC722-RTOS-MOINHO.cydsn\BCC722-RTOS-MOINHO.cyprj -d CY8C5868AXI-LP032 BCC722-RTOS-MOINHO.v -verilog
</CYPRESSTAG>
<CYPRESSTAG name="Design parsing">
Design parsing phase: Elapsed time ==> 0s.032ms
</CYPRESSTAG>
<CYPRESSTAG name="Tech Mapping">
<CYPRESSTAG name="Initial Mapping" icon="FILE_RPT_TECHM">
    Removed wire end \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:lti_1\ kept \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:lt_5\
    Removed wire end \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:gti_1\ kept \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:gt_5\
    Removed wire end \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:lti_0\ kept \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:lt_2\
    Removed wire end \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:gti_0\ kept \ADC_SAR_Seq:MODULE_1:g1:a0:gx:u0:gt_2\
    Converted constant MacroCell: \ProbeUART:BUART:reset_reg\ from registered to combinatorial
    Converted constant MacroCell: Net_265 from registered to combinatorial
    Converted constant MacroCell: \ProbeUART:BUART:rx_markspace_status\ from registered to combinatorial
    Converted constant MacroCell: \ProbeUART:BUART:rx_status_2\ from registered to combinatorial
    Converted constant MacroCell: \ProbeUART:BUART:rx_addr_match_status\ from registered to combinatorial
    Converted constant MacroCell: \ProbeUART:BUART:rx_break_status\ from registered to combinatorial
Assigning clock ADC_SAR_Seq_BusClock to clock BUS_CLK because it is a pass-through
<CYPRESSTAG name="Global Clock Selection" icon="FILE_RPT_TECHM">
    Digital Clock 0: Automatic-assigning  clock 'ADC_SAR_Seq_IntClock'. Fanout=73, Signal=\ADC_SAR_Seq:clock\
    Digital Clock 1: Automatic-assigning  clock 'ProbeUART_IntClock'. Fanout=1, Signal=\ProbeUART:Net_9\
</CYPRESSTAG>

Removing unused cells resulting from optimization
Done removing unused cells.
<CYPRESSTAG name="UDB Clock/Enable Remapping Results">
    UDB Clk/Enable \ProbeUART:BUART:ClkSync\: with output requested to be synchronous
        ClockIn: ProbeUART_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: ProbeUART_IntClock, EnableOut: Constant 1
    UDB Clk/Enable \ADC_SAR_Seq:bSAR_SEQ:ClkEn\: with output requested to be synchronous
        ClockIn: ADC_SAR_Seq_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: \ADC_SAR_Seq:bSAR_SEQ:CtrlReg\:controlcell.control_0 was determined to be synchronous to ClockIn
        ClockOut: ADC_SAR_Seq_IntClock, EnableOut: \ADC_SAR_Seq:bSAR_SEQ:CtrlReg\:controlcell.control_0
    UDB Clk/Enable \ADC_SAR_Seq:bSAR_SEQ:ClkCtrl\: with output requested to be synchronous
        ClockIn: ADC_SAR_Seq_IntClock was determined to be a global clock that is synchronous to BUS_CLK
        EnableIn: Constant 1 was determined to be synchronous to ClockIn
        ClockOut: ADC_SAR_Seq_IntClock, EnableOut: Constant 1
</CYPRESSTAG>
ADD: pft.M0040: information: The following 17 pin(s) will be assigned a location by the fitter: ct_motor(0), EOC(0), LED(0), LED(1), Pin_BP01(0), Pin_BP02(0), Pin_SP02_VE(0), Pin_SP02_VM(0), Pin_SV01_AM(0), Pin_SV01_VE(0), Pin_SV02_AM(0), Pin_SV02_VE(0), Pin_SV02_VM(0), ProbeUART_Rx(0), ProbeUART_Tx(0), se_temp_motor(0), se_temp_quadro(0)


Removing unused cells resulting from optimization
Done removing unused cells.
<CYPRESSTAG name="Duplicate Macrocell detection">
</CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Duplicate Macrocell detection">

Removing duplicate macrocells
    Removing \ProbeUART:BUART:rx_parity_bit\, Duplicate of \ProbeUART:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\ProbeUART:BUART:rx_parity_bit\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \ProbeUART:BUART:rx_parity_bit\ (fanout=0)

    Removing \ProbeUART:BUART:rx_address_detected\, Duplicate of \ProbeUART:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\ProbeUART:BUART:rx_address_detected\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \ProbeUART:BUART:rx_address_detected\ (fanout=0)

    Removing \ProbeUART:BUART:rx_parity_error_pre\, Duplicate of \ProbeUART:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\ProbeUART:BUART:rx_parity_error_pre\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \ProbeUART:BUART:rx_parity_error_pre\ (fanout=0)

    Removing \ProbeUART:BUART:rx_markspace_pre\, Duplicate of \ProbeUART:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\ProbeUART:BUART:rx_markspace_pre\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \ProbeUART:BUART:rx_markspace_pre\ (fanout=0)

    Removing \ProbeUART:BUART:rx_state_1\, Duplicate of \ProbeUART:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\ProbeUART:BUART:rx_state_1\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \ProbeUART:BUART:rx_state_1\ (fanout=8)

    Removing \ProbeUART:BUART:tx_parity_bit\, Duplicate of \ProbeUART:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\ProbeUART:BUART:tx_parity_bit\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \ProbeUART:BUART:tx_parity_bit\ (fanout=0)

    Removing \ProbeUART:BUART:tx_mark\, Duplicate of \ProbeUART:BUART:tx_ctrl_mark_last\ 
    MacroCell: Name=\ProbeUART:BUART:tx_mark\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \ProbeUART:BUART:tx_mark\ (fanout=0)

End removing duplicate macrocells: used 1 pass
</CYPRESSTAG>
<CYPRESSTAG name="Design Equations" icon="FILE_RPT_EQUATION">

------------------------------------------------------------
Design Equations
------------------------------------------------------------
    <CYPRESSTAG name="Pin listing">

    ------------------------------------------------------------
    Pin listing
    ------------------------------------------------------------

    Pin : Name = LED(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => LED(0)__PA ,
            pin_input => Net_167 ,
            pad => LED(0)_PAD );

    Pin : Name = LED(1)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => LED(1)__PA ,
            pin_input => Net_213 ,
            pad => LED(1)_PAD );

    Pin : Name = \LCD_Disp:LCDPort(0)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD_Disp:LCDPort(0)\__PA ,
            pad => \LCD_Disp:LCDPort(0)_PAD\ );
        Properties:
        {
        }

    Pin : Name = \LCD_Disp:LCDPort(1)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD_Disp:LCDPort(1)\__PA ,
            pad => \LCD_Disp:LCDPort(1)_PAD\ );
        Properties:
        {
        }

    Pin : Name = \LCD_Disp:LCDPort(2)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD_Disp:LCDPort(2)\__PA ,
            pad => \LCD_Disp:LCDPort(2)_PAD\ );
        Properties:
        {
        }

    Pin : Name = \LCD_Disp:LCDPort(3)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD_Disp:LCDPort(3)\__PA ,
            pad => \LCD_Disp:LCDPort(3)_PAD\ );
        Properties:
        {
        }

    Pin : Name = \LCD_Disp:LCDPort(4)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD_Disp:LCDPort(4)\__PA ,
            pad => \LCD_Disp:LCDPort(4)_PAD\ );
        Properties:
        {
        }

    Pin : Name = \LCD_Disp:LCDPort(5)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD_Disp:LCDPort(5)\__PA ,
            pad => \LCD_Disp:LCDPort(5)_PAD\ );
        Properties:
        {
        }

    Pin : Name = \LCD_Disp:LCDPort(6)\
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => \LCD_Disp:LCDPort(6)\__PA ,
            pad => \LCD_Disp:LCDPort(6)_PAD\ );
        Properties:
        {
        }

    Pin : Name = PB_2(0)
        Attributes:
            In Group/Port: True
            In Sync Option: SYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: RES_PULL_UP
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: True
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => PB_2(0)__PA ,
            pad => PB_2(0)_PAD );
        Properties:
        {
        }

    Pin : Name = ProbeUART_Rx(0)
        Attributes:
            In Group/Port: True
            In Sync Option: SYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_DIGITAL
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => ProbeUART_Rx(0)__PA ,
            fb => Net_227 ,
            pad => ProbeUART_Rx(0)_PAD );

    Pin : Name = ProbeUART_Tx(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => ProbeUART_Tx(0)__PA ,
            pin_input => Net_222 ,
            pad => ProbeUART_Tx(0)_PAD );

    Pin : Name = PB_3(0)
        Attributes:
            In Group/Port: True
            In Sync Option: SYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: RES_PULL_UP
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: True
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => PB_3(0)__PA ,
            pad => PB_3(0)_PAD );
        Properties:
        {
        }

    Pin : Name = se_indut_motor(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: AUTO
            Interrupt generated: True
            Interrupt mode: FALLING
            Drive mode: RES_PULL_DOWN
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, PORT_INTERRUPT
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => se_indut_motor(0)__PA ,
            pad => se_indut_motor(0)_PAD );
        Properties:
        {
        }

    Pin : Name = se_indut_porta(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: AUTO
            Interrupt generated: True
            Interrupt mode: RISING
            Drive mode: RES_PULL_DOWN
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, PORT_INTERRUPT
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => se_indut_porta(0)__PA ,
            pad => se_indut_porta(0)_PAD );
        Properties:
        {
        }

    Pin : Name = bt_liga(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: RES_PULL_DOWN
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => bt_liga(0)__PA ,
            pad => bt_liga(0)_PAD );
        Properties:
        {
        }

    Pin : Name = si_liga(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => si_liga(0)__PA ,
            pad => si_liga(0)_PAD );
        Properties:
        {
        }

    Pin : Name = si_desl(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => si_desl(0)__PA ,
            pad => si_desl(0)_PAD );
        Properties:
        {
        }

    Pin : Name = si_rearme(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => si_rearme(0)__PA ,
            pad => si_rearme(0)_PAD );
        Properties:
        {
        }

    Pin : Name = si_emerg(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => si_emerg(0)__PA ,
            pad => si_emerg(0)_PAD );
        Properties:
        {
        }

    Pin : Name = si_alerta(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => si_alerta(0)__PA ,
            pad => si_alerta(0)_PAD );
        Properties:
        {
        }

    Pin : Name = al_sonoro(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => al_sonoro(0)__PA ,
            pad => al_sonoro(0)_PAD );
        Properties:
        {
        }

    Pin : Name = bt_desl(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: RES_PULL_DOWN
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => bt_desl(0)__PA ,
            pad => bt_desl(0)_PAD );
        Properties:
        {
        }

    Pin : Name = bt_rearme(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: RES_PULL_DOWN
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => bt_rearme(0)__PA ,
            pad => bt_rearme(0)_PAD );
        Properties:
        {
        }

    Pin : Name = bt_emerg(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: AUTO
            Interrupt generated: True
            Interrupt mode: ON_CHANGE
            Drive mode: RES_PULL_DOWN
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, PORT_INTERRUPT
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => bt_emerg(0)__PA ,
            pad => bt_emerg(0)_PAD );
        Properties:
        {
        }

    Pin : Name = se_temp_motor(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => se_temp_motor(0)__PA ,
            analog_term => Net_1630 ,
            pad => se_temp_motor(0)_PAD ,
            pin_input => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_0\ );

    Pin : Name = se_temp_quadro(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: AUTO
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: HI_Z_ANALOG
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: True
            Can contain Digital: False
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: ANALOG
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => se_temp_quadro(0)__PA ,
            analog_term => Net_1631 ,
            pad => se_temp_quadro(0)_PAD ,
            pin_input => \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_1\ );

    Pin : Name = Pin_SV01_VE(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Pin_SV01_VE(0)__PA ,
            annotation => Net_685 ,
            pad => Pin_SV01_VE(0)_PAD );

    Pin : Name = Pin_BP01(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: AUTO
            Interrupt generated: True
            Interrupt mode: RISING
            Drive mode: RES_PULL_UP
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, PORT_INTERRUPT
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => Pin_BP01(0)__PA ,
            annotation => Net_1734 ,
            pad => Pin_BP01(0)_PAD );

    Pin : Name = Pin_SP01_VE(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Pin_SP01_VE(0)__PA ,
            annotation => Net_679 ,
            pad => Pin_SP01_VE(0)_PAD );
        Properties:
        {
        }

    Pin : Name = Pin_SV01_AM(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Pin_SV01_AM(0)__PA ,
            annotation => Net_683 ,
            pad => Pin_SV01_AM(0)_PAD );

    Pin : Name = Pin_SV01_VM(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Pin_SV01_VM(0)__PA ,
            annotation => Net_681 ,
            pad => Pin_SV01_VM(0)_PAD );
        Properties:
        {
        }

    Pin : Name = Pin_SP01_VM(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Pin_SP01_VM(0)__PA ,
            annotation => Net_677 ,
            pad => Pin_SP01_VM(0)_PAD );
        Properties:
        {
        }

    Pin : Name = Pin_SV02_VE(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Pin_SV02_VE(0)__PA ,
            annotation => Net_670 ,
            pad => Pin_SV02_VE(0)_PAD );

    Pin : Name = Pin_BP02(0)
        Attributes:
            In Group/Port: True
            In Sync Option: NOSYNC
            Out Sync Option: AUTO
            Interrupt generated: True
            Interrupt mode: RISING
            Drive mode: RES_PULL_UP
            VTrip: CMOS
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: False
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, PORT_INTERRUPT
            Initial Value: 1
            IO Voltage: 0
        PORT MAP (
            pa_out => Pin_BP02(0)__PA ,
            annotation => Net_1735 ,
            pad => Pin_BP02(0)_PAD );

    Pin : Name = Pin_SP02_VE(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Pin_SP02_VE(0)__PA ,
            annotation => Net_664 ,
            pad => Pin_SP02_VE(0)_PAD );

    Pin : Name = Pin_SV02_AM(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Pin_SV02_AM(0)__PA ,
            annotation => Net_668 ,
            pad => Pin_SV02_AM(0)_PAD );

    Pin : Name = Pin_SV02_VM(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Pin_SV02_VM(0)__PA ,
            annotation => Net_666 ,
            pad => Pin_SV02_VM(0)_PAD );

    Pin : Name = Pin_SP02_VM(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => Pin_SP02_VM(0)__PA ,
            annotation => Net_662 ,
            pad => Pin_SP02_VM(0)_PAD );

    Pin : Name = ct_motor(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => ct_motor(0)__PA ,
            pad => ct_motor(0)_PAD );

    Pin : Name = EOC(0)
        Attributes:
            In Group/Port: True
            In Sync Option: AUTO
            Out Sync Option: NOSYNC
            Interrupt generated: False
            Interrupt mode: NONE
            Drive mode: CMOS_OUT
            VTrip: EITHER
            Slew: FAST
            Input Sync needed: False
            Output Sync needed: False
            SC shield enabled: False
            POR State: ANY
            LCD Mode: COMMON
            Register Mode: RegComb
            CaSense Mode: NEITHER
            Treat as pin: True
            Is OE Registered: False
            Uses Analog: False
            Can contain Digital: True
            Is SIO: False
            SIO Output Buf: NONREGULATED
            SIO Input Buf: SINGLE_ENDED
            SIO HiFreq: LOW
            SIO Hyst: DISABLED
            SIO Vtrip: MULTIPLIER_0_5
            SIO Multiplier Index: 0
            SIO RefSel: VCC_IO
            Required Capabilities: DIGITAL, ROUTABLE
            Initial Value: 0
            IO Voltage: 0
        PORT MAP (
            pa_out => EOC(0)__PA ,
            pin_input => Net_1629 ,
            pad => EOC(0)_PAD );
    </CYPRESSTAG>
    <CYPRESSTAG name="Macrocell listing" icon="FILE_RPT_EQUATION">

    ------------------------------------------------------------
    Macrocell listing
    ------------------------------------------------------------

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_is_active_split\, Mode=(Combinatorial)
        Total # of inputs        : 12
        Total # of product terms : 8
            Clock Enable: True
        Main Equation            : 8 pterms
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:ch_addr_5\
            + \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:ch_addr_4\
            + \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:ch_addr_3\
            + \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:ch_addr_2\
            + !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:ch_addr_1\
            + \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:ch_addr_1\
            + !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ * 
              \ADC_SAR_Seq:ch_addr_0\
            + \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ * 
              !\ADC_SAR_Seq:ch_addr_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active_split\ (fanout=1)

    MacroCell: Name=Net_222, Mode=(Combinatorial)
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\ProbeUART:BUART:txn\
        );
        Output = Net_222 (fanout=1)

    MacroCell: Name=\ProbeUART:BUART:counter_load_not\, Mode=(Combinatorial)
        Total # of inputs        : 4
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\ProbeUART:BUART:tx_state_1\ * !\ProbeUART:BUART:tx_state_0\ * 
              \ProbeUART:BUART:tx_bitclk_enable_pre\
            + !\ProbeUART:BUART:tx_state_1\ * !\ProbeUART:BUART:tx_state_0\ * 
              !\ProbeUART:BUART:tx_state_2\
        );
        Output = \ProbeUART:BUART:counter_load_not\ (fanout=1)

    MacroCell: Name=\ProbeUART:BUART:tx_status_0\, Mode=(Combinatorial)
        Total # of inputs        : 5
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\ProbeUART:BUART:tx_state_1\ * !\ProbeUART:BUART:tx_state_0\ * 
              \ProbeUART:BUART:tx_bitclk_enable_pre\ * 
              \ProbeUART:BUART:tx_fifo_empty\ * \ProbeUART:BUART:tx_state_2\
        );
        Output = \ProbeUART:BUART:tx_status_0\ (fanout=1)

    MacroCell: Name=\ProbeUART:BUART:tx_status_2\, Mode=(Combinatorial)
        Total # of inputs        : 1
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\ProbeUART:BUART:tx_fifo_notfull\
        );
        Output = \ProbeUART:BUART:tx_status_2\ (fanout=1)

    MacroCell: Name=\ProbeUART:BUART:rx_counter_load\, Mode=(Combinatorial)
        Total # of inputs        : 4
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              !\ProbeUART:BUART:rx_state_0\ * !\ProbeUART:BUART:rx_state_3\ * 
              !\ProbeUART:BUART:rx_state_2\
        );
        Output = \ProbeUART:BUART:rx_counter_load\ (fanout=1)

    MacroCell: Name=\ProbeUART:BUART:rx_postpoll\, Mode=(Combinatorial)
        Total # of inputs        : 3
        Total # of product terms : 2
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \ProbeUART:BUART:pollcount_1\
            + \ProbeUART:BUART:pollcount_0\ * Net_227_SYNCOUT
        );
        Output = \ProbeUART:BUART:rx_postpoll\ (fanout=1)

    MacroCell: Name=\ProbeUART:BUART:rx_status_4\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ProbeUART:BUART:rx_load_fifo\ * \ProbeUART:BUART:rx_fifofull\
        );
        Output = \ProbeUART:BUART:rx_status_4\ (fanout=1)

    MacroCell: Name=\ProbeUART:BUART:rx_status_5\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ProbeUART:BUART:rx_fifonotempty\ * 
              \ProbeUART:BUART:rx_state_stop1_reg\
        );
        Output = \ProbeUART:BUART:rx_status_5\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\, Mode=(Combinatorial)
        Total # of inputs        : 9
        Total # of product terms : 5
            Clock Enable: True
        Main Equation            : 5 pterms
        !(
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:ch_addr_5\
            + !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:ch_addr_4\
            + !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:ch_addr_3\
            + !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:ch_addr_2\
            + \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active_split\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ (fanout=64)
        Properties               : 
        {
            soft = 1
        }

    MacroCell: Name=\ADC_SAR_Seq:bSAR_SEQ:cnt_enable\, Mode=(Combinatorial)
        Total # of inputs        : 2
        Total # of product terms : 1
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !Net_1628 * !\ADC_SAR_Seq:bSAR_SEQ:load_period\
        );
        Output = \ADC_SAR_Seq:bSAR_SEQ:cnt_enable\ (fanout=1)

    MacroCell: Name=\ProbeUART:BUART:txn\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              \ProbeUART:BUART:txn\ * \ProbeUART:BUART:tx_state_1\ * 
              !\ProbeUART:BUART:tx_bitclk\
            + \ProbeUART:BUART:txn\ * \ProbeUART:BUART:tx_state_2\
            + !\ProbeUART:BUART:tx_state_1\ * \ProbeUART:BUART:tx_state_0\ * 
              !\ProbeUART:BUART:tx_shift_out\ * !\ProbeUART:BUART:tx_state_2\
            + !\ProbeUART:BUART:tx_state_1\ * \ProbeUART:BUART:tx_state_0\ * 
              !\ProbeUART:BUART:tx_state_2\ * !\ProbeUART:BUART:tx_bitclk\
            + \ProbeUART:BUART:tx_state_1\ * !\ProbeUART:BUART:tx_state_0\ * 
              !\ProbeUART:BUART:tx_shift_out\ * !\ProbeUART:BUART:tx_state_2\ * 
              !\ProbeUART:BUART:tx_counter_dp\ * \ProbeUART:BUART:tx_bitclk\
        );
        Output = \ProbeUART:BUART:txn\ (fanout=2)

    MacroCell: Name=\ProbeUART:BUART:tx_state_1\, Mode=(T-Register)
        Total # of inputs        : 6
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              \ProbeUART:BUART:tx_state_1\ * \ProbeUART:BUART:tx_state_0\ * 
              \ProbeUART:BUART:tx_bitclk_enable_pre\ * 
              \ProbeUART:BUART:tx_state_2\
            + \ProbeUART:BUART:tx_state_1\ * !\ProbeUART:BUART:tx_state_2\ * 
              \ProbeUART:BUART:tx_counter_dp\ * \ProbeUART:BUART:tx_bitclk\
            + \ProbeUART:BUART:tx_state_0\ * !\ProbeUART:BUART:tx_state_2\ * 
              \ProbeUART:BUART:tx_bitclk\
        );
        Output = \ProbeUART:BUART:tx_state_1\ (fanout=8)

    MacroCell: Name=\ProbeUART:BUART:tx_state_0\, Mode=(T-Register)
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\ProbeUART:BUART:tx_state_1\ * !\ProbeUART:BUART:tx_state_0\ * 
              \ProbeUART:BUART:tx_bitclk_enable_pre\ * 
              !\ProbeUART:BUART:tx_fifo_empty\
            + !\ProbeUART:BUART:tx_state_1\ * !\ProbeUART:BUART:tx_state_0\ * 
              !\ProbeUART:BUART:tx_fifo_empty\ * 
              !\ProbeUART:BUART:tx_state_2\
            + \ProbeUART:BUART:tx_state_1\ * \ProbeUART:BUART:tx_state_0\ * 
              \ProbeUART:BUART:tx_bitclk_enable_pre\ * 
              \ProbeUART:BUART:tx_fifo_empty\ * \ProbeUART:BUART:tx_state_2\
            + \ProbeUART:BUART:tx_state_0\ * !\ProbeUART:BUART:tx_state_2\ * 
              \ProbeUART:BUART:tx_bitclk\
        );
        Output = \ProbeUART:BUART:tx_state_0\ (fanout=8)

    MacroCell: Name=\ProbeUART:BUART:tx_state_2\, Mode=(T-Register)
        Total # of inputs        : 6
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\ProbeUART:BUART:tx_state_1\ * !\ProbeUART:BUART:tx_state_0\ * 
              \ProbeUART:BUART:tx_bitclk_enable_pre\ * 
              \ProbeUART:BUART:tx_state_2\
            + \ProbeUART:BUART:tx_state_1\ * \ProbeUART:BUART:tx_state_0\ * 
              \ProbeUART:BUART:tx_bitclk_enable_pre\ * 
              \ProbeUART:BUART:tx_state_2\
            + \ProbeUART:BUART:tx_state_1\ * \ProbeUART:BUART:tx_state_0\ * 
              !\ProbeUART:BUART:tx_state_2\ * \ProbeUART:BUART:tx_bitclk\
            + \ProbeUART:BUART:tx_state_1\ * !\ProbeUART:BUART:tx_state_2\ * 
              \ProbeUART:BUART:tx_counter_dp\ * \ProbeUART:BUART:tx_bitclk\
        );
        Output = \ProbeUART:BUART:tx_state_2\ (fanout=7)

    MacroCell: Name=\ProbeUART:BUART:tx_bitclk\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        !(
              !\ProbeUART:BUART:tx_state_1\ * !\ProbeUART:BUART:tx_state_0\ * 
              \ProbeUART:BUART:tx_state_2\
            + !\ProbeUART:BUART:tx_bitclk_enable_pre\
        );
        Output = \ProbeUART:BUART:tx_bitclk\ (fanout=4)

    MacroCell: Name=\ProbeUART:BUART:tx_ctrl_mark_last\, Mode=(T-Register)
        Total # of inputs        : 0
        Total # of product terms : 0
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 0 pterms
        (
            0
        );
        Output = \ProbeUART:BUART:tx_ctrl_mark_last\ (fanout=8)

    MacroCell: Name=\ProbeUART:BUART:rx_state_0\, Mode=(T-Register)
        Total # of inputs        : 11
        Total # of product terms : 4
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 4 pterms
        (
              !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              !\ProbeUART:BUART:rx_state_0\ * 
              \ProbeUART:BUART:rx_bitclk_enable\ * 
              !\ProbeUART:BUART:rx_state_3\ * \ProbeUART:BUART:rx_state_2\ * 
              !\ProbeUART:BUART:pollcount_1\ * !\ProbeUART:BUART:pollcount_0\
            + !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              !\ProbeUART:BUART:rx_state_0\ * 
              \ProbeUART:BUART:rx_bitclk_enable\ * 
              !\ProbeUART:BUART:rx_state_3\ * \ProbeUART:BUART:rx_state_2\ * 
              !\ProbeUART:BUART:pollcount_1\ * !Net_227_SYNCOUT
            + !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              \ProbeUART:BUART:rx_state_0\ * !\ProbeUART:BUART:rx_state_3\ * 
              !\ProbeUART:BUART:rx_state_2\ * !\ProbeUART:BUART:rx_count_6\ * 
              !\ProbeUART:BUART:rx_count_5\
            + !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              \ProbeUART:BUART:rx_state_0\ * !\ProbeUART:BUART:rx_state_3\ * 
              !\ProbeUART:BUART:rx_state_2\ * !\ProbeUART:BUART:rx_count_6\ * 
              !\ProbeUART:BUART:rx_count_4\
        );
        Output = \ProbeUART:BUART:rx_state_0\ (fanout=8)

    MacroCell: Name=\ProbeUART:BUART:rx_load_fifo\, Mode=(D-Register)
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              !\ProbeUART:BUART:rx_state_0\ * 
              \ProbeUART:BUART:rx_bitclk_enable\ * 
              \ProbeUART:BUART:rx_state_3\ * !\ProbeUART:BUART:rx_state_2\
            + !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              \ProbeUART:BUART:rx_state_0\ * !\ProbeUART:BUART:rx_state_3\ * 
              !\ProbeUART:BUART:rx_state_2\ * !\ProbeUART:BUART:rx_count_6\ * 
              !\ProbeUART:BUART:rx_count_5\
            + !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              \ProbeUART:BUART:rx_state_0\ * !\ProbeUART:BUART:rx_state_3\ * 
              !\ProbeUART:BUART:rx_state_2\ * !\ProbeUART:BUART:rx_count_6\ * 
              !\ProbeUART:BUART:rx_count_4\
        );
        Output = \ProbeUART:BUART:rx_load_fifo\ (fanout=2)

    MacroCell: Name=\ProbeUART:BUART:rx_state_3\, Mode=(T-Register)
        Total # of inputs        : 8
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              !\ProbeUART:BUART:rx_state_0\ * 
              \ProbeUART:BUART:rx_bitclk_enable\ * 
              \ProbeUART:BUART:rx_state_3\ * \ProbeUART:BUART:rx_state_2\
            + !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              \ProbeUART:BUART:rx_state_0\ * !\ProbeUART:BUART:rx_state_3\ * 
              !\ProbeUART:BUART:rx_state_2\ * !\ProbeUART:BUART:rx_count_6\ * 
              !\ProbeUART:BUART:rx_count_5\
            + !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              \ProbeUART:BUART:rx_state_0\ * !\ProbeUART:BUART:rx_state_3\ * 
              !\ProbeUART:BUART:rx_state_2\ * !\ProbeUART:BUART:rx_count_6\ * 
              !\ProbeUART:BUART:rx_count_4\
        );
        Output = \ProbeUART:BUART:rx_state_3\ (fanout=7)

    MacroCell: Name=\ProbeUART:BUART:rx_state_2\, Mode=(T-Register)
        Total # of inputs        : 10
        Total # of product terms : 5
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 5 pterms
        (
              !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              !\ProbeUART:BUART:rx_state_0\ * 
              \ProbeUART:BUART:rx_bitclk_enable\ * 
              \ProbeUART:BUART:rx_state_3\
            + !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              !\ProbeUART:BUART:rx_state_0\ * 
              \ProbeUART:BUART:rx_bitclk_enable\ * 
              \ProbeUART:BUART:rx_state_2\
            + !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              !\ProbeUART:BUART:rx_state_0\ * !\ProbeUART:BUART:rx_state_3\ * 
              !\ProbeUART:BUART:rx_state_2\ * \ProbeUART:BUART:rx_last\ * 
              !Net_227_SYNCOUT
            + !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              \ProbeUART:BUART:rx_state_0\ * !\ProbeUART:BUART:rx_state_3\ * 
              !\ProbeUART:BUART:rx_state_2\ * !\ProbeUART:BUART:rx_count_6\ * 
              !\ProbeUART:BUART:rx_count_5\
            + !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              \ProbeUART:BUART:rx_state_0\ * !\ProbeUART:BUART:rx_state_3\ * 
              !\ProbeUART:BUART:rx_state_2\ * !\ProbeUART:BUART:rx_count_6\ * 
              !\ProbeUART:BUART:rx_count_4\
        );
        Output = \ProbeUART:BUART:rx_state_2\ (fanout=7)

    MacroCell: Name=\ProbeUART:BUART:rx_bitclk_enable\, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              !\ProbeUART:BUART:rx_count_2\ * !\ProbeUART:BUART:rx_count_1\ * 
              !\ProbeUART:BUART:rx_count_0\
        );
        Output = \ProbeUART:BUART:rx_bitclk_enable\ (fanout=6)

    MacroCell: Name=\ProbeUART:BUART:rx_state_stop1_reg\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        !(
              !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              !\ProbeUART:BUART:rx_state_0\ * \ProbeUART:BUART:rx_state_3\ * 
              \ProbeUART:BUART:rx_state_2\
        );
        Output = \ProbeUART:BUART:rx_state_stop1_reg\ (fanout=1)

    MacroCell: Name=\ProbeUART:BUART:pollcount_1\, Mode=(D-Register)
        Total # of inputs        : 5
        Total # of product terms : 3
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 3 pterms
        (
              !\ProbeUART:BUART:rx_count_2\ * !\ProbeUART:BUART:rx_count_1\ * 
              !\ProbeUART:BUART:pollcount_1\ * \ProbeUART:BUART:pollcount_0\ * 
              Net_227_SYNCOUT
            + !\ProbeUART:BUART:rx_count_2\ * !\ProbeUART:BUART:rx_count_1\ * 
              \ProbeUART:BUART:pollcount_1\ * !\ProbeUART:BUART:pollcount_0\
            + !\ProbeUART:BUART:rx_count_2\ * !\ProbeUART:BUART:rx_count_1\ * 
              \ProbeUART:BUART:pollcount_1\ * !Net_227_SYNCOUT
        );
        Output = \ProbeUART:BUART:pollcount_1\ (fanout=4)

    MacroCell: Name=\ProbeUART:BUART:pollcount_0\, Mode=(D-Register)
        Total # of inputs        : 4
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\ProbeUART:BUART:rx_count_2\ * !\ProbeUART:BUART:rx_count_1\ * 
              !\ProbeUART:BUART:pollcount_0\ * Net_227_SYNCOUT
            + !\ProbeUART:BUART:rx_count_2\ * !\ProbeUART:BUART:rx_count_1\ * 
              \ProbeUART:BUART:pollcount_0\ * !Net_227_SYNCOUT
        );
        Output = \ProbeUART:BUART:pollcount_0\ (fanout=5)

    MacroCell: Name=\ProbeUART:BUART:rx_status_3\, Mode=(D-Register)
        Total # of inputs        : 8
        Total # of product terms : 2
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              !\ProbeUART:BUART:rx_state_0\ * 
              \ProbeUART:BUART:rx_bitclk_enable\ * 
              \ProbeUART:BUART:rx_state_3\ * \ProbeUART:BUART:rx_state_2\ * 
              !\ProbeUART:BUART:pollcount_1\ * !\ProbeUART:BUART:pollcount_0\
            + !\ProbeUART:BUART:tx_ctrl_mark_last\ * 
              !\ProbeUART:BUART:rx_state_0\ * 
              \ProbeUART:BUART:rx_bitclk_enable\ * 
              \ProbeUART:BUART:rx_state_3\ * \ProbeUART:BUART:rx_state_2\ * 
              !\ProbeUART:BUART:pollcount_1\ * !Net_227_SYNCOUT
        );
        Output = \ProbeUART:BUART:rx_status_3\ (fanout=1)

    MacroCell: Name=\ProbeUART:BUART:rx_last\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ProbeUART:Net_9\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              Net_227_SYNCOUT
        );
        Output = \ProbeUART:BUART:rx_last\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:ch_addr_5\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ (fanout=66)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:ch_addr_4\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ (fanout=66)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:ch_addr_3\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ (fanout=66)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:ch_addr_2\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ (fanout=66)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:ch_addr_1\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ (fanout=65)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:ch_addr_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\ (fanout=65)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_0\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_0\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_1\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_1\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_2\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_2\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_3\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_3\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_4\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_4\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_5\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_5\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_6\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_6\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_7\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_7\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_8\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_8\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_9\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_9\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_10\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_10\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_11\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_11\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_12\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_12\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_13\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_13\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_14\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_14\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_15\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_15\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_16\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_16\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_17\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_17\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_18\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_18\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_19\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_19\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_20\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_20\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_21\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_21\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_22\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_22\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_23\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_23\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_24\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_24\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_25\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_25\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_26\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_26\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_27\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_27\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_28\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_28\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_29\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_29\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_30\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_30\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_31\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_31\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_32\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_32\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_33\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_33\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_34\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_34\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_35\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_35\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_36\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_36\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_37\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_37\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_38\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_38\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_39\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_39\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_40\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_40\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_41\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_41\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_42\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_42\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_43\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_43\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_44\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_44\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_45\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_45\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_46\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_46\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_47\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_47\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_48\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_48\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_49\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_49\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_50\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_50\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_51\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_51\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_52\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_52\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_53\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_53\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_54\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_54\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_55\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_55\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_56\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_56\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_57\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_57\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_58\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_58\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_59\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_59\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_60\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_60\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_61\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_61\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_62\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              !\ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_62\ (fanout=1)

    MacroCell: Name=\ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_63\, Mode=(D-Register)
        Total # of inputs        : 7
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: True
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:AMuxHw_2_Decoder_is_active\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_5\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_4\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_3\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_2\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_1\ * 
              \ADC_SAR_Seq:AMuxHw_2_Decoder_old_id_0\
        );
        Output = \ADC_SAR_Seq:AMuxHw_2_Decoder_one_hot_63\ (fanout=1)

    MacroCell: Name=Net_1629, Mode=(D-Register)
        Total # of inputs        : 2
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: PosEdge(\ADC_SAR_Seq:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:bSAR_SEQ:bus_clk_nrq_reg\ * 
              !\ADC_SAR_Seq:bSAR_SEQ:nrq_reg\
        );
        Output = Net_1629 (fanout=4)

    MacroCell: Name=\ADC_SAR_Seq:bSAR_SEQ:bus_clk_nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 3
        Total # of product terms : 2
        List of special equations: 
            Clock  = (ClockBlock_BUS_CLK) => Global
            Clock Enable: True
        Main Equation            : 2 pterms
        (
              \ADC_SAR_Seq:bSAR_SEQ:bus_clk_nrq_reg\ * !Net_1629
            + \ADC_SAR_Seq:Net_3935\
        );
        Output = \ADC_SAR_Seq:bSAR_SEQ:bus_clk_nrq_reg\ (fanout=3)

    MacroCell: Name=\ADC_SAR_Seq:bSAR_SEQ:nrq_reg\, Mode=(D-Register)
        Total # of inputs        : 1
        Total # of product terms : 1
        List of special equations: 
            Clock  = (\ADC_SAR_Seq:clock\) => Global
            Clock Enable: PosEdge(\ADC_SAR_Seq:bSAR_SEQ:enable\)
        Main Equation            : 1 pterm
        (
              \ADC_SAR_Seq:bSAR_SEQ:bus_clk_nrq_reg\
        );
        Output = \ADC_SAR_Seq:bSAR_SEQ:nrq_reg\ (fanout=1)
    </CYPRESSTAG>
    <CYPRESSTAG name="Datapath listing">

    ------------------------------------------------------------
    Datapath listing
    ------------------------------------------------------------

    datapathcell: Name =\ProbeUART:BUART:sTX:TxShifter:u0\
        PORT MAP (
            clock => \ProbeUART:Net_9\ ,
            cs_addr_2 => \ProbeUART:BUART:tx_state_1\ ,
            cs_addr_1 => \ProbeUART:BUART:tx_state_0\ ,
            cs_addr_0 => \ProbeUART:BUART:tx_bitclk_enable_pre\ ,
            so_comb => \ProbeUART:BUART:tx_shift_out\ ,
            f0_bus_stat_comb => \ProbeUART:BUART:tx_fifo_notfull\ ,
            f0_blk_stat_comb => \ProbeUART:BUART:tx_fifo_empty\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000000000000000000000000000000000000000000000000000011000000000000000000000000000010010000000000000000000000000000000000000011111111000000001111111111111111000000000000000001000100111100000000000000001100"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    datapathcell: Name =\ProbeUART:BUART:sTX:sCLOCK:TxBitClkGen\
        PORT MAP (
            clock => \ProbeUART:Net_9\ ,
            cs_addr_0 => \ProbeUART:BUART:counter_load_not\ ,
            ce0_reg => \ProbeUART:BUART:tx_bitclk_enable_pre\ ,
            ce1_reg => \ProbeUART:BUART:tx_counter_dp\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "1010100001000000001000000100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000011111111000000001111111100000111001000000100000000000101111100000000000000001000"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    datapathcell: Name =\ProbeUART:BUART:sRX:RxShifter:u0\
        PORT MAP (
            clock => \ProbeUART:Net_9\ ,
            cs_addr_2 => \ProbeUART:BUART:tx_ctrl_mark_last\ ,
            cs_addr_1 => \ProbeUART:BUART:rx_state_0\ ,
            cs_addr_0 => \ProbeUART:BUART:rx_bitclk_enable\ ,
            route_si => \ProbeUART:BUART:rx_postpoll\ ,
            f0_load => \ProbeUART:BUART:rx_load_fifo\ ,
            f0_bus_stat_comb => \ProbeUART:BUART:rx_fifonotempty\ ,
            f0_blk_stat_comb => \ProbeUART:BUART:rx_fifofull\ );
        Properties:
        {
            a0_init = "00000000"
            a1_init = "00000000"
            ce0_sync = 1
            ce1_sync = 1
            cl0_sync = 1
            cl1_sync = 1
            cmsb_sync = 1
            co_msb_sync = 1
            cy_dpconfig = "0000000000000000000000000000000000000000000000000000001001000000000100000000000000010000001100000001000000000000000100100001000011111111000000001111111111111111101000000110001001000001111100000000000000001100"
            d0_init = "00000000"
            d1_init = "00000000"
            f0_blk_sync = 1
            f0_bus_sync = 1
            f1_blk_sync = 1
            f1_bus_sync = 1
            ff0_sync = 1
            ff1_sync = 1
            ov_msb_sync = 1
            so_sync = 1
            z0_sync = 1
            z1_sync = 1
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Status register listing">

    ------------------------------------------------------------
    Status register listing
    ------------------------------------------------------------

    statuscell: Name =\ADC_SAR_Seq:bSAR_SEQ:EOCSts\
        PORT MAP (
            clock => \ADC_SAR_Seq:clock\ ,
            status_0 => Net_1629 ,
            clk_en => \ADC_SAR_Seq:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_force_order = 1
            cy_md_select = "00000001"
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\ADC_SAR_Seq:bSAR_SEQ:enable\)
    </CYPRESSTAG>
    <CYPRESSTAG name="StatusI register listing">

    ------------------------------------------------------------
    StatusI register listing
    ------------------------------------------------------------

    statusicell: Name =\ProbeUART:BUART:sTX:TxSts\
        PORT MAP (
            clock => \ProbeUART:Net_9\ ,
            status_3 => \ProbeUART:BUART:tx_fifo_notfull\ ,
            status_2 => \ProbeUART:BUART:tx_status_2\ ,
            status_1 => \ProbeUART:BUART:tx_fifo_empty\ ,
            status_0 => \ProbeUART:BUART:tx_status_0\ ,
            interrupt => Net_239 );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "0000001"
        }
        Clock Polarity: Active High
        Clock Enable: True

    statusicell: Name =\ProbeUART:BUART:sRX:RxSts\
        PORT MAP (
            clock => \ProbeUART:Net_9\ ,
            status_5 => \ProbeUART:BUART:rx_status_5\ ,
            status_4 => \ProbeUART:BUART:rx_status_4\ ,
            status_3 => \ProbeUART:BUART:rx_status_3\ ,
            interrupt => Net_240 );
        Properties:
        {
            cy_force_order = 1
            cy_int_mask = "1111111"
            cy_md_select = "1011111"
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Sync listing">

    ------------------------------------------------------------
    Sync listing
    ------------------------------------------------------------

    synccell: Name =\ADC_SAR_Seq:Sync:genblk1[0]:INST\
        PORT MAP (
            clock => ClockBlock_BUS_CLK ,
            in => \ADC_SAR_Seq:nrq\ ,
            out => \ADC_SAR_Seq:Net_3935\ );
        Clock Polarity: Active High
        Clock Enable: True

    synccell: Name =ProbeUART_Rx(0)_SYNC
        PORT MAP (
            in => Net_227 ,
            out => Net_227_SYNCOUT ,
            clock => ClockBlock_BUS_CLK );
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Control register listing">

    ------------------------------------------------------------
    Control register listing
    ------------------------------------------------------------

    controlcell: Name =\LED_Status:Sync:ctrl_reg\
        PORT MAP (
            control_7 => \LED_Status:control_7\ ,
            control_6 => \LED_Status:control_6\ ,
            control_5 => \LED_Status:control_5\ ,
            control_4 => \LED_Status:control_4\ ,
            control_3 => \LED_Status:control_3\ ,
            control_2 => \LED_Status:control_2\ ,
            control_1 => Net_213 ,
            control_0 => Net_167 );
        Properties:
        {
            cy_ctrl_mode_0 = "00000000"
            cy_ctrl_mode_1 = "00000000"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Enable: True

    controlcell: Name =\ADC_SAR_Seq:bSAR_SEQ:CtrlReg\
        PORT MAP (
            clock => \ADC_SAR_Seq:clock\ ,
            control_7 => \ADC_SAR_Seq:bSAR_SEQ:control_7\ ,
            control_6 => \ADC_SAR_Seq:bSAR_SEQ:control_6\ ,
            control_5 => \ADC_SAR_Seq:bSAR_SEQ:control_5\ ,
            control_4 => \ADC_SAR_Seq:bSAR_SEQ:control_4\ ,
            control_3 => \ADC_SAR_Seq:bSAR_SEQ:control_3\ ,
            control_2 => \ADC_SAR_Seq:bSAR_SEQ:control_2\ ,
            control_1 => \ADC_SAR_Seq:bSAR_SEQ:load_period\ ,
            control_0 => \ADC_SAR_Seq:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_ctrl_mode_0 = "00000111"
            cy_ctrl_mode_1 = "00000110"
            cy_ext_reset = 0
            cy_force_order = 1
            cy_init_value = "00000000"
        }
        Clock Polarity: Active High
        Clock Enable: True
    </CYPRESSTAG>
    <CYPRESSTAG name="Count7 listing">

    ------------------------------------------------------------
    Count7 listing
    ------------------------------------------------------------

    count7cell: Name =\ProbeUART:BUART:sRX:RxBitCounter\
        PORT MAP (
            clock => \ProbeUART:Net_9\ ,
            load => \ProbeUART:BUART:rx_counter_load\ ,
            count_6 => \ProbeUART:BUART:rx_count_6\ ,
            count_5 => \ProbeUART:BUART:rx_count_5\ ,
            count_4 => \ProbeUART:BUART:rx_count_4\ ,
            count_3 => \ProbeUART:BUART:rx_count_3\ ,
            count_2 => \ProbeUART:BUART:rx_count_2\ ,
            count_1 => \ProbeUART:BUART:rx_count_1\ ,
            count_0 => \ProbeUART:BUART:rx_count_0\ ,
            tc => \ProbeUART:BUART:rx_count7_tc\ );
        Properties:
        {
            cy_alt_mode = 0
            cy_init_value = "0000000"
            cy_period = "1110010"
            cy_route_en = 1
            cy_route_ld = 1
        }
        Clock Polarity: Active High
        Clock Enable: True

    count7cell: Name =\ADC_SAR_Seq:bSAR_SEQ:ChannelCounter\
        PORT MAP (
            clock => \ADC_SAR_Seq:clock\ ,
            load => \ADC_SAR_Seq:bSAR_SEQ:load_period\ ,
            enable => \ADC_SAR_Seq:bSAR_SEQ:cnt_enable\ ,
            count_6 => \ADC_SAR_Seq:bSAR_SEQ:count_6\ ,
            count_5 => \ADC_SAR_Seq:ch_addr_5\ ,
            count_4 => \ADC_SAR_Seq:ch_addr_4\ ,
            count_3 => \ADC_SAR_Seq:ch_addr_3\ ,
            count_2 => \ADC_SAR_Seq:ch_addr_2\ ,
            count_1 => \ADC_SAR_Seq:ch_addr_1\ ,
            count_0 => \ADC_SAR_Seq:ch_addr_0\ ,
            tc => \ADC_SAR_Seq:bSAR_SEQ:cnt_tc\ ,
            clk_en => \ADC_SAR_Seq:bSAR_SEQ:enable\ );
        Properties:
        {
            cy_alt_mode = 0
            cy_init_value = "0000000"
            cy_period = "0000001"
            cy_route_en = 1
            cy_route_ld = 1
        }
        Clock Polarity: Active High
        Clock Enable: PosEdge(\ADC_SAR_Seq:bSAR_SEQ:enable\)
    </CYPRESSTAG>
    <CYPRESSTAG name="DRQ listing">

    ------------------------------------------------------------
    DRQ listing
    ------------------------------------------------------------

    drqcell: Name =\ADC_SAR_Seq:TempBuf\
        PORT MAP (
            dmareq => \ADC_SAR_Seq:Net_3830\ ,
            termin => zero ,
            termout => \ADC_SAR_Seq:Net_3698\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }

    drqcell: Name =\ADC_SAR_Seq:FinalBuf\
        PORT MAP (
            dmareq => \ADC_SAR_Seq:Net_3698\ ,
            termin => zero ,
            termout => \ADC_SAR_Seq:nrq\ );
        Properties:
        {
            drq_type = "00"
            num_tds = 0
        }
    </CYPRESSTAG>
    <CYPRESSTAG name="Interrupt listing">

    ------------------------------------------------------------
    Interrupt listing
    ------------------------------------------------------------

    interrupt: Name =ProbeUART_TxISR
        PORT MAP (
            interrupt => Net_239 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =ProbeUART_RxISR
        PORT MAP (
            interrupt => Net_240 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =bt_emerg_int
        PORT MAP (
            interrupt => Net_1748 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =\ADC_SAR_Seq:IRQ\
        PORT MAP (
            interrupt => Net_1629 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =se_indut_porta_int
        PORT MAP (
            interrupt => Net_1732 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =se_indut_motor_int
        PORT MAP (
            interrupt => Net_1733 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =Pin_BP01_int
        PORT MAP (
            interrupt => Net_6 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }

    interrupt: Name =Pin_BP02_int
        PORT MAP (
            interrupt => Net_266 );
        Properties:
        {
            int_type = "10"
            is_nmi = 0
        }
    </CYPRESSTAG>
</CYPRESSTAG>
<CYPRESSTAG name="Technology mapping summary" expanded>

------------------------------------------------------------
Technology mapping summary
------------------------------------------------------------

Resource Type                 : Used : Free :  Max :  % Used
============================================================
Digital Clocks                :    2 :    6 :    8 : 25.00 %
Analog Clocks                 :    0 :    4 :    4 :  0.00 %
CapSense Buffers              :    0 :    2 :    2 :  0.00 %
Digital Filter Block          :    0 :    1 :    1 :  0.00 %
Interrupts                    :    8 :   24 :   32 : 25.00 %
IO                            :   44 :   28 :   72 : 61.11 %
Segment LCD                   :    0 :    1 :    1 :  0.00 %
I2C                           :    0 :    1 :    1 :  0.00 %
USB                           :    0 :    1 :    1 :  0.00 %
DMA Channels                  :    2 :   22 :   24 :  8.33 %
Timer                         :    0 :    4 :    4 :  0.00 %
UDB                           :      :      :      :        
  Macrocells                  :  100 :   92 :  192 : 52.08 %
  Unique P-terms              :  132 :  252 :  384 : 34.38 %
  Total P-terms               :  141 :      :      :        
  Datapath Cells              :    3 :   21 :   24 : 12.50 %
  Status Cells                :    6 :   18 :   24 : 25.00 %
    Status Registers          :    1 :      :      :        
    StatusI Registers         :    2 :      :      :        
    Sync Cells (x2)           :    1 :      :      :        
    Routed Count7 Load/Enable :    2 :      :      :        
  Control Cells               :    4 :   20 :   24 : 16.67 %
    Control Registers         :    2 :      :      :        
    Count7 Cells              :    2 :      :      :        
Opamp                         :    0 :    4 :    4 :  0.00 %
Comparator                    :    0 :    4 :    4 :  0.00 %
Delta-Sigma ADC               :    0 :    1 :    1 :  0.00 %
LPF                           :    0 :    2 :    2 :  0.00 %
SAR ADC                       :    1 :    1 :    2 : 50.00 %
Analog (SC/CT) Blocks         :    0 :    4 :    4 :  0.00 %
DAC                           :      :      :      :        
  VIDAC                       :    0 :    4 :    4 :  0.00 %
</CYPRESSTAG>
Technology Mapping: Elapsed time ==> 0s.316ms
Tech Mapping phase: Elapsed time ==> 0s.399ms
</CYPRESSTAG>
<CYPRESSTAG name="Analog Placement">
Info: apr.M0002: Analog signal "Net_1633" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1634" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1636" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1638" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1639" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1641" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1643" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1644" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1646" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1648" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1649" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1651" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1653" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1654" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1656" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1658" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1659" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1661" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1663" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1664" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1666" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1668" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1669" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1671" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1673" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1674" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1676" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1678" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1679" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1681" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1683" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1684" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1686" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1688" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1689" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1691" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1693" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1694" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1696" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1698" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1699" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1701" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1703" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1704" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1706" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1708" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1709" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1710" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1711" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1712" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1713" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1714" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1715" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1716" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1717" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1718" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1719" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1720" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1721" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1722" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1723" is connected to one terminal only. (App=cydsfit)
Info: apr.M0002: Analog signal "Net_1724" is connected to one terminal only. (App=cydsfit)
Initial Analog Placement Results:
IO_5@[IOP=(15)][IoId=(5)] : PB_2(0) (fixed)
IO_2@[IOP=(6)][IoId=(2)] : PB_3(0) (fixed)
IO_6@[IOP=(3)][IoId=(6)] : Pin_SP01_VE(0) (fixed)
IO_7@[IOP=(3)][IoId=(7)] : Pin_SP01_VM(0) (fixed)
IO_5@[IOP=(3)][IoId=(5)] : Pin_SV01_VM(0) (fixed)
IO_0@[IOP=(2)][IoId=(0)] : \LCD_Disp:LCDPort(0)\ (fixed)
IO_1@[IOP=(2)][IoId=(1)] : \LCD_Disp:LCDPort(1)\ (fixed)
IO_2@[IOP=(2)][IoId=(2)] : \LCD_Disp:LCDPort(2)\ (fixed)
IO_3@[IOP=(2)][IoId=(3)] : \LCD_Disp:LCDPort(3)\ (fixed)
IO_4@[IOP=(2)][IoId=(4)] : \LCD_Disp:LCDPort(4)\ (fixed)
IO_5@[IOP=(2)][IoId=(5)] : \LCD_Disp:LCDPort(5)\ (fixed)
IO_6@[IOP=(2)][IoId=(6)] : \LCD_Disp:LCDPort(6)\ (fixed)
IO_5@[IOP=(0)][IoId=(5)] : al_sonoro(0) (fixed)
IO_1@[IOP=(3)][IoId=(1)] : bt_desl(0) (fixed)
IO_3@[IOP=(3)][IoId=(3)] : bt_emerg(0) (fixed)
IO_0@[IOP=(3)][IoId=(0)] : bt_liga(0) (fixed)
IO_2@[IOP=(3)][IoId=(2)] : bt_rearme(0) (fixed)
IO_2@[IOP=(1)][IoId=(2)] : se_indut_motor(0) (fixed)
IO_7@[IOP=(2)][IoId=(7)] : se_indut_porta(0) (fixed)
IO_4@[IOP=(0)][IoId=(4)] : si_alerta(0) (fixed)
IO_1@[IOP=(0)][IoId=(1)] : si_desl(0) (fixed)
IO_3@[IOP=(0)][IoId=(3)] : si_emerg(0) (fixed)
IO_0@[IOP=(0)][IoId=(0)] : si_liga(0) (fixed)
IO_2@[IOP=(0)][IoId=(2)] : si_rearme(0) (fixed)
SAR[1]@[FFB(SAR,1)] : \ADC_SAR_Seq:SAR:ADC_SAR\
Vref[3]@[FFB(Vref,3)] : \ADC_SAR_Seq:SAR:vRef_1024\
IO_3@[IOP=(6)][IoId=(3)] : se_temp_motor(0)
IO_4@[IOP=(4)][IoId=(4)] : se_temp_quadro(0)
