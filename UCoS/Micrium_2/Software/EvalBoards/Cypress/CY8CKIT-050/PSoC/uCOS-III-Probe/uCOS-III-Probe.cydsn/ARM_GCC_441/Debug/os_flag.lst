ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"os_flag.c"
  14              		.section	.debug_abbrev,"",%progbits
  15              	.Ldebug_abbrev0:
  16              		.section	.debug_info,"",%progbits
  17              	.Ldebug_info0:
  18              		.section	.debug_line,"",%progbits
  19              	.Ldebug_line0:
  20 0000 61030000 		.text
  20      0200D600 
  20      00000201 
  20      FB0E0D00 
  20      01010101 
  21              	.Ltext0:
  22              		.cfi_sections	.debug_frame
  23              		.section	.text.OSFlagCreate,"ax",%progbits
  24              		.align	2
  25              		.global	OSFlagCreate
  26              		.thumb
  27              		.thumb_func
  28              		.type	OSFlagCreate, %function
  29              	OSFlagCreate:
  30              	.LFB0:
  31              		.file 1 "C:\\Micrium\\Software\\uCOS-III\\Source\\os_flag.c"
   1:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** /*
   2:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** ***************************************************************************************************
   3:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                                      uC/OS-III
   4:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                                 The Real-Time Kernel
   5:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
   6:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                  (c) Copyright 2009-2012; Micrium, Inc.; Weston, FL
   7:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                           All rights reserved.  Protected by international copyright laws.
   8:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
   9:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                                EVENT FLAG MANAGEMENT
  10:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
  11:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** * File    : OS_FLAG.C
  12:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** * By      : JJL
  13:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** * Version : V3.03.01
  14:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
  15:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** * LICENSING TERMS:
  16:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** * ---------------
  17:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *           uC/OS-III is provided in source form for FREE short-term evaluation, for educational us
  18:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *           for peaceful research.  If you plan or intend to use uC/OS-III in a commercial applicat
  19:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *           product then, you need to contact Micrium to properly license uC/OS-III for its use in 
  20:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *           application/product.   We provide ALL the source code for your convenience and to help 
  21:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *           experience uC/OS-III.  The fact that the source is provided does NOT mean that you can 
  22:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *           it commercially without paying a licensing fee.
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 2


  23:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
  24:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *           Knowledge of the source code may NOT be used to develop a similar product.
  25:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
  26:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *           Please help us continue to provide the embedded community with the finest software avai
  27:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *           Your honesty is greatly appreciated.
  28:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
  29:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *           You can contact us at www.micrium.com, or by phone at +1 (954) 217-2036.
  30:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** ***************************************************************************************************
  31:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** */
  32:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
  33:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #define  MICRIUM_SOURCE
  34:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #include <os.h>
  35:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
  36:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #ifdef VSC_INCLUDE_SOURCE_FILE_NAMES
  37:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** const  CPU_CHAR  *os_flag__c = "$Id: $";
  38:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #endif
  39:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
  40:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
  41:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #if OS_CFG_FLAG_EN > 0u
  42:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
  43:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** /*$PAGE*/
  44:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** /*
  45:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** ***************************************************************************************************
  46:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                                 CREATE AN EVENT FLAG
  47:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
  48:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** * Description: This function is called to create an event flag group.
  49:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
  50:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** * Arguments  : p_grp          is a pointer to the event flag group to create
  51:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
  52:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *              p_name         is the name of the event flag group
  53:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
  54:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *              flags          contains the initial value to store in the event flag group (typicall
  55:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
  56:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *              p_err          is a pointer to an error code which will be returned to your applicat
  57:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
  58:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                 OS_ERR_NONE                    if the call was successful.
  59:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                 OS_ERR_CREATE_ISR              if you attempted to create an Even
  60:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                 OS_ERR_ILLEGAL_CREATE_RUN_TIME if you are trying to create the Ev
  61:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                                                   called OSSafetyCriticalStart().
  62:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                 OS_ERR_NAME                    if 'p_name' is a NULL pointer
  63:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                 OS_ERR_OBJ_CREATED             if the event flag group has alread
  64:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                 OS_ERR_OBJ_PTR_NULL            if 'p_grp' is a NULL pointer
  65:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
  66:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** * Returns    : none
  67:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** ***************************************************************************************************
  68:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** */
  69:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
  70:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** void  OSFlagCreate (OS_FLAG_GRP  *p_grp,
  71:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                     CPU_CHAR     *p_name,
  72:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                     OS_FLAGS      flags,
  73:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                     OS_ERR       *p_err)
  74:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** {
  32              		.loc 1 74 0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 24
  35              		@ frame_needed = 1, uses_anonymous_args = 0
  36 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 3


  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 8
  39 0002 86B0     		sub	sp, sp, #24
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 32
  42 0004 00AF     		add	r7, sp, #0
  43              		.cfi_offset 14, -4
  44              		.cfi_offset 7, -8
  45              	.LCFI2:
  46              		.cfi_def_cfa_register 7
  47 0006 F860     		str	r0, [r7, #12]
  48 0008 B960     		str	r1, [r7, #8]
  49 000a 7A60     		str	r2, [r7, #4]
  50 000c 3B60     		str	r3, [r7, #0]
  75:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     CPU_SR_ALLOC();
  51              		.loc 1 75 0
  52 000e 4FF00003 		mov	r3, #0
  53 0012 7B61     		str	r3, [r7, #20]
  76:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
  77:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
  78:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
  79:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #ifdef OS_SAFETY_CRITICAL
  80:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     if (p_err == (OS_ERR *)0) {
  81:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
  82:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         return;
  83:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     }
  84:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #endif
  85:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
  86:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #ifdef OS_SAFETY_CRITICAL_IEC61508
  87:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     if (OSSafetyCriticalStartFlag == DEF_TRUE) {
  88:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****        *p_err = OS_ERR_ILLEGAL_CREATE_RUN_TIME;
  89:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         return;
  90:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     }
  91:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #endif
  92:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
  93:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #if OS_CFG_CALLED_FROM_ISR_CHK_EN > 0u
  94:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     if (OSIntNestingCtr > (OS_NESTING_CTR)0) {              /* See if called from ISR ...          
  54              		.loc 1 94 0
  55 0014 40F20003 		movw	r3, #:lower16:OSIntNestingCtr
  56 0018 C0F20003 		movt	r3, #:upper16:OSIntNestingCtr
  57 001c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
  58 001e 002B     		cmp	r3, #0
  59 0020 04D0     		beq	.L2
  95:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****        *p_err = OS_ERR_CREATE_ISR;                          /* ... can't CREATE from an ISR        
  60              		.loc 1 95 0
  61 0022 3B68     		ldr	r3, [r7, #0]
  62 0024 42F6E162 		movw	r2, #12001
  63 0028 1A80     		strh	r2, [r3, #0]	@ movhi
  96:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         return;
  64              		.loc 1 96 0
  65 002a 38E0     		b	.L5
  66              	.L2:
  97:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     }
  98:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #endif
  99:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 100:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #if OS_CFG_ARG_CHK_EN > 0u
 101:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     if (p_grp == (OS_FLAG_GRP *)0) {                        /* Validate 'p_grp'                    
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 4


  67              		.loc 1 101 0
  68 002c FB68     		ldr	r3, [r7, #12]
  69 002e 002B     		cmp	r3, #0
  70 0030 04D1     		bne	.L4
 102:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****        *p_err = OS_ERR_OBJ_PTR_NULL;
  71              		.loc 1 102 0
  72 0032 3B68     		ldr	r3, [r7, #0]
  73 0034 45F6C352 		movw	r2, #24003
  74 0038 1A80     		strh	r2, [r3, #0]	@ movhi
 103:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         return;
  75              		.loc 1 103 0
  76 003a 30E0     		b	.L5
  77              	.L4:
 104:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     }
 105:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #endif
 106:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 107:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     OS_CRITICAL_ENTER();
  78              		.loc 1 107 0
  79 003c FFF7FEFF 		bl	CPU_SR_Save
  80 0040 0346     		mov	r3, r0
  81 0042 7B61     		str	r3, [r7, #20]
 108:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     p_grp->Type    = OS_OBJ_TYPE_FLAG;                      /* Set to event flag group type        
  82              		.loc 1 108 0
  83 0044 FA68     		ldr	r2, [r7, #12]
  84 0046 44F64643 		movw	r3, #:lower16:1195461702
  85 004a C4F24173 		movt	r3, #:upper16:1195461702
  86 004e 1360     		str	r3, [r2, #0]
 109:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     p_grp->NamePtr = p_name;
  87              		.loc 1 109 0
  88 0050 FB68     		ldr	r3, [r7, #12]
  89 0052 BA68     		ldr	r2, [r7, #8]
  90 0054 5A60     		str	r2, [r3, #4]
 110:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     p_grp->Flags   = flags;                                 /* Set to desired initial value        
  91              		.loc 1 110 0
  92 0056 FB68     		ldr	r3, [r7, #12]
  93 0058 7A68     		ldr	r2, [r7, #4]
  94 005a 1A62     		str	r2, [r3, #32]
 111:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     p_grp->TS      = (CPU_TS)0;
  95              		.loc 1 111 0
  96 005c FB68     		ldr	r3, [r7, #12]
  97 005e 4FF00002 		mov	r2, #0
  98 0062 5A62     		str	r2, [r3, #36]
 112:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     OS_PendListInit(&p_grp->PendList);
  99              		.loc 1 112 0
 100 0064 FB68     		ldr	r3, [r7, #12]
 101 0066 03F10803 		add	r3, r3, #8
 102 006a 1846     		mov	r0, r3
 103 006c FFF7FEFF 		bl	OS_PendListInit
 113:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 114:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #if OS_CFG_DBG_EN > 0u
 115:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     OS_FlagDbgListAdd(p_grp);
 104              		.loc 1 115 0
 105 0070 F868     		ldr	r0, [r7, #12]
 106 0072 FFF7FEFF 		bl	OS_FlagDbgListAdd
 116:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #endif
 117:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     OSFlagQty++;
 107              		.loc 1 117 0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 5


 108 0076 40F20003 		movw	r3, #:lower16:OSFlagQty
 109 007a C0F20003 		movt	r3, #:upper16:OSFlagQty
 110 007e 1B88     		ldrh	r3, [r3, #0]
 111 0080 03F10103 		add	r3, r3, #1
 112 0084 9AB2     		uxth	r2, r3
 113 0086 40F20003 		movw	r3, #:lower16:OSFlagQty
 114 008a C0F20003 		movt	r3, #:upper16:OSFlagQty
 115 008e 1A80     		strh	r2, [r3, #0]	@ movhi
 118:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 119:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     OS_CRITICAL_EXIT_NO_SCHED();
 116              		.loc 1 119 0
 117 0090 7869     		ldr	r0, [r7, #20]
 118 0092 FFF7FEFF 		bl	CPU_SR_Restore
 120:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****    *p_err = OS_ERR_NONE;
 119              		.loc 1 120 0
 120 0096 3B68     		ldr	r3, [r7, #0]
 121 0098 4FF00002 		mov	r2, #0
 122 009c 1A80     		strh	r2, [r3, #0]	@ movhi
 123              	.L5:
 121:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** }
 124              		.loc 1 121 0
 125 009e 07F11807 		add	r7, r7, #24
 126 00a2 BD46     		mov	sp, r7
 127 00a4 80BD     		pop	{r7, pc}
 128              		.cfi_endproc
 129              	.LFE0:
 130              		.size	OSFlagCreate, .-OSFlagCreate
 131 00a6 00BF     		.section	.text.OSFlagDel,"ax",%progbits
 132              		.align	2
 133              		.global	OSFlagDel
 134              		.thumb
 135              		.thumb_func
 136              		.type	OSFlagDel, %function
 137              	OSFlagDel:
 138              	.LFB1:
 122:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 123:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** /*$PAGE*/
 124:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** /*
 125:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** ***************************************************************************************************
 126:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                             DELETE AN EVENT FLAG GROUP
 127:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 128:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** * Description: This function deletes an event flag group and readies all tasks pending on the event
 129:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 130:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** * Arguments  : p_grp     is a pointer to the desired event flag group.
 131:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 132:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *              opt       determines delete options as follows:
 133:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 134:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                            OS_OPT_DEL_NO_PEND           Deletes the event flag group ONLY if no t
 135:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                            OS_OPT_DEL_ALWAYS            Deletes the event flag group even if task
 136:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                                         In this case, all the tasks pending will 
 137:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 138:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *              p_err     is a pointer to an error code that can contain one of the following values
 139:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 140:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                            OS_ERR_NONE                  The call was successful and the event fla
 141:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                            OS_ERR_DEL_ISR               If you attempted to delete the event flag
 142:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                            OS_ERR_OBJ_PTR_NULL          If 'p_grp' is a NULL pointer.
 143:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                            OS_ERR_OBJ_TYPE              If you didn't pass a pointer to an event 
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 6


 144:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                            OS_ERR_OPT_INVALID           An invalid option was specified
 145:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                            OS_ERR_TASK_WAITING          One or more tasks were waiting on the eve
 146:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 147:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** * Returns    : == 0          if no tasks were waiting on the event flag group, or upon error.
 148:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *              >  0          if one or more tasks waiting on the event flag group are now readied a
 149:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 150:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** * Note(s)    : 1) This function must be used with care.  Tasks that would normally expect the prese
 151:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                 group MUST check the return code of OSFlagPost and OSFlagPend().
 152:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** ***************************************************************************************************
 153:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** */
 154:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 155:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #if OS_CFG_FLAG_DEL_EN > 0u
 156:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** OS_OBJ_QTY  OSFlagDel (OS_FLAG_GRP  *p_grp,
 157:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                        OS_OPT        opt,
 158:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                        OS_ERR       *p_err)
 159:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** {
 139              		.loc 1 159 0
 140              		.cfi_startproc
 141              		@ args = 0, pretend = 0, frame = 40
 142              		@ frame_needed = 1, uses_anonymous_args = 0
 143 0000 80B5     		push	{r7, lr}
 144              	.LCFI3:
 145              		.cfi_def_cfa_offset 8
 146 0002 8AB0     		sub	sp, sp, #40
 147              	.LCFI4:
 148              		.cfi_def_cfa_offset 48
 149 0004 00AF     		add	r7, sp, #0
 150              		.cfi_offset 14, -4
 151              		.cfi_offset 7, -8
 152              	.LCFI5:
 153              		.cfi_def_cfa_register 7
 154 0006 F860     		str	r0, [r7, #12]
 155 0008 0B46     		mov	r3, r1
 156 000a 7A60     		str	r2, [r7, #4]
 157 000c 7B81     		strh	r3, [r7, #10]	@ movhi
 160:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     OS_OBJ_QTY        cnt;
 161:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     OS_OBJ_QTY        nbr_tasks;
 162:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     OS_PEND_DATA     *p_pend_data;
 163:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     OS_PEND_LIST     *p_pend_list;
 164:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     OS_TCB           *p_tcb;
 165:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     CPU_TS            ts;
 166:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     CPU_SR_ALLOC();
 158              		.loc 1 166 0
 159 000e 4FF00003 		mov	r3, #0
 160 0012 7B62     		str	r3, [r7, #36]
 167:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 168:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 169:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 170:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #ifdef OS_SAFETY_CRITICAL
 171:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     if (p_err == (OS_ERR *)0) {
 172:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 173:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         return ((OS_OBJ_QTY)0);
 174:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     }
 175:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #endif
 176:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 177:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #if OS_CFG_CALLED_FROM_ISR_CHK_EN > 0u
 178:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     if (OSIntNestingCtr > (OS_NESTING_CTR)0) {              /* See if called from ISR ...          
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 7


 161              		.loc 1 178 0
 162 0014 40F20003 		movw	r3, #:lower16:OSIntNestingCtr
 163 0018 C0F20003 		movt	r3, #:upper16:OSIntNestingCtr
 164 001c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 165 001e 002B     		cmp	r3, #0
 166 0020 06D0     		beq	.L7
 179:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****        *p_err = OS_ERR_DEL_ISR;                             /* ... can't DELETE from an ISR        
 167              		.loc 1 179 0
 168 0022 7B68     		ldr	r3, [r7, #4]
 169 0024 43F2C922 		movw	r2, #13001
 170 0028 1A80     		strh	r2, [r3, #0]	@ movhi
 180:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         return ((OS_OBJ_QTY)0);
 171              		.loc 1 180 0
 172 002a 4FF00003 		mov	r3, #0
 173 002e 8BE0     		b	.L8
 174              	.L7:
 181:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     }
 182:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #endif
 183:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 184:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #if OS_CFG_ARG_CHK_EN > 0u
 185:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     if (p_grp == (OS_FLAG_GRP *)0) {                        /* Validate 'p_grp'                    
 175              		.loc 1 185 0
 176 0030 FB68     		ldr	r3, [r7, #12]
 177 0032 002B     		cmp	r3, #0
 178 0034 06D1     		bne	.L9
 186:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****        *p_err  = OS_ERR_OBJ_PTR_NULL;
 179              		.loc 1 186 0
 180 0036 7B68     		ldr	r3, [r7, #4]
 181 0038 45F6C352 		movw	r2, #24003
 182 003c 1A80     		strh	r2, [r3, #0]	@ movhi
 187:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         return ((OS_OBJ_QTY)0);
 183              		.loc 1 187 0
 184 003e 4FF00003 		mov	r3, #0
 185 0042 81E0     		b	.L8
 186              	.L9:
 188:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     }
 189:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     switch (opt) {                                          /* Validate 'opt'                      
 187              		.loc 1 189 0
 188 0044 7B89     		ldrh	r3, [r7, #10]
 189 0046 03F10003 		add	r3, r3, #0
 190 004a 012B     		cmp	r3, #1
 191 004c 12D8     		bhi	.L10
 190:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         case OS_OPT_DEL_NO_PEND:
 191:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         case OS_OPT_DEL_ALWAYS:
 192:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              break;
 193:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 194:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         default:
 195:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****             *p_err = OS_ERR_OPT_INVALID;
 196:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              return ((OS_OBJ_QTY)0);
 197:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     }
 198:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #endif
 199:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 200:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #if OS_CFG_OBJ_TYPE_CHK_EN > 0u
 201:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     if (p_grp->Type != OS_OBJ_TYPE_FLAG) {                  /* Validate event group object         
 202:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****        *p_err = OS_ERR_OBJ_TYPE;
 203:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         return ((OS_OBJ_QTY)0);
 204:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     }
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 8


 205:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #endif
 206:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     OS_CRITICAL_ENTER();
 192              		.loc 1 206 0
 193 004e FFF7FEFF 		bl	CPU_SR_Save
 194 0052 0346     		mov	r3, r0
 195 0054 7B62     		str	r3, [r7, #36]
 207:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     p_pend_list = &p_grp->PendList;
 196              		.loc 1 207 0
 197 0056 FB68     		ldr	r3, [r7, #12]
 198 0058 03F10803 		add	r3, r3, #8
 199 005c BB61     		str	r3, [r7, #24]
 208:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     cnt         = p_pend_list->NbrEntries;
 200              		.loc 1 208 0
 201 005e BB69     		ldr	r3, [r7, #24]
 202 0060 1B89     		ldrh	r3, [r3, #8]	@ movhi
 203 0062 3B82     		strh	r3, [r7, #16]	@ movhi
 209:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     nbr_tasks   = cnt;
 204              		.loc 1 209 0
 205 0064 3B8A     		ldrh	r3, [r7, #16]	@ movhi
 206 0066 7B82     		strh	r3, [r7, #18]	@ movhi
 210:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     switch (opt) {
 207              		.loc 1 210 0
 208 0068 7B89     		ldrh	r3, [r7, #10]
 209 006a 002B     		cmp	r3, #0
 210 006c 09D0     		beq	.L13
 211 006e 012B     		cmp	r3, #1
 212 0070 2DD0     		beq	.L14
 213 0072 61E0     		b	.L21
 214              	.L10:
 215              		.loc 1 195 0
 216 0074 7B68     		ldr	r3, [r7, #4]
 217 0076 45F62562 		movw	r2, #24101
 218 007a 1A80     		strh	r2, [r3, #0]	@ movhi
 219              		.loc 1 196 0
 220 007c 4FF00003 		mov	r3, #0
 221 0080 62E0     		b	.L8
 222              	.L13:
 211:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         case OS_OPT_DEL_NO_PEND:                            /* Delete group if no task waiting     
 212:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              if (nbr_tasks == (OS_OBJ_QTY)0) {
 223              		.loc 1 212 0
 224 0082 7B8A     		ldrh	r3, [r7, #18]
 225 0084 002B     		cmp	r3, #0
 226 0086 1AD1     		bne	.L15
 213:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #if OS_CFG_DBG_EN > 0u
 214:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  OS_FlagDbgListRemove(p_grp);
 227              		.loc 1 214 0
 228 0088 F868     		ldr	r0, [r7, #12]
 229 008a FFF7FEFF 		bl	OS_FlagDbgListRemove
 215:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #endif
 216:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  OSFlagQty--;
 230              		.loc 1 216 0
 231 008e 40F20003 		movw	r3, #:lower16:OSFlagQty
 232 0092 C0F20003 		movt	r3, #:upper16:OSFlagQty
 233 0096 1B88     		ldrh	r3, [r3, #0]
 234 0098 03F1FF33 		add	r3, r3, #-1
 235 009c 9AB2     		uxth	r2, r3
 236 009e 40F20003 		movw	r3, #:lower16:OSFlagQty
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 9


 237 00a2 C0F20003 		movt	r3, #:upper16:OSFlagQty
 238 00a6 1A80     		strh	r2, [r3, #0]	@ movhi
 217:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  OS_FlagClr(p_grp);
 239              		.loc 1 217 0
 240 00a8 F868     		ldr	r0, [r7, #12]
 241 00aa FFF7FEFF 		bl	OS_FlagClr
 218:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 219:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  OS_CRITICAL_EXIT();
 242              		.loc 1 219 0
 243 00ae 786A     		ldr	r0, [r7, #36]
 244 00b0 FFF7FEFF 		bl	CPU_SR_Restore
 220:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                 *p_err = OS_ERR_NONE;
 245              		.loc 1 220 0
 246 00b4 7B68     		ldr	r3, [r7, #4]
 247 00b6 4FF00002 		mov	r2, #0
 248 00ba 1A80     		strh	r2, [r3, #0]	@ movhi
 221:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              } else {
 222:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  OS_CRITICAL_EXIT();
 223:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                 *p_err = OS_ERR_TASK_WAITING;
 224:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              }
 225:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              break;
 249              		.loc 1 225 0
 250 00bc 43E0     		b	.L17
 251              	.L15:
 252              		.loc 1 222 0
 253 00be 786A     		ldr	r0, [r7, #36]
 254 00c0 FFF7FEFF 		bl	CPU_SR_Restore
 255              		.loc 1 223 0
 256 00c4 7B68     		ldr	r3, [r7, #4]
 257 00c6 47F25F12 		movw	r2, #29023
 258 00ca 1A80     		strh	r2, [r3, #0]	@ movhi
 259              		.loc 1 225 0
 260 00cc 3BE0     		b	.L17
 261              	.L14:
 226:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 227:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         case OS_OPT_DEL_ALWAYS:                             /* Always delete the event flag group  
 228:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              ts = OS_TS_GET();                              /* Get local time stamp so all tasks ge
 262              		.loc 1 228 0
 263 00ce FFF7FEFF 		bl	CPU_TS_TmrRd
 264 00d2 0346     		mov	r3, r0
 265 00d4 3B62     		str	r3, [r7, #32]
 229:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              while (cnt > 0u) {                             /* Remove all tasks from the pend list 
 266              		.loc 1 229 0
 267 00d6 0FE0     		b	.L18
 268              	.L19:
 230:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  p_pend_data = p_pend_list->HeadPtr;
 269              		.loc 1 230 0
 270 00d8 BB69     		ldr	r3, [r7, #24]
 271 00da 1B68     		ldr	r3, [r3, #0]
 272 00dc 7B61     		str	r3, [r7, #20]
 231:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  p_tcb       = p_pend_data->TCBPtr;
 273              		.loc 1 231 0
 274 00de 7B69     		ldr	r3, [r7, #20]
 275 00e0 9B68     		ldr	r3, [r3, #8]
 276 00e2 FB61     		str	r3, [r7, #28]
 232:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  OS_PendObjDel((OS_PEND_OBJ *)((void *)p_grp),
 277              		.loc 1 232 0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 10


 278 00e4 FB68     		ldr	r3, [r7, #12]
 279 00e6 1846     		mov	r0, r3
 280 00e8 F969     		ldr	r1, [r7, #28]
 281 00ea 3A6A     		ldr	r2, [r7, #32]
 282 00ec FFF7FEFF 		bl	OS_PendObjDel
 233:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                                p_tcb,
 234:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                                ts);
 235:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  cnt--;
 283              		.loc 1 235 0
 284 00f0 3B8A     		ldrh	r3, [r7, #16]	@ movhi
 285 00f2 03F1FF33 		add	r3, r3, #-1
 286 00f6 3B82     		strh	r3, [r7, #16]	@ movhi
 287              	.L18:
 288              		.loc 1 229 0
 289 00f8 3B8A     		ldrh	r3, [r7, #16]
 290 00fa 002B     		cmp	r3, #0
 291 00fc ECD1     		bne	.L19
 236:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              }
 237:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #if OS_CFG_DBG_EN > 0u
 238:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              OS_FlagDbgListRemove(p_grp);
 292              		.loc 1 238 0
 293 00fe F868     		ldr	r0, [r7, #12]
 294 0100 FFF7FEFF 		bl	OS_FlagDbgListRemove
 239:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #endif
 240:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              OSFlagQty--;
 295              		.loc 1 240 0
 296 0104 40F20003 		movw	r3, #:lower16:OSFlagQty
 297 0108 C0F20003 		movt	r3, #:upper16:OSFlagQty
 298 010c 1B88     		ldrh	r3, [r3, #0]
 299 010e 03F1FF33 		add	r3, r3, #-1
 300 0112 9AB2     		uxth	r2, r3
 301 0114 40F20003 		movw	r3, #:lower16:OSFlagQty
 302 0118 C0F20003 		movt	r3, #:upper16:OSFlagQty
 303 011c 1A80     		strh	r2, [r3, #0]	@ movhi
 241:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              OS_FlagClr(p_grp);
 304              		.loc 1 241 0
 305 011e F868     		ldr	r0, [r7, #12]
 306 0120 FFF7FEFF 		bl	OS_FlagClr
 242:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              OS_CRITICAL_EXIT_NO_SCHED();
 307              		.loc 1 242 0
 308 0124 786A     		ldr	r0, [r7, #36]
 309 0126 FFF7FEFF 		bl	CPU_SR_Restore
 243:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              OSSched();                                     /* Find highest priority task ready to 
 310              		.loc 1 243 0
 311 012a FFF7FEFF 		bl	OSSched
 244:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****             *p_err = OS_ERR_NONE;
 312              		.loc 1 244 0
 313 012e 7B68     		ldr	r3, [r7, #4]
 314 0130 4FF00002 		mov	r2, #0
 315 0134 1A80     		strh	r2, [r3, #0]	@ movhi
 245:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              break;
 316              		.loc 1 245 0
 317 0136 06E0     		b	.L17
 318              	.L21:
 246:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 247:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         default:
 248:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              OS_CRITICAL_EXIT();
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 11


 319              		.loc 1 248 0
 320 0138 786A     		ldr	r0, [r7, #36]
 321 013a FFF7FEFF 		bl	CPU_SR_Restore
 249:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****             *p_err = OS_ERR_OPT_INVALID;
 322              		.loc 1 249 0
 323 013e 7B68     		ldr	r3, [r7, #4]
 324 0140 45F62562 		movw	r2, #24101
 325 0144 1A80     		strh	r2, [r3, #0]	@ movhi
 326              	.L17:
 250:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              break;
 251:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     }
 252:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     return (nbr_tasks);
 327              		.loc 1 252 0
 328 0146 7B8A     		ldrh	r3, [r7, #18]
 329              	.L8:
 253:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** }
 330              		.loc 1 253 0
 331 0148 1846     		mov	r0, r3
 332 014a 07F12807 		add	r7, r7, #40
 333 014e BD46     		mov	sp, r7
 334 0150 80BD     		pop	{r7, pc}
 335              		.cfi_endproc
 336              	.LFE1:
 337              		.size	OSFlagDel, .-OSFlagDel
 338 0152 00BF     		.section	.text.OSFlagPend,"ax",%progbits
 339              		.align	2
 340              		.global	OSFlagPend
 341              		.thumb
 342              		.thumb_func
 343              		.type	OSFlagPend, %function
 344              	OSFlagPend:
 345              	.LFB2:
 254:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #endif
 255:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 256:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** /*
 257:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** ***************************************************************************************************
 258:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                             WAIT ON AN EVENT FLAG GROUP
 259:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 260:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** * Description: This function is called to wait for a combination of bits to be set in an event flag
 261:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *              application can wait for ANY bit to be set or ALL bits to be set.
 262:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 263:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** * Arguments  : p_grp         is a pointer to the desired event flag group.
 264:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 265:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *              flags         Is a bit pattern indicating which bit(s) (i.e. flags) you wish to wait
 266:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                            The bits you want are specified by setting the corresponding bits in '
 267:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                            e.g. if your application wants to wait for bits 0 and 1 then 'flags' w
 268:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 269:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *              timeout       is an optional timeout (in clock ticks) that your task will wait for t
 270:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                            desired bit combination.  If you specify 0, however, your task will wa
 271:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                            forever at the specified event flag group or, until a message arrives.
 272:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 273:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *              opt           specifies whether you want ALL bits to be set or ANY of the bits to be
 274:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                            You can specify the 'ONE' of the following arguments:
 275:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 276:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                OS_OPT_PEND_FLAG_CLR_ALL   You will wait for ALL bits in 'flags' t
 277:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                OS_OPT_PEND_FLAG_CLR_ANY   You will wait for ANY bit  in 'flags' t
 278:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                OS_OPT_PEND_FLAG_SET_ALL   You will wait for ALL bits in 'flags' t
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 12


 279:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                OS_OPT_PEND_FLAG_SET_ANY   You will wait for ANY bit  in 'flags' t
 280:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 281:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                            You can 'ADD' OS_OPT_PEND_FLAG_CONSUME if you want the event flag to b
 282:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                      the call.  Example, to wait for any flag in a group AND then
 283:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                      the flags that are present, set 'wait_opt' to:
 284:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 285:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                      OS_OPT_PEND_FLAG_SET_ANY + OS_OPT_PEND_FLAG_CONSUME
 286:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 287:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                            You can also 'ADD' the type of pend with 'ONE' of the two option:
 288:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 289:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                OS_OPT_PEND_NON_BLOCKING   Task will NOT block if flags are not av
 290:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                OS_OPT_PEND_BLOCKING       Task will     block if flags are not av
 291:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 292:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *              p_ts          is a pointer to a variable that will receive the timestamp of when the
 293:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                            posted, aborted or the event flag group deleted.  If you pass a NULL p
 294:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                            then you will not get the timestamp.  In other words, passing a NULL p
 295:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                            indicates that you don't need the timestamp.
 296:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 297:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *              p_err         is a pointer to an error code and can be:
 298:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 299:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                OS_ERR_NONE                The desired bits have been set within t
 300:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                OS_ERR_OBJ_PTR_NULL        If 'p_grp' is a NULL pointer.
 301:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                OS_ERR_OBJ_TYPE            You are not pointing to an event flag g
 302:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                OS_ERR_OPT_INVALID         You didn't specify a proper 'opt' argum
 303:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                OS_ERR_PEND_ABORT          The wait on the flag was aborted.
 304:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                OS_ERR_PEND_ISR            If you tried to PEND from an ISR
 305:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                OS_ERR_PEND_WOULD_BLOCK    If you specified non-blocking but the f
 306:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                                           available.
 307:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                OS_ERR_SCHED_LOCKED        If you called this function when the sc
 308:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                OS_ERR_TIMEOUT             The bit(s) have not been set in the spe
 309:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 310:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** * Returns    : The flags in the event flag group that made the task ready or, 0 if a timeout or an 
 311:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *              occurred.
 312:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** ***************************************************************************************************
 313:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** */
 314:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 315:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** OS_FLAGS  OSFlagPend (OS_FLAG_GRP  *p_grp,
 316:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                       OS_FLAGS      flags,
 317:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                       OS_TICK       timeout,
 318:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                       OS_OPT        opt,
 319:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                       CPU_TS       *p_ts,
 320:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                       OS_ERR       *p_err)
 321:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** {
 346              		.loc 1 321 0
 347              		.cfi_startproc
 348              		@ args = 8, pretend = 0, frame = 64
 349              		@ frame_needed = 1, uses_anonymous_args = 0
 350 0000 80B5     		push	{r7, lr}
 351              	.LCFI6:
 352              		.cfi_def_cfa_offset 8
 353 0002 92B0     		sub	sp, sp, #72
 354              	.LCFI7:
 355              		.cfi_def_cfa_offset 80
 356 0004 02AF     		add	r7, sp, #8
 357              		.cfi_offset 14, -4
 358              		.cfi_offset 7, -8
 359              	.LCFI8:
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 13


 360              		.cfi_def_cfa 7, 72
 361 0006 F860     		str	r0, [r7, #12]
 362 0008 B960     		str	r1, [r7, #8]
 363 000a 7A60     		str	r2, [r7, #4]
 364 000c 7B80     		strh	r3, [r7, #2]	@ movhi
 322:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     CPU_BOOLEAN   consume;
 323:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     OS_FLAGS      flags_rdy;
 324:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     OS_OPT        mode;
 325:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     OS_PEND_DATA  pend_data;
 326:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     CPU_SR_ALLOC();
 365              		.loc 1 326 0
 366 000e 4FF00003 		mov	r3, #0
 367 0012 FB63     		str	r3, [r7, #60]
 327:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 328:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 329:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 330:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #ifdef OS_SAFETY_CRITICAL
 331:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     if (p_err == (OS_ERR *)0) {
 332:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 333:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         return ((OS_FLAGS)0);
 334:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     }
 335:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #endif
 336:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 337:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #if OS_CFG_CALLED_FROM_ISR_CHK_EN > 0u
 338:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     if (OSIntNestingCtr > (OS_NESTING_CTR)0) {              /* See if called from ISR ...          
 368              		.loc 1 338 0
 369 0014 40F20003 		movw	r3, #:lower16:OSIntNestingCtr
 370 0018 C0F20003 		movt	r3, #:upper16:OSIntNestingCtr
 371 001c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 372 001e 002B     		cmp	r3, #0
 373 0020 06D0     		beq	.L23
 339:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****        *p_err = OS_ERR_PEND_ISR;                            /* ... can't PEND from an ISR          
 374              		.loc 1 339 0
 375 0022 FB6C     		ldr	r3, [r7, #76]
 376 0024 46F2AE12 		movw	r2, #25006
 377 0028 1A80     		strh	r2, [r3, #0]	@ movhi
 340:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         return ((OS_FLAGS)0);
 378              		.loc 1 340 0
 379 002a 4FF00003 		mov	r3, #0
 380 002e BBE2     		b	.L24
 381              	.L23:
 341:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     }
 342:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #endif
 343:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 344:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #if OS_CFG_ARG_CHK_EN > 0u
 345:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     if (p_grp == (OS_FLAG_GRP *)0) {                        /* Validate 'p_grp'                    
 382              		.loc 1 345 0
 383 0030 FB68     		ldr	r3, [r7, #12]
 384 0032 002B     		cmp	r3, #0
 385 0034 06D1     		bne	.L25
 346:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****        *p_err = OS_ERR_OBJ_PTR_NULL;
 386              		.loc 1 346 0
 387 0036 FB6C     		ldr	r3, [r7, #76]
 388 0038 45F6C352 		movw	r2, #24003
 389 003c 1A80     		strh	r2, [r3, #0]	@ movhi
 347:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         return ((OS_FLAGS)0);
 390              		.loc 1 347 0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 14


 391 003e 4FF00003 		mov	r3, #0
 392 0042 B1E2     		b	.L24
 393              	.L25:
 348:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     }
 349:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     switch (opt) {                                          /* Validate 'opt'                      
 394              		.loc 1 349 0
 395 0044 7B88     		ldrh	r3, [r7, #2]
 396 0046 B3F5847F 		cmp	r3, #264
 397 004a 41D0     		beq	.L27
 398 004c B3F5847F 		cmp	r3, #264
 399 0050 15DC     		bgt	.L28
 400 0052 082B     		cmp	r3, #8
 401 0054 3CD0     		beq	.L27
 402 0056 082B     		cmp	r3, #8
 403 0058 06DC     		bgt	.L29
 404 005a 012B     		cmp	r3, #1
 405 005c 3EDB     		blt	.L26
 406 005e 022B     		cmp	r3, #2
 407 0060 36DD     		ble	.L27
 408 0062 042B     		cmp	r3, #4
 409 0064 34D0     		beq	.L27
 410 0066 39E0     		b	.L26
 411              	.L29:
 412 0068 40F20112 		movw	r2, #257
 413 006c 9342     		cmp	r3, r2
 414 006e 35DB     		blt	.L26
 415 0070 B3F5817F 		cmp	r3, #258
 416 0074 2CDD     		ble	.L27
 417 0076 B3F5827F 		cmp	r3, #260
 418 007a 29D0     		beq	.L27
 419 007c 2EE0     		b	.L26
 420              	.L28:
 421 007e 48F20802 		movw	r2, #32776
 422 0082 9342     		cmp	r3, r2
 423 0084 24D0     		beq	.L27
 424 0086 48F20802 		movw	r2, #32776
 425 008a 9342     		cmp	r3, r2
 426 008c 0CDC     		bgt	.L30
 427 008e 48F20102 		movw	r2, #32769
 428 0092 9342     		cmp	r3, r2
 429 0094 22DB     		blt	.L26
 430 0096 48F20202 		movw	r2, #32770
 431 009a 9342     		cmp	r3, r2
 432 009c 18DD     		ble	.L27
 433 009e 48F20402 		movw	r2, #32772
 434 00a2 9342     		cmp	r3, r2
 435 00a4 14D0     		beq	.L27
 436 00a6 19E0     		b	.L26
 437              	.L30:
 438 00a8 48F20412 		movw	r2, #33028
 439 00ac 9342     		cmp	r3, r2
 440 00ae 0FD0     		beq	.L27
 441 00b0 48F20412 		movw	r2, #33028
 442 00b4 9342     		cmp	r3, r2
 443 00b6 07DC     		bgt	.L31
 444 00b8 47F6FF62 		movw	r2, #:lower16:-33025
 445 00bc CFF6FF72 		movt	r2, #:upper16:-33025
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 15


 446 00c0 1A44     		add	r2, r3, r2
 447 00c2 012A     		cmp	r2, #1
 448 00c4 0AD8     		bhi	.L26
 449 00c6 03E0     		b	.L27
 450              	.L31:
 451 00c8 48F20812 		movw	r2, #33032
 452 00cc 9342     		cmp	r3, r2
 453 00ce 05D1     		bne	.L26
 454              	.L27:
 350:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         case OS_OPT_PEND_FLAG_CLR_ALL:
 351:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         case OS_OPT_PEND_FLAG_CLR_ANY:
 352:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         case OS_OPT_PEND_FLAG_SET_ALL:
 353:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         case OS_OPT_PEND_FLAG_SET_ANY:
 354:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         case OS_OPT_PEND_FLAG_CLR_ALL | OS_OPT_PEND_FLAG_CONSUME:
 355:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         case OS_OPT_PEND_FLAG_CLR_ANY | OS_OPT_PEND_FLAG_CONSUME:
 356:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         case OS_OPT_PEND_FLAG_SET_ALL | OS_OPT_PEND_FLAG_CONSUME:
 357:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         case OS_OPT_PEND_FLAG_SET_ANY | OS_OPT_PEND_FLAG_CONSUME:
 358:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         case OS_OPT_PEND_FLAG_CLR_ALL | OS_OPT_PEND_NON_BLOCKING:
 359:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         case OS_OPT_PEND_FLAG_CLR_ANY | OS_OPT_PEND_NON_BLOCKING:
 360:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         case OS_OPT_PEND_FLAG_SET_ALL | OS_OPT_PEND_NON_BLOCKING:
 361:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         case OS_OPT_PEND_FLAG_SET_ANY | OS_OPT_PEND_NON_BLOCKING:
 362:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         case OS_OPT_PEND_FLAG_CLR_ALL | OS_OPT_PEND_FLAG_CONSUME | OS_OPT_PEND_NON_BLOCKING:
 363:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         case OS_OPT_PEND_FLAG_CLR_ANY | OS_OPT_PEND_FLAG_CONSUME | OS_OPT_PEND_NON_BLOCKING:
 364:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         case OS_OPT_PEND_FLAG_SET_ALL | OS_OPT_PEND_FLAG_CONSUME | OS_OPT_PEND_NON_BLOCKING:
 365:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         case OS_OPT_PEND_FLAG_SET_ANY | OS_OPT_PEND_FLAG_CONSUME | OS_OPT_PEND_NON_BLOCKING:
 366:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              break;
 367:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 368:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         default:
 369:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****             *p_err = OS_ERR_OPT_INVALID;
 370:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              return ((OS_OBJ_QTY)0);
 371:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     }
 372:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #endif
 373:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 374:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #if OS_CFG_OBJ_TYPE_CHK_EN > 0u
 375:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     if (p_grp->Type != OS_OBJ_TYPE_FLAG) {                  /* Validate that we are pointing at an 
 376:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****        *p_err = OS_ERR_OBJ_TYPE;
 377:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         return ((OS_FLAGS)0);
 378:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     }
 379:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #endif
 380:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 381:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     if ((opt & OS_OPT_PEND_FLAG_CONSUME) != (OS_OPT)0) {    /* See if we need to consume the flags 
 455              		.loc 1 381 0
 456 00d0 7B88     		ldrh	r3, [r7, #2]
 457 00d2 03F48073 		and	r3, r3, #256
 458 00d6 002B     		cmp	r3, #0
 459 00d8 07D1     		bne	.L32
 460 00da 0BE0     		b	.L81
 461              	.L26:
 462              		.loc 1 369 0
 463 00dc FB6C     		ldr	r3, [r7, #76]
 464 00de 45F62562 		movw	r2, #24101
 465 00e2 1A80     		strh	r2, [r3, #0]	@ movhi
 466              		.loc 1 370 0
 467 00e4 4FF00003 		mov	r3, #0
 468 00e8 5EE2     		b	.L24
 469              	.L32:
 382:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         consume = DEF_TRUE;
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 16


 470              		.loc 1 382 0
 471 00ea 4FF00103 		mov	r3, #1
 472 00ee 87F83330 		strb	r3, [r7, #51]
 473 00f2 03E0     		b	.L34
 474              	.L81:
 383:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     } else {
 384:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         consume = DEF_FALSE;
 475              		.loc 1 384 0
 476 00f4 4FF00003 		mov	r3, #0
 477 00f8 87F83330 		strb	r3, [r7, #51]
 478              	.L34:
 385:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     }
 386:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 387:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     if (p_ts != (CPU_TS *)0) {
 479              		.loc 1 387 0
 480 00fc BB6C     		ldr	r3, [r7, #72]
 481 00fe 002B     		cmp	r3, #0
 482 0100 03D0     		beq	.L35
 388:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****        *p_ts = (CPU_TS)0;                                   /* Initialize the returned timestamp   
 483              		.loc 1 388 0
 484 0102 BB6C     		ldr	r3, [r7, #72]
 485 0104 4FF00002 		mov	r2, #0
 486 0108 1A60     		str	r2, [r3, #0]
 487              	.L35:
 389:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     }
 390:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 391:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     mode = opt & OS_OPT_PEND_FLAG_MASK;
 488              		.loc 1 391 0
 489 010a 7B88     		ldrh	r3, [r7, #2]	@ movhi
 490 010c 03F00F03 		and	r3, r3, #15
 491 0110 7B87     		strh	r3, [r7, #58]	@ movhi
 392:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     CPU_CRITICAL_ENTER();
 492              		.loc 1 392 0
 493 0112 FFF7FEFF 		bl	CPU_SR_Save
 494 0116 0346     		mov	r3, r0
 495 0118 FB63     		str	r3, [r7, #60]
 393:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     switch (mode) {
 496              		.loc 1 393 0
 497 011a 7B8F     		ldrh	r3, [r7, #58]
 498 011c 03F1FF33 		add	r3, r3, #-1
 499 0120 072B     		cmp	r3, #7
 500 0122 00F28181 		bhi	.L36
 501 0126 01A2     		adr	r2, .L41
 502 0128 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 503              		.align	2
 504              	.L41:
 505 012c BB020000 		.word	.L37+1
 506 0130 73030000 		.word	.L38+1
 507 0134 29040000 		.word	.L36+1
 508 0138 4D010000 		.word	.L39+1
 509 013c 29040000 		.word	.L36+1
 510 0140 29040000 		.word	.L36+1
 511 0144 29040000 		.word	.L36+1
 512 0148 05020000 		.word	.L40+1
 513              	.L39:
 394:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         case OS_OPT_PEND_FLAG_SET_ALL:                      /* See if all required flags are set   
 395:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              flags_rdy = (OS_FLAGS)(p_grp->Flags & flags);  /* Extract only the bits we want       
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 17


 514              		.loc 1 395 0
 515 014c FB68     		ldr	r3, [r7, #12]
 516 014e 1A6A     		ldr	r2, [r3, #32]
 517 0150 BB68     		ldr	r3, [r7, #8]
 518 0152 02EA0303 		and	r3, r2, r3
 519 0156 7B63     		str	r3, [r7, #52]
 396:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              if (flags_rdy == flags) {                      /* Must match ALL the bits that we want
 520              		.loc 1 396 0
 521 0158 7A6B     		ldr	r2, [r7, #52]
 522 015a BB68     		ldr	r3, [r7, #8]
 523 015c 9A42     		cmp	r2, r3
 524 015e 24D1     		bne	.L42
 397:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  if (consume == DEF_TRUE) {                 /* See if we need to consume the flags 
 525              		.loc 1 397 0
 526 0160 97F83330 		ldrb	r3, [r7, #51]	@ zero_extendqisi2
 527 0164 012B     		cmp	r3, #1
 528 0166 08D1     		bne	.L43
 398:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                      p_grp->Flags &= ~flags_rdy;            /* Clear ONLY the flags that we wanted 
 529              		.loc 1 398 0
 530 0168 FB68     		ldr	r3, [r7, #12]
 531 016a 1A6A     		ldr	r2, [r3, #32]
 532 016c 7B6B     		ldr	r3, [r7, #52]
 533 016e 6FEA0303 		mvn	r3, r3
 534 0172 02EA0302 		and	r2, r2, r3
 535 0176 FB68     		ldr	r3, [r7, #12]
 536 0178 1A62     		str	r2, [r3, #32]
 537              	.L43:
 399:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  }
 400:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  OSTCBCurPtr->FlagsRdy = flags_rdy;         /* Save flags that were ready          
 538              		.loc 1 400 0
 539 017a 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 540 017e C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 541 0182 1B68     		ldr	r3, [r3, #0]
 542 0184 7A6B     		ldr	r2, [r7, #52]
 543 0186 C3F88420 		str	r2, [r3, #132]
 401:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  if (p_ts != (CPU_TS *)0) {
 544              		.loc 1 401 0
 545 018a BB6C     		ldr	r3, [r7, #72]
 546 018c 002B     		cmp	r3, #0
 547 018e 03D0     		beq	.L44
 402:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                     *p_ts  = p_grp->TS;
 548              		.loc 1 402 0
 549 0190 FB68     		ldr	r3, [r7, #12]
 550 0192 5A6A     		ldr	r2, [r3, #36]
 551 0194 BB6C     		ldr	r3, [r7, #72]
 552 0196 1A60     		str	r2, [r3, #0]
 553              	.L44:
 403:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  }
 404:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  CPU_CRITICAL_EXIT();                       /* Yes, condition met, return to caller
 554              		.loc 1 404 0
 555 0198 F86B     		ldr	r0, [r7, #60]
 556 019a FFF7FEFF 		bl	CPU_SR_Restore
 405:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                 *p_err = OS_ERR_NONE;
 557              		.loc 1 405 0
 558 019e FB6C     		ldr	r3, [r7, #76]
 559 01a0 4FF00002 		mov	r2, #0
 560 01a4 1A80     		strh	r2, [r3, #0]	@ movhi
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 18


 406:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  return (flags_rdy);
 561              		.loc 1 406 0
 562 01a6 7B6B     		ldr	r3, [r7, #52]
 563 01a8 FEE1     		b	.L24
 564              	.L42:
 407:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              } else {                                       /* Block task until events occur or tim
 408:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  if ((opt & OS_OPT_PEND_NON_BLOCKING) != (OS_OPT)0) {
 565              		.loc 1 408 0
 566 01aa 7B88     		ldrh	r3, [r7, #2]
 567 01ac 1BB2     		sxth	r3, r3
 568 01ae 002B     		cmp	r3, #0
 569 01b0 09DA     		bge	.L45
 409:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                      CPU_CRITICAL_EXIT();
 570              		.loc 1 409 0
 571 01b2 F86B     		ldr	r0, [r7, #60]
 572 01b4 FFF7FEFF 		bl	CPU_SR_Restore
 410:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                     *p_err = OS_ERR_PEND_WOULD_BLOCK;       /* Specified non-blocking so task would
 573              		.loc 1 410 0
 574 01b8 FB6C     		ldr	r3, [r7, #76]
 575 01ba 46F2B012 		movw	r2, #25008
 576 01be 1A80     		strh	r2, [r3, #0]	@ movhi
 411:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                      return ((OS_FLAGS)0);
 577              		.loc 1 411 0
 578 01c0 4FF00003 		mov	r3, #0
 579 01c4 F0E1     		b	.L24
 580              	.L45:
 412:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  } else {                                   /* Specified blocking so check is sched
 413:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                      if (OSSchedLockNestingCtr > (OS_NESTING_CTR)0) { /* See if called with schedul
 581              		.loc 1 413 0
 582 01c6 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 583 01ca C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 584 01ce 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 585 01d0 002B     		cmp	r3, #0
 586 01d2 09D0     		beq	.L46
 414:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                          CPU_CRITICAL_EXIT();
 587              		.loc 1 414 0
 588 01d4 F86B     		ldr	r0, [r7, #60]
 589 01d6 FFF7FEFF 		bl	CPU_SR_Restore
 415:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                         *p_err = OS_ERR_SCHED_LOCKED;                 /* ... can't PEND when locked
 590              		.loc 1 415 0
 591 01da FB6C     		ldr	r3, [r7, #76]
 592 01dc 46F66352 		movw	r2, #28003
 593 01e0 1A80     		strh	r2, [r3, #0]	@ movhi
 416:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                          return ((OS_FLAGS)0);
 594              		.loc 1 416 0
 595 01e2 4FF00003 		mov	r3, #0
 596 01e6 DFE1     		b	.L24
 597              	.L46:
 417:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                      }
 418:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  }
 419:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                                                             /* Lock the scheduler/re-enable interru
 420:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  OS_CRITICAL_ENTER_CPU_EXIT();              
 421:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  OS_FlagBlock(&pend_data,
 598              		.loc 1 421 0
 599 01e8 07F11002 		add	r2, r7, #16
 600 01ec 7B88     		ldrh	r3, [r7, #2]
 601 01ee 7968     		ldr	r1, [r7, #4]
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 19


 602 01f0 0091     		str	r1, [sp, #0]
 603 01f2 1046     		mov	r0, r2
 604 01f4 F968     		ldr	r1, [r7, #12]
 605 01f6 BA68     		ldr	r2, [r7, #8]
 606 01f8 FFF7FEFF 		bl	OS_FlagBlock
 422:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                               p_grp,
 423:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                               flags,
 424:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                               opt,
 425:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                               timeout);
 426:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  OS_CRITICAL_EXIT_NO_SCHED();
 607              		.loc 1 426 0
 608 01fc F86B     		ldr	r0, [r7, #60]
 609 01fe FFF7FEFF 		bl	CPU_SR_Restore
 427:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              }
 428:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              break;
 610              		.loc 1 428 0
 611 0202 1BE1     		b	.L47
 612              	.L40:
 429:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 430:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         case OS_OPT_PEND_FLAG_SET_ANY:
 431:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              flags_rdy = (OS_FLAGS)(p_grp->Flags & flags);  /* Extract only the bits we want       
 613              		.loc 1 431 0
 614 0204 FB68     		ldr	r3, [r7, #12]
 615 0206 1A6A     		ldr	r2, [r3, #32]
 616 0208 BB68     		ldr	r3, [r7, #8]
 617 020a 02EA0303 		and	r3, r2, r3
 618 020e 7B63     		str	r3, [r7, #52]
 432:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              if (flags_rdy != (OS_FLAGS)0) {                /* See if any flag set                 
 619              		.loc 1 432 0
 620 0210 7B6B     		ldr	r3, [r7, #52]
 621 0212 002B     		cmp	r3, #0
 622 0214 24D0     		beq	.L48
 433:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  if (consume == DEF_TRUE) {                 /* See if we need to consume the flags 
 623              		.loc 1 433 0
 624 0216 97F83330 		ldrb	r3, [r7, #51]	@ zero_extendqisi2
 625 021a 012B     		cmp	r3, #1
 626 021c 08D1     		bne	.L49
 434:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                      p_grp->Flags &= ~flags_rdy;            /* Clear ONLY the flags that we got    
 627              		.loc 1 434 0
 628 021e FB68     		ldr	r3, [r7, #12]
 629 0220 1A6A     		ldr	r2, [r3, #32]
 630 0222 7B6B     		ldr	r3, [r7, #52]
 631 0224 6FEA0303 		mvn	r3, r3
 632 0228 02EA0302 		and	r2, r2, r3
 633 022c FB68     		ldr	r3, [r7, #12]
 634 022e 1A62     		str	r2, [r3, #32]
 635              	.L49:
 435:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  }
 436:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  OSTCBCurPtr->FlagsRdy = flags_rdy;         /* Save flags that were ready          
 636              		.loc 1 436 0
 637 0230 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 638 0234 C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 639 0238 1B68     		ldr	r3, [r3, #0]
 640 023a 7A6B     		ldr	r2, [r7, #52]
 641 023c C3F88420 		str	r2, [r3, #132]
 437:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  if (p_ts != (CPU_TS *)0) {
 642              		.loc 1 437 0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 20


 643 0240 BB6C     		ldr	r3, [r7, #72]
 644 0242 002B     		cmp	r3, #0
 645 0244 03D0     		beq	.L50
 438:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                     *p_ts  = p_grp->TS;
 646              		.loc 1 438 0
 647 0246 FB68     		ldr	r3, [r7, #12]
 648 0248 5A6A     		ldr	r2, [r3, #36]
 649 024a BB6C     		ldr	r3, [r7, #72]
 650 024c 1A60     		str	r2, [r3, #0]
 651              	.L50:
 439:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  }
 440:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  CPU_CRITICAL_EXIT();                       /* Yes, condition met, return to caller
 652              		.loc 1 440 0
 653 024e F86B     		ldr	r0, [r7, #60]
 654 0250 FFF7FEFF 		bl	CPU_SR_Restore
 441:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                 *p_err = OS_ERR_NONE;
 655              		.loc 1 441 0
 656 0254 FB6C     		ldr	r3, [r7, #76]
 657 0256 4FF00002 		mov	r2, #0
 658 025a 1A80     		strh	r2, [r3, #0]	@ movhi
 442:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  return (flags_rdy);
 659              		.loc 1 442 0
 660 025c 7B6B     		ldr	r3, [r7, #52]
 661 025e A3E1     		b	.L24
 662              	.L48:
 443:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              } else {                                       /* Block task until events occur or tim
 444:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  if ((opt & OS_OPT_PEND_NON_BLOCKING) != (OS_OPT)0) {
 663              		.loc 1 444 0
 664 0260 7B88     		ldrh	r3, [r7, #2]
 665 0262 1BB2     		sxth	r3, r3
 666 0264 002B     		cmp	r3, #0
 667 0266 09DA     		bge	.L51
 445:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                      CPU_CRITICAL_EXIT();
 668              		.loc 1 445 0
 669 0268 F86B     		ldr	r0, [r7, #60]
 670 026a FFF7FEFF 		bl	CPU_SR_Restore
 446:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                     *p_err = OS_ERR_PEND_WOULD_BLOCK;       /* Specified non-blocking so task would
 671              		.loc 1 446 0
 672 026e FB6C     		ldr	r3, [r7, #76]
 673 0270 46F2B012 		movw	r2, #25008
 674 0274 1A80     		strh	r2, [r3, #0]	@ movhi
 447:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                      return ((OS_FLAGS)0);
 675              		.loc 1 447 0
 676 0276 4FF00003 		mov	r3, #0
 677 027a 95E1     		b	.L24
 678              	.L51:
 448:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  } else {                                   /* Specified blocking so check is sched
 449:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                      if (OSSchedLockNestingCtr > (OS_NESTING_CTR)0) { /* See if called with schedul
 679              		.loc 1 449 0
 680 027c 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 681 0280 C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 682 0284 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 683 0286 002B     		cmp	r3, #0
 684 0288 09D0     		beq	.L52
 450:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                          CPU_CRITICAL_EXIT();
 685              		.loc 1 450 0
 686 028a F86B     		ldr	r0, [r7, #60]
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 21


 687 028c FFF7FEFF 		bl	CPU_SR_Restore
 451:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                         *p_err = OS_ERR_SCHED_LOCKED;                 /* ... can't PEND when locked
 688              		.loc 1 451 0
 689 0290 FB6C     		ldr	r3, [r7, #76]
 690 0292 46F66352 		movw	r2, #28003
 691 0296 1A80     		strh	r2, [r3, #0]	@ movhi
 452:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                          return ((OS_FLAGS)0);
 692              		.loc 1 452 0
 693 0298 4FF00003 		mov	r3, #0
 694 029c 84E1     		b	.L24
 695              	.L52:
 453:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                      }
 454:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  }
 455:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                                                             /* Lock the scheduler/re-enable interru
 456:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  OS_CRITICAL_ENTER_CPU_EXIT();              
 457:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  OS_FlagBlock(&pend_data,
 696              		.loc 1 457 0
 697 029e 07F11002 		add	r2, r7, #16
 698 02a2 7B88     		ldrh	r3, [r7, #2]
 699 02a4 7968     		ldr	r1, [r7, #4]
 700 02a6 0091     		str	r1, [sp, #0]
 701 02a8 1046     		mov	r0, r2
 702 02aa F968     		ldr	r1, [r7, #12]
 703 02ac BA68     		ldr	r2, [r7, #8]
 704 02ae FFF7FEFF 		bl	OS_FlagBlock
 458:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                               p_grp,
 459:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                               flags,
 460:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                               opt,
 461:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                               timeout);
 462:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  OS_CRITICAL_EXIT_NO_SCHED();
 705              		.loc 1 462 0
 706 02b2 F86B     		ldr	r0, [r7, #60]
 707 02b4 FFF7FEFF 		bl	CPU_SR_Restore
 463:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              }
 464:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              break;
 708              		.loc 1 464 0
 709 02b8 C0E0     		b	.L47
 710              	.L37:
 465:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 466:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #if OS_CFG_FLAG_MODE_CLR_EN > 0u
 467:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         case OS_OPT_PEND_FLAG_CLR_ALL:                      /* See if all required flags are cleare
 468:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              flags_rdy = (OS_FLAGS)(~p_grp->Flags & flags); /* Extract only the bits we want       
 711              		.loc 1 468 0
 712 02ba FB68     		ldr	r3, [r7, #12]
 713 02bc 1B6A     		ldr	r3, [r3, #32]
 714 02be 6FEA0302 		mvn	r2, r3
 715 02c2 BB68     		ldr	r3, [r7, #8]
 716 02c4 02EA0303 		and	r3, r2, r3
 717 02c8 7B63     		str	r3, [r7, #52]
 469:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              if (flags_rdy == flags) {                      /* Must match ALL the bits that we want
 718              		.loc 1 469 0
 719 02ca 7A6B     		ldr	r2, [r7, #52]
 720 02cc BB68     		ldr	r3, [r7, #8]
 721 02ce 9A42     		cmp	r2, r3
 722 02d0 22D1     		bne	.L53
 470:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  if (consume == DEF_TRUE) {                 /* See if we need to consume the flags 
 723              		.loc 1 470 0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 22


 724 02d2 97F83330 		ldrb	r3, [r7, #51]	@ zero_extendqisi2
 725 02d6 012B     		cmp	r3, #1
 726 02d8 06D1     		bne	.L54
 471:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                      p_grp->Flags |= flags_rdy;             /* Set ONLY the flags that we wanted   
 727              		.loc 1 471 0
 728 02da FB68     		ldr	r3, [r7, #12]
 729 02dc 1A6A     		ldr	r2, [r3, #32]
 730 02de 7B6B     		ldr	r3, [r7, #52]
 731 02e0 42EA0302 		orr	r2, r2, r3
 732 02e4 FB68     		ldr	r3, [r7, #12]
 733 02e6 1A62     		str	r2, [r3, #32]
 734              	.L54:
 472:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  }
 473:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  OSTCBCurPtr->FlagsRdy = flags_rdy;         /* Save flags that were ready          
 735              		.loc 1 473 0
 736 02e8 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 737 02ec C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 738 02f0 1B68     		ldr	r3, [r3, #0]
 739 02f2 7A6B     		ldr	r2, [r7, #52]
 740 02f4 C3F88420 		str	r2, [r3, #132]
 474:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  if (p_ts != (CPU_TS *)0) {
 741              		.loc 1 474 0
 742 02f8 BB6C     		ldr	r3, [r7, #72]
 743 02fa 002B     		cmp	r3, #0
 744 02fc 03D0     		beq	.L55
 475:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                     *p_ts  = p_grp->TS;
 745              		.loc 1 475 0
 746 02fe FB68     		ldr	r3, [r7, #12]
 747 0300 5A6A     		ldr	r2, [r3, #36]
 748 0302 BB6C     		ldr	r3, [r7, #72]
 749 0304 1A60     		str	r2, [r3, #0]
 750              	.L55:
 476:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  }
 477:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  CPU_CRITICAL_EXIT();                       /* Yes, condition met, return to caller
 751              		.loc 1 477 0
 752 0306 F86B     		ldr	r0, [r7, #60]
 753 0308 FFF7FEFF 		bl	CPU_SR_Restore
 478:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                 *p_err = OS_ERR_NONE;
 754              		.loc 1 478 0
 755 030c FB6C     		ldr	r3, [r7, #76]
 756 030e 4FF00002 		mov	r2, #0
 757 0312 1A80     		strh	r2, [r3, #0]	@ movhi
 479:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  return (flags_rdy);
 758              		.loc 1 479 0
 759 0314 7B6B     		ldr	r3, [r7, #52]
 760 0316 47E1     		b	.L24
 761              	.L53:
 480:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              } else {                                       /* Block task until events occur or tim
 481:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  if ((opt & OS_OPT_PEND_NON_BLOCKING) != (OS_OPT)0) {
 762              		.loc 1 481 0
 763 0318 7B88     		ldrh	r3, [r7, #2]
 764 031a 1BB2     		sxth	r3, r3
 765 031c 002B     		cmp	r3, #0
 766 031e 09DA     		bge	.L56
 482:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                      CPU_CRITICAL_EXIT();
 767              		.loc 1 482 0
 768 0320 F86B     		ldr	r0, [r7, #60]
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 23


 769 0322 FFF7FEFF 		bl	CPU_SR_Restore
 483:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                     *p_err = OS_ERR_PEND_WOULD_BLOCK;       /* Specified non-blocking so task would
 770              		.loc 1 483 0
 771 0326 FB6C     		ldr	r3, [r7, #76]
 772 0328 46F2B012 		movw	r2, #25008
 773 032c 1A80     		strh	r2, [r3, #0]	@ movhi
 484:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                      return ((OS_FLAGS)0);
 774              		.loc 1 484 0
 775 032e 4FF00003 		mov	r3, #0
 776 0332 39E1     		b	.L24
 777              	.L56:
 485:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  } else {                                   /* Specified blocking so check is sched
 486:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                      if (OSSchedLockNestingCtr > (OS_NESTING_CTR)0) { /* See if called with schedul
 778              		.loc 1 486 0
 779 0334 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 780 0338 C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 781 033c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 782 033e 002B     		cmp	r3, #0
 783 0340 09D0     		beq	.L57
 487:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                          CPU_CRITICAL_EXIT();
 784              		.loc 1 487 0
 785 0342 F86B     		ldr	r0, [r7, #60]
 786 0344 FFF7FEFF 		bl	CPU_SR_Restore
 488:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                         *p_err = OS_ERR_SCHED_LOCKED;                 /* ... can't PEND when locked
 787              		.loc 1 488 0
 788 0348 FB6C     		ldr	r3, [r7, #76]
 789 034a 46F66352 		movw	r2, #28003
 790 034e 1A80     		strh	r2, [r3, #0]	@ movhi
 489:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                          return ((OS_FLAGS)0);
 791              		.loc 1 489 0
 792 0350 4FF00003 		mov	r3, #0
 793 0354 28E1     		b	.L24
 794              	.L57:
 490:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                      }
 491:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  }
 492:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                                                             
 493:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  OS_CRITICAL_ENTER_CPU_EXIT();              /* Lock the scheduler/re-enable interru
 494:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  OS_FlagBlock(&pend_data,
 795              		.loc 1 494 0
 796 0356 07F11002 		add	r2, r7, #16
 797 035a 7B88     		ldrh	r3, [r7, #2]
 798 035c 7968     		ldr	r1, [r7, #4]
 799 035e 0091     		str	r1, [sp, #0]
 800 0360 1046     		mov	r0, r2
 801 0362 F968     		ldr	r1, [r7, #12]
 802 0364 BA68     		ldr	r2, [r7, #8]
 803 0366 FFF7FEFF 		bl	OS_FlagBlock
 495:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                               p_grp,
 496:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                               flags,
 497:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                               opt,
 498:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                               timeout);
 499:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  OS_CRITICAL_EXIT_NO_SCHED();
 804              		.loc 1 499 0
 805 036a F86B     		ldr	r0, [r7, #60]
 806 036c FFF7FEFF 		bl	CPU_SR_Restore
 500:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              }
 501:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              break;
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 24


 807              		.loc 1 501 0
 808 0370 64E0     		b	.L47
 809              	.L38:
 502:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 503:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         case OS_OPT_PEND_FLAG_CLR_ANY:
 504:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              flags_rdy = (OS_FLAGS)(~p_grp->Flags & flags); /* Extract only the bits we want       
 810              		.loc 1 504 0
 811 0372 FB68     		ldr	r3, [r7, #12]
 812 0374 1B6A     		ldr	r3, [r3, #32]
 813 0376 6FEA0302 		mvn	r2, r3
 814 037a BB68     		ldr	r3, [r7, #8]
 815 037c 02EA0303 		and	r3, r2, r3
 816 0380 7B63     		str	r3, [r7, #52]
 505:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              if (flags_rdy != (OS_FLAGS)0) {                /* See if any flag cleared             
 817              		.loc 1 505 0
 818 0382 7B6B     		ldr	r3, [r7, #52]
 819 0384 002B     		cmp	r3, #0
 820 0386 22D0     		beq	.L58
 506:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  if (consume == DEF_TRUE) {                 /* See if we need to consume the flags 
 821              		.loc 1 506 0
 822 0388 97F83330 		ldrb	r3, [r7, #51]	@ zero_extendqisi2
 823 038c 012B     		cmp	r3, #1
 824 038e 06D1     		bne	.L59
 507:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                      p_grp->Flags |= flags_rdy;             /* Set ONLY the flags that we got      
 825              		.loc 1 507 0
 826 0390 FB68     		ldr	r3, [r7, #12]
 827 0392 1A6A     		ldr	r2, [r3, #32]
 828 0394 7B6B     		ldr	r3, [r7, #52]
 829 0396 42EA0302 		orr	r2, r2, r3
 830 039a FB68     		ldr	r3, [r7, #12]
 831 039c 1A62     		str	r2, [r3, #32]
 832              	.L59:
 508:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  }
 509:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  OSTCBCurPtr->FlagsRdy = flags_rdy;         /* Save flags that were ready          
 833              		.loc 1 509 0
 834 039e 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 835 03a2 C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 836 03a6 1B68     		ldr	r3, [r3, #0]
 837 03a8 7A6B     		ldr	r2, [r7, #52]
 838 03aa C3F88420 		str	r2, [r3, #132]
 510:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  if (p_ts != (CPU_TS *)0) {
 839              		.loc 1 510 0
 840 03ae BB6C     		ldr	r3, [r7, #72]
 841 03b0 002B     		cmp	r3, #0
 842 03b2 03D0     		beq	.L60
 511:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                     *p_ts  = p_grp->TS;
 843              		.loc 1 511 0
 844 03b4 FB68     		ldr	r3, [r7, #12]
 845 03b6 5A6A     		ldr	r2, [r3, #36]
 846 03b8 BB6C     		ldr	r3, [r7, #72]
 847 03ba 1A60     		str	r2, [r3, #0]
 848              	.L60:
 512:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  }
 513:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  CPU_CRITICAL_EXIT();                       /* Yes, condition met, return to caller
 849              		.loc 1 513 0
 850 03bc F86B     		ldr	r0, [r7, #60]
 851 03be FFF7FEFF 		bl	CPU_SR_Restore
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 25


 514:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                 *p_err = OS_ERR_NONE;
 852              		.loc 1 514 0
 853 03c2 FB6C     		ldr	r3, [r7, #76]
 854 03c4 4FF00002 		mov	r2, #0
 855 03c8 1A80     		strh	r2, [r3, #0]	@ movhi
 515:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  return (flags_rdy);
 856              		.loc 1 515 0
 857 03ca 7B6B     		ldr	r3, [r7, #52]
 858 03cc ECE0     		b	.L24
 859              	.L58:
 516:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              } else {                                       /* Block task until events occur or tim
 517:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  if ((opt & OS_OPT_PEND_NON_BLOCKING) != (OS_OPT)0) {
 860              		.loc 1 517 0
 861 03ce 7B88     		ldrh	r3, [r7, #2]
 862 03d0 1BB2     		sxth	r3, r3
 863 03d2 002B     		cmp	r3, #0
 864 03d4 09DA     		bge	.L61
 518:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                      CPU_CRITICAL_EXIT();
 865              		.loc 1 518 0
 866 03d6 F86B     		ldr	r0, [r7, #60]
 867 03d8 FFF7FEFF 		bl	CPU_SR_Restore
 519:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                     *p_err = OS_ERR_PEND_WOULD_BLOCK;       /* Specified non-blocking so task would
 868              		.loc 1 519 0
 869 03dc FB6C     		ldr	r3, [r7, #76]
 870 03de 46F2B012 		movw	r2, #25008
 871 03e2 1A80     		strh	r2, [r3, #0]	@ movhi
 520:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                      return ((OS_FLAGS)0);
 872              		.loc 1 520 0
 873 03e4 4FF00003 		mov	r3, #0
 874 03e8 DEE0     		b	.L24
 875              	.L61:
 521:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  } else {                                   /* Specified blocking so check is sched
 522:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                      if (OSSchedLockNestingCtr > (OS_NESTING_CTR)0) { /* See if called with schedul
 876              		.loc 1 522 0
 877 03ea 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 878 03ee C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 879 03f2 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 880 03f4 002B     		cmp	r3, #0
 881 03f6 09D0     		beq	.L62
 523:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                          CPU_CRITICAL_EXIT();
 882              		.loc 1 523 0
 883 03f8 F86B     		ldr	r0, [r7, #60]
 884 03fa FFF7FEFF 		bl	CPU_SR_Restore
 524:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                         *p_err = OS_ERR_SCHED_LOCKED;                 /* ... can't PEND when locked
 885              		.loc 1 524 0
 886 03fe FB6C     		ldr	r3, [r7, #76]
 887 0400 46F66352 		movw	r2, #28003
 888 0404 1A80     		strh	r2, [r3, #0]	@ movhi
 525:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                          return ((OS_FLAGS)0);
 889              		.loc 1 525 0
 890 0406 4FF00003 		mov	r3, #0
 891 040a CDE0     		b	.L24
 892              	.L62:
 526:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                      }
 527:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  }
 528:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                                                             
 529:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  OS_CRITICAL_ENTER_CPU_EXIT();              /* Lock the scheduler/re-enable interru
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 26


 530:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  OS_FlagBlock(&pend_data,              
 893              		.loc 1 530 0
 894 040c 07F11002 		add	r2, r7, #16
 895 0410 7B88     		ldrh	r3, [r7, #2]
 896 0412 7968     		ldr	r1, [r7, #4]
 897 0414 0091     		str	r1, [sp, #0]
 898 0416 1046     		mov	r0, r2
 899 0418 F968     		ldr	r1, [r7, #12]
 900 041a BA68     		ldr	r2, [r7, #8]
 901 041c FFF7FEFF 		bl	OS_FlagBlock
 531:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                               p_grp,
 532:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                               flags,
 533:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                               opt,
 534:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                               timeout);
 535:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  OS_CRITICAL_EXIT_NO_SCHED();
 902              		.loc 1 535 0
 903 0420 F86B     		ldr	r0, [r7, #60]
 904 0422 FFF7FEFF 		bl	CPU_SR_Restore
 536:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              }
 537:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              break;
 905              		.loc 1 537 0
 906 0426 09E0     		b	.L47
 907              	.L36:
 538:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #endif
 539:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 540:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         default:
 541:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              CPU_CRITICAL_EXIT();
 908              		.loc 1 541 0
 909 0428 F86B     		ldr	r0, [r7, #60]
 910 042a FFF7FEFF 		bl	CPU_SR_Restore
 542:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****             *p_err = OS_ERR_OPT_INVALID;
 911              		.loc 1 542 0
 912 042e FB6C     		ldr	r3, [r7, #76]
 913 0430 45F62562 		movw	r2, #24101
 914 0434 1A80     		strh	r2, [r3, #0]	@ movhi
 543:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              return ((OS_FLAGS)0);
 915              		.loc 1 543 0
 916 0436 4FF00003 		mov	r3, #0
 917 043a B5E0     		b	.L24
 918              	.L47:
 544:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     }
 545:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 546:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     OSSched();                                              /* Find next HPT ready to run          
 919              		.loc 1 546 0
 920 043c FFF7FEFF 		bl	OSSched
 547:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 548:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     CPU_CRITICAL_ENTER();
 921              		.loc 1 548 0
 922 0440 FFF7FEFF 		bl	CPU_SR_Save
 923 0444 0346     		mov	r3, r0
 924 0446 FB63     		str	r3, [r7, #60]
 549:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     switch (OSTCBCurPtr->PendStatus) {
 925              		.loc 1 549 0
 926 0448 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 927 044c C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 928 0450 1B68     		ldr	r3, [r3, #0]
 929 0452 93F83530 		ldrb	r3, [r3, #53]	@ zero_extendqisi2
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 27


 930 0456 032B     		cmp	r3, #3
 931 0458 4FD8     		bhi	.L63
 932 045a 01A2     		adr	r2, .L68
 933 045c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 934              		.align	2
 935              	.L68:
 936 0460 71040000 		.word	.L64+1
 937 0464 91040000 		.word	.L65+1
 938 0468 D5040000 		.word	.L66+1
 939 046c B7040000 		.word	.L67+1
 940              	.L64:
 550:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         case OS_STATUS_PEND_OK:                             /* We got the vent flags               
 551:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              if (p_ts != (CPU_TS *)0) {
 941              		.loc 1 551 0
 942 0470 BB6C     		ldr	r3, [r7, #72]
 943 0472 002B     		cmp	r3, #0
 944 0474 07D0     		beq	.L69
 552:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                 *p_ts  = OSTCBCurPtr->TS;
 945              		.loc 1 552 0
 946 0476 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 947 047a C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 948 047e 1B68     		ldr	r3, [r3, #0]
 949 0480 1A6C     		ldr	r2, [r3, #64]
 950 0482 BB6C     		ldr	r3, [r7, #72]
 951 0484 1A60     		str	r2, [r3, #0]
 952              	.L69:
 553:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              }
 554:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****             *p_err = OS_ERR_NONE;
 953              		.loc 1 554 0
 954 0486 FB6C     		ldr	r3, [r7, #76]
 955 0488 4FF00002 		mov	r2, #0
 956 048c 1A80     		strh	r2, [r3, #0]	@ movhi
 555:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              break;
 957              		.loc 1 555 0
 958 048e 3BE0     		b	.L70
 959              	.L65:
 556:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 557:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         case OS_STATUS_PEND_ABORT:                          /* Indicate that we aborted            
 558:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              if (p_ts != (CPU_TS *)0) {
 960              		.loc 1 558 0
 961 0490 BB6C     		ldr	r3, [r7, #72]
 962 0492 002B     		cmp	r3, #0
 963 0494 07D0     		beq	.L71
 559:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                 *p_ts  = OSTCBCurPtr->TS;
 964              		.loc 1 559 0
 965 0496 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 966 049a C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 967 049e 1B68     		ldr	r3, [r3, #0]
 968 04a0 1A6C     		ldr	r2, [r3, #64]
 969 04a2 BB6C     		ldr	r3, [r7, #72]
 970 04a4 1A60     		str	r2, [r3, #0]
 971              	.L71:
 560:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              }
 561:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              CPU_CRITICAL_EXIT();
 972              		.loc 1 561 0
 973 04a6 F86B     		ldr	r0, [r7, #60]
 974 04a8 FFF7FEFF 		bl	CPU_SR_Restore
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 28


 562:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****             *p_err = OS_ERR_PEND_ABORT;
 975              		.loc 1 562 0
 976 04ac FB6C     		ldr	r3, [r7, #76]
 977 04ae 46F2A912 		movw	r2, #25001
 978 04b2 1A80     		strh	r2, [r3, #0]	@ movhi
 563:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              break;
 979              		.loc 1 563 0
 980 04b4 28E0     		b	.L70
 981              	.L67:
 564:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 565:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         case OS_STATUS_PEND_TIMEOUT:                        /* Indicate that we didn't get semaphor
 566:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              if (p_ts != (CPU_TS *)0) {
 982              		.loc 1 566 0
 983 04b6 BB6C     		ldr	r3, [r7, #72]
 984 04b8 002B     		cmp	r3, #0
 985 04ba 03D0     		beq	.L72
 567:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                 *p_ts  = (CPU_TS  )0;
 986              		.loc 1 567 0
 987 04bc BB6C     		ldr	r3, [r7, #72]
 988 04be 4FF00002 		mov	r2, #0
 989 04c2 1A60     		str	r2, [r3, #0]
 990              	.L72:
 568:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              }
 569:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              CPU_CRITICAL_EXIT();
 991              		.loc 1 569 0
 992 04c4 F86B     		ldr	r0, [r7, #60]
 993 04c6 FFF7FEFF 		bl	CPU_SR_Restore
 570:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****             *p_err = OS_ERR_TIMEOUT;
 994              		.loc 1 570 0
 995 04ca FB6C     		ldr	r3, [r7, #76]
 996 04cc 47F2D922 		movw	r2, #29401
 997 04d0 1A80     		strh	r2, [r3, #0]	@ movhi
 571:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              break;
 998              		.loc 1 571 0
 999 04d2 19E0     		b	.L70
 1000              	.L66:
 572:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 573:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         case OS_STATUS_PEND_DEL:                            /* Indicate that object pended on has b
 574:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              if (p_ts != (CPU_TS *)0) {
 1001              		.loc 1 574 0
 1002 04d4 BB6C     		ldr	r3, [r7, #72]
 1003 04d6 002B     		cmp	r3, #0
 1004 04d8 07D0     		beq	.L73
 575:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                 *p_ts  = OSTCBCurPtr->TS;
 1005              		.loc 1 575 0
 1006 04da 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 1007 04de C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 1008 04e2 1B68     		ldr	r3, [r3, #0]
 1009 04e4 1A6C     		ldr	r2, [r3, #64]
 1010 04e6 BB6C     		ldr	r3, [r7, #72]
 1011 04e8 1A60     		str	r2, [r3, #0]
 1012              	.L73:
 576:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              }
 577:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              CPU_CRITICAL_EXIT();
 1013              		.loc 1 577 0
 1014 04ea F86B     		ldr	r0, [r7, #60]
 1015 04ec FFF7FEFF 		bl	CPU_SR_Restore
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 29


 578:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****             *p_err = OS_ERR_OBJ_DEL;
 1016              		.loc 1 578 0
 1017 04f0 FB6C     		ldr	r3, [r7, #76]
 1018 04f2 45F6C252 		movw	r2, #24002
 1019 04f6 1A80     		strh	r2, [r3, #0]	@ movhi
 579:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              break;
 1020              		.loc 1 579 0
 1021 04f8 06E0     		b	.L70
 1022              	.L63:
 580:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 581:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         default:
 582:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              CPU_CRITICAL_EXIT();
 1023              		.loc 1 582 0
 1024 04fa F86B     		ldr	r0, [r7, #60]
 1025 04fc FFF7FEFF 		bl	CPU_SR_Restore
 583:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****             *p_err = OS_ERR_STATUS_INVALID;
 1026              		.loc 1 583 0
 1027 0500 FB6C     		ldr	r3, [r7, #76]
 1028 0502 46F62E62 		movw	r2, #28206
 1029 0506 1A80     		strh	r2, [r3, #0]	@ movhi
 1030              	.L70:
 584:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              break;
 585:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     }
 586:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     if (*p_err != OS_ERR_NONE) {
 1031              		.loc 1 586 0
 1032 0508 FB6C     		ldr	r3, [r7, #76]
 1033 050a 1B88     		ldrh	r3, [r3, #0]
 1034 050c 002B     		cmp	r3, #0
 1035 050e 02D0     		beq	.L74
 587:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         return ((OS_FLAGS)0);
 1036              		.loc 1 587 0
 1037 0510 4FF00003 		mov	r3, #0
 1038 0514 48E0     		b	.L24
 1039              	.L74:
 588:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     }
 589:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 590:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     flags_rdy = OSTCBCurPtr->FlagsRdy;
 1040              		.loc 1 590 0
 1041 0516 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 1042 051a C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 1043 051e 1B68     		ldr	r3, [r3, #0]
 1044 0520 D3F88430 		ldr	r3, [r3, #132]
 1045 0524 7B63     		str	r3, [r7, #52]
 591:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     if (consume == DEF_TRUE) {                              /* See if we need to consume the flags 
 1046              		.loc 1 591 0
 1047 0526 97F83330 		ldrb	r3, [r7, #51]	@ zero_extendqisi2
 1048 052a 012B     		cmp	r3, #1
 1049 052c 34D1     		bne	.L75
 592:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         switch (mode) {
 1050              		.loc 1 592 0
 1051 052e 7B8F     		ldrh	r3, [r7, #58]
 1052 0530 03F1FF33 		add	r3, r3, #-1
 1053 0534 072B     		cmp	r3, #7
 1054 0536 25D8     		bhi	.L76
 1055 0538 01A2     		adr	r2, .L79
 1056 053a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1057 053e 00BF     		.align	2
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 30


 1058              	.L79:
 1059 0540 75050000 		.word	.L77+1
 1060 0544 75050000 		.word	.L77+1
 1061 0548 85050000 		.word	.L76+1
 1062 054c 61050000 		.word	.L78+1
 1063 0550 85050000 		.word	.L76+1
 1064 0554 85050000 		.word	.L76+1
 1065 0558 85050000 		.word	.L76+1
 1066 055c 61050000 		.word	.L78+1
 1067              	.L78:
 593:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****             case OS_OPT_PEND_FLAG_SET_ALL:
 594:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****             case OS_OPT_PEND_FLAG_SET_ANY:                  /* Clear ONLY the flags we got         
 595:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  p_grp->Flags &= ~flags_rdy;
 1068              		.loc 1 595 0
 1069 0560 FB68     		ldr	r3, [r7, #12]
 1070 0562 1A6A     		ldr	r2, [r3, #32]
 1071 0564 7B6B     		ldr	r3, [r7, #52]
 1072 0566 6FEA0303 		mvn	r3, r3
 1073 056a 02EA0302 		and	r2, r2, r3
 1074 056e FB68     		ldr	r3, [r7, #12]
 1075 0570 1A62     		str	r2, [r3, #32]
 596:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  break;
 1076              		.loc 1 596 0
 1077 0572 11E0     		b	.L75
 1078              	.L77:
 597:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 598:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #if OS_CFG_FLAG_MODE_CLR_EN > 0u
 599:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****             case OS_OPT_PEND_FLAG_CLR_ALL:
 600:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****             case OS_OPT_PEND_FLAG_CLR_ANY:                  /* Set   ONLY the flags we got         
 601:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  p_grp->Flags |=  flags_rdy;
 1079              		.loc 1 601 0
 1080 0574 FB68     		ldr	r3, [r7, #12]
 1081 0576 1A6A     		ldr	r2, [r3, #32]
 1082 0578 7B6B     		ldr	r3, [r7, #52]
 1083 057a 42EA0302 		orr	r2, r2, r3
 1084 057e FB68     		ldr	r3, [r7, #12]
 1085 0580 1A62     		str	r2, [r3, #32]
 602:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  break;
 1086              		.loc 1 602 0
 1087 0582 09E0     		b	.L75
 1088              	.L76:
 603:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #endif
 604:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****             default:
 605:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  CPU_CRITICAL_EXIT();
 1089              		.loc 1 605 0
 1090 0584 F86B     		ldr	r0, [r7, #60]
 1091 0586 FFF7FEFF 		bl	CPU_SR_Restore
 606:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                 *p_err = OS_ERR_OPT_INVALID;
 1092              		.loc 1 606 0
 1093 058a FB6C     		ldr	r3, [r7, #76]
 1094 058c 45F62562 		movw	r2, #24101
 1095 0590 1A80     		strh	r2, [r3, #0]	@ movhi
 607:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  return ((OS_FLAGS)0);
 1096              		.loc 1 607 0
 1097 0592 4FF00003 		mov	r3, #0
 1098 0596 07E0     		b	.L24
 1099              	.L75:
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 31


 608:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         }
 609:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     }
 610:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     CPU_CRITICAL_EXIT();
 1100              		.loc 1 610 0
 1101 0598 F86B     		ldr	r0, [r7, #60]
 1102 059a FFF7FEFF 		bl	CPU_SR_Restore
 611:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****    *p_err = OS_ERR_NONE;                                    /* Event(s) must have occurred         
 1103              		.loc 1 611 0
 1104 059e FB6C     		ldr	r3, [r7, #76]
 1105 05a0 4FF00002 		mov	r2, #0
 1106 05a4 1A80     		strh	r2, [r3, #0]	@ movhi
 612:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     return (flags_rdy);
 1107              		.loc 1 612 0
 1108 05a6 7B6B     		ldr	r3, [r7, #52]
 1109              	.L24:
 613:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** }
 1110              		.loc 1 613 0
 1111 05a8 1846     		mov	r0, r3
 1112 05aa 07F14007 		add	r7, r7, #64
 1113 05ae BD46     		mov	sp, r7
 1114 05b0 80BD     		pop	{r7, pc}
 1115              		.cfi_endproc
 1116              	.LFE2:
 1117              		.size	OSFlagPend, .-OSFlagPend
 1118 05b2 00BF     		.section	.text.OSFlagPendAbort,"ax",%progbits
 1119              		.align	2
 1120              		.global	OSFlagPendAbort
 1121              		.thumb
 1122              		.thumb_func
 1123              		.type	OSFlagPendAbort, %function
 1124              	OSFlagPendAbort:
 1125              	.LFB3:
 614:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 615:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** /*$PAGE*/
 616:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** /*
 617:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** ***************************************************************************************************
 618:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                          ABORT WAITING ON AN EVENT FLAG GROUP
 619:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 620:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** * Description: This function aborts & readies any tasks currently waiting on an event flag group.  
 621:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *              be used to fault-abort the wait on the event flag group, rather than to normally pos
 622:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *              group OSFlagPost().
 623:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 624:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** * Arguments  : p_grp     is a pointer to the event flag group
 625:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 626:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *              opt       determines the type of ABORT performed:
 627:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 628:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                            OS_OPT_PEND_ABORT_1          ABORT wait for a single task (HPT) waitin
 629:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                            OS_OPT_PEND_ABORT_ALL        ABORT wait for ALL tasks that are  waitin
 630:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                            OS_OPT_POST_NO_SCHED         Do not call the scheduler
 631:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 632:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *              p_err     is a pointer to a variable that will contain an error code returned by thi
 633:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 634:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                            OS_ERR_NONE                  At least one task waiting on the event fl
 635:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                                         readied and informed of the aborted wait;
 636:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                                         for the number of tasks whose wait on the
 637:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                                         was aborted.
 638:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                            OS_ERR_OBJ_PTR_NULL          If 'p_grp' is a NULL pointer.
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 32


 639:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                            OS_ERR_OBJ_TYPE              If 'p_grp' is not pointing at an event fl
 640:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                            OS_ERR_OPT_INVALID           If you specified an invalid option
 641:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                            OS_ERR_PEND_ABORT_ISR        If you called this function from an ISR
 642:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                            OS_ERR_PEND_ABORT_NONE       No task were pending
 643:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 644:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** * Returns    : == 0          if no tasks were waiting on the event flag group, or upon error.
 645:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *              >  0          if one or more tasks waiting on the event flag group are now readied a
 646:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** ***************************************************************************************************
 647:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** */
 648:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 649:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #if OS_CFG_FLAG_PEND_ABORT_EN > 0u
 650:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** OS_OBJ_QTY  OSFlagPendAbort (OS_FLAG_GRP  *p_grp,
 651:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                              OS_OPT        opt,
 652:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                              OS_ERR       *p_err)
 653:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** {
 1126              		.loc 1 653 0
 1127              		.cfi_startproc
 1128              		@ args = 0, pretend = 0, frame = 40
 1129              		@ frame_needed = 1, uses_anonymous_args = 0
 1130 0000 80B5     		push	{r7, lr}
 1131              	.LCFI9:
 1132              		.cfi_def_cfa_offset 8
 1133 0002 8AB0     		sub	sp, sp, #40
 1134              	.LCFI10:
 1135              		.cfi_def_cfa_offset 48
 1136 0004 00AF     		add	r7, sp, #0
 1137              		.cfi_offset 14, -4
 1138              		.cfi_offset 7, -8
 1139              	.LCFI11:
 1140              		.cfi_def_cfa_register 7
 1141 0006 F860     		str	r0, [r7, #12]
 1142 0008 0B46     		mov	r3, r1
 1143 000a 7A60     		str	r2, [r7, #4]
 1144 000c 7B81     		strh	r3, [r7, #10]	@ movhi
 654:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     OS_PEND_LIST  *p_pend_list;
 655:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     OS_TCB        *p_tcb;
 656:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     CPU_TS         ts;
 657:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     OS_OBJ_QTY     nbr_tasks;
 658:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     CPU_SR_ALLOC();
 1145              		.loc 1 658 0
 1146 000e 4FF00003 		mov	r3, #0
 1147 0012 7B62     		str	r3, [r7, #36]
 659:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 660:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 661:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 662:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #ifdef OS_SAFETY_CRITICAL
 663:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     if (p_err == (OS_ERR *)0) {
 664:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 665:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         return ((OS_OBJ_QTY)0u);
 666:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     }
 667:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #endif
 668:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 669:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #if OS_CFG_CALLED_FROM_ISR_CHK_EN > 0u
 670:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     if (OSIntNestingCtr > (OS_NESTING_CTR)0u) {             /* Not allowed to Pend Abort from an IS
 1148              		.loc 1 670 0
 1149 0014 40F20003 		movw	r3, #:lower16:OSIntNestingCtr
 1150 0018 C0F20003 		movt	r3, #:upper16:OSIntNestingCtr
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 33


 1151 001c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1152 001e 002B     		cmp	r3, #0
 1153 0020 06D0     		beq	.L83
 671:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****        *p_err = OS_ERR_PEND_ABORT_ISR;
 1154              		.loc 1 671 0
 1155 0022 7B68     		ldr	r3, [r7, #4]
 1156 0024 46F2AA12 		movw	r2, #25002
 1157 0028 1A80     		strh	r2, [r3, #0]	@ movhi
 672:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         return ((OS_OBJ_QTY)0u);
 1158              		.loc 1 672 0
 1159 002a 4FF00003 		mov	r3, #0
 1160 002e 65E0     		b	.L84
 1161              	.L83:
 673:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     }
 674:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #endif
 675:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 676:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #if OS_CFG_ARG_CHK_EN > 0u
 677:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     if (p_grp == (OS_FLAG_GRP *)0) {                        /* Validate 'p_grp'                    
 1162              		.loc 1 677 0
 1163 0030 FB68     		ldr	r3, [r7, #12]
 1164 0032 002B     		cmp	r3, #0
 1165 0034 06D1     		bne	.L85
 678:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****        *p_err  =  OS_ERR_OBJ_PTR_NULL;
 1166              		.loc 1 678 0
 1167 0036 7B68     		ldr	r3, [r7, #4]
 1168 0038 45F6C352 		movw	r2, #24003
 1169 003c 1A80     		strh	r2, [r3, #0]	@ movhi
 679:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         return ((OS_OBJ_QTY)0u);
 1170              		.loc 1 679 0
 1171 003e 4FF00003 		mov	r3, #0
 1172 0042 5BE0     		b	.L84
 1173              	.L85:
 680:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     }
 681:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     switch (opt) {                                          /* Validate 'opt'                      
 1174              		.loc 1 681 0
 1175 0044 7B89     		ldrh	r3, [r7, #10]
 1176 0046 B3F5807F 		cmp	r3, #256
 1177 004a 0BD0     		beq	.L87
 1178 004c B3F5807F 		cmp	r3, #256
 1179 0050 02DC     		bgt	.L88
 1180 0052 002B     		cmp	r3, #0
 1181 0054 06D0     		beq	.L87
 1182 0056 12E0     		b	.L86
 1183              	.L88:
 1184 0058 B3F5004F 		cmp	r3, #32768
 1185 005c 02D0     		beq	.L87
 1186 005e B3F5014F 		cmp	r3, #33024
 1187 0062 0CD1     		bne	.L86
 1188              	.L87:
 682:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         case OS_OPT_PEND_ABORT_1:
 683:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         case OS_OPT_PEND_ABORT_ALL:
 684:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         case OS_OPT_PEND_ABORT_1   | OS_OPT_POST_NO_SCHED:
 685:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         case OS_OPT_PEND_ABORT_ALL | OS_OPT_POST_NO_SCHED:
 686:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              break;
 687:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 688:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         default:
 689:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****             *p_err = OS_ERR_OPT_INVALID;
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 34


 690:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              return ((OS_OBJ_QTY)0u);
 691:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     }
 692:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #endif
 693:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 694:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #if OS_CFG_OBJ_TYPE_CHK_EN > 0u
 695:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     if (p_grp->Type != OS_OBJ_TYPE_FLAG) {                  /* Make sure event flag group was creat
 696:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****        *p_err = OS_ERR_OBJ_TYPE;
 697:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         return ((OS_OBJ_QTY)0u);
 698:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     }
 699:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #endif
 700:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 701:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     CPU_CRITICAL_ENTER();
 1189              		.loc 1 701 0
 1190 0064 FFF7FEFF 		bl	CPU_SR_Save
 1191 0068 0346     		mov	r3, r0
 1192 006a 7B62     		str	r3, [r7, #36]
 702:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     p_pend_list = &p_grp->PendList;
 1193              		.loc 1 702 0
 1194 006c FB68     		ldr	r3, [r7, #12]
 1195 006e 03F10803 		add	r3, r3, #8
 1196 0072 7B61     		str	r3, [r7, #20]
 703:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     if (p_pend_list->NbrEntries == (OS_OBJ_QTY)0u) {        /* Any task waiting on flag group?     
 1197              		.loc 1 703 0
 1198 0074 7B69     		ldr	r3, [r7, #20]
 1199 0076 1B89     		ldrh	r3, [r3, #8]
 1200 0078 002B     		cmp	r3, #0
 1201 007a 07D0     		beq	.L89
 1202 007c 10E0     		b	.L96
 1203              	.L86:
 1204              		.loc 1 689 0
 1205 007e 7B68     		ldr	r3, [r7, #4]
 1206 0080 45F62562 		movw	r2, #24101
 1207 0084 1A80     		strh	r2, [r3, #0]	@ movhi
 1208              		.loc 1 690 0
 1209 0086 4FF00003 		mov	r3, #0
 1210 008a 37E0     		b	.L84
 1211              	.L89:
 704:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         CPU_CRITICAL_EXIT();                                /* No                                  
 1212              		.loc 1 704 0
 1213 008c 786A     		ldr	r0, [r7, #36]
 1214 008e FFF7FEFF 		bl	CPU_SR_Restore
 705:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****        *p_err = OS_ERR_PEND_ABORT_NONE;
 1215              		.loc 1 705 0
 1216 0092 7B68     		ldr	r3, [r7, #4]
 1217 0094 46F2AB12 		movw	r2, #25003
 1218 0098 1A80     		strh	r2, [r3, #0]	@ movhi
 706:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         return ((OS_OBJ_QTY)0u);
 1219              		.loc 1 706 0
 1220 009a 4FF00003 		mov	r3, #0
 1221 009e 2DE0     		b	.L84
 1222              	.L96:
 707:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     }
 708:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 709:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     OS_CRITICAL_ENTER_CPU_EXIT();
 710:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     nbr_tasks = 0u;
 1223              		.loc 1 710 0
 1224 00a0 4FF00003 		mov	r3, #0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 35


 1225 00a4 7B84     		strh	r3, [r7, #34]	@ movhi
 711:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     ts        = OS_TS_GET();                                /* Get local time stamp so all tasks ge
 1226              		.loc 1 711 0
 1227 00a6 FFF7FEFF 		bl	CPU_TS_TmrRd
 1228 00aa 0346     		mov	r3, r0
 1229 00ac FB61     		str	r3, [r7, #28]
 712:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     while (p_pend_list->NbrEntries > (OS_OBJ_QTY)0u) {
 1230              		.loc 1 712 0
 1231 00ae 11E0     		b	.L91
 1232              	.L93:
 713:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         p_tcb = p_pend_list->HeadPtr->TCBPtr;
 1233              		.loc 1 713 0
 1234 00b0 7B69     		ldr	r3, [r7, #20]
 1235 00b2 1B68     		ldr	r3, [r3, #0]
 1236 00b4 9B68     		ldr	r3, [r3, #8]
 1237 00b6 BB61     		str	r3, [r7, #24]
 714:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         OS_PendAbort((OS_PEND_OBJ *)((void *)p_grp),
 1238              		.loc 1 714 0
 1239 00b8 FB68     		ldr	r3, [r7, #12]
 1240 00ba 1846     		mov	r0, r3
 1241 00bc B969     		ldr	r1, [r7, #24]
 1242 00be FA69     		ldr	r2, [r7, #28]
 1243 00c0 FFF7FEFF 		bl	OS_PendAbort
 715:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                      p_tcb,
 716:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                      ts);
 717:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         nbr_tasks++;
 1244              		.loc 1 717 0
 1245 00c4 7B8C     		ldrh	r3, [r7, #34]	@ movhi
 1246 00c6 03F10103 		add	r3, r3, #1
 1247 00ca 7B84     		strh	r3, [r7, #34]	@ movhi
 718:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         if (opt != OS_OPT_PEND_ABORT_ALL) {                 /* Pend abort all tasks waiting?       
 1248              		.loc 1 718 0
 1249 00cc 7B89     		ldrh	r3, [r7, #10]
 1250 00ce B3F5807F 		cmp	r3, #256
 1251 00d2 04D1     		bne	.L97
 1252              	.L91:
 1253              		.loc 1 712 0
 1254 00d4 7B69     		ldr	r3, [r7, #20]
 1255 00d6 1B89     		ldrh	r3, [r3, #8]
 1256 00d8 002B     		cmp	r3, #0
 1257 00da E9D1     		bne	.L93
 1258 00dc 00E0     		b	.L92
 1259              	.L97:
 719:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****             break;                                          /* No                                  
 1260              		.loc 1 719 0
 1261 00de 00BF     		nop
 1262              	.L92:
 720:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         }
 721:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     }
 722:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     OS_CRITICAL_EXIT_NO_SCHED();
 1263              		.loc 1 722 0
 1264 00e0 786A     		ldr	r0, [r7, #36]
 1265 00e2 FFF7FEFF 		bl	CPU_SR_Restore
 723:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 724:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     if ((opt & OS_OPT_POST_NO_SCHED) == (OS_OPT)0u) {
 1266              		.loc 1 724 0
 1267 00e6 7B89     		ldrh	r3, [r7, #10]
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 36


 1268 00e8 1BB2     		sxth	r3, r3
 1269 00ea 002B     		cmp	r3, #0
 1270 00ec 01DB     		blt	.L94
 725:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         OSSched();                                          /* Run the scheduler                   
 1271              		.loc 1 725 0
 1272 00ee FFF7FEFF 		bl	OSSched
 1273              	.L94:
 726:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     }
 727:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 728:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****    *p_err = OS_ERR_NONE;
 1274              		.loc 1 728 0
 1275 00f2 7B68     		ldr	r3, [r7, #4]
 1276 00f4 4FF00002 		mov	r2, #0
 1277 00f8 1A80     		strh	r2, [r3, #0]	@ movhi
 729:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     return (nbr_tasks);
 1278              		.loc 1 729 0
 1279 00fa 7B8C     		ldrh	r3, [r7, #34]
 1280              	.L84:
 730:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** }
 1281              		.loc 1 730 0
 1282 00fc 1846     		mov	r0, r3
 1283 00fe 07F12807 		add	r7, r7, #40
 1284 0102 BD46     		mov	sp, r7
 1285 0104 80BD     		pop	{r7, pc}
 1286              		.cfi_endproc
 1287              	.LFE3:
 1288              		.size	OSFlagPendAbort, .-OSFlagPendAbort
 1289 0106 00BF     		.section	.text.OSFlagPendGetFlagsRdy,"ax",%progbits
 1290              		.align	2
 1291              		.global	OSFlagPendGetFlagsRdy
 1292              		.thumb
 1293              		.thumb_func
 1294              		.type	OSFlagPendGetFlagsRdy, %function
 1295              	OSFlagPendGetFlagsRdy:
 1296              	.LFB4:
 731:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #endif
 732:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 733:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** /*$PAGE*/
 734:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** /*
 735:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** ***************************************************************************************************
 736:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                       GET FLAGS WHO CAUSED TASK TO BECOME READY
 737:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 738:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** * Description: This function is called to obtain the flags that caused the task to become ready to 
 739:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *              In other words, this function allows you to tell "Who done it!".
 740:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 741:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** * Arguments  : p_err     is a pointer to an error code
 742:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 743:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                            OS_ERR_NONE       if the call was successful
 744:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                            OS_ERR_PEND_ISR   if called from an ISR
 745:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 746:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** * Returns    : The flags that caused the task to be ready.
 747:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** ***************************************************************************************************
 748:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** */
 749:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 750:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** OS_FLAGS  OSFlagPendGetFlagsRdy (OS_ERR  *p_err)
 751:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** {
 1297              		.loc 1 751 0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 37


 1298              		.cfi_startproc
 1299              		@ args = 0, pretend = 0, frame = 16
 1300              		@ frame_needed = 1, uses_anonymous_args = 0
 1301 0000 80B5     		push	{r7, lr}
 1302              	.LCFI12:
 1303              		.cfi_def_cfa_offset 8
 1304 0002 84B0     		sub	sp, sp, #16
 1305              	.LCFI13:
 1306              		.cfi_def_cfa_offset 24
 1307 0004 00AF     		add	r7, sp, #0
 1308              		.cfi_offset 14, -4
 1309              		.cfi_offset 7, -8
 1310              	.LCFI14:
 1311              		.cfi_def_cfa_register 7
 1312 0006 7860     		str	r0, [r7, #4]
 752:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     OS_FLAGS   flags;
 753:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     CPU_SR_ALLOC();
 1313              		.loc 1 753 0
 1314 0008 4FF00003 		mov	r3, #0
 1315 000c FB60     		str	r3, [r7, #12]
 754:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 755:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 756:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 757:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #ifdef OS_SAFETY_CRITICAL
 758:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     if (p_err == (OS_ERR *)0) {
 759:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 760:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         return ((OS_FLAGS)0);
 761:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     }
 762:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #endif
 763:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 764:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #if OS_CFG_CALLED_FROM_ISR_CHK_EN > 0u
 765:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     if (OSIntNestingCtr > (OS_NESTING_CTR)0) {              /* See if called from ISR ...          
 1316              		.loc 1 765 0
 1317 000e 40F20003 		movw	r3, #:lower16:OSIntNestingCtr
 1318 0012 C0F20003 		movt	r3, #:upper16:OSIntNestingCtr
 1319 0016 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1320 0018 002B     		cmp	r3, #0
 1321 001a 06D0     		beq	.L99
 766:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****        *p_err = OS_ERR_PEND_ISR;                            /* ... can't get from an ISR           
 1322              		.loc 1 766 0
 1323 001c 7B68     		ldr	r3, [r7, #4]
 1324 001e 46F2AE12 		movw	r2, #25006
 1325 0022 1A80     		strh	r2, [r3, #0]	@ movhi
 767:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         return ((OS_FLAGS)0);
 1326              		.loc 1 767 0
 1327 0024 4FF00003 		mov	r3, #0
 1328 0028 13E0     		b	.L100
 1329              	.L99:
 768:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     }
 769:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #endif
 770:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 771:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     CPU_CRITICAL_ENTER();
 1330              		.loc 1 771 0
 1331 002a FFF7FEFF 		bl	CPU_SR_Save
 1332 002e 0346     		mov	r3, r0
 1333 0030 FB60     		str	r3, [r7, #12]
 772:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     flags = OSTCBCurPtr->FlagsRdy;
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 38


 1334              		.loc 1 772 0
 1335 0032 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 1336 0036 C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 1337 003a 1B68     		ldr	r3, [r3, #0]
 1338 003c D3F88430 		ldr	r3, [r3, #132]
 1339 0040 BB60     		str	r3, [r7, #8]
 773:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     CPU_CRITICAL_EXIT();
 1340              		.loc 1 773 0
 1341 0042 F868     		ldr	r0, [r7, #12]
 1342 0044 FFF7FEFF 		bl	CPU_SR_Restore
 774:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****    *p_err = OS_ERR_NONE;
 1343              		.loc 1 774 0
 1344 0048 7B68     		ldr	r3, [r7, #4]
 1345 004a 4FF00002 		mov	r2, #0
 1346 004e 1A80     		strh	r2, [r3, #0]	@ movhi
 775:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     return (flags);
 1347              		.loc 1 775 0
 1348 0050 BB68     		ldr	r3, [r7, #8]
 1349              	.L100:
 776:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** }
 1350              		.loc 1 776 0
 1351 0052 1846     		mov	r0, r3
 1352 0054 07F11007 		add	r7, r7, #16
 1353 0058 BD46     		mov	sp, r7
 1354 005a 80BD     		pop	{r7, pc}
 1355              		.cfi_endproc
 1356              	.LFE4:
 1357              		.size	OSFlagPendGetFlagsRdy, .-OSFlagPendGetFlagsRdy
 1358              		.section	.text.OSFlagPost,"ax",%progbits
 1359              		.align	2
 1360              		.global	OSFlagPost
 1361              		.thumb
 1362              		.thumb_func
 1363              		.type	OSFlagPost, %function
 1364              	OSFlagPost:
 1365              	.LFB5:
 777:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 778:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** /*$PAGE*/
 779:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** /*
 780:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** ***************************************************************************************************
 781:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                                POST EVENT FLAG BIT(S)
 782:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 783:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** * Description: This function is called to set or clear some bits in an event flag group.  The bits 
 784:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *              specified by a 'bit mask'.
 785:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 786:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** * Arguments  : p_grp         is a pointer to the desired event flag group.
 787:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 788:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *              flags         If 'opt' (see below) is OS_OPT_POST_FLAG_SET, each bit that is set in 
 789:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                            set the corresponding bit in the event flag group.  e.g. to set bits 0
 790:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                            and 5 you would set 'flags' to:
 791:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 792:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                0x31     (note, bit 0 is least significant bit)
 793:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 794:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                            If 'opt' (see below) is OS_OPT_POST_FLAG_CLR, each bit that is set in 
 795:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                            CLEAR the corresponding bit in the event flag group.  e.g. to clear bi
 796:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                            4 and 5 you would specify 'flags' as:
 797:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 39


 798:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                0x31     (note, bit 0 is least significant bit)
 799:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 800:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *              opt           indicates whether the flags will be:
 801:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 802:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                OS_OPT_POST_FLAG_SET       set
 803:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                OS_OPT_POST_FLAG_CLR       cleared
 804:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 805:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                            you can also 'add' OS_OPT_POST_NO_SCHED to prevent the scheduler from 
 806:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 807:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *              p_err         is a pointer to an error code and can be:
 808:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 809:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                OS_ERR_NONE                The call was successful
 810:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                OS_ERR_OBJ_PTR_NULL        You passed a NULL pointer
 811:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                OS_ERR_OBJ_TYPE            You are not pointing to an event flag g
 812:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                OS_ERR_OPT_INVALID         You specified an invalid option
 813:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 814:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** * Returns    : the new value of the event flags bits that are still set.
 815:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 816:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** * Note(s)    : 1) The execution time of this function depends on the number of tasks waiting on the
 817:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** ***************************************************************************************************
 818:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** */
 819:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 820:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** OS_FLAGS  OSFlagPost (OS_FLAG_GRP  *p_grp,
 821:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                       OS_FLAGS      flags,
 822:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                       OS_OPT        opt,
 823:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                       OS_ERR       *p_err)
 824:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** {
 1366              		.loc 1 824 0
 1367              		.cfi_startproc
 1368              		@ args = 0, pretend = 0, frame = 24
 1369              		@ frame_needed = 1, uses_anonymous_args = 0
 1370 0000 80B5     		push	{r7, lr}
 1371              	.LCFI15:
 1372              		.cfi_def_cfa_offset 8
 1373 0002 88B0     		sub	sp, sp, #32
 1374              	.LCFI16:
 1375              		.cfi_def_cfa_offset 40
 1376 0004 02AF     		add	r7, sp, #8
 1377              		.cfi_offset 14, -4
 1378              		.cfi_offset 7, -8
 1379              	.LCFI17:
 1380              		.cfi_def_cfa 7, 32
 1381 0006 F860     		str	r0, [r7, #12]
 1382 0008 B960     		str	r1, [r7, #8]
 1383 000a 3B60     		str	r3, [r7, #0]
 1384 000c 1346     		mov	r3, r2	@ movhi
 1385 000e FB80     		strh	r3, [r7, #6]	@ movhi
 825:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     OS_FLAGS  flags_cur;
 826:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     CPU_TS    ts;
 827:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 828:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 829:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 830:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #ifdef OS_SAFETY_CRITICAL
 831:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     if (p_err == (OS_ERR *)0) {
 832:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 833:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         return ((OS_FLAGS)0);
 834:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     }
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 40


 835:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #endif
 836:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 837:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #if OS_CFG_ARG_CHK_EN > 0u
 838:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     if (p_grp == (OS_FLAG_GRP *)0) {                        /* Validate 'p_grp'                    
 1386              		.loc 1 838 0
 1387 0010 FB68     		ldr	r3, [r7, #12]
 1388 0012 002B     		cmp	r3, #0
 1389 0014 06D1     		bne	.L103
 839:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****        *p_err  = OS_ERR_OBJ_PTR_NULL;
 1390              		.loc 1 839 0
 1391 0016 3B68     		ldr	r3, [r7, #0]
 1392 0018 45F6C352 		movw	r2, #24003
 1393 001c 1A80     		strh	r2, [r3, #0]	@ movhi
 840:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         return ((OS_FLAGS)0);
 1394              		.loc 1 840 0
 1395 001e 4FF00003 		mov	r3, #0
 1396 0022 1FE0     		b	.L104
 1397              	.L103:
 841:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     }
 842:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     switch (opt) {                                          /* Validate 'opt'                      
 1398              		.loc 1 842 0
 1399 0024 FB88     		ldrh	r3, [r7, #6]
 1400 0026 002B     		cmp	r3, #0
 1401 0028 16DB     		blt	.L105
 1402 002a 012B     		cmp	r3, #1
 1403 002c 03DD     		ble	.L106
 1404 002e A3F50043 		sub	r3, r3, #32768
 1405 0032 012B     		cmp	r3, #1
 1406 0034 10D8     		bhi	.L105
 1407              	.L106:
 843:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         case OS_OPT_POST_FLAG_SET:
 844:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         case OS_OPT_POST_FLAG_CLR:
 845:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         case OS_OPT_POST_FLAG_SET | OS_OPT_POST_NO_SCHED:
 846:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         case OS_OPT_POST_FLAG_CLR | OS_OPT_POST_NO_SCHED:
 847:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              break;
 848:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 849:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         default:
 850:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****             *p_err = OS_ERR_OPT_INVALID;
 851:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              return ((OS_FLAGS)0);
 852:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     }
 853:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #endif
 854:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 855:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #if OS_CFG_OBJ_TYPE_CHK_EN > 0u
 856:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     if (p_grp->Type != OS_OBJ_TYPE_FLAG) {                  /* Make sure we are pointing to an even
 857:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****        *p_err = OS_ERR_OBJ_TYPE;
 858:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         return ((OS_FLAGS)0);
 859:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     }
 860:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #endif
 861:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 862:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     ts = OS_TS_GET();                                       /* Get timestamp                       
 1408              		.loc 1 862 0
 1409 0036 FFF7FEFF 		bl	CPU_TS_TmrRd
 1410 003a 0346     		mov	r3, r0
 1411 003c 7B61     		str	r3, [r7, #20]
 863:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #if OS_CFG_ISR_POST_DEFERRED_EN > 0u
 864:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     if (OSIntNestingCtr > (OS_NESTING_CTR)0) {              /* See if called from an ISR           
 865:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         OS_IntQPost((OS_OBJ_TYPE)OS_OBJ_TYPE_FLAG,          /* Post to ISR queue                   
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 41


 866:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                     (void      *)p_grp,
 867:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                     (void      *)0,
 868:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                     (OS_MSG_SIZE)0,
 869:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                     (OS_FLAGS   )flags,
 870:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                     (OS_OPT     )opt,
 871:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                     (CPU_TS     )ts,
 872:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                     (OS_ERR    *)p_err);
 873:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         return ((OS_FLAGS)0);
 874:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     }
 875:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #endif
 876:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 877:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     flags_cur = OS_FlagPost(p_grp,
 1412              		.loc 1 877 0
 1413 003e FB88     		ldrh	r3, [r7, #6]
 1414 0040 3A68     		ldr	r2, [r7, #0]
 1415 0042 0092     		str	r2, [sp, #0]
 1416 0044 F868     		ldr	r0, [r7, #12]
 1417 0046 B968     		ldr	r1, [r7, #8]
 1418 0048 1A46     		mov	r2, r3
 1419 004a 7B69     		ldr	r3, [r7, #20]
 1420 004c FFF7FEFF 		bl	OS_FlagPost
 1421 0050 0346     		mov	r3, r0
 1422 0052 3B61     		str	r3, [r7, #16]
 878:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                             flags,
 879:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                             opt,
 880:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                             ts,
 881:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                             p_err);
 882:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 883:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     return (flags_cur);
 1423              		.loc 1 883 0
 1424 0054 3B69     		ldr	r3, [r7, #16]
 1425 0056 05E0     		b	.L104
 1426              	.L105:
 1427              		.loc 1 850 0
 1428 0058 3B68     		ldr	r3, [r7, #0]
 1429 005a 45F62562 		movw	r2, #24101
 1430 005e 1A80     		strh	r2, [r3, #0]	@ movhi
 1431              		.loc 1 851 0
 1432 0060 4FF00003 		mov	r3, #0
 1433              	.L104:
 884:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** }
 1434              		.loc 1 884 0
 1435 0064 1846     		mov	r0, r3
 1436 0066 07F11807 		add	r7, r7, #24
 1437 006a BD46     		mov	sp, r7
 1438 006c 80BD     		pop	{r7, pc}
 1439              		.cfi_endproc
 1440              	.LFE5:
 1441              		.size	OSFlagPost, .-OSFlagPost
 1442 006e 00BF     		.section	.text.OS_FlagBlock,"ax",%progbits
 1443              		.align	2
 1444              		.global	OS_FlagBlock
 1445              		.thumb
 1446              		.thumb_func
 1447              		.type	OS_FlagBlock, %function
 1448              	OS_FlagBlock:
 1449              	.LFB6:
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 42


 885:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 886:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** /*$PAGE*/
 887:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** /*
 888:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** ***************************************************************************************************
 889:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                         SUSPEND TASK UNTIL EVENT FLAG(s) RECEIVED OR TIMEOUT OCCURS
 890:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 891:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** * Description: This function is internal to uC/OS-III and is used to put a task to sleep until the 
 892:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *              event flag bit(s) are set.
 893:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 894:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** * Arguments  : p_pend_data    is a pointer to an object used to link the task being blocked to the 
 895:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *              -----------    pending on the desired event flag group.
 896:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 897:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *              p_grp         is a pointer to the desired event flag group.
 898:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *              -----
 899:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 900:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *              flags         Is a bit pattern indicating which bit(s) (i.e. flags) you wish to chec
 901:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                            The bits you want are specified by setting the corresponding bits in
 902:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                            'flags'.  e.g. if your application wants to wait for bits 0 and 1 then
 903:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                            'flags' would contain 0x03.
 904:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 905:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *              opt           specifies whether you want ALL bits to be set/cleared or ANY of the bi
 906:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                            to be set/cleared.
 907:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                            You can specify the following argument:
 908:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 909:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                OS_OPT_PEND_FLAG_CLR_ALL   You will check ALL bits in 'mask' to be
 910:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                OS_OPT_PEND_FLAG_CLR_ANY   You will check ANY bit  in 'mask' to be
 911:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                OS_OPT_PEND_FLAG_SET_ALL   You will check ALL bits in 'mask' to be
 912:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                OS_OPT_PEND_FLAG_SET_ANY   You will check ANY bit  in 'mask' to be
 913:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 914:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *              timeout       is the desired amount of time that the task will wait for the event fl
 915:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                            bit(s) to be set.
 916:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 917:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** * Returns    : none
 918:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 919:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** * Note(s)    : This function is INTERNAL to uC/OS-III and your application should not call it.
 920:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** ***************************************************************************************************
 921:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** */
 922:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 923:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** void  OS_FlagBlock (OS_PEND_DATA  *p_pend_data,
 924:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                     OS_FLAG_GRP   *p_grp,
 925:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                     OS_FLAGS       flags,
 926:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                     OS_OPT         opt,
 927:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                     OS_TICK        timeout)
 928:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** {
 1450              		.loc 1 928 0
 1451              		.cfi_startproc
 1452              		@ args = 4, pretend = 0, frame = 16
 1453              		@ frame_needed = 1, uses_anonymous_args = 0
 1454 0000 80B5     		push	{r7, lr}
 1455              	.LCFI18:
 1456              		.cfi_def_cfa_offset 8
 1457 0002 84B0     		sub	sp, sp, #16
 1458              	.LCFI19:
 1459              		.cfi_def_cfa_offset 24
 1460 0004 00AF     		add	r7, sp, #0
 1461              		.cfi_offset 14, -4
 1462              		.cfi_offset 7, -8
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 43


 1463              	.LCFI20:
 1464              		.cfi_def_cfa_register 7
 1465 0006 F860     		str	r0, [r7, #12]
 1466 0008 B960     		str	r1, [r7, #8]
 1467 000a 7A60     		str	r2, [r7, #4]
 1468 000c 7B80     		strh	r3, [r7, #2]	@ movhi
 929:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     OSTCBCurPtr->FlagsPend = flags;                         /* Save the flags that we need to wait 
 1469              		.loc 1 929 0
 1470 000e 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 1471 0012 C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 1472 0016 1B68     		ldr	r3, [r3, #0]
 1473 0018 7A68     		ldr	r2, [r7, #4]
 1474 001a C3F88020 		str	r2, [r3, #128]
 930:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     OSTCBCurPtr->FlagsOpt  = opt;                           /* Save the type of wait we are doing  
 1475              		.loc 1 930 0
 1476 001e 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 1477 0022 C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 1478 0026 1B68     		ldr	r3, [r3, #0]
 1479 0028 7A88     		ldrh	r2, [r7, #2]	@ movhi
 1480 002a A3F88820 		strh	r2, [r3, #136]	@ movhi
 931:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     OSTCBCurPtr->FlagsRdy  = (OS_FLAGS)0;
 1481              		.loc 1 931 0
 1482 002e 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 1483 0032 C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 1484 0036 1B68     		ldr	r3, [r3, #0]
 1485 0038 4FF00002 		mov	r2, #0
 1486 003c C3F88420 		str	r2, [r3, #132]
 932:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 933:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     OS_Pend(p_pend_data,
 1487              		.loc 1 933 0
 1488 0040 BB68     		ldr	r3, [r7, #8]
 1489 0042 F868     		ldr	r0, [r7, #12]
 1490 0044 1946     		mov	r1, r3
 1491 0046 4FF00102 		mov	r2, #1
 1492 004a BB69     		ldr	r3, [r7, #24]
 1493 004c FFF7FEFF 		bl	OS_Pend
 934:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****             (OS_PEND_OBJ *)((void *)p_grp),
 935:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              OS_TASK_PEND_ON_FLAG,
 936:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              timeout);
 937:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** }
 1494              		.loc 1 937 0
 1495 0050 07F11007 		add	r7, r7, #16
 1496 0054 BD46     		mov	sp, r7
 1497 0056 80BD     		pop	{r7, pc}
 1498              		.cfi_endproc
 1499              	.LFE6:
 1500              		.size	OS_FlagBlock, .-OS_FlagBlock
 1501              		.section	.rodata
 1502              		.align	2
 1503              	.LC0:
 1504 0000 3F464C41 		.ascii	"?FLAG\000"
 1504      4700
 1505              		.section	.text.OS_FlagClr,"ax",%progbits
 1506              		.align	2
 1507              		.global	OS_FlagClr
 1508              		.thumb
 1509              		.thumb_func
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 44


 1510              		.type	OS_FlagClr, %function
 1511              	OS_FlagClr:
 1512              	.LFB7:
 938:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 939:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** /*$PAGE*/
 940:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** /*
 941:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** ***************************************************************************************************
 942:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                      CLEAR THE CONTENTS OF AN EVENT FLAG GROUP
 943:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 944:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** * Description: This function is called by OSFlagDel() to clear the contents of an event flag group
 945:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 946:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 947:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** * Argument(s): p_grp     is a pointer to the event flag group to clear
 948:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *              -----
 949:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 950:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** * Returns    : none
 951:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 952:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** * Note(s)    : This function is INTERNAL to uC/OS-III and your application should not call it.
 953:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** ***************************************************************************************************
 954:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** */
 955:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 956:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** void  OS_FlagClr (OS_FLAG_GRP  *p_grp)
 957:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** {
 1513              		.loc 1 957 0
 1514              		.cfi_startproc
 1515              		@ args = 0, pretend = 0, frame = 16
 1516              		@ frame_needed = 1, uses_anonymous_args = 0
 1517 0000 80B5     		push	{r7, lr}
 1518              	.LCFI21:
 1519              		.cfi_def_cfa_offset 8
 1520 0002 84B0     		sub	sp, sp, #16
 1521              	.LCFI22:
 1522              		.cfi_def_cfa_offset 24
 1523 0004 00AF     		add	r7, sp, #0
 1524              		.cfi_offset 14, -4
 1525              		.cfi_offset 7, -8
 1526              	.LCFI23:
 1527              		.cfi_def_cfa_register 7
 1528 0006 7860     		str	r0, [r7, #4]
 958:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     OS_PEND_LIST  *p_pend_list;
 959:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 960:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 961:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 962:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     p_grp->Type             = OS_OBJ_TYPE_NONE;
 1529              		.loc 1 962 0
 1530 0008 7A68     		ldr	r2, [r7, #4]
 1531 000a 44F64E73 		movw	r3, #:lower16:1162760014
 1532 000e C4F24E53 		movt	r3, #:upper16:1162760014
 1533 0012 1360     		str	r3, [r2, #0]
 963:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     p_grp->NamePtr          = (CPU_CHAR *)((void *)"?FLAG");    /* Unknown name                    
 1534              		.loc 1 963 0
 1535 0014 7A68     		ldr	r2, [r7, #4]
 1536 0016 40F20003 		movw	r3, #:lower16:.LC0
 1537 001a C0F20003 		movt	r3, #:upper16:.LC0
 1538 001e 5360     		str	r3, [r2, #4]
 964:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     p_grp->Flags            = (OS_FLAGS )0;
 1539              		.loc 1 964 0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 45


 1540 0020 7B68     		ldr	r3, [r7, #4]
 1541 0022 4FF00002 		mov	r2, #0
 1542 0026 1A62     		str	r2, [r3, #32]
 965:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     p_pend_list             = &p_grp->PendList;
 1543              		.loc 1 965 0
 1544 0028 7B68     		ldr	r3, [r7, #4]
 1545 002a 03F10803 		add	r3, r3, #8
 1546 002e FB60     		str	r3, [r7, #12]
 966:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     OS_PendListInit(p_pend_list);
 1547              		.loc 1 966 0
 1548 0030 F868     		ldr	r0, [r7, #12]
 1549 0032 FFF7FEFF 		bl	OS_PendListInit
 967:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** }
 1550              		.loc 1 967 0
 1551 0036 07F11007 		add	r7, r7, #16
 1552 003a BD46     		mov	sp, r7
 1553 003c 80BD     		pop	{r7, pc}
 1554              		.cfi_endproc
 1555              	.LFE7:
 1556              		.size	OS_FlagClr, .-OS_FlagClr
 1557 003e 00BF     		.section	.text.OS_FlagInit,"ax",%progbits
 1558              		.align	2
 1559              		.global	OS_FlagInit
 1560              		.thumb
 1561              		.thumb_func
 1562              		.type	OS_FlagInit, %function
 1563              	OS_FlagInit:
 1564              	.LFB8:
 968:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 969:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** /*$PAGE*/
 970:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** /*
 971:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** ***************************************************************************************************
 972:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                          INITIALIZE THE EVENT FLAG MODULE
 973:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 974:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** * Description: This function is called by uC/OS-III to initialize the event flag module.  Your appl
 975:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *              this function.  In other words, this function is internal to uC/OS-III.
 976:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 977:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** * Arguments  : p_err     is a pointer to an error code that can contain one of the following values
 978:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 979:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                            OS_ERR_NONE   The call was successful.
 980:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 981:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** * Returns    : none
 982:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
 983:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** * Note(s)    : This function is INTERNAL to uC/OS-III and your application should not call it.
 984:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** ***************************************************************************************************
 985:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** */
 986:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 987:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** void  OS_FlagInit (OS_ERR  *p_err)
 988:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** {
 1565              		.loc 1 988 0
 1566              		.cfi_startproc
 1567              		@ args = 0, pretend = 0, frame = 8
 1568              		@ frame_needed = 1, uses_anonymous_args = 0
 1569              		@ link register save eliminated.
 1570 0000 80B4     		push	{r7}
 1571              	.LCFI24:
 1572              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 46


 1573 0002 83B0     		sub	sp, sp, #12
 1574              	.LCFI25:
 1575              		.cfi_def_cfa_offset 16
 1576 0004 00AF     		add	r7, sp, #0
 1577              		.cfi_offset 7, -4
 1578              	.LCFI26:
 1579              		.cfi_def_cfa_register 7
 1580 0006 7860     		str	r0, [r7, #4]
 989:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #ifdef OS_SAFETY_CRITICAL
 990:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     if (p_err == (OS_ERR *)0) {
 991:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 992:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         return;
 993:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     }
 994:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #endif
 995:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
 996:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #if OS_CFG_DBG_EN > 0u
 997:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     OSFlagDbgListPtr = (OS_FLAG_GRP *)0;
 1581              		.loc 1 997 0
 1582 0008 40F20003 		movw	r3, #:lower16:OSFlagDbgListPtr
 1583 000c C0F20003 		movt	r3, #:upper16:OSFlagDbgListPtr
 1584 0010 4FF00002 		mov	r2, #0
 1585 0014 1A60     		str	r2, [r3, #0]
 998:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #endif
 999:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
1000:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     OSFlagQty        = (OS_OBJ_QTY   )0;
 1586              		.loc 1 1000 0
 1587 0016 40F20003 		movw	r3, #:lower16:OSFlagQty
 1588 001a C0F20003 		movt	r3, #:upper16:OSFlagQty
 1589 001e 4FF00002 		mov	r2, #0
 1590 0022 1A80     		strh	r2, [r3, #0]	@ movhi
1001:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****    *p_err            = OS_ERR_NONE;
 1591              		.loc 1 1001 0
 1592 0024 7B68     		ldr	r3, [r7, #4]
 1593 0026 4FF00002 		mov	r2, #0
 1594 002a 1A80     		strh	r2, [r3, #0]	@ movhi
1002:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** }
 1595              		.loc 1 1002 0
 1596 002c 07F10C07 		add	r7, r7, #12
 1597 0030 BD46     		mov	sp, r7
 1598 0032 80BC     		pop	{r7}
 1599 0034 7047     		bx	lr
 1600              		.cfi_endproc
 1601              	.LFE8:
 1602              		.size	OS_FlagInit, .-OS_FlagInit
 1603 0036 00BF     		.section	.rodata
 1604 0006 0000     		.align	2
 1605              	.LC1:
 1606 0008 2000     		.ascii	" \000"
 1607 000a 0000     		.section	.text.OS_FlagDbgListAdd,"ax",%progbits
 1608              		.align	2
 1609              		.global	OS_FlagDbgListAdd
 1610              		.thumb
 1611              		.thumb_func
 1612              		.type	OS_FlagDbgListAdd, %function
 1613              	OS_FlagDbgListAdd:
 1614              	.LFB9:
1003:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 47


1004:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** /*$PAGE*/
1005:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** /*
1006:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** ***************************************************************************************************
1007:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                    ADD/REMOVE EVENT FLAG GROUP TO/FROM DEBUG LIST
1008:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
1009:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** * Description: These functions are called by uC/OS-III to add or remove an event flag group from th
1010:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *              list.
1011:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
1012:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** * Arguments  : p_grp     is a pointer to the event flag group to add/remove
1013:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
1014:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** * Returns    : none
1015:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
1016:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** * Note(s)    : These functions are INTERNAL to uC/OS-III and your application should not call it.
1017:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** ***************************************************************************************************
1018:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** */
1019:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
1020:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #if OS_CFG_DBG_EN > 0u
1021:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** void  OS_FlagDbgListAdd (OS_FLAG_GRP  *p_grp)
1022:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** {
 1615              		.loc 1 1022 0
 1616              		.cfi_startproc
 1617              		@ args = 0, pretend = 0, frame = 8
 1618              		@ frame_needed = 1, uses_anonymous_args = 0
 1619              		@ link register save eliminated.
 1620 0000 80B4     		push	{r7}
 1621              	.LCFI27:
 1622              		.cfi_def_cfa_offset 4
 1623 0002 83B0     		sub	sp, sp, #12
 1624              	.LCFI28:
 1625              		.cfi_def_cfa_offset 16
 1626 0004 00AF     		add	r7, sp, #0
 1627              		.cfi_offset 7, -4
 1628              	.LCFI29:
 1629              		.cfi_def_cfa_register 7
 1630 0006 7860     		str	r0, [r7, #4]
1023:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     p_grp->DbgNamePtr                = (CPU_CHAR    *)((void *)" ");
 1631              		.loc 1 1023 0
 1632 0008 7A68     		ldr	r2, [r7, #4]
 1633 000a 40F20003 		movw	r3, #:lower16:.LC1
 1634 000e C0F20003 		movt	r3, #:upper16:.LC1
 1635 0012 D361     		str	r3, [r2, #28]
1024:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     p_grp->DbgPrevPtr                = (OS_FLAG_GRP *)0;
 1636              		.loc 1 1024 0
 1637 0014 7B68     		ldr	r3, [r7, #4]
 1638 0016 4FF00002 		mov	r2, #0
 1639 001a 5A61     		str	r2, [r3, #20]
1025:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     if (OSFlagDbgListPtr == (OS_FLAG_GRP *)0) {
 1640              		.loc 1 1025 0
 1641 001c 40F20003 		movw	r3, #:lower16:OSFlagDbgListPtr
 1642 0020 C0F20003 		movt	r3, #:upper16:OSFlagDbgListPtr
 1643 0024 1B68     		ldr	r3, [r3, #0]
 1644 0026 002B     		cmp	r3, #0
 1645 0028 04D1     		bne	.L115
1026:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         p_grp->DbgNextPtr            = (OS_FLAG_GRP *)0;
 1646              		.loc 1 1026 0
 1647 002a 7B68     		ldr	r3, [r7, #4]
 1648 002c 4FF00002 		mov	r2, #0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 48


 1649 0030 9A61     		str	r2, [r3, #24]
 1650 0032 0DE0     		b	.L116
 1651              	.L115:
1027:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     } else {
1028:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         p_grp->DbgNextPtr            =  OSFlagDbgListPtr;
 1652              		.loc 1 1028 0
 1653 0034 40F20003 		movw	r3, #:lower16:OSFlagDbgListPtr
 1654 0038 C0F20003 		movt	r3, #:upper16:OSFlagDbgListPtr
 1655 003c 1A68     		ldr	r2, [r3, #0]
 1656 003e 7B68     		ldr	r3, [r7, #4]
 1657 0040 9A61     		str	r2, [r3, #24]
1029:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         OSFlagDbgListPtr->DbgPrevPtr =  p_grp;
 1658              		.loc 1 1029 0
 1659 0042 40F20003 		movw	r3, #:lower16:OSFlagDbgListPtr
 1660 0046 C0F20003 		movt	r3, #:upper16:OSFlagDbgListPtr
 1661 004a 1B68     		ldr	r3, [r3, #0]
 1662 004c 7A68     		ldr	r2, [r7, #4]
 1663 004e 5A61     		str	r2, [r3, #20]
 1664              	.L116:
1030:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     }
1031:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     OSFlagDbgListPtr                 =  p_grp;
 1665              		.loc 1 1031 0
 1666 0050 40F20003 		movw	r3, #:lower16:OSFlagDbgListPtr
 1667 0054 C0F20003 		movt	r3, #:upper16:OSFlagDbgListPtr
 1668 0058 7A68     		ldr	r2, [r7, #4]
 1669 005a 1A60     		str	r2, [r3, #0]
1032:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** }
 1670              		.loc 1 1032 0
 1671 005c 07F10C07 		add	r7, r7, #12
 1672 0060 BD46     		mov	sp, r7
 1673 0062 80BC     		pop	{r7}
 1674 0064 7047     		bx	lr
 1675              		.cfi_endproc
 1676              	.LFE9:
 1677              		.size	OS_FlagDbgListAdd, .-OS_FlagDbgListAdd
 1678 0066 00BF     		.section	.text.OS_FlagDbgListRemove,"ax",%progbits
 1679              		.align	2
 1680              		.global	OS_FlagDbgListRemove
 1681              		.thumb
 1682              		.thumb_func
 1683              		.type	OS_FlagDbgListRemove, %function
 1684              	OS_FlagDbgListRemove:
 1685              	.LFB10:
1033:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
1034:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
1035:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
1036:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** void  OS_FlagDbgListRemove (OS_FLAG_GRP  *p_grp)
1037:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** {
 1686              		.loc 1 1037 0
 1687              		.cfi_startproc
 1688              		@ args = 0, pretend = 0, frame = 16
 1689              		@ frame_needed = 1, uses_anonymous_args = 0
 1690              		@ link register save eliminated.
 1691 0000 80B4     		push	{r7}
 1692              	.LCFI30:
 1693              		.cfi_def_cfa_offset 4
 1694 0002 85B0     		sub	sp, sp, #20
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 49


 1695              	.LCFI31:
 1696              		.cfi_def_cfa_offset 24
 1697 0004 00AF     		add	r7, sp, #0
 1698              		.cfi_offset 7, -4
 1699              	.LCFI32:
 1700              		.cfi_def_cfa_register 7
 1701 0006 7860     		str	r0, [r7, #4]
1038:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     OS_FLAG_GRP  *p_grp_next;
1039:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     OS_FLAG_GRP  *p_grp_prev;
1040:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
1041:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
1042:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     p_grp_prev = p_grp->DbgPrevPtr;
 1702              		.loc 1 1042 0
 1703 0008 7B68     		ldr	r3, [r7, #4]
 1704 000a 5B69     		ldr	r3, [r3, #20]
 1705 000c FB60     		str	r3, [r7, #12]
1043:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     p_grp_next = p_grp->DbgNextPtr;
 1706              		.loc 1 1043 0
 1707 000e 7B68     		ldr	r3, [r7, #4]
 1708 0010 9B69     		ldr	r3, [r3, #24]
 1709 0012 BB60     		str	r3, [r7, #8]
1044:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
1045:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     if (p_grp_prev == (OS_FLAG_GRP *)0) {
 1710              		.loc 1 1045 0
 1711 0014 FB68     		ldr	r3, [r7, #12]
 1712 0016 002B     		cmp	r3, #0
 1713 0018 11D1     		bne	.L119
1046:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         OSFlagDbgListPtr = p_grp_next;
 1714              		.loc 1 1046 0
 1715 001a 40F20003 		movw	r3, #:lower16:OSFlagDbgListPtr
 1716 001e C0F20003 		movt	r3, #:upper16:OSFlagDbgListPtr
 1717 0022 BA68     		ldr	r2, [r7, #8]
 1718 0024 1A60     		str	r2, [r3, #0]
1047:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         if (p_grp_next != (OS_FLAG_GRP *)0) {
 1719              		.loc 1 1047 0
 1720 0026 BB68     		ldr	r3, [r7, #8]
 1721 0028 002B     		cmp	r3, #0
 1722 002a 03D0     		beq	.L120
1048:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****             p_grp_next->DbgPrevPtr = (OS_FLAG_GRP *)0;
 1723              		.loc 1 1048 0
 1724 002c BB68     		ldr	r3, [r7, #8]
 1725 002e 4FF00002 		mov	r2, #0
 1726 0032 5A61     		str	r2, [r3, #20]
 1727              	.L120:
1049:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         }
1050:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         p_grp->DbgNextPtr = (OS_FLAG_GRP *)0;
 1728              		.loc 1 1050 0
 1729 0034 7B68     		ldr	r3, [r7, #4]
 1730 0036 4FF00002 		mov	r2, #0
 1731 003a 9A61     		str	r2, [r3, #24]
 1732 003c 19E0     		b	.L123
 1733              	.L119:
1051:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
1052:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     } else if (p_grp_next == (OS_FLAG_GRP *)0) {
 1734              		.loc 1 1052 0
 1735 003e BB68     		ldr	r3, [r7, #8]
 1736 0040 002B     		cmp	r3, #0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 50


 1737 0042 08D1     		bne	.L122
1053:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         p_grp_prev->DbgNextPtr = (OS_FLAG_GRP *)0;
 1738              		.loc 1 1053 0
 1739 0044 FB68     		ldr	r3, [r7, #12]
 1740 0046 4FF00002 		mov	r2, #0
 1741 004a 9A61     		str	r2, [r3, #24]
1054:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         p_grp->DbgPrevPtr      = (OS_FLAG_GRP *)0;
 1742              		.loc 1 1054 0
 1743 004c 7B68     		ldr	r3, [r7, #4]
 1744 004e 4FF00002 		mov	r2, #0
 1745 0052 5A61     		str	r2, [r3, #20]
 1746 0054 0DE0     		b	.L123
 1747              	.L122:
1055:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
1056:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     } else {
1057:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         p_grp_prev->DbgNextPtr =  p_grp_next;
 1748              		.loc 1 1057 0
 1749 0056 FB68     		ldr	r3, [r7, #12]
 1750 0058 BA68     		ldr	r2, [r7, #8]
 1751 005a 9A61     		str	r2, [r3, #24]
1058:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         p_grp_next->DbgPrevPtr =  p_grp_prev;
 1752              		.loc 1 1058 0
 1753 005c BB68     		ldr	r3, [r7, #8]
 1754 005e FA68     		ldr	r2, [r7, #12]
 1755 0060 5A61     		str	r2, [r3, #20]
1059:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         p_grp->DbgNextPtr      = (OS_FLAG_GRP *)0;
 1756              		.loc 1 1059 0
 1757 0062 7B68     		ldr	r3, [r7, #4]
 1758 0064 4FF00002 		mov	r2, #0
 1759 0068 9A61     		str	r2, [r3, #24]
1060:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         p_grp->DbgPrevPtr      = (OS_FLAG_GRP *)0;
 1760              		.loc 1 1060 0
 1761 006a 7B68     		ldr	r3, [r7, #4]
 1762 006c 4FF00002 		mov	r2, #0
 1763 0070 5A61     		str	r2, [r3, #20]
 1764              	.L123:
1061:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     }
1062:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** }
 1765              		.loc 1 1062 0
 1766 0072 07F11407 		add	r7, r7, #20
 1767 0076 BD46     		mov	sp, r7
 1768 0078 80BC     		pop	{r7}
 1769 007a 7047     		bx	lr
 1770              		.cfi_endproc
 1771              	.LFE10:
 1772              		.size	OS_FlagDbgListRemove, .-OS_FlagDbgListRemove
 1773              		.section	.text.OS_FlagPost,"ax",%progbits
 1774              		.align	2
 1775              		.global	OS_FlagPost
 1776              		.thumb
 1777              		.thumb_func
 1778              		.type	OS_FlagPost, %function
 1779              	OS_FlagPost:
 1780              	.LFB11:
1063:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #endif
1064:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
1065:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** /*$PAGE*/
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 51


1066:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** /*
1067:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** ***************************************************************************************************
1068:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                                POST EVENT FLAG BIT(S)
1069:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
1070:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** * Description: This function is called to set or clear some bits in an event flag group.  The bits 
1071:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *              specified by a 'bit mask'.
1072:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
1073:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** * Arguments  : p_grp         is a pointer to the desired event flag group.
1074:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
1075:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *              flags         If 'opt' (see below) is OS_OPT_POST_FLAG_SET, each bit that is set in 
1076:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                            set the corresponding bit in the event flag group.  e.g. to set bits 0
1077:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                            and 5 you would set 'flags' to:
1078:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
1079:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                0x31     (note, bit 0 is least significant bit)
1080:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
1081:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                            If 'opt' (see below) is OS_OPT_POST_FLAG_CLR, each bit that is set in 
1082:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                            CLEAR the corresponding bit in the event flag group.  e.g. to clear bi
1083:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                            4 and 5 you would specify 'flags' as:
1084:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
1085:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                0x31     (note, bit 0 is least significant bit)
1086:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
1087:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *              opt           indicates whether the flags will be:
1088:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
1089:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                OS_OPT_POST_FLAG_SET       set
1090:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                OS_OPT_POST_FLAG_CLR       cleared
1091:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
1092:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                            you can also 'add' OS_OPT_POST_NO_SCHED to prevent the scheduler from 
1093:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
1094:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *              ts            is the timestamp of the post
1095:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
1096:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *              p_err         is a pointer to an error code and can be:
1097:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
1098:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                OS_ERR_NONE                The call was successful
1099:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                OS_ERR_OBJ_PTR_NULL        You passed a NULL pointer
1100:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                OS_ERR_OBJ_TYPE            You are not pointing to an event flag g
1101:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                OS_ERR_OPT_INVALID         You specified an invalid option
1102:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
1103:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** * Returns    : the new value of the event flags bits that are still set.
1104:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
1105:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** * Note(s)    : 1) The execution time of this function depends on the number of tasks waiting on the
1106:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** ***************************************************************************************************
1107:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** */
1108:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
1109:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** OS_FLAGS  OS_FlagPost (OS_FLAG_GRP  *p_grp,
1110:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                        OS_FLAGS      flags,
1111:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                        OS_OPT        opt,
1112:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                        CPU_TS        ts,
1113:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                        OS_ERR       *p_err)
1114:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** {
 1781              		.loc 1 1114 0
 1782              		.cfi_startproc
 1783              		@ args = 4, pretend = 0, frame = 48
 1784              		@ frame_needed = 1, uses_anonymous_args = 0
 1785 0000 80B5     		push	{r7, lr}
 1786              	.LCFI33:
 1787              		.cfi_def_cfa_offset 8
 1788 0002 8CB0     		sub	sp, sp, #48
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 52


 1789              	.LCFI34:
 1790              		.cfi_def_cfa_offset 56
 1791 0004 00AF     		add	r7, sp, #0
 1792              		.cfi_offset 14, -4
 1793              		.cfi_offset 7, -8
 1794              	.LCFI35:
 1795              		.cfi_def_cfa_register 7
 1796 0006 F860     		str	r0, [r7, #12]
 1797 0008 B960     		str	r1, [r7, #8]
 1798 000a 3B60     		str	r3, [r7, #0]
 1799 000c 1346     		mov	r3, r2	@ movhi
 1800 000e FB80     		strh	r3, [r7, #6]	@ movhi
1115:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     OS_FLAGS        flags_cur;
1116:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     OS_FLAGS        flags_rdy;
1117:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     OS_OPT          mode;
1118:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     OS_PEND_DATA   *p_pend_data;
1119:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     OS_PEND_DATA   *p_pend_data_next;
1120:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     OS_PEND_LIST   *p_pend_list;
1121:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     OS_TCB         *p_tcb;
1122:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     CPU_SR_ALLOC();
 1801              		.loc 1 1122 0
 1802 0010 4FF00003 		mov	r3, #0
 1803 0014 FB62     		str	r3, [r7, #44]
1123:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
1124:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
1125:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
1126:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     CPU_CRITICAL_ENTER();
 1804              		.loc 1 1126 0
 1805 0016 FFF7FEFF 		bl	CPU_SR_Save
 1806 001a 0346     		mov	r3, r0
 1807 001c FB62     		str	r3, [r7, #44]
1127:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     switch (opt) {
 1808              		.loc 1 1127 0
 1809 001e FB88     		ldrh	r3, [r7, #6]
 1810 0020 012B     		cmp	r3, #1
 1811 0022 14D0     		beq	.L127
 1812 0024 012B     		cmp	r3, #1
 1813 0026 02DC     		bgt	.L128
 1814 0028 002B     		cmp	r3, #0
 1815 002a 08D0     		beq	.L126
 1816 002c 19E0     		b	.L125
 1817              	.L128:
 1818 002e B3F5004F 		cmp	r3, #32768
 1819 0032 04D0     		beq	.L126
 1820 0034 48F20102 		movw	r2, #32769
 1821 0038 9342     		cmp	r3, r2
 1822 003a 08D0     		beq	.L127
 1823 003c 11E0     		b	.L125
 1824              	.L126:
1128:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         case OS_OPT_POST_FLAG_SET:
1129:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         case OS_OPT_POST_FLAG_SET | OS_OPT_POST_NO_SCHED:
1130:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              p_grp->Flags |=  flags;                            /* Set   the flags specified in the
 1825              		.loc 1 1130 0
 1826 003e FB68     		ldr	r3, [r7, #12]
 1827 0040 1A6A     		ldr	r2, [r3, #32]
 1828 0042 BB68     		ldr	r3, [r7, #8]
 1829 0044 42EA0302 		orr	r2, r2, r3
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 53


 1830 0048 FB68     		ldr	r3, [r7, #12]
 1831 004a 1A62     		str	r2, [r3, #32]
1131:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              break;
 1832              		.loc 1 1131 0
 1833 004c 13E0     		b	.L129
 1834              	.L127:
1132:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
1133:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         case OS_OPT_POST_FLAG_CLR:
1134:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         case OS_OPT_POST_FLAG_CLR | OS_OPT_POST_NO_SCHED:
1135:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              p_grp->Flags &= ~flags;                            /* Clear the flags specified in the
 1835              		.loc 1 1135 0
 1836 004e FB68     		ldr	r3, [r7, #12]
 1837 0050 1A6A     		ldr	r2, [r3, #32]
 1838 0052 BB68     		ldr	r3, [r7, #8]
 1839 0054 6FEA0303 		mvn	r3, r3
 1840 0058 02EA0302 		and	r2, r2, r3
 1841 005c FB68     		ldr	r3, [r7, #12]
 1842 005e 1A62     		str	r2, [r3, #32]
1136:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              break;
 1843              		.loc 1 1136 0
 1844 0060 09E0     		b	.L129
 1845              	.L125:
1137:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
1138:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         default:
1139:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              CPU_CRITICAL_EXIT();                               /* INVALID option                  
 1846              		.loc 1 1139 0
 1847 0062 F86A     		ldr	r0, [r7, #44]
 1848 0064 FFF7FEFF 		bl	CPU_SR_Restore
1140:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****             *p_err = OS_ERR_OPT_INVALID;
 1849              		.loc 1 1140 0
 1850 0068 BB6B     		ldr	r3, [r7, #56]
 1851 006a 45F62562 		movw	r2, #24101
 1852 006e 1A80     		strh	r2, [r3, #0]	@ movhi
1141:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              return ((OS_FLAGS)0);
 1853              		.loc 1 1141 0
 1854 0070 4FF00003 		mov	r3, #0
 1855 0074 C3E0     		b	.L130
 1856              	.L129:
1142:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     }
1143:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     p_grp->TS   = ts;
 1857              		.loc 1 1143 0
 1858 0076 FB68     		ldr	r3, [r7, #12]
 1859 0078 3A68     		ldr	r2, [r7, #0]
 1860 007a 5A62     		str	r2, [r3, #36]
1144:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     p_pend_list = &p_grp->PendList;
 1861              		.loc 1 1144 0
 1862 007c FB68     		ldr	r3, [r7, #12]
 1863 007e 03F10803 		add	r3, r3, #8
 1864 0082 7B62     		str	r3, [r7, #36]
1145:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     if (p_pend_list->NbrEntries == 0u) {                        /* Any task waiting on event flag g
 1865              		.loc 1 1145 0
 1866 0084 7B6A     		ldr	r3, [r7, #36]
 1867 0086 1B89     		ldrh	r3, [r3, #8]
 1868 0088 002B     		cmp	r3, #0
 1869 008a 09D1     		bne	.L131
1146:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         CPU_CRITICAL_EXIT();                                    /* No                              
 1870              		.loc 1 1146 0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 54


 1871 008c F86A     		ldr	r0, [r7, #44]
 1872 008e FFF7FEFF 		bl	CPU_SR_Restore
1147:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****        *p_err = OS_ERR_NONE;
 1873              		.loc 1 1147 0
 1874 0092 BB6B     		ldr	r3, [r7, #56]
 1875 0094 4FF00002 		mov	r2, #0
 1876 0098 1A80     		strh	r2, [r3, #0]	@ movhi
1148:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         return (p_grp->Flags);
 1877              		.loc 1 1148 0
 1878 009a FB68     		ldr	r3, [r7, #12]
 1879 009c 1B6A     		ldr	r3, [r3, #32]
 1880 009e AEE0     		b	.L130
 1881              	.L131:
1149:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     }
1150:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
1151:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     OS_CRITICAL_ENTER_CPU_EXIT();
1152:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     p_pend_data = p_pend_list->HeadPtr;
 1882              		.loc 1 1152 0
 1883 00a0 7B6A     		ldr	r3, [r7, #36]
 1884 00a2 1B68     		ldr	r3, [r3, #0]
 1885 00a4 FB61     		str	r3, [r7, #28]
1153:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     p_tcb       = p_pend_data->TCBPtr;
 1886              		.loc 1 1153 0
 1887 00a6 FB69     		ldr	r3, [r7, #28]
 1888 00a8 9B68     		ldr	r3, [r3, #8]
 1889 00aa BB62     		str	r3, [r7, #40]
1154:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     while (p_tcb != (OS_TCB *)0) {                              /* Go through all tasks waiting on 
 1890              		.loc 1 1154 0
 1891 00ac 8BE0     		b	.L132
 1892              	.L145:
1155:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         p_pend_data_next = p_pend_data->NextPtr;
 1893              		.loc 1 1155 0
 1894 00ae FB69     		ldr	r3, [r7, #28]
 1895 00b0 5B68     		ldr	r3, [r3, #4]
 1896 00b2 3B62     		str	r3, [r7, #32]
1156:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         mode             = p_tcb->FlagsOpt & OS_OPT_PEND_FLAG_MASK;
 1897              		.loc 1 1156 0
 1898 00b4 BB6A     		ldr	r3, [r7, #40]
 1899 00b6 B3F88830 		ldrh	r3, [r3, #136]
 1900 00ba 03F00F03 		and	r3, r3, #15
 1901 00be 7B83     		strh	r3, [r7, #26]	@ movhi
1157:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         switch (mode) {
 1902              		.loc 1 1157 0
 1903 00c0 7B8B     		ldrh	r3, [r7, #26]
 1904 00c2 03F1FF33 		add	r3, r3, #-1
 1905 00c6 072B     		cmp	r3, #7
 1906 00c8 60D8     		bhi	.L133
 1907 00ca 01A2     		adr	r2, .L138
 1908 00cc 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1909              		.align	2
 1910              	.L138:
 1911 00d0 3B010000 		.word	.L134+1
 1912 00d4 67010000 		.word	.L135+1
 1913 00d8 8D010000 		.word	.L133+1
 1914 00dc F1000000 		.word	.L136+1
 1915 00e0 8D010000 		.word	.L133+1
 1916 00e4 8D010000 		.word	.L133+1
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 55


 1917 00e8 8D010000 		.word	.L133+1
 1918 00ec 19010000 		.word	.L137+1
 1919              	.L136:
1158:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****             case OS_OPT_PEND_FLAG_SET_ALL:                      /* See if all req. flags are set fo
1159:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  flags_rdy = (OS_FLAGS)(p_grp->Flags & p_tcb->FlagsPend);
 1920              		.loc 1 1159 0
 1921 00f0 FB68     		ldr	r3, [r7, #12]
 1922 00f2 1A6A     		ldr	r2, [r3, #32]
 1923 00f4 BB6A     		ldr	r3, [r7, #40]
 1924 00f6 D3F88030 		ldr	r3, [r3, #128]
 1925 00fa 02EA0303 		and	r3, r2, r3
 1926 00fe 7B61     		str	r3, [r7, #20]
1160:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  if (flags_rdy == p_tcb->FlagsPend) {
 1927              		.loc 1 1160 0
 1928 0100 BB6A     		ldr	r3, [r7, #40]
 1929 0102 D3F88020 		ldr	r2, [r3, #128]
 1930 0106 7B69     		ldr	r3, [r7, #20]
 1931 0108 9A42     		cmp	r2, r3
 1932 010a 49D1     		bne	.L148
1161:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                      OS_FlagTaskRdy(p_tcb,                      /* Make task RTR, event(s) Rx'd    
 1933              		.loc 1 1161 0
 1934 010c B86A     		ldr	r0, [r7, #40]
 1935 010e 7969     		ldr	r1, [r7, #20]
 1936 0110 3A68     		ldr	r2, [r7, #0]
 1937 0112 FFF7FEFF 		bl	OS_FlagTaskRdy
1162:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                                     flags_rdy,
1163:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                                     ts);
1164:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  }
1165:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  break;
 1938              		.loc 1 1165 0
 1939 0116 4AE0     		b	.L140
 1940              	.L137:
1166:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
1167:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****             case OS_OPT_PEND_FLAG_SET_ANY:                      /* See if any flag set             
1168:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  flags_rdy = (OS_FLAGS)(p_grp->Flags & p_tcb->FlagsPend);
 1941              		.loc 1 1168 0
 1942 0118 FB68     		ldr	r3, [r7, #12]
 1943 011a 1A6A     		ldr	r2, [r3, #32]
 1944 011c BB6A     		ldr	r3, [r7, #40]
 1945 011e D3F88030 		ldr	r3, [r3, #128]
 1946 0122 02EA0303 		and	r3, r2, r3
 1947 0126 7B61     		str	r3, [r7, #20]
1169:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  if (flags_rdy != (OS_FLAGS)0) {
 1948              		.loc 1 1169 0
 1949 0128 7B69     		ldr	r3, [r7, #20]
 1950 012a 002B     		cmp	r3, #0
 1951 012c 3AD0     		beq	.L149
1170:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                      OS_FlagTaskRdy(p_tcb,                      /* Make task RTR, event(s) Rx'd    
 1952              		.loc 1 1170 0
 1953 012e B86A     		ldr	r0, [r7, #40]
 1954 0130 7969     		ldr	r1, [r7, #20]
 1955 0132 3A68     		ldr	r2, [r7, #0]
 1956 0134 FFF7FEFF 		bl	OS_FlagTaskRdy
1171:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                                     flags_rdy,
1172:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                                     ts);
1173:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  }
1174:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  break;
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 56


 1957              		.loc 1 1174 0
 1958 0138 39E0     		b	.L140
 1959              	.L134:
1175:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
1176:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #if OS_CFG_FLAG_MODE_CLR_EN > 0u
1177:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****             case OS_OPT_PEND_FLAG_CLR_ALL:                      /* See if all req. flags are set fo
1178:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  flags_rdy = (OS_FLAGS)(~p_grp->Flags & p_tcb->FlagsPend);
 1960              		.loc 1 1178 0
 1961 013a FB68     		ldr	r3, [r7, #12]
 1962 013c 1B6A     		ldr	r3, [r3, #32]
 1963 013e 6FEA0302 		mvn	r2, r3
 1964 0142 BB6A     		ldr	r3, [r7, #40]
 1965 0144 D3F88030 		ldr	r3, [r3, #128]
 1966 0148 02EA0303 		and	r3, r2, r3
 1967 014c 7B61     		str	r3, [r7, #20]
1179:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  if (flags_rdy == p_tcb->FlagsPend) {
 1968              		.loc 1 1179 0
 1969 014e BB6A     		ldr	r3, [r7, #40]
 1970 0150 D3F88020 		ldr	r2, [r3, #128]
 1971 0154 7B69     		ldr	r3, [r7, #20]
 1972 0156 9A42     		cmp	r2, r3
 1973 0158 26D1     		bne	.L150
1180:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                      OS_FlagTaskRdy(p_tcb,                      /* Make task RTR, event(s) Rx'd    
 1974              		.loc 1 1180 0
 1975 015a B86A     		ldr	r0, [r7, #40]
 1976 015c 7969     		ldr	r1, [r7, #20]
 1977 015e 3A68     		ldr	r2, [r7, #0]
 1978 0160 FFF7FEFF 		bl	OS_FlagTaskRdy
1181:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                                     flags_rdy,
1182:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                                     ts);
1183:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  }
1184:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  break;
 1979              		.loc 1 1184 0
 1980 0164 23E0     		b	.L140
 1981              	.L135:
1185:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
1186:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****             case OS_OPT_PEND_FLAG_CLR_ANY:                      /* See if any flag set             
1187:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  flags_rdy = (OS_FLAGS)(~p_grp->Flags & p_tcb->FlagsPend);
 1982              		.loc 1 1187 0
 1983 0166 FB68     		ldr	r3, [r7, #12]
 1984 0168 1B6A     		ldr	r3, [r3, #32]
 1985 016a 6FEA0302 		mvn	r2, r3
 1986 016e BB6A     		ldr	r3, [r7, #40]
 1987 0170 D3F88030 		ldr	r3, [r3, #128]
 1988 0174 02EA0303 		and	r3, r2, r3
 1989 0178 7B61     		str	r3, [r7, #20]
1188:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  if (flags_rdy != (OS_FLAGS)0) {
 1990              		.loc 1 1188 0
 1991 017a 7B69     		ldr	r3, [r7, #20]
 1992 017c 002B     		cmp	r3, #0
 1993 017e 15D0     		beq	.L151
1189:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                      OS_FlagTaskRdy(p_tcb,                      /* Make task RTR, event(s) Rx'd    
 1994              		.loc 1 1189 0
 1995 0180 B86A     		ldr	r0, [r7, #40]
 1996 0182 7969     		ldr	r1, [r7, #20]
 1997 0184 3A68     		ldr	r2, [r7, #0]
 1998 0186 FFF7FEFF 		bl	OS_FlagTaskRdy
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 57


1190:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                                     flags_rdy,
1191:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                                     ts);
1192:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  }
1193:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  break;
 1999              		.loc 1 1193 0
 2000 018a 10E0     		b	.L140
 2001              	.L133:
1194:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** #endif
1195:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****             default:
1196:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  OS_CRITICAL_EXIT();
 2002              		.loc 1 1196 0
 2003 018c F86A     		ldr	r0, [r7, #44]
 2004 018e FFF7FEFF 		bl	CPU_SR_Restore
1197:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                 *p_err = OS_ERR_FLAG_PEND_OPT;
 2005              		.loc 1 1197 0
 2006 0192 BB6B     		ldr	r3, [r7, #56]
 2007 0194 43F6FF22 		movw	r2, #15103
 2008 0198 1A80     		strh	r2, [r3, #0]	@ movhi
1198:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                  return ((OS_FLAGS)0);
 2009              		.loc 1 1198 0
 2010 019a 4FF00003 		mov	r3, #0
 2011 019e 2EE0     		b	.L130
 2012              	.L148:
 2013              		.loc 1 1165 0
 2014 01a0 00BF     		nop
 2015 01a2 04E0     		b	.L140
 2016              	.L149:
 2017              		.loc 1 1174 0
 2018 01a4 00BF     		nop
 2019 01a6 02E0     		b	.L140
 2020              	.L150:
 2021              		.loc 1 1184 0
 2022 01a8 00BF     		nop
 2023 01aa 00E0     		b	.L140
 2024              	.L151:
 2025              		.loc 1 1193 0
 2026 01ac 00BF     		nop
 2027              	.L140:
1199:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         }
1200:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         p_pend_data = p_pend_data_next;                         /* Point to next task waiting for e
 2028              		.loc 1 1200 0
 2029 01ae 3B6A     		ldr	r3, [r7, #32]
 2030 01b0 FB61     		str	r3, [r7, #28]
1201:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         if (p_pend_data != (OS_PEND_DATA *)0) {
 2031              		.loc 1 1201 0
 2032 01b2 FB69     		ldr	r3, [r7, #28]
 2033 01b4 002B     		cmp	r3, #0
 2034 01b6 03D0     		beq	.L144
1202:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****             p_tcb = p_pend_data->TCBPtr;
 2035              		.loc 1 1202 0
 2036 01b8 FB69     		ldr	r3, [r7, #28]
 2037 01ba 9B68     		ldr	r3, [r3, #8]
 2038 01bc BB62     		str	r3, [r7, #40]
 2039 01be 02E0     		b	.L132
 2040              	.L144:
1203:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         } else {
1204:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****             p_tcb = (OS_TCB *)0;
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 58


 2041              		.loc 1 1204 0
 2042 01c0 4FF00003 		mov	r3, #0
 2043 01c4 BB62     		str	r3, [r7, #40]
 2044              	.L132:
 2045              		.loc 1 1154 0
 2046 01c6 BB6A     		ldr	r3, [r7, #40]
 2047 01c8 002B     		cmp	r3, #0
 2048 01ca 7FF470AF 		bne	.L145
1205:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         }
1206:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     }
1207:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     OS_CRITICAL_EXIT_NO_SCHED();
 2049              		.loc 1 1207 0
 2050 01ce F86A     		ldr	r0, [r7, #44]
 2051 01d0 FFF7FEFF 		bl	CPU_SR_Restore
1208:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
1209:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     if ((opt & OS_OPT_POST_NO_SCHED) == (OS_OPT)0) {
 2052              		.loc 1 1209 0
 2053 01d4 FB88     		ldrh	r3, [r7, #6]
 2054 01d6 1BB2     		sxth	r3, r3
 2055 01d8 002B     		cmp	r3, #0
 2056 01da 01DB     		blt	.L146
1210:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         OSSched();
 2057              		.loc 1 1210 0
 2058 01dc FFF7FEFF 		bl	OSSched
 2059              	.L146:
1211:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     }
1212:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
1213:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     CPU_CRITICAL_ENTER();
 2060              		.loc 1 1213 0
 2061 01e0 FFF7FEFF 		bl	CPU_SR_Save
 2062 01e4 0346     		mov	r3, r0
 2063 01e6 FB62     		str	r3, [r7, #44]
1214:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     flags_cur = p_grp->Flags;
 2064              		.loc 1 1214 0
 2065 01e8 FB68     		ldr	r3, [r7, #12]
 2066 01ea 1B6A     		ldr	r3, [r3, #32]
 2067 01ec 3B61     		str	r3, [r7, #16]
1215:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     CPU_CRITICAL_EXIT();
 2068              		.loc 1 1215 0
 2069 01ee F86A     		ldr	r0, [r7, #44]
 2070 01f0 FFF7FEFF 		bl	CPU_SR_Restore
1216:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****    *p_err     = OS_ERR_NONE;
 2071              		.loc 1 1216 0
 2072 01f4 BB6B     		ldr	r3, [r7, #56]
 2073 01f6 4FF00002 		mov	r2, #0
 2074 01fa 1A80     		strh	r2, [r3, #0]	@ movhi
1217:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     return (flags_cur);
 2075              		.loc 1 1217 0
 2076 01fc 3B69     		ldr	r3, [r7, #16]
 2077              	.L130:
1218:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** }
 2078              		.loc 1 1218 0
 2079 01fe 1846     		mov	r0, r3
 2080 0200 07F13007 		add	r7, r7, #48
 2081 0204 BD46     		mov	sp, r7
 2082 0206 80BD     		pop	{r7, pc}
 2083              		.cfi_endproc
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 59


 2084              	.LFE11:
 2085              		.size	OS_FlagPost, .-OS_FlagPost
 2086              		.section	.text.OS_FlagTaskRdy,"ax",%progbits
 2087              		.align	2
 2088              		.global	OS_FlagTaskRdy
 2089              		.thumb
 2090              		.thumb_func
 2091              		.type	OS_FlagTaskRdy, %function
 2092              	OS_FlagTaskRdy:
 2093              	.LFB12:
1219:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
1220:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** /*$PAGE*/
1221:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** /*
1222:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** ***************************************************************************************************
1223:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *                                        MAKE TASK READY-TO-RUN, EVENT(s) OCCURRED
1224:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
1225:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** * Description: This function is internal to uC/OS-III and is used to make a task ready-to-run becau
1226:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *              flag bits have been set.
1227:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
1228:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** * Arguments  : p_tcb         is a pointer to the OS_TCB of the task to remove
1229:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *              -----
1230:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
1231:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *              flags_rdy     contains the bit pattern of the event flags that cause the task to bec
1232:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
1233:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *              ts            is a timestamp associated with the post
1234:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
1235:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** * Returns    : none
1236:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** *
1237:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** * Note(s)    : This function is INTERNAL to uC/OS-III and your application should not call it.
1238:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** ***************************************************************************************************
1239:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** */
1240:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
1241:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** void   OS_FlagTaskRdy (OS_TCB    *p_tcb,
1242:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                        OS_FLAGS   flags_rdy,
1243:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****                        CPU_TS     ts)
1244:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** {
 2094              		.loc 1 1244 0
 2095              		.cfi_startproc
 2096              		@ args = 0, pretend = 0, frame = 16
 2097              		@ frame_needed = 1, uses_anonymous_args = 0
 2098 0000 80B5     		push	{r7, lr}
 2099              	.LCFI36:
 2100              		.cfi_def_cfa_offset 8
 2101 0002 84B0     		sub	sp, sp, #16
 2102              	.LCFI37:
 2103              		.cfi_def_cfa_offset 24
 2104 0004 00AF     		add	r7, sp, #0
 2105              		.cfi_offset 14, -4
 2106              		.cfi_offset 7, -8
 2107              	.LCFI38:
 2108              		.cfi_def_cfa_register 7
 2109 0006 F860     		str	r0, [r7, #12]
 2110 0008 B960     		str	r1, [r7, #8]
 2111 000a 7A60     		str	r2, [r7, #4]
1245:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     p_tcb->FlagsRdy   = flags_rdy;
 2112              		.loc 1 1245 0
 2113 000c FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 60


 2114 000e BA68     		ldr	r2, [r7, #8]
 2115 0010 C3F88420 		str	r2, [r3, #132]
1246:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     p_tcb->PendStatus = OS_STATUS_PEND_OK;                  /* Clear pend status                   
 2116              		.loc 1 1246 0
 2117 0014 FB68     		ldr	r3, [r7, #12]
 2118 0016 4FF00002 		mov	r2, #0
 2119 001a 83F83520 		strb	r2, [r3, #53]
1247:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     p_tcb->PendOn     = OS_TASK_PEND_ON_NOTHING;            /* Indicate no longer pending          
 2120              		.loc 1 1247 0
 2121 001e FB68     		ldr	r3, [r7, #12]
 2122 0020 4FF00002 		mov	r2, #0
 2123 0024 83F83420 		strb	r2, [r3, #52]
1248:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     p_tcb->TS         = ts;
 2124              		.loc 1 1248 0
 2125 0028 FB68     		ldr	r3, [r7, #12]
 2126 002a 7A68     		ldr	r2, [r7, #4]
 2127 002c 1A64     		str	r2, [r3, #64]
1249:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     switch (p_tcb->TaskState) {
 2128              		.loc 1 1249 0
 2129 002e FB68     		ldr	r3, [r7, #12]
 2130 0030 93F83630 		ldrb	r3, [r3, #54]	@ zero_extendqisi2
 2131 0034 072B     		cmp	r3, #7
 2132 0036 1FD8     		bhi	.L153
 2133 0038 4FF00102 		mov	r2, #1
 2134 003c 02FA03F3 		lsl	r3, r2, r3
 2135 0040 03F03302 		and	r2, r3, #51
 2136 0044 002A     		cmp	r2, #0
 2137 0046 16D1     		bne	.L158
 2138 0048 03F0C002 		and	r2, r3, #192
 2139 004c 002A     		cmp	r2, #0
 2140 004e 0CD1     		bne	.L156
 2141 0050 03F00C03 		and	r3, r3, #12
 2142 0054 002B     		cmp	r3, #0
 2143 0056 0FD0     		beq	.L153
 2144              	.L155:
1250:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         case OS_TASK_STATE_RDY:
1251:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         case OS_TASK_STATE_DLY:
1252:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         case OS_TASK_STATE_DLY_SUSPENDED:
1253:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         case OS_TASK_STATE_SUSPENDED:
1254:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              break;
1255:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
1256:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         case OS_TASK_STATE_PEND:
1257:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         case OS_TASK_STATE_PEND_TIMEOUT:
1258:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              OS_TaskRdy(p_tcb);
 2145              		.loc 1 1258 0
 2146 0058 F868     		ldr	r0, [r7, #12]
 2147 005a FFF7FEFF 		bl	OS_TaskRdy
1259:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              p_tcb->TaskState = OS_TASK_STATE_RDY;
 2148              		.loc 1 1259 0
 2149 005e FB68     		ldr	r3, [r7, #12]
 2150 0060 4FF00002 		mov	r2, #0
 2151 0064 83F83620 		strb	r2, [r3, #54]
1260:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              break;
 2152              		.loc 1 1260 0
 2153 0068 06E0     		b	.L153
 2154              	.L156:
1261:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 61


1262:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         case OS_TASK_STATE_PEND_SUSPENDED:
1263:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         case OS_TASK_STATE_PEND_TIMEOUT_SUSPENDED:
1264:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              p_tcb->TaskState = OS_TASK_STATE_SUSPENDED;
 2155              		.loc 1 1264 0
 2156 006a FB68     		ldr	r3, [r7, #12]
 2157 006c 4FF00402 		mov	r2, #4
 2158 0070 83F83620 		strb	r2, [r3, #54]
 2159 0074 00E0     		b	.L153
 2160              	.L158:
 2161              		.loc 1 1254 0
 2162 0076 00BF     		nop
 2163              	.L153:
1265:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              break;
1266:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** 
1267:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****         default:
1268:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****              break;
1269:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     }
1270:C:\Micrium\Software\uCOS-III\Source\os_flag.c ****     OS_PendListRemove(p_tcb);
 2164              		.loc 1 1270 0
 2165 0078 F868     		ldr	r0, [r7, #12]
 2166 007a FFF7FEFF 		bl	OS_PendListRemove
1271:C:\Micrium\Software\uCOS-III\Source\os_flag.c **** }
 2167              		.loc 1 1271 0
 2168 007e 07F11007 		add	r7, r7, #16
 2169 0082 BD46     		mov	sp, r7
 2170 0084 80BD     		pop	{r7, pc}
 2171              		.cfi_endproc
 2172              	.LFE12:
 2173              		.size	OS_FlagTaskRdy, .-OS_FlagTaskRdy
 2174 0086 00BF     		.text
 2175              	.Letext0:
 2176              		.section	.debug_loc,"",%progbits
 2177              	.Ldebug_loc0:
 2178              	.LLST0:
 2179 0000 00000000 		.4byte	.LFB0
 2180 0004 02000000 		.4byte	.LCFI0
 2181 0008 0100     		.2byte	0x1
 2182 000a 5D       		.byte	0x5d
 2183 000b 02000000 		.4byte	.LCFI0
 2184 000f 04000000 		.4byte	.LCFI1
 2185 0013 0200     		.2byte	0x2
 2186 0015 7D       		.byte	0x7d
 2187 0016 08       		.sleb128 8
 2188 0017 04000000 		.4byte	.LCFI1
 2189 001b 06000000 		.4byte	.LCFI2
 2190 001f 0200     		.2byte	0x2
 2191 0021 7D       		.byte	0x7d
 2192 0022 20       		.sleb128 32
 2193 0023 06000000 		.4byte	.LCFI2
 2194 0027 A6000000 		.4byte	.LFE0
 2195 002b 0200     		.2byte	0x2
 2196 002d 77       		.byte	0x77
 2197 002e 20       		.sleb128 32
 2198 002f 00000000 		.4byte	0x0
 2199 0033 00000000 		.4byte	0x0
 2200              	.LLST1:
 2201 0037 00000000 		.4byte	.LFB1
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 62


 2202 003b 02000000 		.4byte	.LCFI3
 2203 003f 0100     		.2byte	0x1
 2204 0041 5D       		.byte	0x5d
 2205 0042 02000000 		.4byte	.LCFI3
 2206 0046 04000000 		.4byte	.LCFI4
 2207 004a 0200     		.2byte	0x2
 2208 004c 7D       		.byte	0x7d
 2209 004d 08       		.sleb128 8
 2210 004e 04000000 		.4byte	.LCFI4
 2211 0052 06000000 		.4byte	.LCFI5
 2212 0056 0200     		.2byte	0x2
 2213 0058 7D       		.byte	0x7d
 2214 0059 30       		.sleb128 48
 2215 005a 06000000 		.4byte	.LCFI5
 2216 005e 52010000 		.4byte	.LFE1
 2217 0062 0200     		.2byte	0x2
 2218 0064 77       		.byte	0x77
 2219 0065 30       		.sleb128 48
 2220 0066 00000000 		.4byte	0x0
 2221 006a 00000000 		.4byte	0x0
 2222              	.LLST2:
 2223 006e 00000000 		.4byte	.LFB2
 2224 0072 02000000 		.4byte	.LCFI6
 2225 0076 0100     		.2byte	0x1
 2226 0078 5D       		.byte	0x5d
 2227 0079 02000000 		.4byte	.LCFI6
 2228 007d 04000000 		.4byte	.LCFI7
 2229 0081 0200     		.2byte	0x2
 2230 0083 7D       		.byte	0x7d
 2231 0084 08       		.sleb128 8
 2232 0085 04000000 		.4byte	.LCFI7
 2233 0089 06000000 		.4byte	.LCFI8
 2234 008d 0300     		.2byte	0x3
 2235 008f 7D       		.byte	0x7d
 2236 0090 D000     		.sleb128 80
 2237 0092 06000000 		.4byte	.LCFI8
 2238 0096 B2050000 		.4byte	.LFE2
 2239 009a 0300     		.2byte	0x3
 2240 009c 77       		.byte	0x77
 2241 009d C800     		.sleb128 72
 2242 009f 00000000 		.4byte	0x0
 2243 00a3 00000000 		.4byte	0x0
 2244              	.LLST3:
 2245 00a7 00000000 		.4byte	.LFB3
 2246 00ab 02000000 		.4byte	.LCFI9
 2247 00af 0100     		.2byte	0x1
 2248 00b1 5D       		.byte	0x5d
 2249 00b2 02000000 		.4byte	.LCFI9
 2250 00b6 04000000 		.4byte	.LCFI10
 2251 00ba 0200     		.2byte	0x2
 2252 00bc 7D       		.byte	0x7d
 2253 00bd 08       		.sleb128 8
 2254 00be 04000000 		.4byte	.LCFI10
 2255 00c2 06000000 		.4byte	.LCFI11
 2256 00c6 0200     		.2byte	0x2
 2257 00c8 7D       		.byte	0x7d
 2258 00c9 30       		.sleb128 48
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 63


 2259 00ca 06000000 		.4byte	.LCFI11
 2260 00ce 06010000 		.4byte	.LFE3
 2261 00d2 0200     		.2byte	0x2
 2262 00d4 77       		.byte	0x77
 2263 00d5 30       		.sleb128 48
 2264 00d6 00000000 		.4byte	0x0
 2265 00da 00000000 		.4byte	0x0
 2266              	.LLST4:
 2267 00de 00000000 		.4byte	.LFB4
 2268 00e2 02000000 		.4byte	.LCFI12
 2269 00e6 0100     		.2byte	0x1
 2270 00e8 5D       		.byte	0x5d
 2271 00e9 02000000 		.4byte	.LCFI12
 2272 00ed 04000000 		.4byte	.LCFI13
 2273 00f1 0200     		.2byte	0x2
 2274 00f3 7D       		.byte	0x7d
 2275 00f4 08       		.sleb128 8
 2276 00f5 04000000 		.4byte	.LCFI13
 2277 00f9 06000000 		.4byte	.LCFI14
 2278 00fd 0200     		.2byte	0x2
 2279 00ff 7D       		.byte	0x7d
 2280 0100 18       		.sleb128 24
 2281 0101 06000000 		.4byte	.LCFI14
 2282 0105 5C000000 		.4byte	.LFE4
 2283 0109 0200     		.2byte	0x2
 2284 010b 77       		.byte	0x77
 2285 010c 18       		.sleb128 24
 2286 010d 00000000 		.4byte	0x0
 2287 0111 00000000 		.4byte	0x0
 2288              	.LLST5:
 2289 0115 00000000 		.4byte	.LFB5
 2290 0119 02000000 		.4byte	.LCFI15
 2291 011d 0100     		.2byte	0x1
 2292 011f 5D       		.byte	0x5d
 2293 0120 02000000 		.4byte	.LCFI15
 2294 0124 04000000 		.4byte	.LCFI16
 2295 0128 0200     		.2byte	0x2
 2296 012a 7D       		.byte	0x7d
 2297 012b 08       		.sleb128 8
 2298 012c 04000000 		.4byte	.LCFI16
 2299 0130 06000000 		.4byte	.LCFI17
 2300 0134 0200     		.2byte	0x2
 2301 0136 7D       		.byte	0x7d
 2302 0137 28       		.sleb128 40
 2303 0138 06000000 		.4byte	.LCFI17
 2304 013c 6E000000 		.4byte	.LFE5
 2305 0140 0200     		.2byte	0x2
 2306 0142 77       		.byte	0x77
 2307 0143 20       		.sleb128 32
 2308 0144 00000000 		.4byte	0x0
 2309 0148 00000000 		.4byte	0x0
 2310              	.LLST6:
 2311 014c 00000000 		.4byte	.LFB6
 2312 0150 02000000 		.4byte	.LCFI18
 2313 0154 0100     		.2byte	0x1
 2314 0156 5D       		.byte	0x5d
 2315 0157 02000000 		.4byte	.LCFI18
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 64


 2316 015b 04000000 		.4byte	.LCFI19
 2317 015f 0200     		.2byte	0x2
 2318 0161 7D       		.byte	0x7d
 2319 0162 08       		.sleb128 8
 2320 0163 04000000 		.4byte	.LCFI19
 2321 0167 06000000 		.4byte	.LCFI20
 2322 016b 0200     		.2byte	0x2
 2323 016d 7D       		.byte	0x7d
 2324 016e 18       		.sleb128 24
 2325 016f 06000000 		.4byte	.LCFI20
 2326 0173 58000000 		.4byte	.LFE6
 2327 0177 0200     		.2byte	0x2
 2328 0179 77       		.byte	0x77
 2329 017a 18       		.sleb128 24
 2330 017b 00000000 		.4byte	0x0
 2331 017f 00000000 		.4byte	0x0
 2332              	.LLST7:
 2333 0183 00000000 		.4byte	.LFB7
 2334 0187 02000000 		.4byte	.LCFI21
 2335 018b 0100     		.2byte	0x1
 2336 018d 5D       		.byte	0x5d
 2337 018e 02000000 		.4byte	.LCFI21
 2338 0192 04000000 		.4byte	.LCFI22
 2339 0196 0200     		.2byte	0x2
 2340 0198 7D       		.byte	0x7d
 2341 0199 08       		.sleb128 8
 2342 019a 04000000 		.4byte	.LCFI22
 2343 019e 06000000 		.4byte	.LCFI23
 2344 01a2 0200     		.2byte	0x2
 2345 01a4 7D       		.byte	0x7d
 2346 01a5 18       		.sleb128 24
 2347 01a6 06000000 		.4byte	.LCFI23
 2348 01aa 3E000000 		.4byte	.LFE7
 2349 01ae 0200     		.2byte	0x2
 2350 01b0 77       		.byte	0x77
 2351 01b1 18       		.sleb128 24
 2352 01b2 00000000 		.4byte	0x0
 2353 01b6 00000000 		.4byte	0x0
 2354              	.LLST8:
 2355 01ba 00000000 		.4byte	.LFB8
 2356 01be 02000000 		.4byte	.LCFI24
 2357 01c2 0100     		.2byte	0x1
 2358 01c4 5D       		.byte	0x5d
 2359 01c5 02000000 		.4byte	.LCFI24
 2360 01c9 04000000 		.4byte	.LCFI25
 2361 01cd 0200     		.2byte	0x2
 2362 01cf 7D       		.byte	0x7d
 2363 01d0 04       		.sleb128 4
 2364 01d1 04000000 		.4byte	.LCFI25
 2365 01d5 06000000 		.4byte	.LCFI26
 2366 01d9 0200     		.2byte	0x2
 2367 01db 7D       		.byte	0x7d
 2368 01dc 10       		.sleb128 16
 2369 01dd 06000000 		.4byte	.LCFI26
 2370 01e1 36000000 		.4byte	.LFE8
 2371 01e5 0200     		.2byte	0x2
 2372 01e7 77       		.byte	0x77
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 65


 2373 01e8 10       		.sleb128 16
 2374 01e9 00000000 		.4byte	0x0
 2375 01ed 00000000 		.4byte	0x0
 2376              	.LLST9:
 2377 01f1 00000000 		.4byte	.LFB9
 2378 01f5 02000000 		.4byte	.LCFI27
 2379 01f9 0100     		.2byte	0x1
 2380 01fb 5D       		.byte	0x5d
 2381 01fc 02000000 		.4byte	.LCFI27
 2382 0200 04000000 		.4byte	.LCFI28
 2383 0204 0200     		.2byte	0x2
 2384 0206 7D       		.byte	0x7d
 2385 0207 04       		.sleb128 4
 2386 0208 04000000 		.4byte	.LCFI28
 2387 020c 06000000 		.4byte	.LCFI29
 2388 0210 0200     		.2byte	0x2
 2389 0212 7D       		.byte	0x7d
 2390 0213 10       		.sleb128 16
 2391 0214 06000000 		.4byte	.LCFI29
 2392 0218 66000000 		.4byte	.LFE9
 2393 021c 0200     		.2byte	0x2
 2394 021e 77       		.byte	0x77
 2395 021f 10       		.sleb128 16
 2396 0220 00000000 		.4byte	0x0
 2397 0224 00000000 		.4byte	0x0
 2398              	.LLST10:
 2399 0228 00000000 		.4byte	.LFB10
 2400 022c 02000000 		.4byte	.LCFI30
 2401 0230 0100     		.2byte	0x1
 2402 0232 5D       		.byte	0x5d
 2403 0233 02000000 		.4byte	.LCFI30
 2404 0237 04000000 		.4byte	.LCFI31
 2405 023b 0200     		.2byte	0x2
 2406 023d 7D       		.byte	0x7d
 2407 023e 04       		.sleb128 4
 2408 023f 04000000 		.4byte	.LCFI31
 2409 0243 06000000 		.4byte	.LCFI32
 2410 0247 0200     		.2byte	0x2
 2411 0249 7D       		.byte	0x7d
 2412 024a 18       		.sleb128 24
 2413 024b 06000000 		.4byte	.LCFI32
 2414 024f 7C000000 		.4byte	.LFE10
 2415 0253 0200     		.2byte	0x2
 2416 0255 77       		.byte	0x77
 2417 0256 18       		.sleb128 24
 2418 0257 00000000 		.4byte	0x0
 2419 025b 00000000 		.4byte	0x0
 2420              	.LLST11:
 2421 025f 00000000 		.4byte	.LFB11
 2422 0263 02000000 		.4byte	.LCFI33
 2423 0267 0100     		.2byte	0x1
 2424 0269 5D       		.byte	0x5d
 2425 026a 02000000 		.4byte	.LCFI33
 2426 026e 04000000 		.4byte	.LCFI34
 2427 0272 0200     		.2byte	0x2
 2428 0274 7D       		.byte	0x7d
 2429 0275 08       		.sleb128 8
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 66


 2430 0276 04000000 		.4byte	.LCFI34
 2431 027a 06000000 		.4byte	.LCFI35
 2432 027e 0200     		.2byte	0x2
 2433 0280 7D       		.byte	0x7d
 2434 0281 38       		.sleb128 56
 2435 0282 06000000 		.4byte	.LCFI35
 2436 0286 08020000 		.4byte	.LFE11
 2437 028a 0200     		.2byte	0x2
 2438 028c 77       		.byte	0x77
 2439 028d 38       		.sleb128 56
 2440 028e 00000000 		.4byte	0x0
 2441 0292 00000000 		.4byte	0x0
 2442              	.LLST12:
 2443 0296 00000000 		.4byte	.LFB12
 2444 029a 02000000 		.4byte	.LCFI36
 2445 029e 0100     		.2byte	0x1
 2446 02a0 5D       		.byte	0x5d
 2447 02a1 02000000 		.4byte	.LCFI36
 2448 02a5 04000000 		.4byte	.LCFI37
 2449 02a9 0200     		.2byte	0x2
 2450 02ab 7D       		.byte	0x7d
 2451 02ac 08       		.sleb128 8
 2452 02ad 04000000 		.4byte	.LCFI37
 2453 02b1 06000000 		.4byte	.LCFI38
 2454 02b5 0200     		.2byte	0x2
 2455 02b7 7D       		.byte	0x7d
 2456 02b8 18       		.sleb128 24
 2457 02b9 06000000 		.4byte	.LCFI38
 2458 02bd 86000000 		.4byte	.LFE12
 2459 02c1 0200     		.2byte	0x2
 2460 02c3 77       		.byte	0x77
 2461 02c4 18       		.sleb128 24
 2462 02c5 00000000 		.4byte	0x0
 2463 02c9 00000000 		.4byte	0x0
 2464              		.file 2 "..\\..\\..\\..\\..\\..\\uC-CPU\\ARM-Cortex-M3\\GNU/cpu.h"
 2465              		.file 3 "..\\..\\..\\..\\..\\..\\uC-CPU/cpu_core.h"
 2466              		.file 4 "..\\..\\..\\..\\..\\..\\uCOS-III\\Source/os_type.h"
 2467              		.file 5 "..\\..\\..\\..\\..\\..\\uCOS-III\\Source/os.h"
 2468              		.section	.debug_info
 2469 0000 0C130000 		.4byte	0x130c
 2470 0004 0200     		.2byte	0x2
 2471 0006 00000000 		.4byte	.Ldebug_abbrev0
 2472 000a 04       		.byte	0x4
 2473 000b 01       		.uleb128 0x1
 2474 000c 30000000 		.4byte	.LASF320
 2475 0010 01       		.byte	0x1
 2476 0011 45090000 		.4byte	.LASF321
 2477 0015 0F120000 		.4byte	.LASF322
 2478 0019 00000000 		.4byte	0x0
 2479 001d 00000000 		.4byte	0x0
 2480 0021 00000000 		.4byte	.Ldebug_ranges0+0x0
 2481 0025 00000000 		.4byte	.Ldebug_line0
 2482 0029 02       		.uleb128 0x2
 2483 002a E7060000 		.4byte	.LASF0
 2484 002e 02       		.byte	0x2
 2485 002f 76       		.byte	0x76
 2486 0030 34000000 		.4byte	0x34
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 67


 2487 0034 03       		.uleb128 0x3
 2488 0035 01       		.byte	0x1
 2489 0036 08       		.byte	0x8
 2490 0037 71080000 		.4byte	.LASF2
 2491 003b 02       		.uleb128 0x2
 2492 003c 4F0F0000 		.4byte	.LASF1
 2493 0040 02       		.byte	0x2
 2494 0041 77       		.byte	0x77
 2495 0042 46000000 		.4byte	0x46
 2496 0046 03       		.uleb128 0x3
 2497 0047 01       		.byte	0x1
 2498 0048 08       		.byte	0x8
 2499 0049 970F0000 		.4byte	.LASF3
 2500 004d 02       		.uleb128 0x2
 2501 004e C6050000 		.4byte	.LASF4
 2502 0052 02       		.byte	0x2
 2503 0053 78       		.byte	0x78
 2504 0054 46000000 		.4byte	0x46
 2505 0058 03       		.uleb128 0x3
 2506 0059 01       		.byte	0x1
 2507 005a 06       		.byte	0x6
 2508 005b FF100000 		.4byte	.LASF5
 2509 005f 02       		.uleb128 0x2
 2510 0060 340A0000 		.4byte	.LASF6
 2511 0064 02       		.byte	0x2
 2512 0065 7A       		.byte	0x7a
 2513 0066 6A000000 		.4byte	0x6a
 2514 006a 03       		.uleb128 0x3
 2515 006b 02       		.byte	0x2
 2516 006c 07       		.byte	0x7
 2517 006d 25110000 		.4byte	.LASF7
 2518 0071 03       		.uleb128 0x3
 2519 0072 02       		.byte	0x2
 2520 0073 05       		.byte	0x5
 2521 0074 1E0D0000 		.4byte	.LASF8
 2522 0078 02       		.uleb128 0x2
 2523 0079 CB010000 		.4byte	.LASF9
 2524 007d 02       		.byte	0x2
 2525 007e 7C       		.byte	0x7c
 2526 007f 83000000 		.4byte	0x83
 2527 0083 03       		.uleb128 0x3
 2528 0084 04       		.byte	0x4
 2529 0085 07       		.byte	0x7
 2530 0086 8A0E0000 		.4byte	.LASF10
 2531 008a 04       		.uleb128 0x4
 2532 008b 04       		.byte	0x4
 2533 008c 05       		.byte	0x5
 2534 008d 696E7400 		.ascii	"int\000"
 2535 0091 03       		.uleb128 0x3
 2536 0092 08       		.byte	0x8
 2537 0093 07       		.byte	0x7
 2538 0094 14050000 		.4byte	.LASF11
 2539 0098 03       		.uleb128 0x3
 2540 0099 08       		.byte	0x8
 2541 009a 05       		.byte	0x5
 2542 009b AA090000 		.4byte	.LASF12
 2543 009f 03       		.uleb128 0x3
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 68


 2544 00a0 04       		.byte	0x4
 2545 00a1 04       		.byte	0x4
 2546 00a2 66040000 		.4byte	.LASF13
 2547 00a6 03       		.uleb128 0x3
 2548 00a7 08       		.byte	0x8
 2549 00a8 04       		.byte	0x4
 2550 00a9 AE110000 		.4byte	.LASF14
 2551 00ad 05       		.uleb128 0x5
 2552 00ae 04       		.byte	0x4
 2553 00af B3000000 		.4byte	0xb3
 2554 00b3 06       		.uleb128 0x6
 2555 00b4 01       		.byte	0x1
 2556 00b5 BF000000 		.4byte	0xbf
 2557 00b9 07       		.uleb128 0x7
 2558 00ba BF000000 		.4byte	0xbf
 2559 00be 00       		.byte	0x0
 2560 00bf 08       		.uleb128 0x8
 2561 00c0 04       		.byte	0x4
 2562 00c1 02       		.uleb128 0x2
 2563 00c2 090F0000 		.4byte	.LASF15
 2564 00c6 02       		.byte	0x2
 2565 00c7 B5       		.byte	0xb5
 2566 00c8 78000000 		.4byte	0x78
 2567 00cc 02       		.uleb128 0x2
 2568 00cd C1130000 		.4byte	.LASF16
 2569 00d1 02       		.byte	0x2
 2570 00d2 D9       		.byte	0xd9
 2571 00d3 78000000 		.4byte	0x78
 2572 00d7 02       		.uleb128 0x2
 2573 00d8 07070000 		.4byte	.LASF17
 2574 00dc 02       		.byte	0x2
 2575 00dd DA       		.byte	0xda
 2576 00de C1000000 		.4byte	0xc1
 2577 00e2 09       		.uleb128 0x9
 2578 00e3 A7080000 		.4byte	.LASF18
 2579 00e7 02       		.byte	0x2
 2580 00e8 2901     		.2byte	0x129
 2581 00ea 78000000 		.4byte	0x78
 2582 00ee 02       		.uleb128 0x2
 2583 00ef F80A0000 		.4byte	.LASF19
 2584 00f3 03       		.byte	0x3
 2585 00f4 C4       		.byte	0xc4
 2586 00f5 78000000 		.4byte	0x78
 2587 00f9 02       		.uleb128 0x2
 2588 00fa A3090000 		.4byte	.LASF20
 2589 00fe 03       		.byte	0x3
 2590 00ff C7       		.byte	0xc7
 2591 0100 EE000000 		.4byte	0xee
 2592 0104 02       		.uleb128 0x2
 2593 0105 A1010000 		.4byte	.LASF21
 2594 0109 04       		.byte	0x4
 2595 010a 30       		.byte	0x30
 2596 010b 5F000000 		.4byte	0x5f
 2597 010f 02       		.uleb128 0x2
 2598 0110 22000000 		.4byte	.LASF22
 2599 0114 04       		.byte	0x4
 2600 0115 34       		.byte	0x34
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 69


 2601 0116 78000000 		.4byte	0x78
 2602 011a 02       		.uleb128 0x2
 2603 011b 5B0F0000 		.4byte	.LASF23
 2604 011f 04       		.byte	0x4
 2605 0120 36       		.byte	0x36
 2606 0121 78000000 		.4byte	0x78
 2607 0125 02       		.uleb128 0x2
 2608 0126 42110000 		.4byte	.LASF24
 2609 012a 04       		.byte	0x4
 2610 012b 38       		.byte	0x38
 2611 012c 78000000 		.4byte	0x78
 2612 0130 02       		.uleb128 0x2
 2613 0131 20070000 		.4byte	.LASF25
 2614 0135 04       		.byte	0x4
 2615 0136 3F       		.byte	0x3f
 2616 0137 5F000000 		.4byte	0x5f
 2617 013b 02       		.uleb128 0x2
 2618 013c AC060000 		.4byte	.LASF26
 2619 0140 04       		.byte	0x4
 2620 0141 40       		.byte	0x40
 2621 0142 5F000000 		.4byte	0x5f
 2622 0146 02       		.uleb128 0x2
 2623 0147 BA0D0000 		.4byte	.LASF27
 2624 014b 04       		.byte	0x4
 2625 014c 42       		.byte	0x42
 2626 014d 4D000000 		.4byte	0x4d
 2627 0151 02       		.uleb128 0x2
 2628 0152 7F020000 		.4byte	.LASF28
 2629 0156 04       		.byte	0x4
 2630 0157 44       		.byte	0x44
 2631 0158 5F000000 		.4byte	0x5f
 2632 015c 02       		.uleb128 0x2
 2633 015d 76080000 		.4byte	.LASF29
 2634 0161 04       		.byte	0x4
 2635 0162 45       		.byte	0x45
 2636 0163 78000000 		.4byte	0x78
 2637 0167 02       		.uleb128 0x2
 2638 0168 EB0F0000 		.4byte	.LASF30
 2639 016c 04       		.byte	0x4
 2640 016d 47       		.byte	0x47
 2641 016e 5F000000 		.4byte	0x5f
 2642 0172 02       		.uleb128 0x2
 2643 0173 5E040000 		.4byte	.LASF31
 2644 0177 04       		.byte	0x4
 2645 0178 49       		.byte	0x49
 2646 0179 4D000000 		.4byte	0x4d
 2647 017d 02       		.uleb128 0x2
 2648 017e 2E060000 		.4byte	.LASF32
 2649 0182 04       		.byte	0x4
 2650 0183 4F       		.byte	0x4f
 2651 0184 78000000 		.4byte	0x78
 2652 0188 02       		.uleb128 0x2
 2653 0189 240B0000 		.4byte	.LASF33
 2654 018d 04       		.byte	0x4
 2655 018e 52       		.byte	0x52
 2656 018f 78000000 		.4byte	0x78
 2657 0193 02       		.uleb128 0x2
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 70


 2658 0194 DA0F0000 		.4byte	.LASF34
 2659 0198 04       		.byte	0x4
 2660 0199 54       		.byte	0x54
 2661 019a 4D000000 		.4byte	0x4d
 2662 019e 02       		.uleb128 0x2
 2663 019f 64060000 		.4byte	.LASF35
 2664 01a3 04       		.byte	0x4
 2665 01a4 56       		.byte	0x56
 2666 01a5 4D000000 		.4byte	0x4d
 2667 01a9 02       		.uleb128 0x2
 2668 01aa AF0A0000 		.4byte	.LASF36
 2669 01ae 04       		.byte	0x4
 2670 01af 58       		.byte	0x58
 2671 01b0 78000000 		.4byte	0x78
 2672 01b4 0A       		.uleb128 0xa
 2673 01b5 59010000 		.4byte	.LASF323
 2674 01b9 02       		.byte	0x2
 2675 01ba 05       		.byte	0x5
 2676 01bb A501     		.2byte	0x1a5
 2677 01bd C8060000 		.4byte	0x6c8
 2678 01c1 0B       		.uleb128 0xb
 2679 01c2 6B110000 		.4byte	.LASF37
 2680 01c6 00       		.sleb128 0
 2681 01c7 0B       		.uleb128 0xb
 2682 01c8 67000000 		.4byte	.LASF38
 2683 01cc 90CE00   		.sleb128 10000
 2684 01cf 0B       		.uleb128 0xb
 2685 01d0 05030000 		.4byte	.LASF39
 2686 01d4 91CE00   		.sleb128 10001
 2687 01d7 0B       		.uleb128 0xb
 2688 01d8 70000000 		.4byte	.LASF40
 2689 01dc F8D500   		.sleb128 11000
 2690 01df 0B       		.uleb128 0xb
 2691 01e0 79000000 		.4byte	.LASF41
 2692 01e4 E0DD00   		.sleb128 12000
 2693 01e7 0B       		.uleb128 0xb
 2694 01e8 8F010000 		.4byte	.LASF42
 2695 01ec E1DD00   		.sleb128 12001
 2696 01ef 0B       		.uleb128 0xb
 2697 01f0 82000000 		.4byte	.LASF43
 2698 01f4 C8E500   		.sleb128 13000
 2699 01f7 0B       		.uleb128 0xb
 2700 01f8 41080000 		.4byte	.LASF44
 2701 01fc C9E500   		.sleb128 13001
 2702 01ff 0B       		.uleb128 0xb
 2703 0200 8B000000 		.4byte	.LASF45
 2704 0204 B0ED00   		.sleb128 14000
 2705 0207 0B       		.uleb128 0xb
 2706 0208 94000000 		.4byte	.LASF46
 2707 020c 98F500   		.sleb128 15000
 2708 020f 0B       		.uleb128 0xb
 2709 0210 11110000 		.4byte	.LASF47
 2710 0214 99F500   		.sleb128 15001
 2711 0217 0B       		.uleb128 0xb
 2712 0218 A2070000 		.4byte	.LASF48
 2713 021c FDF500   		.sleb128 15101
 2714 021f 0B       		.uleb128 0xb
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 71


 2715 0220 D80E0000 		.4byte	.LASF49
 2716 0224 FEF500   		.sleb128 15102
 2717 0227 0B       		.uleb128 0xb
 2718 0228 C2090000 		.4byte	.LASF50
 2719 022c FFF500   		.sleb128 15103
 2720 022f 0B       		.uleb128 0xb
 2721 0230 98110000 		.4byte	.LASF51
 2722 0234 80F600   		.sleb128 15104
 2723 0237 0B       		.uleb128 0xb
 2724 0238 9D000000 		.4byte	.LASF52
 2725 023c 80FD00   		.sleb128 16000
 2726 023f 0B       		.uleb128 0xb
 2727 0240 A6000000 		.4byte	.LASF53
 2728 0244 E88401   		.sleb128 17000
 2729 0247 0B       		.uleb128 0xb
 2730 0248 AF000000 		.4byte	.LASF54
 2731 024c D08C01   		.sleb128 18000
 2732 024f 0B       		.uleb128 0xb
 2733 0250 F7030000 		.4byte	.LASF55
 2734 0254 D18C01   		.sleb128 18001
 2735 0257 0B       		.uleb128 0xb
 2736 0258 CE020000 		.4byte	.LASF56
 2737 025c D28C01   		.sleb128 18002
 2738 025f 0B       		.uleb128 0xb
 2739 0260 C2030000 		.4byte	.LASF57
 2740 0264 D38C01   		.sleb128 18003
 2741 0267 0B       		.uleb128 0xb
 2742 0268 7D010000 		.4byte	.LASF58
 2743 026c D48C01   		.sleb128 18004
 2744 026f 0B       		.uleb128 0xb
 2745 0270 86100000 		.4byte	.LASF59
 2746 0274 D58C01   		.sleb128 18005
 2747 0277 0B       		.uleb128 0xb
 2748 0278 E90B0000 		.4byte	.LASF60
 2749 027c D68C01   		.sleb128 18006
 2750 027f 0B       		.uleb128 0xb
 2751 0280 B8000000 		.4byte	.LASF61
 2752 0284 B89401   		.sleb128 19000
 2753 0287 0B       		.uleb128 0xb
 2754 0288 C1000000 		.4byte	.LASF62
 2755 028c A09C01   		.sleb128 20000
 2756 028f 0B       		.uleb128 0xb
 2757 0290 CA000000 		.4byte	.LASF63
 2758 0294 88A401   		.sleb128 21000
 2759 0297 0B       		.uleb128 0xb
 2760 0298 EE0C0000 		.4byte	.LASF64
 2761 029c 89A401   		.sleb128 21001
 2762 029f 0B       		.uleb128 0xb
 2763 02a0 D3000000 		.4byte	.LASF65
 2764 02a4 F0AB01   		.sleb128 22000
 2765 02a7 0B       		.uleb128 0xb
 2766 02a8 FE0F0000 		.4byte	.LASF66
 2767 02ac B9AD01   		.sleb128 22201
 2768 02af 0B       		.uleb128 0xb
 2769 02b0 B70A0000 		.4byte	.LASF67
 2770 02b4 BAAD01   		.sleb128 22202
 2771 02b7 0B       		.uleb128 0xb
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 72


 2772 02b8 CE0C0000 		.4byte	.LASF68
 2773 02bc BBAD01   		.sleb128 22203
 2774 02bf 0B       		.uleb128 0xb
 2775 02c0 CA070000 		.4byte	.LASF69
 2776 02c4 BCAD01   		.sleb128 22204
 2777 02c7 0B       		.uleb128 0xb
 2778 02c8 630A0000 		.4byte	.LASF70
 2779 02cc BDAD01   		.sleb128 22205
 2780 02cf 0B       		.uleb128 0xb
 2781 02d0 B50C0000 		.4byte	.LASF71
 2782 02d4 BEAD01   		.sleb128 22206
 2783 02d7 0B       		.uleb128 0xb
 2784 02d8 DF0A0000 		.4byte	.LASF72
 2785 02dc BFAD01   		.sleb128 22207
 2786 02df 0B       		.uleb128 0xb
 2787 02e0 A7040000 		.4byte	.LASF73
 2788 02e4 C0AD01   		.sleb128 22208
 2789 02e7 0B       		.uleb128 0xb
 2790 02e8 C7120000 		.4byte	.LASF74
 2791 02ec C1AD01   		.sleb128 22209
 2792 02ef 0B       		.uleb128 0xb
 2793 02f0 A9130000 		.4byte	.LASF75
 2794 02f4 C2AD01   		.sleb128 22210
 2795 02f7 0B       		.uleb128 0xb
 2796 02f8 330D0000 		.4byte	.LASF76
 2797 02fc 9DAE01   		.sleb128 22301
 2798 02ff 0B       		.uleb128 0xb
 2799 0300 A10D0000 		.4byte	.LASF77
 2800 0304 9EAE01   		.sleb128 22302
 2801 0307 0B       		.uleb128 0xb
 2802 0308 95060000 		.4byte	.LASF78
 2803 030c 81AF01   		.sleb128 22401
 2804 030f 0B       		.uleb128 0xb
 2805 0310 9F0E0000 		.4byte	.LASF79
 2806 0314 82AF01   		.sleb128 22402
 2807 0317 0B       		.uleb128 0xb
 2808 0318 34030000 		.4byte	.LASF80
 2809 031c 83AF01   		.sleb128 22403
 2810 031f 0B       		.uleb128 0xb
 2811 0320 DC000000 		.4byte	.LASF81
 2812 0324 D8B301   		.sleb128 23000
 2813 0327 0B       		.uleb128 0xb
 2814 0328 4A060000 		.4byte	.LASF82
 2815 032c D9B301   		.sleb128 23001
 2816 032f 0B       		.uleb128 0xb
 2817 0330 81040000 		.4byte	.LASF83
 2818 0334 DAB301   		.sleb128 23002
 2819 0337 0B       		.uleb128 0xb
 2820 0338 E5000000 		.4byte	.LASF84
 2821 033c C0BB01   		.sleb128 24000
 2822 033f 0B       		.uleb128 0xb
 2823 0340 8E030000 		.4byte	.LASF85
 2824 0344 C1BB01   		.sleb128 24001
 2825 0347 0B       		.uleb128 0xb
 2826 0348 89090000 		.4byte	.LASF86
 2827 034c C2BB01   		.sleb128 24002
 2828 034f 0B       		.uleb128 0xb
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 73


 2829 0350 7B0A0000 		.4byte	.LASF87
 2830 0354 C3BB01   		.sleb128 24003
 2831 0357 0B       		.uleb128 0xb
 2832 0358 180E0000 		.4byte	.LASF88
 2833 035c C4BB01   		.sleb128 24004
 2834 035f 0B       		.uleb128 0xb
 2835 0360 94080000 		.4byte	.LASF89
 2836 0364 A5BC01   		.sleb128 24101
 2837 0367 0B       		.uleb128 0xb
 2838 0368 660C0000 		.4byte	.LASF90
 2839 036c 89BD01   		.sleb128 24201
 2840 036f 0B       		.uleb128 0xb
 2841 0370 2B070000 		.4byte	.LASF91
 2842 0374 8ABD01   		.sleb128 24202
 2843 0377 0B       		.uleb128 0xb
 2844 0378 EE000000 		.4byte	.LASF92
 2845 037c A8C301   		.sleb128 25000
 2846 037f 0B       		.uleb128 0xb
 2847 0380 B5110000 		.4byte	.LASF93
 2848 0384 A9C301   		.sleb128 25001
 2849 0387 0B       		.uleb128 0xb
 2850 0388 F30E0000 		.4byte	.LASF94
 2851 038c AAC301   		.sleb128 25002
 2852 038f 0B       		.uleb128 0xb
 2853 0390 730E0000 		.4byte	.LASF95
 2854 0394 ABC301   		.sleb128 25003
 2855 0397 0B       		.uleb128 0xb
 2856 0398 1D0A0000 		.4byte	.LASF96
 2857 039c ACC301   		.sleb128 25004
 2858 039f 0B       		.uleb128 0xb
 2859 03a0 F4110000 		.4byte	.LASF97
 2860 03a4 ADC301   		.sleb128 25005
 2861 03a7 0B       		.uleb128 0xb
 2862 03a8 33100000 		.4byte	.LASF98
 2863 03ac AEC301   		.sleb128 25006
 2864 03af 0B       		.uleb128 0xb
 2865 03b0 6C020000 		.4byte	.LASF99
 2866 03b4 AFC301   		.sleb128 25007
 2867 03b7 0B       		.uleb128 0xb
 2868 03b8 22020000 		.4byte	.LASF100
 2869 03bc B0C301   		.sleb128 25008
 2870 03bf 0B       		.uleb128 0xb
 2871 03c0 6C040000 		.4byte	.LASF101
 2872 03c4 8DC401   		.sleb128 25101
 2873 03c7 0B       		.uleb128 0xb
 2874 03c8 120F0000 		.4byte	.LASF102
 2875 03cc 8EC401   		.sleb128 25102
 2876 03cf 0B       		.uleb128 0xb
 2877 03d0 8E130000 		.4byte	.LASF103
 2878 03d4 F1C401   		.sleb128 25201
 2879 03d7 0B       		.uleb128 0xb
 2880 03d8 E8110000 		.4byte	.LASF104
 2881 03dc F2C401   		.sleb128 25202
 2882 03df 0B       		.uleb128 0xb
 2883 03e0 07000000 		.4byte	.LASF105
 2884 03e4 F3C401   		.sleb128 25203
 2885 03e7 0B       		.uleb128 0xb
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 74


 2886 03e8 360C0000 		.4byte	.LASF106
 2887 03ec D5C501   		.sleb128 25301
 2888 03ef 0B       		.uleb128 0xb
 2889 03f0 F7000000 		.4byte	.LASF107
 2890 03f4 90CB01   		.sleb128 26000
 2891 03f7 0B       		.uleb128 0xb
 2892 03f8 78100000 		.4byte	.LASF108
 2893 03fc 91CB01   		.sleb128 26001
 2894 03ff 0B       		.uleb128 0xb
 2895 0400 FE050000 		.4byte	.LASF109
 2896 0404 92CB01   		.sleb128 26002
 2897 0407 0B       		.uleb128 0xb
 2898 0408 50080000 		.4byte	.LASF110
 2899 040c 93CB01   		.sleb128 26003
 2900 040f 0B       		.uleb128 0xb
 2901 0410 F2090000 		.4byte	.LASF111
 2902 0414 94CB01   		.sleb128 26004
 2903 0417 0B       		.uleb128 0xb
 2904 0418 00010000 		.4byte	.LASF112
 2905 041c F8D201   		.sleb128 27000
 2906 041f 0B       		.uleb128 0xb
 2907 0420 8F0A0000 		.4byte	.LASF113
 2908 0424 F9D201   		.sleb128 27001
 2909 0427 0B       		.uleb128 0xb
 2910 0428 A00C0000 		.4byte	.LASF114
 2911 042c FAD201   		.sleb128 27002
 2912 042f 0B       		.uleb128 0xb
 2913 0430 3F0A0000 		.4byte	.LASF115
 2914 0434 FBD201   		.sleb128 27003
 2915 0437 0B       		.uleb128 0xb
 2916 0438 09010000 		.4byte	.LASF116
 2917 043c E0DA01   		.sleb128 28000
 2918 043f 0B       		.uleb128 0xb
 2919 0440 BB080000 		.4byte	.LASF117
 2920 0444 E1DA01   		.sleb128 28001
 2921 0447 0B       		.uleb128 0xb
 2922 0448 2B080000 		.4byte	.LASF118
 2923 044c E2DA01   		.sleb128 28002
 2924 044f 0B       		.uleb128 0xb
 2925 0450 84110000 		.4byte	.LASF119
 2926 0454 E3DA01   		.sleb128 28003
 2927 0457 0B       		.uleb128 0xb
 2928 0458 D0110000 		.4byte	.LASF120
 2929 045c E4DA01   		.sleb128 28004
 2930 045f 0B       		.uleb128 0xb
 2931 0460 520D0000 		.4byte	.LASF121
 2932 0464 E5DA01   		.sleb128 28005
 2933 0467 0B       		.uleb128 0xb
 2934 0468 17130000 		.4byte	.LASF122
 2935 046c C5DB01   		.sleb128 28101
 2936 046f 0B       		.uleb128 0xb
 2937 0470 01130000 		.4byte	.LASF123
 2938 0474 C6DB01   		.sleb128 28102
 2939 0477 0B       		.uleb128 0xb
 2940 0478 56020000 		.4byte	.LASF124
 2941 047c A9DC01   		.sleb128 28201
 2942 047f 0B       		.uleb128 0xb
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 75


 2943 0480 FA080000 		.4byte	.LASF125
 2944 0484 AADC01   		.sleb128 28202
 2945 0487 0B       		.uleb128 0xb
 2946 0488 8A070000 		.4byte	.LASF126
 2947 048c ABDC01   		.sleb128 28203
 2948 048f 0B       		.uleb128 0xb
 2949 0490 BB0E0000 		.4byte	.LASF127
 2950 0494 ACDC01   		.sleb128 28204
 2951 0497 0B       		.uleb128 0xb
 2952 0498 490C0000 		.4byte	.LASF128
 2953 049c ADDC01   		.sleb128 28205
 2954 049f 0B       		.uleb128 0xb
 2955 04a0 14100000 		.4byte	.LASF129
 2956 04a4 AEDC01   		.sleb128 28206
 2957 04a7 0B       		.uleb128 0xb
 2958 04a8 EF010000 		.4byte	.LASF130
 2959 04ac AFDC01   		.sleb128 28207
 2960 04af 0B       		.uleb128 0xb
 2961 04b0 6C0F0000 		.4byte	.LASF131
 2962 04b4 B0DC01   		.sleb128 28208
 2963 04b7 0B       		.uleb128 0xb
 2964 04b8 360F0000 		.4byte	.LASF132
 2965 04bc B1DC01   		.sleb128 28209
 2966 04bf 0B       		.uleb128 0xb
 2967 04c0 12010000 		.4byte	.LASF133
 2968 04c4 C8E201   		.sleb128 29000
 2969 04c7 0B       		.uleb128 0xb
 2970 04c8 3A020000 		.4byte	.LASF134
 2971 04cc C9E201   		.sleb128 29001
 2972 04cf 0B       		.uleb128 0xb
 2973 04d0 F0060000 		.4byte	.LASF135
 2974 04d4 CAE201   		.sleb128 29002
 2975 04d7 0B       		.uleb128 0xb
 2976 04d8 D1100000 		.4byte	.LASF136
 2977 04dc CBE201   		.sleb128 29003
 2978 04df 0B       		.uleb128 0xb
 2979 04e0 26130000 		.4byte	.LASF137
 2980 04e4 CCE201   		.sleb128 29004
 2981 04e7 0B       		.uleb128 0xb
 2982 04e8 87050000 		.4byte	.LASF138
 2983 04ec CDE201   		.sleb128 29005
 2984 04ef 0B       		.uleb128 0xb
 2985 04f0 160C0000 		.4byte	.LASF139
 2986 04f4 CEE201   		.sleb128 29006
 2987 04f7 0B       		.uleb128 0xb
 2988 04f8 950B0000 		.4byte	.LASF140
 2989 04fc CFE201   		.sleb128 29007
 2990 04ff 0B       		.uleb128 0xb
 2991 0500 C70A0000 		.4byte	.LASF141
 2992 0504 D0E201   		.sleb128 29008
 2993 0507 0B       		.uleb128 0xb
 2994 0508 AF020000 		.4byte	.LASF142
 2995 050c D1E201   		.sleb128 29009
 2996 050f 0B       		.uleb128 0xb
 2997 0510 6E0B0000 		.4byte	.LASF143
 2998 0514 D2E201   		.sleb128 29010
 2999 0517 0B       		.uleb128 0xb
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 76


 3000 0518 8A020000 		.4byte	.LASF144
 3001 051c D3E201   		.sleb128 29011
 3002 051f 0B       		.uleb128 0xb
 3003 0520 A50F0000 		.4byte	.LASF145
 3004 0524 D4E201   		.sleb128 29012
 3005 0527 0B       		.uleb128 0xb
 3006 0528 0B020000 		.4byte	.LASF146
 3007 052c D5E201   		.sleb128 29013
 3008 052f 0B       		.uleb128 0xb
 3009 0530 40040000 		.4byte	.LASF147
 3010 0534 D6E201   		.sleb128 29014
 3011 0537 0B       		.uleb128 0xb
 3012 0538 EB0D0000 		.4byte	.LASF148
 3013 053c D7E201   		.sleb128 29015
 3014 053f 0B       		.uleb128 0xb
 3015 0540 2B050000 		.4byte	.LASF149
 3016 0544 D8E201   		.sleb128 29016
 3017 0547 0B       		.uleb128 0xb
 3018 0548 060D0000 		.4byte	.LASF150
 3019 054c D9E201   		.sleb128 29017
 3020 054f 0B       		.uleb128 0xb
 3021 0550 DF120000 		.4byte	.LASF151
 3022 0554 DAE201   		.sleb128 29018
 3023 0557 0B       		.uleb128 0xb
 3024 0558 A9030000 		.4byte	.LASF152
 3025 055c DBE201   		.sleb128 29019
 3026 055f 0B       		.uleb128 0xb
 3027 0560 67050000 		.4byte	.LASF153
 3028 0564 DCE201   		.sleb128 29020
 3029 0567 0B       		.uleb128 0xb
 3030 0568 17030000 		.4byte	.LASF154
 3031 056c DDE201   		.sleb128 29021
 3032 056f 0B       		.uleb128 0xb
 3033 0570 C60B0000 		.4byte	.LASF155
 3034 0574 DEE201   		.sleb128 29022
 3035 0577 0B       		.uleb128 0xb
 3036 0578 F1020000 		.4byte	.LASF156
 3037 057c DFE201   		.sleb128 29023
 3038 057f 0B       		.uleb128 0xb
 3039 0580 D8050000 		.4byte	.LASF157
 3040 0584 ADE301   		.sleb128 29101
 3041 0587 0B       		.uleb128 0xb
 3042 0588 FE040000 		.4byte	.LASF158
 3043 058c C0E301   		.sleb128 29120
 3044 058f 0B       		.uleb128 0xb
 3045 0590 070C0000 		.4byte	.LASF159
 3046 0594 C1E301   		.sleb128 29121
 3047 0597 0B       		.uleb128 0xb
 3048 0598 52110000 		.4byte	.LASF160
 3049 059c C2E301   		.sleb128 29122
 3050 059f 0B       		.uleb128 0xb
 3051 05a0 82080000 		.4byte	.LASF161
 3052 05a4 C3E301   		.sleb128 29123
 3053 05a7 0B       		.uleb128 0xb
 3054 05a8 78060000 		.4byte	.LASF162
 3055 05ac C4E301   		.sleb128 29124
 3056 05af 0B       		.uleb128 0xb
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 77


 3057 05b0 75130000 		.4byte	.LASF163
 3058 05b4 91E401   		.sleb128 29201
 3059 05b7 0B       		.uleb128 0xb
 3060 05b8 890D0000 		.4byte	.LASF164
 3061 05bc 92E401   		.sleb128 29202
 3062 05bf 0B       		.uleb128 0xb
 3063 05c0 AE010000 		.4byte	.LASF165
 3064 05c4 93E401   		.sleb128 29203
 3065 05c7 0B       		.uleb128 0xb
 3066 05c8 4B0B0000 		.4byte	.LASF166
 3067 05cc 94E401   		.sleb128 29204
 3068 05cf 0B       		.uleb128 0xb
 3069 05d0 220F0000 		.4byte	.LASF167
 3070 05d4 F5E401   		.sleb128 29301
 3071 05d7 0B       		.uleb128 0xb
 3072 05d8 5A130000 		.4byte	.LASF168
 3073 05dc F6E401   		.sleb128 29302
 3074 05df 0B       		.uleb128 0xb
 3075 05e0 3B130000 		.4byte	.LASF169
 3076 05e4 F7E401   		.sleb128 29303
 3077 05e7 0B       		.uleb128 0xb
 3078 05e8 B8060000 		.4byte	.LASF170
 3079 05ec F8E401   		.sleb128 29304
 3080 05ef 0B       		.uleb128 0xb
 3081 05f0 4B000000 		.4byte	.LASF171
 3082 05f4 F9E401   		.sleb128 29305
 3083 05f7 0B       		.uleb128 0xb
 3084 05f8 9F100000 		.4byte	.LASF172
 3085 05fc FAE401   		.sleb128 29306
 3086 05ff 0B       		.uleb128 0xb
 3087 0600 0D060000 		.4byte	.LASF173
 3088 0604 FBE401   		.sleb128 29307
 3089 0607 0B       		.uleb128 0xb
 3090 0608 1E090000 		.4byte	.LASF174
 3091 060c FCE401   		.sleb128 29308
 3092 060f 0B       		.uleb128 0xb
 3093 0610 8C0C0000 		.4byte	.LASF175
 3094 0614 FDE401   		.sleb128 29309
 3095 0617 0B       		.uleb128 0xb
 3096 0618 60070000 		.4byte	.LASF176
 3097 061c FEE401   		.sleb128 29310
 3098 061f 0B       		.uleb128 0xb
 3099 0620 CB0F0000 		.4byte	.LASF177
 3100 0624 D9E501   		.sleb128 29401
 3101 0627 0B       		.uleb128 0xb
 3102 0628 DF040000 		.4byte	.LASF178
 3103 062c BDE601   		.sleb128 29501
 3104 062f 0B       		.uleb128 0xb
 3105 0630 13080000 		.4byte	.LASF179
 3106 0634 BEE601   		.sleb128 29502
 3107 0637 0B       		.uleb128 0xb
 3108 0638 20040000 		.4byte	.LASF180
 3109 063c BFE601   		.sleb128 29503
 3110 063f 0B       		.uleb128 0xb
 3111 0640 3F010000 		.4byte	.LASF181
 3112 0644 C0E601   		.sleb128 29504
 3113 0647 0B       		.uleb128 0xb
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 78


 3114 0648 55030000 		.4byte	.LASF182
 3115 064c C1E601   		.sleb128 29505
 3116 064f 0B       		.uleb128 0xb
 3117 0650 47050000 		.4byte	.LASF183
 3118 0654 C2E601   		.sleb128 29506
 3119 0657 0B       		.uleb128 0xb
 3120 0658 3C000000 		.4byte	.LASF184
 3121 065c C3E601   		.sleb128 29507
 3122 065f 0B       		.uleb128 0xb
 3123 0660 C8040000 		.4byte	.LASF185
 3124 0664 C4E601   		.sleb128 29508
 3125 0667 0B       		.uleb128 0xb
 3126 0668 D2060000 		.4byte	.LASF186
 3127 066c C5E601   		.sleb128 29509
 3128 066f 0B       		.uleb128 0xb
 3129 0670 A90B0000 		.4byte	.LASF187
 3130 0674 C6E601   		.sleb128 29510
 3131 0677 0B       		.uleb128 0xb
 3132 0678 9F050000 		.4byte	.LASF188
 3133 067c C7E601   		.sleb128 29511
 3134 067f 0B       		.uleb128 0xb
 3135 0680 2F0B0000 		.4byte	.LASF189
 3136 0684 C8E601   		.sleb128 29512
 3137 0687 0B       		.uleb128 0xb
 3138 0688 840F0000 		.4byte	.LASF190
 3139 068c C9E601   		.sleb128 29513
 3140 068f 0B       		.uleb128 0xb
 3141 0690 1B010000 		.4byte	.LASF191
 3142 0694 B0EA01   		.sleb128 30000
 3143 0697 0B       		.uleb128 0xb
 3144 0698 24010000 		.4byte	.LASF192
 3145 069c 98F201   		.sleb128 31000
 3146 069f 0B       		.uleb128 0xb
 3147 06a0 2D010000 		.4byte	.LASF193
 3148 06a4 80FA01   		.sleb128 32000
 3149 06a7 0B       		.uleb128 0xb
 3150 06a8 36010000 		.4byte	.LASF194
 3151 06ac E88102   		.sleb128 33000
 3152 06af 0B       		.uleb128 0xb
 3153 06b0 2A100000 		.4byte	.LASF195
 3154 06b4 D08902   		.sleb128 34000
 3155 06b7 0B       		.uleb128 0xb
 3156 06b8 78090000 		.4byte	.LASF196
 3157 06bc D18902   		.sleb128 34001
 3158 06bf 0B       		.uleb128 0xb
 3159 06c0 43100000 		.4byte	.LASF197
 3160 06c4 B89102   		.sleb128 35000
 3161 06c7 00       		.byte	0x0
 3162 06c8 09       		.uleb128 0x9
 3163 06c9 1B000000 		.4byte	.LASF198
 3164 06cd 05       		.byte	0x5
 3165 06ce 7202     		.2byte	0x272
 3166 06d0 B4010000 		.4byte	0x1b4
 3167 06d4 09       		.uleb128 0x9
 3168 06d5 F5120000 		.4byte	.LASF199
 3169 06d9 05       		.byte	0x5
 3170 06da 7E02     		.2byte	0x27e
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 79


 3171 06dc E0060000 		.4byte	0x6e0
 3172 06e0 0C       		.uleb128 0xc
 3173 06e1 71010000 		.4byte	.LASF208
 3174 06e5 28       		.byte	0x28
 3175 06e6 05       		.byte	0x5
 3176 06e7 7E02     		.2byte	0x27e
 3177 06e9 65070000 		.4byte	0x765
 3178 06ed 0D       		.uleb128 0xd
 3179 06ee 73090000 		.4byte	.LASF200
 3180 06f2 05       		.byte	0x5
 3181 06f3 1603     		.2byte	0x316
 3182 06f5 5C010000 		.4byte	0x15c
 3183 06f9 02       		.byte	0x2
 3184 06fa 23       		.byte	0x23
 3185 06fb 00       		.uleb128 0x0
 3186 06fc 0D       		.uleb128 0xd
 3187 06fd 32090000 		.4byte	.LASF201
 3188 0701 05       		.byte	0x5
 3189 0702 1703     		.2byte	0x317
 3190 0704 FA0C0000 		.4byte	0xcfa
 3191 0708 02       		.byte	0x2
 3192 0709 23       		.byte	0x23
 3193 070a 04       		.uleb128 0x4
 3194 070b 0D       		.uleb128 0xd
 3195 070c 0F0E0000 		.4byte	.LASF202
 3196 0710 05       		.byte	0x5
 3197 0711 1803     		.2byte	0x318
 3198 0713 2D0C0000 		.4byte	0xc2d
 3199 0717 02       		.byte	0x2
 3200 0718 23       		.byte	0x23
 3201 0719 08       		.uleb128 0x8
 3202 071a 0D       		.uleb128 0xd
 3203 071b C3020000 		.4byte	.LASF203
 3204 071f 05       		.byte	0x5
 3205 0720 1A03     		.2byte	0x31a
 3206 0722 000D0000 		.4byte	0xd00
 3207 0726 02       		.byte	0x2
 3208 0727 23       		.byte	0x23
 3209 0728 14       		.uleb128 0x14
 3210 0729 0D       		.uleb128 0xd
 3211 072a DB020000 		.4byte	.LASF204
 3212 072e 05       		.byte	0x5
 3213 072f 1B03     		.2byte	0x31b
 3214 0731 000D0000 		.4byte	0xd00
 3215 0735 02       		.byte	0x2
 3216 0736 23       		.byte	0x23
 3217 0737 18       		.uleb128 0x18
 3218 0738 0D       		.uleb128 0xd
 3219 0739 59100000 		.4byte	.LASF205
 3220 073d 05       		.byte	0x5
 3221 073e 1C03     		.2byte	0x31c
 3222 0740 FA0C0000 		.4byte	0xcfa
 3223 0744 02       		.byte	0x2
 3224 0745 23       		.byte	0x23
 3225 0746 1C       		.uleb128 0x1c
 3226 0747 0D       		.uleb128 0xd
 3227 0748 58040000 		.4byte	.LASF206
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 80


 3228 074c 05       		.byte	0x5
 3229 074d 1F03     		.2byte	0x31f
 3230 074f 25010000 		.4byte	0x125
 3231 0753 02       		.byte	0x2
 3232 0754 23       		.byte	0x23
 3233 0755 20       		.uleb128 0x20
 3234 0756 0E       		.uleb128 0xe
 3235 0757 545300   		.ascii	"TS\000"
 3236 075a 05       		.byte	0x5
 3237 075b 2003     		.2byte	0x320
 3238 075d F9000000 		.4byte	0xf9
 3239 0761 02       		.byte	0x2
 3240 0762 23       		.byte	0x23
 3241 0763 24       		.uleb128 0x24
 3242 0764 00       		.byte	0x0
 3243 0765 09       		.uleb128 0x9
 3244 0766 05080000 		.4byte	.LASF207
 3245 076a 05       		.byte	0x5
 3246 076b 8202     		.2byte	0x282
 3247 076d 71070000 		.4byte	0x771
 3248 0771 0C       		.uleb128 0xc
 3249 0772 D1050000 		.4byte	.LASF209
 3250 0776 10       		.byte	0x10
 3251 0777 05       		.byte	0x5
 3252 0778 8202     		.2byte	0x282
 3253 077a BB070000 		.4byte	0x7bb
 3254 077e 0D       		.uleb128 0xd
 3255 077f 5E0C0000 		.4byte	.LASF210
 3256 0783 05       		.byte	0x5
 3257 0784 4103     		.2byte	0x341
 3258 0786 060D0000 		.4byte	0xd06
 3259 078a 02       		.byte	0x2
 3260 078b 23       		.byte	0x23
 3261 078c 00       		.uleb128 0x0
 3262 078d 0D       		.uleb128 0xd
 3263 078e 4B110000 		.4byte	.LASF211
 3264 0792 05       		.byte	0x5
 3265 0793 4203     		.2byte	0x342
 3266 0795 BF000000 		.4byte	0xbf
 3267 0799 02       		.byte	0x2
 3268 079a 23       		.byte	0x23
 3269 079b 04       		.uleb128 0x4
 3270 079c 0D       		.uleb128 0xd
 3271 079d 970E0000 		.4byte	.LASF212
 3272 07a1 05       		.byte	0x5
 3273 07a2 4303     		.2byte	0x343
 3274 07a4 3B010000 		.4byte	0x13b
 3275 07a8 02       		.byte	0x2
 3276 07a9 23       		.byte	0x23
 3277 07aa 08       		.uleb128 0x8
 3278 07ab 0D       		.uleb128 0xd
 3279 07ac 0B110000 		.4byte	.LASF213
 3280 07b0 05       		.byte	0x5
 3281 07b1 4403     		.2byte	0x344
 3282 07b3 F9000000 		.4byte	0xf9
 3283 07b7 02       		.byte	0x2
 3284 07b8 23       		.byte	0x23
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 81


 3285 07b9 0C       		.uleb128 0xc
 3286 07ba 00       		.byte	0x0
 3287 07bb 09       		.uleb128 0x9
 3288 07bc 490D0000 		.4byte	.LASF214
 3289 07c0 05       		.byte	0x5
 3290 07c1 8402     		.2byte	0x284
 3291 07c3 C7070000 		.4byte	0x7c7
 3292 07c7 0C       		.uleb128 0xc
 3293 07c8 A0130000 		.4byte	.LASF215
 3294 07cc 10       		.byte	0x10
 3295 07cd 05       		.byte	0x5
 3296 07ce 8402     		.2byte	0x284
 3297 07d0 20080000 		.4byte	0x820
 3298 07d4 0D       		.uleb128 0xd
 3299 07d5 500E0000 		.4byte	.LASF216
 3300 07d9 05       		.byte	0x5
 3301 07da 5403     		.2byte	0x354
 3302 07dc 060D0000 		.4byte	0xd06
 3303 07e0 02       		.byte	0x2
 3304 07e1 23       		.byte	0x23
 3305 07e2 00       		.uleb128 0x0
 3306 07e3 0D       		.uleb128 0xd
 3307 07e4 64100000 		.4byte	.LASF217
 3308 07e8 05       		.byte	0x5
 3309 07e9 5503     		.2byte	0x355
 3310 07eb 060D0000 		.4byte	0xd06
 3311 07ef 02       		.byte	0x2
 3312 07f0 23       		.byte	0x23
 3313 07f1 04       		.uleb128 0x4
 3314 07f2 0D       		.uleb128 0xd
 3315 07f3 51070000 		.4byte	.LASF218
 3316 07f7 05       		.byte	0x5
 3317 07f8 5603     		.2byte	0x356
 3318 07fa 30010000 		.4byte	0x130
 3319 07fe 02       		.byte	0x2
 3320 07ff 23       		.byte	0x23
 3321 0800 08       		.uleb128 0x8
 3322 0801 0D       		.uleb128 0xd
 3323 0802 66010000 		.4byte	.LASF219
 3324 0806 05       		.byte	0x5
 3325 0807 5703     		.2byte	0x357
 3326 0809 30010000 		.4byte	0x130
 3327 080d 02       		.byte	0x2
 3328 080e 23       		.byte	0x23
 3329 080f 0A       		.uleb128 0xa
 3330 0810 0D       		.uleb128 0xd
 3331 0811 AC120000 		.4byte	.LASF220
 3332 0815 05       		.byte	0x5
 3333 0816 5803     		.2byte	0x358
 3334 0818 30010000 		.4byte	0x130
 3335 081c 02       		.byte	0x2
 3336 081d 23       		.byte	0x23
 3337 081e 0C       		.uleb128 0xc
 3338 081f 00       		.byte	0x0
 3339 0820 09       		.uleb128 0x9
 3340 0821 F20F0000 		.4byte	.LASF221
 3341 0825 05       		.byte	0x5
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 82


 3342 0826 8E02     		.2byte	0x28e
 3343 0828 AD000000 		.4byte	0xad
 3344 082c 09       		.uleb128 0x9
 3345 082d 650F0000 		.4byte	.LASF222
 3346 0831 05       		.byte	0x5
 3347 0832 9002     		.2byte	0x290
 3348 0834 38080000 		.4byte	0x838
 3349 0838 0C       		.uleb128 0xc
 3350 0839 00000000 		.4byte	.LASF223
 3351 083d C0       		.byte	0xc0
 3352 083e 05       		.byte	0x5
 3353 083f 9002     		.2byte	0x290
 3354 0841 540B0000 		.4byte	0xb54
 3355 0845 0D       		.uleb128 0xd
 3356 0846 D7090000 		.4byte	.LASF224
 3357 084a 05       		.byte	0x5
 3358 084b AC03     		.2byte	0x3ac
 3359 084d 0C0D0000 		.4byte	0xd0c
 3360 0851 02       		.byte	0x2
 3361 0852 23       		.byte	0x23
 3362 0853 00       		.uleb128 0x0
 3363 0854 0D       		.uleb128 0xd
 3364 0855 EC0E0000 		.4byte	.LASF225
 3365 0859 05       		.byte	0x5
 3366 085a AE03     		.2byte	0x3ae
 3367 085c BF000000 		.4byte	0xbf
 3368 0860 02       		.byte	0x2
 3369 0861 23       		.byte	0x23
 3370 0862 04       		.uleb128 0x4
 3371 0863 0D       		.uleb128 0xd
 3372 0864 0C0B0000 		.4byte	.LASF226
 3373 0868 05       		.byte	0x5
 3374 0869 B003     		.2byte	0x3b0
 3375 086b 0C0D0000 		.4byte	0xd0c
 3376 086f 02       		.byte	0x2
 3377 0870 23       		.byte	0x23
 3378 0871 08       		.uleb128 0x8
 3379 0872 0D       		.uleb128 0xd
 3380 0873 5E0C0000 		.4byte	.LASF210
 3381 0877 05       		.byte	0x5
 3382 0878 B203     		.2byte	0x3b2
 3383 087a E80C0000 		.4byte	0xce8
 3384 087e 02       		.byte	0x2
 3385 087f 23       		.byte	0x23
 3386 0880 0C       		.uleb128 0xc
 3387 0881 0D       		.uleb128 0xd
 3388 0882 69080000 		.4byte	.LASF227
 3389 0886 05       		.byte	0x5
 3390 0887 B303     		.2byte	0x3b3
 3391 0889 E80C0000 		.4byte	0xce8
 3392 088d 02       		.byte	0x2
 3393 088e 23       		.byte	0x23
 3394 088f 10       		.uleb128 0x10
 3395 0890 0D       		.uleb128 0xd
 3396 0891 620B0000 		.4byte	.LASF228
 3397 0895 05       		.byte	0x5
 3398 0896 B503     		.2byte	0x3b5
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 83


 3399 0898 E80C0000 		.4byte	0xce8
 3400 089c 02       		.byte	0x2
 3401 089d 23       		.byte	0x23
 3402 089e 14       		.uleb128 0x14
 3403 089f 0D       		.uleb128 0xd
 3404 08a0 75070000 		.4byte	.LASF229
 3405 08a4 05       		.byte	0x5
 3406 08a5 B603     		.2byte	0x3b6
 3407 08a7 E80C0000 		.4byte	0xce8
 3408 08ab 02       		.byte	0x2
 3409 08ac 23       		.byte	0x23
 3410 08ad 18       		.uleb128 0x18
 3411 08ae 0D       		.uleb128 0xd
 3412 08af 4C100000 		.4byte	.LASF230
 3413 08b3 05       		.byte	0x5
 3414 08b4 B803     		.2byte	0x3b8
 3415 08b6 120D0000 		.4byte	0xd12
 3416 08ba 02       		.byte	0x2
 3417 08bb 23       		.byte	0x23
 3418 08bc 1C       		.uleb128 0x1c
 3419 08bd 0D       		.uleb128 0xd
 3420 08be 32090000 		.4byte	.LASF201
 3421 08c2 05       		.byte	0x5
 3422 08c3 BA03     		.2byte	0x3ba
 3423 08c5 FA0C0000 		.4byte	0xcfa
 3424 08c9 02       		.byte	0x2
 3425 08ca 23       		.byte	0x23
 3426 08cb 20       		.uleb128 0x20
 3427 08cc 0D       		.uleb128 0xd
 3428 08cd F3050000 		.4byte	.LASF231
 3429 08d1 05       		.byte	0x5
 3430 08d2 BC03     		.2byte	0x3bc
 3431 08d4 0C0D0000 		.4byte	0xd0c
 3432 08d8 02       		.byte	0x2
 3433 08d9 23       		.byte	0x23
 3434 08da 24       		.uleb128 0x24
 3435 08db 0D       		.uleb128 0xd
 3436 08dc EC080000 		.4byte	.LASF232
 3437 08e0 05       		.byte	0x5
 3438 08e1 C203     		.2byte	0x3c2
 3439 08e3 20080000 		.4byte	0x820
 3440 08e7 02       		.byte	0x2
 3441 08e8 23       		.byte	0x23
 3442 08e9 28       		.uleb128 0x28
 3443 08ea 0D       		.uleb128 0xd
 3444 08eb 6B100000 		.4byte	.LASF233
 3445 08ef 05       		.byte	0x5
 3446 08f0 C303     		.2byte	0x3c3
 3447 08f2 BF000000 		.4byte	0xbf
 3448 08f6 02       		.byte	0x2
 3449 08f7 23       		.byte	0x23
 3450 08f8 2C       		.uleb128 0x2c
 3451 08f9 0D       		.uleb128 0xd
 3452 08fa 280E0000 		.4byte	.LASF234
 3453 08fe 05       		.byte	0x5
 3454 08ff C503     		.2byte	0x3c5
 3455 0901 EE0C0000 		.4byte	0xcee
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 84


 3456 0905 02       		.byte	0x2
 3457 0906 23       		.byte	0x23
 3458 0907 30       		.uleb128 0x30
 3459 0908 0D       		.uleb128 0xd
 3460 0909 6E030000 		.4byte	.LASF235
 3461 090d 05       		.byte	0x5
 3462 090e C603     		.2byte	0x3c6
 3463 0910 93010000 		.4byte	0x193
 3464 0914 02       		.byte	0x2
 3465 0915 23       		.byte	0x23
 3466 0916 34       		.uleb128 0x34
 3467 0917 0D       		.uleb128 0xd
 3468 0918 3A090000 		.4byte	.LASF236
 3469 091c 05       		.byte	0x5
 3470 091d C703     		.2byte	0x3c7
 3471 091f 9E010000 		.4byte	0x19e
 3472 0923 02       		.byte	0x2
 3473 0924 23       		.byte	0x23
 3474 0925 35       		.uleb128 0x35
 3475 0926 0D       		.uleb128 0xd
 3476 0927 6E060000 		.4byte	.LASF237
 3477 092b 05       		.byte	0x5
 3478 092c C903     		.2byte	0x3c9
 3479 092e 93010000 		.4byte	0x193
 3480 0932 02       		.byte	0x2
 3481 0933 23       		.byte	0x23
 3482 0934 36       		.uleb128 0x36
 3483 0935 0D       		.uleb128 0xd
 3484 0936 A9110000 		.4byte	.LASF238
 3485 093a 05       		.byte	0x5
 3486 093b CA03     		.2byte	0x3ca
 3487 093d 72010000 		.4byte	0x172
 3488 0941 02       		.byte	0x2
 3489 0942 23       		.byte	0x23
 3490 0943 37       		.uleb128 0x37
 3491 0944 0D       		.uleb128 0xd
 3492 0945 EB050000 		.4byte	.LASF239
 3493 0949 05       		.byte	0x5
 3494 094a CB03     		.2byte	0x3cb
 3495 094c D7000000 		.4byte	0xd7
 3496 0950 02       		.byte	0x2
 3497 0951 23       		.byte	0x23
 3498 0952 38       		.uleb128 0x38
 3499 0953 0E       		.uleb128 0xe
 3500 0954 4F707400 		.ascii	"Opt\000"
 3501 0958 05       		.byte	0x5
 3502 0959 CC03     		.2byte	0x3cc
 3503 095b 67010000 		.4byte	0x167
 3504 095f 02       		.byte	0x2
 3505 0960 23       		.byte	0x23
 3506 0961 3C       		.uleb128 0x3c
 3507 0962 0D       		.uleb128 0xd
 3508 0963 75030000 		.4byte	.LASF240
 3509 0967 05       		.byte	0x5
 3510 0968 CE03     		.2byte	0x3ce
 3511 096a 51010000 		.4byte	0x151
 3512 096e 02       		.byte	0x2
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 85


 3513 096f 23       		.byte	0x23
 3514 0970 3E       		.uleb128 0x3e
 3515 0971 0E       		.uleb128 0xe
 3516 0972 545300   		.ascii	"TS\000"
 3517 0975 05       		.byte	0x5
 3518 0976 D003     		.2byte	0x3d0
 3519 0978 F9000000 		.4byte	0xf9
 3520 097c 02       		.byte	0x2
 3521 097d 23       		.byte	0x23
 3522 097e 40       		.uleb128 0x40
 3523 097f 0D       		.uleb128 0xd
 3524 0980 490E0000 		.4byte	.LASF241
 3525 0984 05       		.byte	0x5
 3526 0985 D203     		.2byte	0x3d2
 3527 0987 88010000 		.4byte	0x188
 3528 098b 02       		.byte	0x2
 3529 098c 23       		.byte	0x23
 3530 098d 44       		.uleb128 0x44
 3531 098e 0D       		.uleb128 0xd
 3532 098f 45070000 		.4byte	.LASF242
 3533 0993 05       		.byte	0x5
 3534 0994 D503     		.2byte	0x3d5
 3535 0996 A9010000 		.4byte	0x1a9
 3536 099a 02       		.byte	0x2
 3537 099b 23       		.byte	0x23
 3538 099c 48       		.uleb128 0x48
 3539 099d 0D       		.uleb128 0xd
 3540 099e D4030000 		.4byte	.LASF243
 3541 09a2 05       		.byte	0x5
 3542 09a3 D603     		.2byte	0x3d6
 3543 09a5 A9010000 		.4byte	0x1a9
 3544 09a9 02       		.byte	0x2
 3545 09aa 23       		.byte	0x23
 3546 09ab 4C       		.uleb128 0x4c
 3547 09ac 0D       		.uleb128 0xd
 3548 09ad 560E0000 		.4byte	.LASF244
 3549 09b1 05       		.byte	0x5
 3550 09b2 D703     		.2byte	0x3d7
 3551 09b4 A9010000 		.4byte	0x1a9
 3552 09b8 02       		.byte	0x2
 3553 09b9 23       		.byte	0x23
 3554 09ba 50       		.uleb128 0x50
 3555 09bb 0D       		.uleb128 0xd
 3556 09bc 4F130000 		.4byte	.LASF245
 3557 09c0 05       		.byte	0x5
 3558 09c1 D903     		.2byte	0x3d9
 3559 09c3 A9010000 		.4byte	0x1a9
 3560 09c7 02       		.byte	0x2
 3561 09c8 23       		.byte	0x23
 3562 09c9 54       		.uleb128 0x54
 3563 09ca 0D       		.uleb128 0xd
 3564 09cb 56060000 		.4byte	.LASF246
 3565 09cf 05       		.byte	0x5
 3566 09d0 DA03     		.2byte	0x3da
 3567 09d2 A9010000 		.4byte	0x1a9
 3568 09d6 02       		.byte	0x2
 3569 09d7 23       		.byte	0x23
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 86


 3570 09d8 58       		.uleb128 0x58
 3571 09d9 0D       		.uleb128 0xd
 3572 09da 4B110000 		.4byte	.LASF211
 3573 09de 05       		.byte	0x5
 3574 09df DD03     		.2byte	0x3dd
 3575 09e1 BF000000 		.4byte	0xbf
 3576 09e5 02       		.byte	0x2
 3577 09e6 23       		.byte	0x23
 3578 09e7 5C       		.uleb128 0x5c
 3579 09e8 0D       		.uleb128 0xd
 3580 09e9 970E0000 		.4byte	.LASF212
 3581 09ed 05       		.byte	0x5
 3582 09ee DE03     		.2byte	0x3de
 3583 09f0 3B010000 		.4byte	0x13b
 3584 09f4 02       		.byte	0x2
 3585 09f5 23       		.byte	0x23
 3586 09f6 60       		.uleb128 0x60
 3587 09f7 0D       		.uleb128 0xd
 3588 09f8 DB080000 		.4byte	.LASF247
 3589 09fc 05       		.byte	0x5
 3590 09fd E203     		.2byte	0x3e2
 3591 09ff BB070000 		.4byte	0x7bb
 3592 0a03 02       		.byte	0x2
 3593 0a04 23       		.byte	0x23
 3594 0a05 64       		.uleb128 0x64
 3595 0a06 0D       		.uleb128 0xd
 3596 0a07 F8070000 		.4byte	.LASF248
 3597 0a0b 05       		.byte	0x5
 3598 0a0c E403     		.2byte	0x3e4
 3599 0a0e F9000000 		.4byte	0xf9
 3600 0a12 02       		.byte	0x2
 3601 0a13 23       		.byte	0x23
 3602 0a14 74       		.uleb128 0x74
 3603 0a15 0D       		.uleb128 0xd
 3604 0a16 E8070000 		.4byte	.LASF249
 3605 0a1a 05       		.byte	0x5
 3606 0a1b E503     		.2byte	0x3e5
 3607 0a1d F9000000 		.4byte	0xf9
 3608 0a21 02       		.byte	0x2
 3609 0a22 23       		.byte	0x23
 3610 0a23 78       		.uleb128 0x78
 3611 0a24 0D       		.uleb128 0xd
 3612 0a25 10130000 		.4byte	.LASF250
 3613 0a29 05       		.byte	0x5
 3614 0a2a EA03     		.2byte	0x3ea
 3615 0a2c 180D0000 		.4byte	0xd18
 3616 0a30 02       		.byte	0x2
 3617 0a31 23       		.byte	0x23
 3618 0a32 7C       		.uleb128 0x7c
 3619 0a33 0D       		.uleb128 0xd
 3620 0a34 16040000 		.4byte	.LASF251
 3621 0a38 05       		.byte	0x5
 3622 0a39 EE03     		.2byte	0x3ee
 3623 0a3b 25010000 		.4byte	0x125
 3624 0a3f 03       		.byte	0x3
 3625 0a40 23       		.byte	0x23
 3626 0a41 8001     		.uleb128 0x80
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 87


 3627 0a43 0D       		.uleb128 0xd
 3628 0a44 81070000 		.4byte	.LASF252
 3629 0a48 05       		.byte	0x5
 3630 0a49 EF03     		.2byte	0x3ef
 3631 0a4b 25010000 		.4byte	0x125
 3632 0a4f 03       		.byte	0x3
 3633 0a50 23       		.byte	0x23
 3634 0a51 8401     		.uleb128 0x84
 3635 0a53 0D       		.uleb128 0xd
 3636 0a54 02020000 		.4byte	.LASF253
 3637 0a58 05       		.byte	0x5
 3638 0a59 F003     		.2byte	0x3f0
 3639 0a5b 67010000 		.4byte	0x167
 3640 0a5f 03       		.byte	0x3
 3641 0a60 23       		.byte	0x23
 3642 0a61 8801     		.uleb128 0x88
 3643 0a63 0D       		.uleb128 0xd
 3644 0a64 010B0000 		.4byte	.LASF254
 3645 0a68 05       		.byte	0x5
 3646 0a69 F403     		.2byte	0x3f4
 3647 0a6b 46010000 		.4byte	0x146
 3648 0a6f 03       		.byte	0x3
 3649 0a70 23       		.byte	0x23
 3650 0a71 8A01     		.uleb128 0x8a
 3651 0a73 0D       		.uleb128 0xd
 3652 0a74 C7110000 		.4byte	.LASF255
 3653 0a78 05       		.byte	0x5
 3654 0a79 F803     		.2byte	0x3f8
 3655 0a7b 04010000 		.4byte	0x104
 3656 0a7f 03       		.byte	0x3
 3657 0a80 23       		.byte	0x23
 3658 0a81 8C01     		.uleb128 0x8c
 3659 0a83 0D       		.uleb128 0xd
 3660 0a84 030E0000 		.4byte	.LASF256
 3661 0a88 05       		.byte	0x5
 3662 0a89 F903     		.2byte	0x3f9
 3663 0a8b 04010000 		.4byte	0x104
 3664 0a8f 03       		.byte	0x3
 3665 0a90 23       		.byte	0x23
 3666 0a91 8E01     		.uleb128 0x8e
 3667 0a93 0D       		.uleb128 0xd
 3668 0a94 37040000 		.4byte	.LASF257
 3669 0a98 05       		.byte	0x5
 3670 0a99 FA03     		.2byte	0x3fa
 3671 0a9b 0F010000 		.4byte	0x10f
 3672 0a9f 03       		.byte	0x3
 3673 0aa0 23       		.byte	0x23
 3674 0aa1 9001     		.uleb128 0x90
 3675 0aa3 0D       		.uleb128 0xd
 3676 0aa4 180B0000 		.4byte	.LASF258
 3677 0aa8 05       		.byte	0x5
 3678 0aa9 FB03     		.2byte	0x3fb
 3679 0aab F9000000 		.4byte	0xf9
 3680 0aaf 03       		.byte	0x3
 3681 0ab0 23       		.byte	0x23
 3682 0ab1 9401     		.uleb128 0x94
 3683 0ab3 0D       		.uleb128 0xd
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 88


 3684 0ab4 000A0000 		.4byte	.LASF259
 3685 0ab8 05       		.byte	0x5
 3686 0ab9 FC03     		.2byte	0x3fc
 3687 0abb F9000000 		.4byte	0xf9
 3688 0abf 03       		.byte	0x3
 3689 0ac0 23       		.byte	0x23
 3690 0ac1 9801     		.uleb128 0x98
 3691 0ac3 0D       		.uleb128 0xd
 3692 0ac4 C90D0000 		.4byte	.LASF260
 3693 0ac8 05       		.byte	0x5
 3694 0ac9 FD03     		.2byte	0x3fd
 3695 0acb 1A010000 		.4byte	0x11a
 3696 0acf 03       		.byte	0x3
 3697 0ad0 23       		.byte	0x23
 3698 0ad1 9C01     		.uleb128 0x9c
 3699 0ad3 0D       		.uleb128 0xd
 3700 0ad4 790D0000 		.4byte	.LASF261
 3701 0ad8 05       		.byte	0x5
 3702 0ad9 FE03     		.2byte	0x3fe
 3703 0adb 1A010000 		.4byte	0x11a
 3704 0adf 03       		.byte	0x3
 3705 0ae0 23       		.byte	0x23
 3706 0ae1 A001     		.uleb128 0xa0
 3707 0ae3 0D       		.uleb128 0xd
 3708 0ae4 2A0C0000 		.4byte	.LASF262
 3709 0ae8 05       		.byte	0x5
 3710 0ae9 0004     		.2byte	0x400
 3711 0aeb F9000000 		.4byte	0xf9
 3712 0aef 03       		.byte	0x3
 3713 0af0 23       		.byte	0x23
 3714 0af1 A401     		.uleb128 0xa4
 3715 0af3 0D       		.uleb128 0xd
 3716 0af4 6A0D0000 		.4byte	.LASF263
 3717 0af8 05       		.byte	0x5
 3718 0af9 0104     		.2byte	0x401
 3719 0afb F9000000 		.4byte	0xf9
 3720 0aff 03       		.byte	0x3
 3721 0b00 23       		.byte	0x23
 3722 0b01 A801     		.uleb128 0xa8
 3723 0b03 0D       		.uleb128 0xd
 3724 0b04 3F050000 		.4byte	.LASF264
 3725 0b08 05       		.byte	0x5
 3726 0b09 0504     		.2byte	0x405
 3727 0b0b D7000000 		.4byte	0xd7
 3728 0b0f 03       		.byte	0x3
 3729 0b10 23       		.byte	0x23
 3730 0b11 AC01     		.uleb128 0xac
 3731 0b13 0D       		.uleb128 0xd
 3732 0b14 3D070000 		.4byte	.LASF265
 3733 0b18 05       		.byte	0x5
 3734 0b19 0604     		.2byte	0x406
 3735 0b1b D7000000 		.4byte	0xd7
 3736 0b1f 03       		.byte	0x3
 3737 0b20 23       		.byte	0x23
 3738 0b21 B001     		.uleb128 0xb0
 3739 0b23 0D       		.uleb128 0xd
 3740 0b24 C3020000 		.4byte	.LASF203
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 89


 3741 0b28 05       		.byte	0x5
 3742 0b29 1104     		.2byte	0x411
 3743 0b2b E80C0000 		.4byte	0xce8
 3744 0b2f 03       		.byte	0x3
 3745 0b30 23       		.byte	0x23
 3746 0b31 B401     		.uleb128 0xb4
 3747 0b33 0D       		.uleb128 0xd
 3748 0b34 DB020000 		.4byte	.LASF204
 3749 0b38 05       		.byte	0x5
 3750 0b39 1204     		.2byte	0x412
 3751 0b3b E80C0000 		.4byte	0xce8
 3752 0b3f 03       		.byte	0x3
 3753 0b40 23       		.byte	0x23
 3754 0b41 B801     		.uleb128 0xb8
 3755 0b43 0D       		.uleb128 0xd
 3756 0b44 59100000 		.4byte	.LASF205
 3757 0b48 05       		.byte	0x5
 3758 0b49 1304     		.2byte	0x413
 3759 0b4b FA0C0000 		.4byte	0xcfa
 3760 0b4f 03       		.byte	0x3
 3761 0b50 23       		.byte	0x23
 3762 0b51 BC01     		.uleb128 0xbc
 3763 0b53 00       		.byte	0x0
 3764 0b54 09       		.uleb128 0x9
 3765 0b55 99040000 		.4byte	.LASF266
 3766 0b59 05       		.byte	0x5
 3767 0b5a 9E02     		.2byte	0x29e
 3768 0b5c 600B0000 		.4byte	0xb60
 3769 0b60 0C       		.uleb128 0xc
 3770 0b61 DE090000 		.4byte	.LASF267
 3771 0b65 08       		.byte	0x8
 3772 0b66 05       		.byte	0x5
 3773 0b67 9E02     		.2byte	0x29e
 3774 0b69 9B0B0000 		.4byte	0xb9b
 3775 0b6d 0D       		.uleb128 0xd
 3776 0b6e B20E0000 		.4byte	.LASF268
 3777 0b72 05       		.byte	0x5
 3778 0b73 1F04     		.2byte	0x41f
 3779 0b75 E80C0000 		.4byte	0xce8
 3780 0b79 02       		.byte	0x2
 3781 0b7a 23       		.byte	0x23
 3782 0b7b 00       		.uleb128 0x0
 3783 0b7c 0D       		.uleb128 0xd
 3784 0b7d 66010000 		.4byte	.LASF219
 3785 0b81 05       		.byte	0x5
 3786 0b82 2004     		.2byte	0x420
 3787 0b84 51010000 		.4byte	0x151
 3788 0b88 02       		.byte	0x2
 3789 0b89 23       		.byte	0x23
 3790 0b8a 04       		.uleb128 0x4
 3791 0b8b 0D       		.uleb128 0xd
 3792 0b8c AC120000 		.4byte	.LASF220
 3793 0b90 05       		.byte	0x5
 3794 0b91 2104     		.2byte	0x421
 3795 0b93 51010000 		.4byte	0x151
 3796 0b97 02       		.byte	0x2
 3797 0b98 23       		.byte	0x23
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 90


 3798 0b99 06       		.uleb128 0x6
 3799 0b9a 00       		.byte	0x0
 3800 0b9b 09       		.uleb128 0x9
 3801 0b9c 5A050000 		.4byte	.LASF269
 3802 0ba0 05       		.byte	0x5
 3803 0ba1 A502     		.2byte	0x2a5
 3804 0ba3 A70B0000 		.4byte	0xba7
 3805 0ba7 0C       		.uleb128 0xc
 3806 0ba8 77110000 		.4byte	.LASF270
 3807 0bac 20       		.byte	0x20
 3808 0bad 05       		.byte	0x5
 3809 0bae A502     		.2byte	0x2a5
 3810 0bb0 2D0C0000 		.4byte	0xc2d
 3811 0bb4 0D       		.uleb128 0xd
 3812 0bb5 69080000 		.4byte	.LASF227
 3813 0bb9 05       		.byte	0x5
 3814 0bba DE02     		.2byte	0x2de
 3815 0bbc EE0C0000 		.4byte	0xcee
 3816 0bc0 02       		.byte	0x2
 3817 0bc1 23       		.byte	0x23
 3818 0bc2 00       		.uleb128 0x0
 3819 0bc3 0D       		.uleb128 0xd
 3820 0bc4 5E0C0000 		.4byte	.LASF210
 3821 0bc8 05       		.byte	0x5
 3822 0bc9 DF02     		.2byte	0x2df
 3823 0bcb EE0C0000 		.4byte	0xcee
 3824 0bcf 02       		.byte	0x2
 3825 0bd0 23       		.byte	0x23
 3826 0bd1 04       		.uleb128 0x4
 3827 0bd2 0D       		.uleb128 0xd
 3828 0bd3 160A0000 		.4byte	.LASF271
 3829 0bd7 05       		.byte	0x5
 3830 0bd8 E002     		.2byte	0x2e0
 3831 0bda E80C0000 		.4byte	0xce8
 3832 0bde 02       		.byte	0x2
 3833 0bdf 23       		.byte	0x23
 3834 0be0 08       		.uleb128 0x8
 3835 0be1 0D       		.uleb128 0xd
 3836 0be2 04120000 		.4byte	.LASF272
 3837 0be6 05       		.byte	0x5
 3838 0be7 E102     		.2byte	0x2e1
 3839 0be9 F40C0000 		.4byte	0xcf4
 3840 0bed 02       		.byte	0x2
 3841 0bee 23       		.byte	0x23
 3842 0bef 0C       		.uleb128 0xc
 3843 0bf0 0D       		.uleb128 0xd
 3844 0bf1 DF0B0000 		.4byte	.LASF273
 3845 0bf5 05       		.byte	0x5
 3846 0bf6 E202     		.2byte	0x2e2
 3847 0bf8 F40C0000 		.4byte	0xcf4
 3848 0bfc 02       		.byte	0x2
 3849 0bfd 23       		.byte	0x23
 3850 0bfe 10       		.uleb128 0x10
 3851 0bff 0D       		.uleb128 0xd
 3852 0c00 E1030000 		.4byte	.LASF274
 3853 0c04 05       		.byte	0x5
 3854 0c05 E302     		.2byte	0x2e3
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 91


 3855 0c07 BF000000 		.4byte	0xbf
 3856 0c0b 02       		.byte	0x2
 3857 0c0c 23       		.byte	0x23
 3858 0c0d 14       		.uleb128 0x14
 3859 0c0e 0D       		.uleb128 0xd
 3860 0c0f 280D0000 		.4byte	.LASF275
 3861 0c13 05       		.byte	0x5
 3862 0c14 E402     		.2byte	0x2e4
 3863 0c16 3B010000 		.4byte	0x13b
 3864 0c1a 02       		.byte	0x2
 3865 0c1b 23       		.byte	0x23
 3866 0c1c 18       		.uleb128 0x18
 3867 0c1d 0D       		.uleb128 0xd
 3868 0c1e E80C0000 		.4byte	.LASF276
 3869 0c22 05       		.byte	0x5
 3870 0c23 E502     		.2byte	0x2e5
 3871 0c25 F9000000 		.4byte	0xf9
 3872 0c29 02       		.byte	0x2
 3873 0c2a 23       		.byte	0x23
 3874 0c2b 1C       		.uleb128 0x1c
 3875 0c2c 00       		.byte	0x0
 3876 0c2d 09       		.uleb128 0x9
 3877 0c2e E1100000 		.4byte	.LASF277
 3878 0c32 05       		.byte	0x5
 3879 0c33 A602     		.2byte	0x2a6
 3880 0c35 390C0000 		.4byte	0xc39
 3881 0c39 0C       		.uleb128 0xc
 3882 0c3a BA120000 		.4byte	.LASF278
 3883 0c3e 0C       		.byte	0xc
 3884 0c3f 05       		.byte	0x5
 3885 0c40 A602     		.2byte	0x2a6
 3886 0c42 740C0000 		.4byte	0xc74
 3887 0c46 0D       		.uleb128 0xd
 3888 0c47 610E0000 		.4byte	.LASF279
 3889 0c4b 05       		.byte	0x5
 3890 0c4c EA02     		.2byte	0x2ea
 3891 0c4e EE0C0000 		.4byte	0xcee
 3892 0c52 02       		.byte	0x2
 3893 0c53 23       		.byte	0x23
 3894 0c54 00       		.uleb128 0x0
 3895 0c55 0D       		.uleb128 0xd
 3896 0c56 A1030000 		.4byte	.LASF280
 3897 0c5a 05       		.byte	0x5
 3898 0c5b EB02     		.2byte	0x2eb
 3899 0c5d EE0C0000 		.4byte	0xcee
 3900 0c61 02       		.byte	0x2
 3901 0c62 23       		.byte	0x23
 3902 0c63 04       		.uleb128 0x4
 3903 0c64 0D       		.uleb128 0xd
 3904 0c65 66010000 		.4byte	.LASF219
 3905 0c69 05       		.byte	0x5
 3906 0c6a EC02     		.2byte	0x2ec
 3907 0c6c 51010000 		.4byte	0x151
 3908 0c70 02       		.byte	0x2
 3909 0c71 23       		.byte	0x23
 3910 0c72 08       		.uleb128 0x8
 3911 0c73 00       		.byte	0x0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 92


 3912 0c74 09       		.uleb128 0x9
 3913 0c75 D50D0000 		.4byte	.LASF281
 3914 0c79 05       		.byte	0x5
 3915 0c7a A702     		.2byte	0x2a7
 3916 0c7c 800C0000 		.4byte	0xc80
 3917 0c80 0C       		.uleb128 0xc
 3918 0c81 EB030000 		.4byte	.LASF282
 3919 0c85 20       		.byte	0x20
 3920 0c86 05       		.byte	0x5
 3921 0c87 A702     		.2byte	0x2a7
 3922 0c89 E80C0000 		.4byte	0xce8
 3923 0c8d 0D       		.uleb128 0xd
 3924 0c8e 73090000 		.4byte	.LASF200
 3925 0c92 05       		.byte	0x5
 3926 0c93 0003     		.2byte	0x300
 3927 0c95 5C010000 		.4byte	0x15c
 3928 0c99 02       		.byte	0x2
 3929 0c9a 23       		.byte	0x23
 3930 0c9b 00       		.uleb128 0x0
 3931 0c9c 0D       		.uleb128 0xd
 3932 0c9d 32090000 		.4byte	.LASF201
 3933 0ca1 05       		.byte	0x5
 3934 0ca2 0103     		.2byte	0x301
 3935 0ca4 FA0C0000 		.4byte	0xcfa
 3936 0ca8 02       		.byte	0x2
 3937 0ca9 23       		.byte	0x23
 3938 0caa 04       		.uleb128 0x4
 3939 0cab 0D       		.uleb128 0xd
 3940 0cac 0F0E0000 		.4byte	.LASF202
 3941 0cb0 05       		.byte	0x5
 3942 0cb1 0203     		.2byte	0x302
 3943 0cb3 2D0C0000 		.4byte	0xc2d
 3944 0cb7 02       		.byte	0x2
 3945 0cb8 23       		.byte	0x23
 3946 0cb9 08       		.uleb128 0x8
 3947 0cba 0D       		.uleb128 0xd
 3948 0cbb C3020000 		.4byte	.LASF203
 3949 0cbf 05       		.byte	0x5
 3950 0cc0 0403     		.2byte	0x304
 3951 0cc2 BF000000 		.4byte	0xbf
 3952 0cc6 02       		.byte	0x2
 3953 0cc7 23       		.byte	0x23
 3954 0cc8 14       		.uleb128 0x14
 3955 0cc9 0D       		.uleb128 0xd
 3956 0cca DB020000 		.4byte	.LASF204
 3957 0cce 05       		.byte	0x5
 3958 0ccf 0503     		.2byte	0x305
 3959 0cd1 BF000000 		.4byte	0xbf
 3960 0cd5 02       		.byte	0x2
 3961 0cd6 23       		.byte	0x23
 3962 0cd7 18       		.uleb128 0x18
 3963 0cd8 0D       		.uleb128 0xd
 3964 0cd9 59100000 		.4byte	.LASF205
 3965 0cdd 05       		.byte	0x5
 3966 0cde 0603     		.2byte	0x306
 3967 0ce0 FA0C0000 		.4byte	0xcfa
 3968 0ce4 02       		.byte	0x2
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 93


 3969 0ce5 23       		.byte	0x23
 3970 0ce6 1C       		.uleb128 0x1c
 3971 0ce7 00       		.byte	0x0
 3972 0ce8 05       		.uleb128 0x5
 3973 0ce9 04       		.byte	0x4
 3974 0cea 2C080000 		.4byte	0x82c
 3975 0cee 05       		.uleb128 0x5
 3976 0cef 04       		.byte	0x4
 3977 0cf0 9B0B0000 		.4byte	0xb9b
 3978 0cf4 05       		.uleb128 0x5
 3979 0cf5 04       		.byte	0x4
 3980 0cf6 740C0000 		.4byte	0xc74
 3981 0cfa 05       		.uleb128 0x5
 3982 0cfb 04       		.byte	0x4
 3983 0cfc 29000000 		.4byte	0x29
 3984 0d00 05       		.uleb128 0x5
 3985 0d01 04       		.byte	0x4
 3986 0d02 D4060000 		.4byte	0x6d4
 3987 0d06 05       		.uleb128 0x5
 3988 0d07 04       		.byte	0x4
 3989 0d08 65070000 		.4byte	0x765
 3990 0d0c 05       		.uleb128 0x5
 3991 0d0d 04       		.byte	0x4
 3992 0d0e CC000000 		.4byte	0xcc
 3993 0d12 05       		.uleb128 0x5
 3994 0d13 04       		.byte	0x4
 3995 0d14 540B0000 		.4byte	0xb54
 3996 0d18 0F       		.uleb128 0xf
 3997 0d19 7D010000 		.4byte	0x17d
 3998 0d1d 280D0000 		.4byte	0xd28
 3999 0d21 10       		.uleb128 0x10
 4000 0d22 280D0000 		.4byte	0xd28
 4001 0d26 00       		.byte	0x0
 4002 0d27 00       		.byte	0x0
 4003 0d28 11       		.uleb128 0x11
 4004 0d29 04       		.byte	0x4
 4005 0d2a 07       		.byte	0x7
 4006 0d2b 12       		.uleb128 0x12
 4007 0d2c 01       		.byte	0x1
 4008 0d2d D6010000 		.4byte	.LASF304
 4009 0d31 01       		.byte	0x1
 4010 0d32 46       		.byte	0x46
 4011 0d33 01       		.byte	0x1
 4012 0d34 00000000 		.4byte	.LFB0
 4013 0d38 A6000000 		.4byte	.LFE0
 4014 0d3c 00000000 		.4byte	.LLST0
 4015 0d40 8B0D0000 		.4byte	0xd8b
 4016 0d44 13       		.uleb128 0x13
 4017 0d45 88030000 		.4byte	.LASF283
 4018 0d49 01       		.byte	0x1
 4019 0d4a 46       		.byte	0x46
 4020 0d4b 000D0000 		.4byte	0xd00
 4021 0d4f 02       		.byte	0x2
 4022 0d50 91       		.byte	0x91
 4023 0d51 6C       		.sleb128 -20
 4024 0d52 13       		.uleb128 0x13
 4025 0d53 0C080000 		.4byte	.LASF284
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 94


 4026 0d57 01       		.byte	0x1
 4027 0d58 47       		.byte	0x47
 4028 0d59 FA0C0000 		.4byte	0xcfa
 4029 0d5d 02       		.byte	0x2
 4030 0d5e 91       		.byte	0x91
 4031 0d5f 68       		.sleb128 -24
 4032 0d60 13       		.uleb128 0x13
 4033 0d61 60010000 		.4byte	.LASF285
 4034 0d65 01       		.byte	0x1
 4035 0d66 48       		.byte	0x48
 4036 0d67 25010000 		.4byte	0x125
 4037 0d6b 02       		.byte	0x2
 4038 0d6c 91       		.byte	0x91
 4039 0d6d 64       		.sleb128 -28
 4040 0d6e 13       		.uleb128 0x13
 4041 0d6f E2070000 		.4byte	.LASF286
 4042 0d73 01       		.byte	0x1
 4043 0d74 49       		.byte	0x49
 4044 0d75 8B0D0000 		.4byte	0xd8b
 4045 0d79 02       		.byte	0x2
 4046 0d7a 91       		.byte	0x91
 4047 0d7b 60       		.sleb128 -32
 4048 0d7c 14       		.uleb128 0x14
 4049 0d7d C1040000 		.4byte	.LASF287
 4050 0d81 01       		.byte	0x1
 4051 0d82 4B       		.byte	0x4b
 4052 0d83 E2000000 		.4byte	0xe2
 4053 0d87 02       		.byte	0x2
 4054 0d88 91       		.byte	0x91
 4055 0d89 74       		.sleb128 -12
 4056 0d8a 00       		.byte	0x0
 4057 0d8b 05       		.uleb128 0x5
 4058 0d8c 04       		.byte	0x4
 4059 0d8d C8060000 		.4byte	0x6c8
 4060 0d91 15       		.uleb128 0x15
 4061 0d92 01       		.byte	0x1
 4062 0d93 B8090000 		.4byte	.LASF292
 4063 0d97 01       		.byte	0x1
 4064 0d98 9C       		.byte	0x9c
 4065 0d99 01       		.byte	0x1
 4066 0d9a 51010000 		.4byte	0x151
 4067 0d9e 00000000 		.4byte	.LFB1
 4068 0da2 52010000 		.4byte	.LFE1
 4069 0da6 37000000 		.4byte	.LLST1
 4070 0daa 3A0E0000 		.4byte	0xe3a
 4071 0dae 13       		.uleb128 0x13
 4072 0daf 88030000 		.4byte	.LASF283
 4073 0db3 01       		.byte	0x1
 4074 0db4 9C       		.byte	0x9c
 4075 0db5 000D0000 		.4byte	0xd00
 4076 0db9 02       		.byte	0x2
 4077 0dba 91       		.byte	0x91
 4078 0dbb 5C       		.sleb128 -36
 4079 0dbc 16       		.uleb128 0x16
 4080 0dbd 6F707400 		.ascii	"opt\000"
 4081 0dc1 01       		.byte	0x1
 4082 0dc2 9D       		.byte	0x9d
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 95


 4083 0dc3 67010000 		.4byte	0x167
 4084 0dc7 02       		.byte	0x2
 4085 0dc8 91       		.byte	0x91
 4086 0dc9 5A       		.sleb128 -38
 4087 0dca 13       		.uleb128 0x13
 4088 0dcb E2070000 		.4byte	.LASF286
 4089 0dcf 01       		.byte	0x1
 4090 0dd0 9E       		.byte	0x9e
 4091 0dd1 8B0D0000 		.4byte	0xd8b
 4092 0dd5 02       		.byte	0x2
 4093 0dd6 91       		.byte	0x91
 4094 0dd7 54       		.sleb128 -44
 4095 0dd8 17       		.uleb128 0x17
 4096 0dd9 636E7400 		.ascii	"cnt\000"
 4097 0ddd 01       		.byte	0x1
 4098 0dde A0       		.byte	0xa0
 4099 0ddf 51010000 		.4byte	0x151
 4100 0de3 02       		.byte	0x2
 4101 0de4 91       		.byte	0x91
 4102 0de5 60       		.sleb128 -32
 4103 0de6 14       		.uleb128 0x14
 4104 0de7 A50A0000 		.4byte	.LASF288
 4105 0deb 01       		.byte	0x1
 4106 0dec A1       		.byte	0xa1
 4107 0ded 51010000 		.4byte	0x151
 4108 0df1 02       		.byte	0x2
 4109 0df2 91       		.byte	0x91
 4110 0df3 62       		.sleb128 -30
 4111 0df4 14       		.uleb128 0x14
 4112 0df5 5D080000 		.4byte	.LASF289
 4113 0df9 01       		.byte	0x1
 4114 0dfa A2       		.byte	0xa2
 4115 0dfb EE0C0000 		.4byte	0xcee
 4116 0dff 02       		.byte	0x2
 4117 0e00 91       		.byte	0x91
 4118 0e01 64       		.sleb128 -28
 4119 0e02 14       		.uleb128 0x14
 4120 0e03 49030000 		.4byte	.LASF290
 4121 0e07 01       		.byte	0x1
 4122 0e08 A3       		.byte	0xa3
 4123 0e09 3A0E0000 		.4byte	0xe3a
 4124 0e0d 02       		.byte	0x2
 4125 0e0e 91       		.byte	0x91
 4126 0e0f 68       		.sleb128 -24
 4127 0e10 14       		.uleb128 0x14
 4128 0e11 EC090000 		.4byte	.LASF291
 4129 0e15 01       		.byte	0x1
 4130 0e16 A4       		.byte	0xa4
 4131 0e17 E80C0000 		.4byte	0xce8
 4132 0e1b 02       		.byte	0x2
 4133 0e1c 91       		.byte	0x91
 4134 0e1d 6C       		.sleb128 -20
 4135 0e1e 17       		.uleb128 0x17
 4136 0e1f 747300   		.ascii	"ts\000"
 4137 0e22 01       		.byte	0x1
 4138 0e23 A5       		.byte	0xa5
 4139 0e24 F9000000 		.4byte	0xf9
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 96


 4140 0e28 02       		.byte	0x2
 4141 0e29 91       		.byte	0x91
 4142 0e2a 70       		.sleb128 -16
 4143 0e2b 14       		.uleb128 0x14
 4144 0e2c C1040000 		.4byte	.LASF287
 4145 0e30 01       		.byte	0x1
 4146 0e31 A6       		.byte	0xa6
 4147 0e32 E2000000 		.4byte	0xe2
 4148 0e36 02       		.byte	0x2
 4149 0e37 91       		.byte	0x91
 4150 0e38 74       		.sleb128 -12
 4151 0e39 00       		.byte	0x0
 4152 0e3a 05       		.uleb128 0x5
 4153 0e3b 04       		.byte	0x4
 4154 0e3c 2D0C0000 		.4byte	0xc2d
 4155 0e40 18       		.uleb128 0x18
 4156 0e41 01       		.byte	0x1
 4157 0e42 98090000 		.4byte	.LASF293
 4158 0e46 01       		.byte	0x1
 4159 0e47 3B01     		.2byte	0x13b
 4160 0e49 01       		.byte	0x1
 4161 0e4a 25010000 		.4byte	0x125
 4162 0e4e 00000000 		.4byte	.LFB2
 4163 0e52 B2050000 		.4byte	.LFE2
 4164 0e56 6E000000 		.4byte	.LLST2
 4165 0e5a 060F0000 		.4byte	0xf06
 4166 0e5e 19       		.uleb128 0x19
 4167 0e5f 88030000 		.4byte	.LASF283
 4168 0e63 01       		.byte	0x1
 4169 0e64 3B01     		.2byte	0x13b
 4170 0e66 000D0000 		.4byte	0xd00
 4171 0e6a 02       		.byte	0x2
 4172 0e6b 91       		.byte	0x91
 4173 0e6c 44       		.sleb128 -60
 4174 0e6d 19       		.uleb128 0x19
 4175 0e6e 60010000 		.4byte	.LASF285
 4176 0e72 01       		.byte	0x1
 4177 0e73 3C01     		.2byte	0x13c
 4178 0e75 25010000 		.4byte	0x125
 4179 0e79 02       		.byte	0x2
 4180 0e7a 91       		.byte	0x91
 4181 0e7b 40       		.sleb128 -64
 4182 0e7c 19       		.uleb128 0x19
 4183 0e7d E30F0000 		.4byte	.LASF294
 4184 0e81 01       		.byte	0x1
 4185 0e82 3D01     		.2byte	0x13d
 4186 0e84 A9010000 		.4byte	0x1a9
 4187 0e88 03       		.byte	0x3
 4188 0e89 91       		.byte	0x91
 4189 0e8a BC7F     		.sleb128 -68
 4190 0e8c 1A       		.uleb128 0x1a
 4191 0e8d 6F707400 		.ascii	"opt\000"
 4192 0e91 01       		.byte	0x1
 4193 0e92 3E01     		.2byte	0x13e
 4194 0e94 67010000 		.4byte	0x167
 4195 0e98 03       		.byte	0x3
 4196 0e99 91       		.byte	0x91
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 97


 4197 0e9a BA7F     		.sleb128 -70
 4198 0e9c 19       		.uleb128 0x19
 4199 0e9d C10B0000 		.4byte	.LASF295
 4200 0ea1 01       		.byte	0x1
 4201 0ea2 3F01     		.2byte	0x13f
 4202 0ea4 060F0000 		.4byte	0xf06
 4203 0ea8 02       		.byte	0x2
 4204 0ea9 91       		.byte	0x91
 4205 0eaa 00       		.sleb128 0
 4206 0eab 19       		.uleb128 0x19
 4207 0eac E2070000 		.4byte	.LASF286
 4208 0eb0 01       		.byte	0x1
 4209 0eb1 4001     		.2byte	0x140
 4210 0eb3 8B0D0000 		.4byte	0xd8b
 4211 0eb7 02       		.byte	0x2
 4212 0eb8 91       		.byte	0x91
 4213 0eb9 04       		.sleb128 4
 4214 0eba 1B       		.uleb128 0x1b
 4215 0ebb 5B0A0000 		.4byte	.LASF296
 4216 0ebf 01       		.byte	0x1
 4217 0ec0 4201     		.2byte	0x142
 4218 0ec2 3B000000 		.4byte	0x3b
 4219 0ec6 02       		.byte	0x2
 4220 0ec7 91       		.byte	0x91
 4221 0ec8 6B       		.sleb128 -21
 4222 0ec9 1B       		.uleb128 0x1b
 4223 0eca 690E0000 		.4byte	.LASF297
 4224 0ece 01       		.byte	0x1
 4225 0ecf 4301     		.2byte	0x143
 4226 0ed1 25010000 		.4byte	0x125
 4227 0ed5 02       		.byte	0x2
 4228 0ed6 91       		.byte	0x91
 4229 0ed7 6C       		.sleb128 -20
 4230 0ed8 1B       		.uleb128 0x1b
 4231 0ed9 2F030000 		.4byte	.LASF298
 4232 0edd 01       		.byte	0x1
 4233 0ede 4401     		.2byte	0x144
 4234 0ee0 67010000 		.4byte	0x167
 4235 0ee4 02       		.byte	0x2
 4236 0ee5 91       		.byte	0x91
 4237 0ee6 72       		.sleb128 -14
 4238 0ee7 1B       		.uleb128 0x1b
 4239 0ee8 0C0A0000 		.4byte	.LASF299
 4240 0eec 01       		.byte	0x1
 4241 0eed 4501     		.2byte	0x145
 4242 0eef 9B0B0000 		.4byte	0xb9b
 4243 0ef3 02       		.byte	0x2
 4244 0ef4 91       		.byte	0x91
 4245 0ef5 48       		.sleb128 -56
 4246 0ef6 1B       		.uleb128 0x1b
 4247 0ef7 C1040000 		.4byte	.LASF287
 4248 0efb 01       		.byte	0x1
 4249 0efc 4601     		.2byte	0x146
 4250 0efe E2000000 		.4byte	0xe2
 4251 0f02 02       		.byte	0x2
 4252 0f03 91       		.byte	0x91
 4253 0f04 74       		.sleb128 -12
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 98


 4254 0f05 00       		.byte	0x0
 4255 0f06 05       		.uleb128 0x5
 4256 0f07 04       		.byte	0x4
 4257 0f08 F9000000 		.4byte	0xf9
 4258 0f0c 18       		.uleb128 0x18
 4259 0f0d 01       		.byte	0x1
 4260 0f0e B6050000 		.4byte	.LASF300
 4261 0f12 01       		.byte	0x1
 4262 0f13 8A02     		.2byte	0x28a
 4263 0f15 01       		.byte	0x1
 4264 0f16 51010000 		.4byte	0x151
 4265 0f1a 00000000 		.4byte	.LFB3
 4266 0f1e 06010000 		.4byte	.LFE3
 4267 0f22 A7000000 		.4byte	.LLST3
 4268 0f26 A20F0000 		.4byte	0xfa2
 4269 0f2a 19       		.uleb128 0x19
 4270 0f2b 88030000 		.4byte	.LASF283
 4271 0f2f 01       		.byte	0x1
 4272 0f30 8A02     		.2byte	0x28a
 4273 0f32 000D0000 		.4byte	0xd00
 4274 0f36 02       		.byte	0x2
 4275 0f37 91       		.byte	0x91
 4276 0f38 5C       		.sleb128 -36
 4277 0f39 1A       		.uleb128 0x1a
 4278 0f3a 6F707400 		.ascii	"opt\000"
 4279 0f3e 01       		.byte	0x1
 4280 0f3f 8B02     		.2byte	0x28b
 4281 0f41 67010000 		.4byte	0x167
 4282 0f45 02       		.byte	0x2
 4283 0f46 91       		.byte	0x91
 4284 0f47 5A       		.sleb128 -38
 4285 0f48 19       		.uleb128 0x19
 4286 0f49 E2070000 		.4byte	.LASF286
 4287 0f4d 01       		.byte	0x1
 4288 0f4e 8C02     		.2byte	0x28c
 4289 0f50 8B0D0000 		.4byte	0xd8b
 4290 0f54 02       		.byte	0x2
 4291 0f55 91       		.byte	0x91
 4292 0f56 54       		.sleb128 -44
 4293 0f57 1B       		.uleb128 0x1b
 4294 0f58 49030000 		.4byte	.LASF290
 4295 0f5c 01       		.byte	0x1
 4296 0f5d 8E02     		.2byte	0x28e
 4297 0f5f 3A0E0000 		.4byte	0xe3a
 4298 0f63 02       		.byte	0x2
 4299 0f64 91       		.byte	0x91
 4300 0f65 64       		.sleb128 -28
 4301 0f66 1B       		.uleb128 0x1b
 4302 0f67 EC090000 		.4byte	.LASF291
 4303 0f6b 01       		.byte	0x1
 4304 0f6c 8F02     		.2byte	0x28f
 4305 0f6e E80C0000 		.4byte	0xce8
 4306 0f72 02       		.byte	0x2
 4307 0f73 91       		.byte	0x91
 4308 0f74 68       		.sleb128 -24
 4309 0f75 1C       		.uleb128 0x1c
 4310 0f76 747300   		.ascii	"ts\000"
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 99


 4311 0f79 01       		.byte	0x1
 4312 0f7a 9002     		.2byte	0x290
 4313 0f7c F9000000 		.4byte	0xf9
 4314 0f80 02       		.byte	0x2
 4315 0f81 91       		.byte	0x91
 4316 0f82 6C       		.sleb128 -20
 4317 0f83 1B       		.uleb128 0x1b
 4318 0f84 A50A0000 		.4byte	.LASF288
 4319 0f88 01       		.byte	0x1
 4320 0f89 9102     		.2byte	0x291
 4321 0f8b 51010000 		.4byte	0x151
 4322 0f8f 02       		.byte	0x2
 4323 0f90 91       		.byte	0x91
 4324 0f91 72       		.sleb128 -14
 4325 0f92 1B       		.uleb128 0x1b
 4326 0f93 C1040000 		.4byte	.LASF287
 4327 0f97 01       		.byte	0x1
 4328 0f98 9202     		.2byte	0x292
 4329 0f9a E2000000 		.4byte	0xe2
 4330 0f9e 02       		.byte	0x2
 4331 0f9f 91       		.byte	0x91
 4332 0fa0 74       		.sleb128 -12
 4333 0fa1 00       		.byte	0x0
 4334 0fa2 18       		.uleb128 0x18
 4335 0fa3 01       		.byte	0x1
 4336 0fa4 BB100000 		.4byte	.LASF301
 4337 0fa8 01       		.byte	0x1
 4338 0fa9 EE02     		.2byte	0x2ee
 4339 0fab 01       		.byte	0x1
 4340 0fac 25010000 		.4byte	0x125
 4341 0fb0 00000000 		.4byte	.LFB4
 4342 0fb4 5C000000 		.4byte	.LFE4
 4343 0fb8 DE000000 		.4byte	.LLST4
 4344 0fbc EE0F0000 		.4byte	0xfee
 4345 0fc0 19       		.uleb128 0x19
 4346 0fc1 E2070000 		.4byte	.LASF286
 4347 0fc5 01       		.byte	0x1
 4348 0fc6 EE02     		.2byte	0x2ee
 4349 0fc8 8B0D0000 		.4byte	0xd8b
 4350 0fcc 02       		.byte	0x2
 4351 0fcd 91       		.byte	0x91
 4352 0fce 6C       		.sleb128 -20
 4353 0fcf 1B       		.uleb128 0x1b
 4354 0fd0 60010000 		.4byte	.LASF285
 4355 0fd4 01       		.byte	0x1
 4356 0fd5 F002     		.2byte	0x2f0
 4357 0fd7 25010000 		.4byte	0x125
 4358 0fdb 02       		.byte	0x2
 4359 0fdc 91       		.byte	0x91
 4360 0fdd 70       		.sleb128 -16
 4361 0fde 1B       		.uleb128 0x1b
 4362 0fdf C1040000 		.4byte	.LASF287
 4363 0fe3 01       		.byte	0x1
 4364 0fe4 F102     		.2byte	0x2f1
 4365 0fe6 E2000000 		.4byte	0xe2
 4366 0fea 02       		.byte	0x2
 4367 0feb 91       		.byte	0x91
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 100


 4368 0fec 74       		.sleb128 -12
 4369 0fed 00       		.byte	0x0
 4370 0fee 18       		.uleb128 0x18
 4371 0fef 01       		.byte	0x1
 4372 0ff0 E6020000 		.4byte	.LASF302
 4373 0ff4 01       		.byte	0x1
 4374 0ff5 3403     		.2byte	0x334
 4375 0ff7 01       		.byte	0x1
 4376 0ff8 25010000 		.4byte	0x125
 4377 0ffc 00000000 		.4byte	.LFB5
 4378 1000 6E000000 		.4byte	.LFE5
 4379 1004 15010000 		.4byte	.LLST5
 4380 1008 66100000 		.4byte	0x1066
 4381 100c 19       		.uleb128 0x19
 4382 100d 88030000 		.4byte	.LASF283
 4383 1011 01       		.byte	0x1
 4384 1012 3403     		.2byte	0x334
 4385 1014 000D0000 		.4byte	0xd00
 4386 1018 02       		.byte	0x2
 4387 1019 91       		.byte	0x91
 4388 101a 6C       		.sleb128 -20
 4389 101b 19       		.uleb128 0x19
 4390 101c 60010000 		.4byte	.LASF285
 4391 1020 01       		.byte	0x1
 4392 1021 3503     		.2byte	0x335
 4393 1023 25010000 		.4byte	0x125
 4394 1027 02       		.byte	0x2
 4395 1028 91       		.byte	0x91
 4396 1029 68       		.sleb128 -24
 4397 102a 1A       		.uleb128 0x1a
 4398 102b 6F707400 		.ascii	"opt\000"
 4399 102f 01       		.byte	0x1
 4400 1030 3603     		.2byte	0x336
 4401 1032 67010000 		.4byte	0x167
 4402 1036 02       		.byte	0x2
 4403 1037 91       		.byte	0x91
 4404 1038 66       		.sleb128 -26
 4405 1039 19       		.uleb128 0x19
 4406 103a E2070000 		.4byte	.LASF286
 4407 103e 01       		.byte	0x1
 4408 103f 3703     		.2byte	0x337
 4409 1041 8B0D0000 		.4byte	0xd8b
 4410 1045 02       		.byte	0x2
 4411 1046 91       		.byte	0x91
 4412 1047 60       		.sleb128 -32
 4413 1048 1B       		.uleb128 0x1b
 4414 1049 E10D0000 		.4byte	.LASF303
 4415 104d 01       		.byte	0x1
 4416 104e 3903     		.2byte	0x339
 4417 1050 25010000 		.4byte	0x125
 4418 1054 02       		.byte	0x2
 4419 1055 91       		.byte	0x91
 4420 1056 70       		.sleb128 -16
 4421 1057 1C       		.uleb128 0x1c
 4422 1058 747300   		.ascii	"ts\000"
 4423 105b 01       		.byte	0x1
 4424 105c 3A03     		.2byte	0x33a
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 101


 4425 105e F9000000 		.4byte	0xf9
 4426 1062 02       		.byte	0x2
 4427 1063 91       		.byte	0x91
 4428 1064 74       		.sleb128 -12
 4429 1065 00       		.byte	0x0
 4430 1066 1D       		.uleb128 0x1d
 4431 1067 01       		.byte	0x1
 4432 1068 AE080000 		.4byte	.LASF305
 4433 106c 01       		.byte	0x1
 4434 106d 9B03     		.2byte	0x39b
 4435 106f 01       		.byte	0x1
 4436 1070 00000000 		.4byte	.LFB6
 4437 1074 58000000 		.4byte	.LFE6
 4438 1078 4C010000 		.4byte	.LLST6
 4439 107c CC100000 		.4byte	0x10cc
 4440 1080 19       		.uleb128 0x19
 4441 1081 5D080000 		.4byte	.LASF289
 4442 1085 01       		.byte	0x1
 4443 1086 9B03     		.2byte	0x39b
 4444 1088 EE0C0000 		.4byte	0xcee
 4445 108c 02       		.byte	0x2
 4446 108d 91       		.byte	0x91
 4447 108e 74       		.sleb128 -12
 4448 108f 19       		.uleb128 0x19
 4449 1090 88030000 		.4byte	.LASF283
 4450 1094 01       		.byte	0x1
 4451 1095 9C03     		.2byte	0x39c
 4452 1097 000D0000 		.4byte	0xd00
 4453 109b 02       		.byte	0x2
 4454 109c 91       		.byte	0x91
 4455 109d 70       		.sleb128 -16
 4456 109e 19       		.uleb128 0x19
 4457 109f 60010000 		.4byte	.LASF285
 4458 10a3 01       		.byte	0x1
 4459 10a4 9D03     		.2byte	0x39d
 4460 10a6 25010000 		.4byte	0x125
 4461 10aa 02       		.byte	0x2
 4462 10ab 91       		.byte	0x91
 4463 10ac 6C       		.sleb128 -20
 4464 10ad 1A       		.uleb128 0x1a
 4465 10ae 6F707400 		.ascii	"opt\000"
 4466 10b2 01       		.byte	0x1
 4467 10b3 9E03     		.2byte	0x39e
 4468 10b5 67010000 		.4byte	0x167
 4469 10b9 02       		.byte	0x2
 4470 10ba 91       		.byte	0x91
 4471 10bb 6A       		.sleb128 -22
 4472 10bc 19       		.uleb128 0x19
 4473 10bd E30F0000 		.4byte	.LASF294
 4474 10c1 01       		.byte	0x1
 4475 10c2 9F03     		.2byte	0x39f
 4476 10c4 A9010000 		.4byte	0x1a9
 4477 10c8 02       		.byte	0x2
 4478 10c9 91       		.byte	0x91
 4479 10ca 00       		.sleb128 0
 4480 10cb 00       		.byte	0x0
 4481 10cc 1D       		.uleb128 0x1d
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 102


 4482 10cd 01       		.byte	0x1
 4483 10ce A4020000 		.4byte	.LASF306
 4484 10d2 01       		.byte	0x1
 4485 10d3 BC03     		.2byte	0x3bc
 4486 10d5 01       		.byte	0x1
 4487 10d6 00000000 		.4byte	.LFB7
 4488 10da 3E000000 		.4byte	.LFE7
 4489 10de 83010000 		.4byte	.LLST7
 4490 10e2 05110000 		.4byte	0x1105
 4491 10e6 19       		.uleb128 0x19
 4492 10e7 88030000 		.4byte	.LASF283
 4493 10eb 01       		.byte	0x1
 4494 10ec BC03     		.2byte	0x3bc
 4495 10ee 000D0000 		.4byte	0xd00
 4496 10f2 02       		.byte	0x2
 4497 10f3 91       		.byte	0x91
 4498 10f4 6C       		.sleb128 -20
 4499 10f5 1B       		.uleb128 0x1b
 4500 10f6 49030000 		.4byte	.LASF290
 4501 10fa 01       		.byte	0x1
 4502 10fb BE03     		.2byte	0x3be
 4503 10fd 3A0E0000 		.4byte	0xe3a
 4504 1101 02       		.byte	0x2
 4505 1102 91       		.byte	0x91
 4506 1103 74       		.sleb128 -12
 4507 1104 00       		.byte	0x0
 4508 1105 1D       		.uleb128 0x1d
 4509 1106 01       		.byte	0x1
 4510 1107 14070000 		.4byte	.LASF307
 4511 110b 01       		.byte	0x1
 4512 110c DB03     		.2byte	0x3db
 4513 110e 01       		.byte	0x1
 4514 110f 00000000 		.4byte	.LFB8
 4515 1113 36000000 		.4byte	.LFE8
 4516 1117 BA010000 		.4byte	.LLST8
 4517 111b 2F110000 		.4byte	0x112f
 4518 111f 19       		.uleb128 0x19
 4519 1120 E2070000 		.4byte	.LASF286
 4520 1124 01       		.byte	0x1
 4521 1125 DB03     		.2byte	0x3db
 4522 1127 8B0D0000 		.4byte	0xd8b
 4523 112b 02       		.byte	0x2
 4524 112c 91       		.byte	0x91
 4525 112d 74       		.sleb128 -12
 4526 112e 00       		.byte	0x0
 4527 112f 1D       		.uleb128 0x1d
 4528 1130 01       		.byte	0x1
 4529 1131 370E0000 		.4byte	.LASF308
 4530 1135 01       		.byte	0x1
 4531 1136 FD03     		.2byte	0x3fd
 4532 1138 01       		.byte	0x1
 4533 1139 00000000 		.4byte	.LFB9
 4534 113d 66000000 		.4byte	.LFE9
 4535 1141 F1010000 		.4byte	.LLST9
 4536 1145 59110000 		.4byte	0x1159
 4537 1149 19       		.uleb128 0x19
 4538 114a 88030000 		.4byte	.LASF283
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 103


 4539 114e 01       		.byte	0x1
 4540 114f FD03     		.2byte	0x3fd
 4541 1151 000D0000 		.4byte	0xd00
 4542 1155 02       		.byte	0x2
 4543 1156 91       		.byte	0x91
 4544 1157 74       		.sleb128 -12
 4545 1158 00       		.byte	0x0
 4546 1159 1D       		.uleb128 0x1d
 4547 115a 01       		.byte	0x1
 4548 115b 35060000 		.4byte	.LASF309
 4549 115f 01       		.byte	0x1
 4550 1160 0C04     		.2byte	0x40c
 4551 1162 01       		.byte	0x1
 4552 1163 00000000 		.4byte	.LFB10
 4553 1167 7C000000 		.4byte	.LFE10
 4554 116b 28020000 		.4byte	.LLST10
 4555 116f A1110000 		.4byte	0x11a1
 4556 1173 19       		.uleb128 0x19
 4557 1174 88030000 		.4byte	.LASF283
 4558 1178 01       		.byte	0x1
 4559 1179 0C04     		.2byte	0x40c
 4560 117b 000D0000 		.4byte	0xd00
 4561 117f 02       		.byte	0x2
 4562 1180 91       		.byte	0x91
 4563 1181 6C       		.sleb128 -20
 4564 1182 1B       		.uleb128 0x1b
 4565 1183 F3040000 		.4byte	.LASF310
 4566 1187 01       		.byte	0x1
 4567 1188 0E04     		.2byte	0x40e
 4568 118a 000D0000 		.4byte	0xd00
 4569 118e 02       		.byte	0x2
 4570 118f 91       		.byte	0x91
 4571 1190 70       		.sleb128 -16
 4572 1191 1B       		.uleb128 0x1b
 4573 1192 13090000 		.4byte	.LASF311
 4574 1196 01       		.byte	0x1
 4575 1197 0F04     		.2byte	0x40f
 4576 1199 000D0000 		.4byte	0xd00
 4577 119d 02       		.byte	0x2
 4578 119e 91       		.byte	0x91
 4579 119f 74       		.sleb128 -12
 4580 11a0 00       		.byte	0x0
 4581 11a1 18       		.uleb128 0x18
 4582 11a2 01       		.byte	0x1
 4583 11a3 E0080000 		.4byte	.LASF312
 4584 11a7 01       		.byte	0x1
 4585 11a8 5504     		.2byte	0x455
 4586 11aa 01       		.byte	0x1
 4587 11ab 25010000 		.4byte	0x125
 4588 11af 00000000 		.4byte	.LFB11
 4589 11b3 08020000 		.4byte	.LFE11
 4590 11b7 5F020000 		.4byte	.LLST11
 4591 11bb 82120000 		.4byte	0x1282
 4592 11bf 19       		.uleb128 0x19
 4593 11c0 88030000 		.4byte	.LASF283
 4594 11c4 01       		.byte	0x1
 4595 11c5 5504     		.2byte	0x455
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 104


 4596 11c7 000D0000 		.4byte	0xd00
 4597 11cb 02       		.byte	0x2
 4598 11cc 91       		.byte	0x91
 4599 11cd 54       		.sleb128 -44
 4600 11ce 19       		.uleb128 0x19
 4601 11cf 60010000 		.4byte	.LASF285
 4602 11d3 01       		.byte	0x1
 4603 11d4 5604     		.2byte	0x456
 4604 11d6 25010000 		.4byte	0x125
 4605 11da 02       		.byte	0x2
 4606 11db 91       		.byte	0x91
 4607 11dc 50       		.sleb128 -48
 4608 11dd 1A       		.uleb128 0x1a
 4609 11de 6F707400 		.ascii	"opt\000"
 4610 11e2 01       		.byte	0x1
 4611 11e3 5704     		.2byte	0x457
 4612 11e5 67010000 		.4byte	0x167
 4613 11e9 02       		.byte	0x2
 4614 11ea 91       		.byte	0x91
 4615 11eb 4E       		.sleb128 -50
 4616 11ec 1A       		.uleb128 0x1a
 4617 11ed 747300   		.ascii	"ts\000"
 4618 11f0 01       		.byte	0x1
 4619 11f1 5804     		.2byte	0x458
 4620 11f3 F9000000 		.4byte	0xf9
 4621 11f7 02       		.byte	0x2
 4622 11f8 91       		.byte	0x91
 4623 11f9 48       		.sleb128 -56
 4624 11fa 19       		.uleb128 0x19
 4625 11fb E2070000 		.4byte	.LASF286
 4626 11ff 01       		.byte	0x1
 4627 1200 5904     		.2byte	0x459
 4628 1202 8B0D0000 		.4byte	0xd8b
 4629 1206 02       		.byte	0x2
 4630 1207 91       		.byte	0x91
 4631 1208 00       		.sleb128 0
 4632 1209 1B       		.uleb128 0x1b
 4633 120a E10D0000 		.4byte	.LASF303
 4634 120e 01       		.byte	0x1
 4635 120f 5B04     		.2byte	0x45b
 4636 1211 25010000 		.4byte	0x125
 4637 1215 02       		.byte	0x2
 4638 1216 91       		.byte	0x91
 4639 1217 58       		.sleb128 -40
 4640 1218 1B       		.uleb128 0x1b
 4641 1219 690E0000 		.4byte	.LASF297
 4642 121d 01       		.byte	0x1
 4643 121e 5C04     		.2byte	0x45c
 4644 1220 25010000 		.4byte	0x125
 4645 1224 02       		.byte	0x2
 4646 1225 91       		.byte	0x91
 4647 1226 5C       		.sleb128 -36
 4648 1227 1B       		.uleb128 0x1b
 4649 1228 2F030000 		.4byte	.LASF298
 4650 122c 01       		.byte	0x1
 4651 122d 5D04     		.2byte	0x45d
 4652 122f 67010000 		.4byte	0x167
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 105


 4653 1233 02       		.byte	0x2
 4654 1234 91       		.byte	0x91
 4655 1235 62       		.sleb128 -30
 4656 1236 1B       		.uleb128 0x1b
 4657 1237 5D080000 		.4byte	.LASF289
 4658 123b 01       		.byte	0x1
 4659 123c 5E04     		.2byte	0x45e
 4660 123e EE0C0000 		.4byte	0xcee
 4661 1242 02       		.byte	0x2
 4662 1243 91       		.byte	0x91
 4663 1244 64       		.sleb128 -28
 4664 1245 1B       		.uleb128 0x1b
 4665 1246 840B0000 		.4byte	.LASF313
 4666 124a 01       		.byte	0x1
 4667 124b 5F04     		.2byte	0x45f
 4668 124d EE0C0000 		.4byte	0xcee
 4669 1251 02       		.byte	0x2
 4670 1252 91       		.byte	0x91
 4671 1253 68       		.sleb128 -24
 4672 1254 1B       		.uleb128 0x1b
 4673 1255 49030000 		.4byte	.LASF290
 4674 1259 01       		.byte	0x1
 4675 125a 6004     		.2byte	0x460
 4676 125c 3A0E0000 		.4byte	0xe3a
 4677 1260 02       		.byte	0x2
 4678 1261 91       		.byte	0x91
 4679 1262 6C       		.sleb128 -20
 4680 1263 1B       		.uleb128 0x1b
 4681 1264 EC090000 		.4byte	.LASF291
 4682 1268 01       		.byte	0x1
 4683 1269 6104     		.2byte	0x461
 4684 126b E80C0000 		.4byte	0xce8
 4685 126f 02       		.byte	0x2
 4686 1270 91       		.byte	0x91
 4687 1271 70       		.sleb128 -16
 4688 1272 1B       		.uleb128 0x1b
 4689 1273 C1040000 		.4byte	.LASF287
 4690 1277 01       		.byte	0x1
 4691 1278 6204     		.2byte	0x462
 4692 127a E2000000 		.4byte	0xe2
 4693 127e 02       		.byte	0x2
 4694 127f 91       		.byte	0x91
 4695 1280 74       		.sleb128 -12
 4696 1281 00       		.byte	0x0
 4697 1282 1D       		.uleb128 0x1d
 4698 1283 01       		.byte	0x1
 4699 1284 BB070000 		.4byte	.LASF314
 4700 1288 01       		.byte	0x1
 4701 1289 D904     		.2byte	0x4d9
 4702 128b 01       		.byte	0x1
 4703 128c 00000000 		.4byte	.LFB12
 4704 1290 86000000 		.4byte	.LFE12
 4705 1294 96020000 		.4byte	.LLST12
 4706 1298 C9120000 		.4byte	0x12c9
 4707 129c 19       		.uleb128 0x19
 4708 129d EC090000 		.4byte	.LASF291
 4709 12a1 01       		.byte	0x1
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 106


 4710 12a2 D904     		.2byte	0x4d9
 4711 12a4 E80C0000 		.4byte	0xce8
 4712 12a8 02       		.byte	0x2
 4713 12a9 91       		.byte	0x91
 4714 12aa 74       		.sleb128 -12
 4715 12ab 19       		.uleb128 0x19
 4716 12ac 690E0000 		.4byte	.LASF297
 4717 12b0 01       		.byte	0x1
 4718 12b1 DA04     		.2byte	0x4da
 4719 12b3 25010000 		.4byte	0x125
 4720 12b7 02       		.byte	0x2
 4721 12b8 91       		.byte	0x91
 4722 12b9 70       		.sleb128 -16
 4723 12ba 1A       		.uleb128 0x1a
 4724 12bb 747300   		.ascii	"ts\000"
 4725 12be 01       		.byte	0x1
 4726 12bf DB04     		.2byte	0x4db
 4727 12c1 F9000000 		.4byte	0xf9
 4728 12c5 02       		.byte	0x2
 4729 12c6 91       		.byte	0x91
 4730 12c7 6C       		.sleb128 -20
 4731 12c8 00       		.byte	0x0
 4732 12c9 1E       		.uleb128 0x1e
 4733 12ca 7C0C0000 		.4byte	.LASF315
 4734 12ce 05       		.byte	0x5
 4735 12cf 5F04     		.2byte	0x45f
 4736 12d1 46010000 		.4byte	0x146
 4737 12d5 01       		.byte	0x1
 4738 12d6 01       		.byte	0x1
 4739 12d7 1E       		.uleb128 0x1e
 4740 12d8 EE100000 		.4byte	.LASF316
 4741 12dc 05       		.byte	0x5
 4742 12dd 7504     		.2byte	0x475
 4743 12df 000D0000 		.4byte	0xd00
 4744 12e3 01       		.byte	0x1
 4745 12e4 01       		.byte	0x1
 4746 12e5 1E       		.uleb128 0x1e
 4747 12e6 38110000 		.4byte	.LASF317
 4748 12ea 05       		.byte	0x5
 4749 12eb 7704     		.2byte	0x477
 4750 12ed 51010000 		.4byte	0x151
 4751 12f1 01       		.byte	0x1
 4752 12f2 01       		.byte	0x1
 4753 12f3 1E       		.uleb128 0x1e
 4754 12f4 B50F0000 		.4byte	.LASF318
 4755 12f8 05       		.byte	0x5
 4756 12f9 AD04     		.2byte	0x4ad
 4757 12fb 46010000 		.4byte	0x146
 4758 12ff 01       		.byte	0x1
 4759 1300 01       		.byte	0x1
 4760 1301 1E       		.uleb128 0x1e
 4761 1302 E3010000 		.4byte	.LASF319
 4762 1306 05       		.byte	0x5
 4763 1307 E504     		.2byte	0x4e5
 4764 1309 E80C0000 		.4byte	0xce8
 4765 130d 01       		.byte	0x1
 4766 130e 01       		.byte	0x1
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 107


 4767 130f 00       		.byte	0x0
 4768              		.section	.debug_abbrev
 4769 0000 01       		.uleb128 0x1
 4770 0001 11       		.uleb128 0x11
 4771 0002 01       		.byte	0x1
 4772 0003 25       		.uleb128 0x25
 4773 0004 0E       		.uleb128 0xe
 4774 0005 13       		.uleb128 0x13
 4775 0006 0B       		.uleb128 0xb
 4776 0007 03       		.uleb128 0x3
 4777 0008 0E       		.uleb128 0xe
 4778 0009 1B       		.uleb128 0x1b
 4779 000a 0E       		.uleb128 0xe
 4780 000b 11       		.uleb128 0x11
 4781 000c 01       		.uleb128 0x1
 4782 000d 52       		.uleb128 0x52
 4783 000e 01       		.uleb128 0x1
 4784 000f 55       		.uleb128 0x55
 4785 0010 06       		.uleb128 0x6
 4786 0011 10       		.uleb128 0x10
 4787 0012 06       		.uleb128 0x6
 4788 0013 00       		.byte	0x0
 4789 0014 00       		.byte	0x0
 4790 0015 02       		.uleb128 0x2
 4791 0016 16       		.uleb128 0x16
 4792 0017 00       		.byte	0x0
 4793 0018 03       		.uleb128 0x3
 4794 0019 0E       		.uleb128 0xe
 4795 001a 3A       		.uleb128 0x3a
 4796 001b 0B       		.uleb128 0xb
 4797 001c 3B       		.uleb128 0x3b
 4798 001d 0B       		.uleb128 0xb
 4799 001e 49       		.uleb128 0x49
 4800 001f 13       		.uleb128 0x13
 4801 0020 00       		.byte	0x0
 4802 0021 00       		.byte	0x0
 4803 0022 03       		.uleb128 0x3
 4804 0023 24       		.uleb128 0x24
 4805 0024 00       		.byte	0x0
 4806 0025 0B       		.uleb128 0xb
 4807 0026 0B       		.uleb128 0xb
 4808 0027 3E       		.uleb128 0x3e
 4809 0028 0B       		.uleb128 0xb
 4810 0029 03       		.uleb128 0x3
 4811 002a 0E       		.uleb128 0xe
 4812 002b 00       		.byte	0x0
 4813 002c 00       		.byte	0x0
 4814 002d 04       		.uleb128 0x4
 4815 002e 24       		.uleb128 0x24
 4816 002f 00       		.byte	0x0
 4817 0030 0B       		.uleb128 0xb
 4818 0031 0B       		.uleb128 0xb
 4819 0032 3E       		.uleb128 0x3e
 4820 0033 0B       		.uleb128 0xb
 4821 0034 03       		.uleb128 0x3
 4822 0035 08       		.uleb128 0x8
 4823 0036 00       		.byte	0x0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 108


 4824 0037 00       		.byte	0x0
 4825 0038 05       		.uleb128 0x5
 4826 0039 0F       		.uleb128 0xf
 4827 003a 00       		.byte	0x0
 4828 003b 0B       		.uleb128 0xb
 4829 003c 0B       		.uleb128 0xb
 4830 003d 49       		.uleb128 0x49
 4831 003e 13       		.uleb128 0x13
 4832 003f 00       		.byte	0x0
 4833 0040 00       		.byte	0x0
 4834 0041 06       		.uleb128 0x6
 4835 0042 15       		.uleb128 0x15
 4836 0043 01       		.byte	0x1
 4837 0044 27       		.uleb128 0x27
 4838 0045 0C       		.uleb128 0xc
 4839 0046 01       		.uleb128 0x1
 4840 0047 13       		.uleb128 0x13
 4841 0048 00       		.byte	0x0
 4842 0049 00       		.byte	0x0
 4843 004a 07       		.uleb128 0x7
 4844 004b 05       		.uleb128 0x5
 4845 004c 00       		.byte	0x0
 4846 004d 49       		.uleb128 0x49
 4847 004e 13       		.uleb128 0x13
 4848 004f 00       		.byte	0x0
 4849 0050 00       		.byte	0x0
 4850 0051 08       		.uleb128 0x8
 4851 0052 0F       		.uleb128 0xf
 4852 0053 00       		.byte	0x0
 4853 0054 0B       		.uleb128 0xb
 4854 0055 0B       		.uleb128 0xb
 4855 0056 00       		.byte	0x0
 4856 0057 00       		.byte	0x0
 4857 0058 09       		.uleb128 0x9
 4858 0059 16       		.uleb128 0x16
 4859 005a 00       		.byte	0x0
 4860 005b 03       		.uleb128 0x3
 4861 005c 0E       		.uleb128 0xe
 4862 005d 3A       		.uleb128 0x3a
 4863 005e 0B       		.uleb128 0xb
 4864 005f 3B       		.uleb128 0x3b
 4865 0060 05       		.uleb128 0x5
 4866 0061 49       		.uleb128 0x49
 4867 0062 13       		.uleb128 0x13
 4868 0063 00       		.byte	0x0
 4869 0064 00       		.byte	0x0
 4870 0065 0A       		.uleb128 0xa
 4871 0066 04       		.uleb128 0x4
 4872 0067 01       		.byte	0x1
 4873 0068 03       		.uleb128 0x3
 4874 0069 0E       		.uleb128 0xe
 4875 006a 0B       		.uleb128 0xb
 4876 006b 0B       		.uleb128 0xb
 4877 006c 3A       		.uleb128 0x3a
 4878 006d 0B       		.uleb128 0xb
 4879 006e 3B       		.uleb128 0x3b
 4880 006f 05       		.uleb128 0x5
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 109


 4881 0070 01       		.uleb128 0x1
 4882 0071 13       		.uleb128 0x13
 4883 0072 00       		.byte	0x0
 4884 0073 00       		.byte	0x0
 4885 0074 0B       		.uleb128 0xb
 4886 0075 28       		.uleb128 0x28
 4887 0076 00       		.byte	0x0
 4888 0077 03       		.uleb128 0x3
 4889 0078 0E       		.uleb128 0xe
 4890 0079 1C       		.uleb128 0x1c
 4891 007a 0D       		.uleb128 0xd
 4892 007b 00       		.byte	0x0
 4893 007c 00       		.byte	0x0
 4894 007d 0C       		.uleb128 0xc
 4895 007e 13       		.uleb128 0x13
 4896 007f 01       		.byte	0x1
 4897 0080 03       		.uleb128 0x3
 4898 0081 0E       		.uleb128 0xe
 4899 0082 0B       		.uleb128 0xb
 4900 0083 0B       		.uleb128 0xb
 4901 0084 3A       		.uleb128 0x3a
 4902 0085 0B       		.uleb128 0xb
 4903 0086 3B       		.uleb128 0x3b
 4904 0087 05       		.uleb128 0x5
 4905 0088 01       		.uleb128 0x1
 4906 0089 13       		.uleb128 0x13
 4907 008a 00       		.byte	0x0
 4908 008b 00       		.byte	0x0
 4909 008c 0D       		.uleb128 0xd
 4910 008d 0D       		.uleb128 0xd
 4911 008e 00       		.byte	0x0
 4912 008f 03       		.uleb128 0x3
 4913 0090 0E       		.uleb128 0xe
 4914 0091 3A       		.uleb128 0x3a
 4915 0092 0B       		.uleb128 0xb
 4916 0093 3B       		.uleb128 0x3b
 4917 0094 05       		.uleb128 0x5
 4918 0095 49       		.uleb128 0x49
 4919 0096 13       		.uleb128 0x13
 4920 0097 38       		.uleb128 0x38
 4921 0098 0A       		.uleb128 0xa
 4922 0099 00       		.byte	0x0
 4923 009a 00       		.byte	0x0
 4924 009b 0E       		.uleb128 0xe
 4925 009c 0D       		.uleb128 0xd
 4926 009d 00       		.byte	0x0
 4927 009e 03       		.uleb128 0x3
 4928 009f 08       		.uleb128 0x8
 4929 00a0 3A       		.uleb128 0x3a
 4930 00a1 0B       		.uleb128 0xb
 4931 00a2 3B       		.uleb128 0x3b
 4932 00a3 05       		.uleb128 0x5
 4933 00a4 49       		.uleb128 0x49
 4934 00a5 13       		.uleb128 0x13
 4935 00a6 38       		.uleb128 0x38
 4936 00a7 0A       		.uleb128 0xa
 4937 00a8 00       		.byte	0x0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 110


 4938 00a9 00       		.byte	0x0
 4939 00aa 0F       		.uleb128 0xf
 4940 00ab 01       		.uleb128 0x1
 4941 00ac 01       		.byte	0x1
 4942 00ad 49       		.uleb128 0x49
 4943 00ae 13       		.uleb128 0x13
 4944 00af 01       		.uleb128 0x1
 4945 00b0 13       		.uleb128 0x13
 4946 00b1 00       		.byte	0x0
 4947 00b2 00       		.byte	0x0
 4948 00b3 10       		.uleb128 0x10
 4949 00b4 21       		.uleb128 0x21
 4950 00b5 00       		.byte	0x0
 4951 00b6 49       		.uleb128 0x49
 4952 00b7 13       		.uleb128 0x13
 4953 00b8 2F       		.uleb128 0x2f
 4954 00b9 0B       		.uleb128 0xb
 4955 00ba 00       		.byte	0x0
 4956 00bb 00       		.byte	0x0
 4957 00bc 11       		.uleb128 0x11
 4958 00bd 24       		.uleb128 0x24
 4959 00be 00       		.byte	0x0
 4960 00bf 0B       		.uleb128 0xb
 4961 00c0 0B       		.uleb128 0xb
 4962 00c1 3E       		.uleb128 0x3e
 4963 00c2 0B       		.uleb128 0xb
 4964 00c3 00       		.byte	0x0
 4965 00c4 00       		.byte	0x0
 4966 00c5 12       		.uleb128 0x12
 4967 00c6 2E       		.uleb128 0x2e
 4968 00c7 01       		.byte	0x1
 4969 00c8 3F       		.uleb128 0x3f
 4970 00c9 0C       		.uleb128 0xc
 4971 00ca 03       		.uleb128 0x3
 4972 00cb 0E       		.uleb128 0xe
 4973 00cc 3A       		.uleb128 0x3a
 4974 00cd 0B       		.uleb128 0xb
 4975 00ce 3B       		.uleb128 0x3b
 4976 00cf 0B       		.uleb128 0xb
 4977 00d0 27       		.uleb128 0x27
 4978 00d1 0C       		.uleb128 0xc
 4979 00d2 11       		.uleb128 0x11
 4980 00d3 01       		.uleb128 0x1
 4981 00d4 12       		.uleb128 0x12
 4982 00d5 01       		.uleb128 0x1
 4983 00d6 40       		.uleb128 0x40
 4984 00d7 06       		.uleb128 0x6
 4985 00d8 01       		.uleb128 0x1
 4986 00d9 13       		.uleb128 0x13
 4987 00da 00       		.byte	0x0
 4988 00db 00       		.byte	0x0
 4989 00dc 13       		.uleb128 0x13
 4990 00dd 05       		.uleb128 0x5
 4991 00de 00       		.byte	0x0
 4992 00df 03       		.uleb128 0x3
 4993 00e0 0E       		.uleb128 0xe
 4994 00e1 3A       		.uleb128 0x3a
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 111


 4995 00e2 0B       		.uleb128 0xb
 4996 00e3 3B       		.uleb128 0x3b
 4997 00e4 0B       		.uleb128 0xb
 4998 00e5 49       		.uleb128 0x49
 4999 00e6 13       		.uleb128 0x13
 5000 00e7 02       		.uleb128 0x2
 5001 00e8 0A       		.uleb128 0xa
 5002 00e9 00       		.byte	0x0
 5003 00ea 00       		.byte	0x0
 5004 00eb 14       		.uleb128 0x14
 5005 00ec 34       		.uleb128 0x34
 5006 00ed 00       		.byte	0x0
 5007 00ee 03       		.uleb128 0x3
 5008 00ef 0E       		.uleb128 0xe
 5009 00f0 3A       		.uleb128 0x3a
 5010 00f1 0B       		.uleb128 0xb
 5011 00f2 3B       		.uleb128 0x3b
 5012 00f3 0B       		.uleb128 0xb
 5013 00f4 49       		.uleb128 0x49
 5014 00f5 13       		.uleb128 0x13
 5015 00f6 02       		.uleb128 0x2
 5016 00f7 0A       		.uleb128 0xa
 5017 00f8 00       		.byte	0x0
 5018 00f9 00       		.byte	0x0
 5019 00fa 15       		.uleb128 0x15
 5020 00fb 2E       		.uleb128 0x2e
 5021 00fc 01       		.byte	0x1
 5022 00fd 3F       		.uleb128 0x3f
 5023 00fe 0C       		.uleb128 0xc
 5024 00ff 03       		.uleb128 0x3
 5025 0100 0E       		.uleb128 0xe
 5026 0101 3A       		.uleb128 0x3a
 5027 0102 0B       		.uleb128 0xb
 5028 0103 3B       		.uleb128 0x3b
 5029 0104 0B       		.uleb128 0xb
 5030 0105 27       		.uleb128 0x27
 5031 0106 0C       		.uleb128 0xc
 5032 0107 49       		.uleb128 0x49
 5033 0108 13       		.uleb128 0x13
 5034 0109 11       		.uleb128 0x11
 5035 010a 01       		.uleb128 0x1
 5036 010b 12       		.uleb128 0x12
 5037 010c 01       		.uleb128 0x1
 5038 010d 40       		.uleb128 0x40
 5039 010e 06       		.uleb128 0x6
 5040 010f 01       		.uleb128 0x1
 5041 0110 13       		.uleb128 0x13
 5042 0111 00       		.byte	0x0
 5043 0112 00       		.byte	0x0
 5044 0113 16       		.uleb128 0x16
 5045 0114 05       		.uleb128 0x5
 5046 0115 00       		.byte	0x0
 5047 0116 03       		.uleb128 0x3
 5048 0117 08       		.uleb128 0x8
 5049 0118 3A       		.uleb128 0x3a
 5050 0119 0B       		.uleb128 0xb
 5051 011a 3B       		.uleb128 0x3b
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 112


 5052 011b 0B       		.uleb128 0xb
 5053 011c 49       		.uleb128 0x49
 5054 011d 13       		.uleb128 0x13
 5055 011e 02       		.uleb128 0x2
 5056 011f 0A       		.uleb128 0xa
 5057 0120 00       		.byte	0x0
 5058 0121 00       		.byte	0x0
 5059 0122 17       		.uleb128 0x17
 5060 0123 34       		.uleb128 0x34
 5061 0124 00       		.byte	0x0
 5062 0125 03       		.uleb128 0x3
 5063 0126 08       		.uleb128 0x8
 5064 0127 3A       		.uleb128 0x3a
 5065 0128 0B       		.uleb128 0xb
 5066 0129 3B       		.uleb128 0x3b
 5067 012a 0B       		.uleb128 0xb
 5068 012b 49       		.uleb128 0x49
 5069 012c 13       		.uleb128 0x13
 5070 012d 02       		.uleb128 0x2
 5071 012e 0A       		.uleb128 0xa
 5072 012f 00       		.byte	0x0
 5073 0130 00       		.byte	0x0
 5074 0131 18       		.uleb128 0x18
 5075 0132 2E       		.uleb128 0x2e
 5076 0133 01       		.byte	0x1
 5077 0134 3F       		.uleb128 0x3f
 5078 0135 0C       		.uleb128 0xc
 5079 0136 03       		.uleb128 0x3
 5080 0137 0E       		.uleb128 0xe
 5081 0138 3A       		.uleb128 0x3a
 5082 0139 0B       		.uleb128 0xb
 5083 013a 3B       		.uleb128 0x3b
 5084 013b 05       		.uleb128 0x5
 5085 013c 27       		.uleb128 0x27
 5086 013d 0C       		.uleb128 0xc
 5087 013e 49       		.uleb128 0x49
 5088 013f 13       		.uleb128 0x13
 5089 0140 11       		.uleb128 0x11
 5090 0141 01       		.uleb128 0x1
 5091 0142 12       		.uleb128 0x12
 5092 0143 01       		.uleb128 0x1
 5093 0144 40       		.uleb128 0x40
 5094 0145 06       		.uleb128 0x6
 5095 0146 01       		.uleb128 0x1
 5096 0147 13       		.uleb128 0x13
 5097 0148 00       		.byte	0x0
 5098 0149 00       		.byte	0x0
 5099 014a 19       		.uleb128 0x19
 5100 014b 05       		.uleb128 0x5
 5101 014c 00       		.byte	0x0
 5102 014d 03       		.uleb128 0x3
 5103 014e 0E       		.uleb128 0xe
 5104 014f 3A       		.uleb128 0x3a
 5105 0150 0B       		.uleb128 0xb
 5106 0151 3B       		.uleb128 0x3b
 5107 0152 05       		.uleb128 0x5
 5108 0153 49       		.uleb128 0x49
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 113


 5109 0154 13       		.uleb128 0x13
 5110 0155 02       		.uleb128 0x2
 5111 0156 0A       		.uleb128 0xa
 5112 0157 00       		.byte	0x0
 5113 0158 00       		.byte	0x0
 5114 0159 1A       		.uleb128 0x1a
 5115 015a 05       		.uleb128 0x5
 5116 015b 00       		.byte	0x0
 5117 015c 03       		.uleb128 0x3
 5118 015d 08       		.uleb128 0x8
 5119 015e 3A       		.uleb128 0x3a
 5120 015f 0B       		.uleb128 0xb
 5121 0160 3B       		.uleb128 0x3b
 5122 0161 05       		.uleb128 0x5
 5123 0162 49       		.uleb128 0x49
 5124 0163 13       		.uleb128 0x13
 5125 0164 02       		.uleb128 0x2
 5126 0165 0A       		.uleb128 0xa
 5127 0166 00       		.byte	0x0
 5128 0167 00       		.byte	0x0
 5129 0168 1B       		.uleb128 0x1b
 5130 0169 34       		.uleb128 0x34
 5131 016a 00       		.byte	0x0
 5132 016b 03       		.uleb128 0x3
 5133 016c 0E       		.uleb128 0xe
 5134 016d 3A       		.uleb128 0x3a
 5135 016e 0B       		.uleb128 0xb
 5136 016f 3B       		.uleb128 0x3b
 5137 0170 05       		.uleb128 0x5
 5138 0171 49       		.uleb128 0x49
 5139 0172 13       		.uleb128 0x13
 5140 0173 02       		.uleb128 0x2
 5141 0174 0A       		.uleb128 0xa
 5142 0175 00       		.byte	0x0
 5143 0176 00       		.byte	0x0
 5144 0177 1C       		.uleb128 0x1c
 5145 0178 34       		.uleb128 0x34
 5146 0179 00       		.byte	0x0
 5147 017a 03       		.uleb128 0x3
 5148 017b 08       		.uleb128 0x8
 5149 017c 3A       		.uleb128 0x3a
 5150 017d 0B       		.uleb128 0xb
 5151 017e 3B       		.uleb128 0x3b
 5152 017f 05       		.uleb128 0x5
 5153 0180 49       		.uleb128 0x49
 5154 0181 13       		.uleb128 0x13
 5155 0182 02       		.uleb128 0x2
 5156 0183 0A       		.uleb128 0xa
 5157 0184 00       		.byte	0x0
 5158 0185 00       		.byte	0x0
 5159 0186 1D       		.uleb128 0x1d
 5160 0187 2E       		.uleb128 0x2e
 5161 0188 01       		.byte	0x1
 5162 0189 3F       		.uleb128 0x3f
 5163 018a 0C       		.uleb128 0xc
 5164 018b 03       		.uleb128 0x3
 5165 018c 0E       		.uleb128 0xe
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 114


 5166 018d 3A       		.uleb128 0x3a
 5167 018e 0B       		.uleb128 0xb
 5168 018f 3B       		.uleb128 0x3b
 5169 0190 05       		.uleb128 0x5
 5170 0191 27       		.uleb128 0x27
 5171 0192 0C       		.uleb128 0xc
 5172 0193 11       		.uleb128 0x11
 5173 0194 01       		.uleb128 0x1
 5174 0195 12       		.uleb128 0x12
 5175 0196 01       		.uleb128 0x1
 5176 0197 40       		.uleb128 0x40
 5177 0198 06       		.uleb128 0x6
 5178 0199 01       		.uleb128 0x1
 5179 019a 13       		.uleb128 0x13
 5180 019b 00       		.byte	0x0
 5181 019c 00       		.byte	0x0
 5182 019d 1E       		.uleb128 0x1e
 5183 019e 34       		.uleb128 0x34
 5184 019f 00       		.byte	0x0
 5185 01a0 03       		.uleb128 0x3
 5186 01a1 0E       		.uleb128 0xe
 5187 01a2 3A       		.uleb128 0x3a
 5188 01a3 0B       		.uleb128 0xb
 5189 01a4 3B       		.uleb128 0x3b
 5190 01a5 05       		.uleb128 0x5
 5191 01a6 49       		.uleb128 0x49
 5192 01a7 13       		.uleb128 0x13
 5193 01a8 3F       		.uleb128 0x3f
 5194 01a9 0C       		.uleb128 0xc
 5195 01aa 3C       		.uleb128 0x3c
 5196 01ab 0C       		.uleb128 0xc
 5197 01ac 00       		.byte	0x0
 5198 01ad 00       		.byte	0x0
 5199 01ae 00       		.byte	0x0
 5200              		.section	.debug_pubnames,"",%progbits
 5201 0000 FB000000 		.4byte	0xfb
 5202 0004 0200     		.2byte	0x2
 5203 0006 00000000 		.4byte	.Ldebug_info0
 5204 000a 10130000 		.4byte	0x1310
 5205 000e 2B0D0000 		.4byte	0xd2b
 5206 0012 4F53466C 		.ascii	"OSFlagCreate\000"
 5206      61674372 
 5206      65617465 
 5206      00
 5207 001f 910D0000 		.4byte	0xd91
 5208 0023 4F53466C 		.ascii	"OSFlagDel\000"
 5208      61674465 
 5208      6C00
 5209 002d 400E0000 		.4byte	0xe40
 5210 0031 4F53466C 		.ascii	"OSFlagPend\000"
 5210      61675065 
 5210      6E6400
 5211 003c 0C0F0000 		.4byte	0xf0c
 5212 0040 4F53466C 		.ascii	"OSFlagPendAbort\000"
 5212      61675065 
 5212      6E644162 
 5212      6F727400 
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 115


 5213 0050 A20F0000 		.4byte	0xfa2
 5214 0054 4F53466C 		.ascii	"OSFlagPendGetFlagsRdy\000"
 5214      61675065 
 5214      6E644765 
 5214      74466C61 
 5214      67735264 
 5215 006a EE0F0000 		.4byte	0xfee
 5216 006e 4F53466C 		.ascii	"OSFlagPost\000"
 5216      6167506F 
 5216      737400
 5217 0079 66100000 		.4byte	0x1066
 5218 007d 4F535F46 		.ascii	"OS_FlagBlock\000"
 5218      6C616742 
 5218      6C6F636B 
 5218      00
 5219 008a CC100000 		.4byte	0x10cc
 5220 008e 4F535F46 		.ascii	"OS_FlagClr\000"
 5220      6C616743 
 5220      6C7200
 5221 0099 05110000 		.4byte	0x1105
 5222 009d 4F535F46 		.ascii	"OS_FlagInit\000"
 5222      6C616749 
 5222      6E697400 
 5223 00a9 2F110000 		.4byte	0x112f
 5224 00ad 4F535F46 		.ascii	"OS_FlagDbgListAdd\000"
 5224      6C616744 
 5224      62674C69 
 5224      73744164 
 5224      6400
 5225 00bf 59110000 		.4byte	0x1159
 5226 00c3 4F535F46 		.ascii	"OS_FlagDbgListRemove\000"
 5226      6C616744 
 5226      62674C69 
 5226      73745265 
 5226      6D6F7665 
 5227 00d8 A1110000 		.4byte	0x11a1
 5228 00dc 4F535F46 		.ascii	"OS_FlagPost\000"
 5228      6C616750 
 5228      6F737400 
 5229 00e8 82120000 		.4byte	0x1282
 5230 00ec 4F535F46 		.ascii	"OS_FlagTaskRdy\000"
 5230      6C616754 
 5230      61736B52 
 5230      647900
 5231 00fb 00000000 		.4byte	0x0
 5232              		.section	.debug_aranges,"",%progbits
 5233 0000 7C000000 		.4byte	0x7c
 5234 0004 0200     		.2byte	0x2
 5235 0006 00000000 		.4byte	.Ldebug_info0
 5236 000a 04       		.byte	0x4
 5237 000b 00       		.byte	0x0
 5238 000c 0000     		.2byte	0x0
 5239 000e 0000     		.2byte	0x0
 5240 0010 00000000 		.4byte	.LFB0
 5241 0014 A6000000 		.4byte	.LFE0-.LFB0
 5242 0018 00000000 		.4byte	.LFB1
 5243 001c 52010000 		.4byte	.LFE1-.LFB1
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 116


 5244 0020 00000000 		.4byte	.LFB2
 5245 0024 B2050000 		.4byte	.LFE2-.LFB2
 5246 0028 00000000 		.4byte	.LFB3
 5247 002c 06010000 		.4byte	.LFE3-.LFB3
 5248 0030 00000000 		.4byte	.LFB4
 5249 0034 5C000000 		.4byte	.LFE4-.LFB4
 5250 0038 00000000 		.4byte	.LFB5
 5251 003c 6E000000 		.4byte	.LFE5-.LFB5
 5252 0040 00000000 		.4byte	.LFB6
 5253 0044 58000000 		.4byte	.LFE6-.LFB6
 5254 0048 00000000 		.4byte	.LFB7
 5255 004c 3E000000 		.4byte	.LFE7-.LFB7
 5256 0050 00000000 		.4byte	.LFB8
 5257 0054 36000000 		.4byte	.LFE8-.LFB8
 5258 0058 00000000 		.4byte	.LFB9
 5259 005c 66000000 		.4byte	.LFE9-.LFB9
 5260 0060 00000000 		.4byte	.LFB10
 5261 0064 7C000000 		.4byte	.LFE10-.LFB10
 5262 0068 00000000 		.4byte	.LFB11
 5263 006c 08020000 		.4byte	.LFE11-.LFB11
 5264 0070 00000000 		.4byte	.LFB12
 5265 0074 86000000 		.4byte	.LFE12-.LFB12
 5266 0078 00000000 		.4byte	0x0
 5267 007c 00000000 		.4byte	0x0
 5268              		.section	.debug_ranges,"",%progbits
 5269              	.Ldebug_ranges0:
 5270 0000 00000000 		.4byte	.Ltext0
 5271 0004 00000000 		.4byte	.Letext0
 5272 0008 00000000 		.4byte	.LFB0
 5273 000c A6000000 		.4byte	.LFE0
 5274 0010 00000000 		.4byte	.LFB1
 5275 0014 52010000 		.4byte	.LFE1
 5276 0018 00000000 		.4byte	.LFB2
 5277 001c B2050000 		.4byte	.LFE2
 5278 0020 00000000 		.4byte	.LFB3
 5279 0024 06010000 		.4byte	.LFE3
 5280 0028 00000000 		.4byte	.LFB4
 5281 002c 5C000000 		.4byte	.LFE4
 5282 0030 00000000 		.4byte	.LFB5
 5283 0034 6E000000 		.4byte	.LFE5
 5284 0038 00000000 		.4byte	.LFB6
 5285 003c 58000000 		.4byte	.LFE6
 5286 0040 00000000 		.4byte	.LFB7
 5287 0044 3E000000 		.4byte	.LFE7
 5288 0048 00000000 		.4byte	.LFB8
 5289 004c 36000000 		.4byte	.LFE8
 5290 0050 00000000 		.4byte	.LFB9
 5291 0054 66000000 		.4byte	.LFE9
 5292 0058 00000000 		.4byte	.LFB10
 5293 005c 7C000000 		.4byte	.LFE10
 5294 0060 00000000 		.4byte	.LFB11
 5295 0064 08020000 		.4byte	.LFE11
 5296 0068 00000000 		.4byte	.LFB12
 5297 006c 86000000 		.4byte	.LFE12
 5298 0070 00000000 		.4byte	0x0
 5299 0074 00000000 		.4byte	0x0
 5300              		.section	.debug_str,"MS",%progbits,1
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 117


 5301              	.LASF223:
 5302 0000 6F735F74 		.ascii	"os_tcb\000"
 5302      636200
 5303              	.LASF105:
 5304 0007 4F535F45 		.ascii	"OS_ERR_PRIO_INVALID\000"
 5304      52525F50 
 5304      52494F5F 
 5304      494E5641 
 5304      4C494400 
 5305              	.LASF198:
 5306 001b 4F535F45 		.ascii	"OS_ERR\000"
 5306      525200
 5307              	.LASF22:
 5308 0022 4F535F43 		.ascii	"OS_CTX_SW_CTR\000"
 5308      54585F53 
 5308      575F4354 
 5308      5200
 5309              	.LASF320:
 5310 0030 474E5520 		.ascii	"GNU C 4.4.1\000"
 5310      4320342E 
 5310      342E3100 
 5311              	.LASF184:
 5312 003c 4F535F45 		.ascii	"OS_ERR_TMR_ISR\000"
 5312      52525F54 
 5312      4D525F49 
 5312      535200
 5313              	.LASF171:
 5314 004b 4F535F45 		.ascii	"OS_ERR_TIME_INVALID_MINUTES\000"
 5314      52525F54 
 5314      494D455F 
 5314      494E5641 
 5314      4C49445F 
 5315              	.LASF38:
 5316 0067 4F535F45 		.ascii	"OS_ERR_A\000"
 5316      52525F41 
 5316      00
 5317              	.LASF40:
 5318 0070 4F535F45 		.ascii	"OS_ERR_B\000"
 5318      52525F42 
 5318      00
 5319              	.LASF41:
 5320 0079 4F535F45 		.ascii	"OS_ERR_C\000"
 5320      52525F43 
 5320      00
 5321              	.LASF43:
 5322 0082 4F535F45 		.ascii	"OS_ERR_D\000"
 5322      52525F44 
 5322      00
 5323              	.LASF45:
 5324 008b 4F535F45 		.ascii	"OS_ERR_E\000"
 5324      52525F45 
 5324      00
 5325              	.LASF46:
 5326 0094 4F535F45 		.ascii	"OS_ERR_F\000"
 5326      52525F46 
 5326      00
 5327              	.LASF52:
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 118


 5328 009d 4F535F45 		.ascii	"OS_ERR_G\000"
 5328      52525F47 
 5328      00
 5329              	.LASF53:
 5330 00a6 4F535F45 		.ascii	"OS_ERR_H\000"
 5330      52525F48 
 5330      00
 5331              	.LASF54:
 5332 00af 4F535F45 		.ascii	"OS_ERR_I\000"
 5332      52525F49 
 5332      00
 5333              	.LASF61:
 5334 00b8 4F535F45 		.ascii	"OS_ERR_J\000"
 5334      52525F4A 
 5334      00
 5335              	.LASF62:
 5336 00c1 4F535F45 		.ascii	"OS_ERR_K\000"
 5336      52525F4B 
 5336      00
 5337              	.LASF63:
 5338 00ca 4F535F45 		.ascii	"OS_ERR_L\000"
 5338      52525F4C 
 5338      00
 5339              	.LASF65:
 5340 00d3 4F535F45 		.ascii	"OS_ERR_M\000"
 5340      52525F4D 
 5340      00
 5341              	.LASF81:
 5342 00dc 4F535F45 		.ascii	"OS_ERR_N\000"
 5342      52525F4E 
 5342      00
 5343              	.LASF84:
 5344 00e5 4F535F45 		.ascii	"OS_ERR_O\000"
 5344      52525F4F 
 5344      00
 5345              	.LASF92:
 5346 00ee 4F535F45 		.ascii	"OS_ERR_P\000"
 5346      52525F50 
 5346      00
 5347              	.LASF107:
 5348 00f7 4F535F45 		.ascii	"OS_ERR_Q\000"
 5348      52525F51 
 5348      00
 5349              	.LASF112:
 5350 0100 4F535F45 		.ascii	"OS_ERR_R\000"
 5350      52525F52 
 5350      00
 5351              	.LASF116:
 5352 0109 4F535F45 		.ascii	"OS_ERR_S\000"
 5352      52525F53 
 5352      00
 5353              	.LASF133:
 5354 0112 4F535F45 		.ascii	"OS_ERR_T\000"
 5354      52525F54 
 5354      00
 5355              	.LASF191:
 5356 011b 4F535F45 		.ascii	"OS_ERR_U\000"
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 119


 5356      52525F55 
 5356      00
 5357              	.LASF192:
 5358 0124 4F535F45 		.ascii	"OS_ERR_V\000"
 5358      52525F56 
 5358      00
 5359              	.LASF193:
 5360 012d 4F535F45 		.ascii	"OS_ERR_W\000"
 5360      52525F57 
 5360      00
 5361              	.LASF194:
 5362 0136 4F535F45 		.ascii	"OS_ERR_X\000"
 5362      52525F58 
 5362      00
 5363              	.LASF181:
 5364 013f 4F535F45 		.ascii	"OS_ERR_TMR_INVALID_PERIOD\000"
 5364      52525F54 
 5364      4D525F49 
 5364      4E56414C 
 5364      49445F50 
 5365              	.LASF323:
 5366 0159 6F735F65 		.ascii	"os_err\000"
 5366      727200
 5367              	.LASF285:
 5368 0160 666C6167 		.ascii	"flags\000"
 5368      7300
 5369              	.LASF219:
 5370 0166 4E627245 		.ascii	"NbrEntries\000"
 5370      6E747269 
 5370      657300
 5371              	.LASF208:
 5372 0171 6F735F66 		.ascii	"os_flag_grp\000"
 5372      6C61675F 
 5372      67727000 
 5373              	.LASF58:
 5374 017d 4F535F45 		.ascii	"OS_ERR_INT_Q_SIZE\000"
 5374      52525F49 
 5374      4E545F51 
 5374      5F53495A 
 5374      4500
 5375              	.LASF42:
 5376 018f 4F535F45 		.ascii	"OS_ERR_CREATE_ISR\000"
 5376      52525F43 
 5376      52454154 
 5376      455F4953 
 5376      5200
 5377              	.LASF21:
 5378 01a1 4F535F43 		.ascii	"OS_CPU_USAGE\000"
 5378      50555F55 
 5378      53414745 
 5378      00
 5379              	.LASF165:
 5380 01ae 4F535F45 		.ascii	"OS_ERR_TICK_STK_SIZE_INVALID\000"
 5380      52525F54 
 5380      49434B5F 
 5380      53544B5F 
 5380      53495A45 
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 120


 5381              	.LASF9:
 5382 01cb 4350555F 		.ascii	"CPU_INT32U\000"
 5382      494E5433 
 5382      325500
 5383              	.LASF304:
 5384 01d6 4F53466C 		.ascii	"OSFlagCreate\000"
 5384      61674372 
 5384      65617465 
 5384      00
 5385              	.LASF319:
 5386 01e3 4F535443 		.ascii	"OSTCBCurPtr\000"
 5386      42437572 
 5386      50747200 
 5387              	.LASF130:
 5388 01ef 4F535F45 		.ascii	"OS_ERR_STK_INVALID\000"
 5388      52525F53 
 5388      544B5F49 
 5388      4E56414C 
 5388      494400
 5389              	.LASF253:
 5390 0202 466C6167 		.ascii	"FlagsOpt\000"
 5390      734F7074 
 5390      00
 5391              	.LASF146:
 5392 020b 4F535F45 		.ascii	"OS_ERR_TASK_RESUME_ISR\000"
 5392      52525F54 
 5392      41534B5F 
 5392      52455355 
 5392      4D455F49 
 5393              	.LASF100:
 5394 0222 4F535F45 		.ascii	"OS_ERR_PEND_WOULD_BLOCK\000"
 5394      52525F50 
 5394      454E445F 
 5394      574F554C 
 5394      445F424C 
 5395              	.LASF134:
 5396 023a 4F535F45 		.ascii	"OS_ERR_TASK_CHANGE_PRIO_ISR\000"
 5396      52525F54 
 5396      41534B5F 
 5396      4348414E 
 5396      47455F50 
 5397              	.LASF124:
 5398 0256 4F535F45 		.ascii	"OS_ERR_STAT_RESET_ISR\000"
 5398      52525F53 
 5398      5441545F 
 5398      52455345 
 5398      545F4953 
 5399              	.LASF99:
 5400 026c 4F535F45 		.ascii	"OS_ERR_PEND_LOCKED\000"
 5400      52525F50 
 5400      454E445F 
 5400      4C4F434B 
 5400      454400
 5401              	.LASF28:
 5402 027f 4F535F4F 		.ascii	"OS_OBJ_QTY\000"
 5402      424A5F51 
 5402      545900
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 121


 5403              	.LASF144:
 5404 028a 4F535F45 		.ascii	"OS_ERR_TASK_NOT_SUSPENDED\000"
 5404      52525F54 
 5404      41534B5F 
 5404      4E4F545F 
 5404      53555350 
 5405              	.LASF306:
 5406 02a4 4F535F46 		.ascii	"OS_FlagClr\000"
 5406      6C616743 
 5406      6C7200
 5407              	.LASF142:
 5408 02af 4F535F45 		.ascii	"OS_ERR_TASK_NOT_DLY\000"
 5408      52525F54 
 5408      41534B5F 
 5408      4E4F545F 
 5408      444C5900 
 5409              	.LASF203:
 5410 02c3 44626750 		.ascii	"DbgPrevPtr\000"
 5410      72657650 
 5410      747200
 5411              	.LASF56:
 5412 02ce 4F535F45 		.ascii	"OS_ERR_INT_Q\000"
 5412      52525F49 
 5412      4E545F51 
 5412      00
 5413              	.LASF204:
 5414 02db 4462674E 		.ascii	"DbgNextPtr\000"
 5414      65787450 
 5414      747200
 5415              	.LASF302:
 5416 02e6 4F53466C 		.ascii	"OSFlagPost\000"
 5416      6167506F 
 5416      737400
 5417              	.LASF156:
 5418 02f1 4F535F45 		.ascii	"OS_ERR_TASK_WAITING\000"
 5418      52525F54 
 5418      41534B5F 
 5418      57414954 
 5418      494E4700 
 5419              	.LASF39:
 5420 0305 4F535F45 		.ascii	"OS_ERR_ACCEPT_ISR\000"
 5420      52525F41 
 5420      43434550 
 5420      545F4953 
 5420      5200
 5421              	.LASF154:
 5422 0317 4F535F45 		.ascii	"OS_ERR_TASK_SUSPEND_ISR\000"
 5422      52525F54 
 5422      41534B5F 
 5422      53555350 
 5422      454E445F 
 5423              	.LASF298:
 5424 032f 6D6F6465 		.ascii	"mode\000"
 5424      00
 5425              	.LASF80:
 5426 0334 4F535F45 		.ascii	"OS_ERR_MUTEX_NESTING\000"
 5426      52525F4D 
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 122


 5426      55544558 
 5426      5F4E4553 
 5426      54494E47 
 5427              	.LASF290:
 5428 0349 705F7065 		.ascii	"p_pend_list\000"
 5428      6E645F6C 
 5428      69737400 
 5429              	.LASF182:
 5430 0355 4F535F45 		.ascii	"OS_ERR_TMR_INVALID_STATE\000"
 5430      52525F54 
 5430      4D525F49 
 5430      4E56414C 
 5430      49445F53 
 5431              	.LASF235:
 5432 036e 50656E64 		.ascii	"PendOn\000"
 5432      4F6E00
 5433              	.LASF240:
 5434 0375 50656E64 		.ascii	"PendDataTblEntries\000"
 5434      44617461 
 5434      54626C45 
 5434      6E747269 
 5434      657300
 5435              	.LASF283:
 5436 0388 705F6772 		.ascii	"p_grp\000"
 5436      7000
 5437              	.LASF85:
 5438 038e 4F535F45 		.ascii	"OS_ERR_OBJ_CREATED\000"
 5438      52525F4F 
 5438      424A5F43 
 5438      52454154 
 5438      454400
 5439              	.LASF280:
 5440 03a1 5461696C 		.ascii	"TailPtr\000"
 5440      50747200 
 5441              	.LASF152:
 5442 03a9 4F535F45 		.ascii	"OS_ERR_TASK_SUSPEND_IDLE\000"
 5442      52525F54 
 5442      41534B5F 
 5442      53555350 
 5442      454E445F 
 5443              	.LASF57:
 5444 03c2 4F535F45 		.ascii	"OS_ERR_INT_Q_FULL\000"
 5444      52525F49 
 5444      4E545F51 
 5444      5F46554C 
 5444      4C00
 5445              	.LASF243:
 5446 03d4 5469636B 		.ascii	"TickCtrMatch\000"
 5446      4374724D 
 5446      61746368 
 5446      00
 5447              	.LASF274:
 5448 03e1 5264794D 		.ascii	"RdyMsgPtr\000"
 5448      73675074 
 5448      7200
 5449              	.LASF282:
 5450 03eb 6F735F70 		.ascii	"os_pend_obj\000"
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 123


 5450      656E645F 
 5450      6F626A00 
 5451              	.LASF55:
 5452 03f7 4F535F45 		.ascii	"OS_ERR_ILLEGAL_CREATE_RUN_TIME\000"
 5452      52525F49 
 5452      4C4C4547 
 5452      414C5F43 
 5452      52454154 
 5453              	.LASF251:
 5454 0416 466C6167 		.ascii	"FlagsPend\000"
 5454      7350656E 
 5454      6400
 5455              	.LASF180:
 5456 0420 4F535F45 		.ascii	"OS_ERR_TMR_INVALID_DLY\000"
 5456      52525F54 
 5456      4D525F49 
 5456      4E56414C 
 5456      49445F44 
 5457              	.LASF257:
 5458 0437 43747853 		.ascii	"CtxSwCtr\000"
 5458      77437472 
 5458      00
 5459              	.LASF147:
 5460 0440 4F535F45 		.ascii	"OS_ERR_TASK_RESUME_PRIO\000"
 5460      52525F54 
 5460      41534B5F 
 5460      52455355 
 5460      4D455F50 
 5461              	.LASF206:
 5462 0458 466C6167 		.ascii	"Flags\000"
 5462      7300
 5463              	.LASF31:
 5464 045e 4F535F50 		.ascii	"OS_PRIO\000"
 5464      52494F00 
 5465              	.LASF13:
 5466 0466 666C6F61 		.ascii	"float\000"
 5466      7400
 5467              	.LASF101:
 5468 046c 4F535F45 		.ascii	"OS_ERR_POST_NULL_PTR\000"
 5468      52525F50 
 5468      4F53545F 
 5468      4E554C4C 
 5468      5F505452 
 5469              	.LASF83:
 5470 0481 4F535F45 		.ascii	"OS_ERR_NO_MORE_ID_AVAIL\000"
 5470      52525F4E 
 5470      4F5F4D4F 
 5470      52455F49 
 5470      445F4156 
 5471              	.LASF266:
 5472 0499 4F535F54 		.ascii	"OS_TICK_SPOKE\000"
 5472      49434B5F 
 5472      53504F4B 
 5472      4500
 5473              	.LASF73:
 5474 04a7 4F535F45 		.ascii	"OS_ERR_MEM_INVALID_P_DATA\000"
 5474      52525F4D 
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 124


 5474      454D5F49 
 5474      4E56414C 
 5474      49445F50 
 5475              	.LASF287:
 5476 04c1 6370755F 		.ascii	"cpu_sr\000"
 5476      737200
 5477              	.LASF185:
 5478 04c8 4F535F45 		.ascii	"OS_ERR_TMR_NO_CALLBACK\000"
 5478      52525F54 
 5478      4D525F4E 
 5478      4F5F4341 
 5478      4C4C4241 
 5479              	.LASF178:
 5480 04df 4F535F45 		.ascii	"OS_ERR_TMR_INACTIVE\000"
 5480      52525F54 
 5480      4D525F49 
 5480      4E414354 
 5480      49564500 
 5481              	.LASF310:
 5482 04f3 705F6772 		.ascii	"p_grp_next\000"
 5482      705F6E65 
 5482      787400
 5483              	.LASF158:
 5484 04fe 4F535F45 		.ascii	"OS_ERR_TLS_ID_INVALID\000"
 5484      52525F54 
 5484      4C535F49 
 5484      445F494E 
 5484      56414C49 
 5485              	.LASF11:
 5486 0514 6C6F6E67 		.ascii	"long long unsigned int\000"
 5486      206C6F6E 
 5486      6720756E 
 5486      7369676E 
 5486      65642069 
 5487              	.LASF149:
 5488 052b 4F535F45 		.ascii	"OS_ERR_TASK_RUNNING\000"
 5488      52525F54 
 5488      41534B5F 
 5488      52554E4E 
 5488      494E4700 
 5489              	.LASF264:
 5490 053f 53746B55 		.ascii	"StkUsed\000"
 5490      73656400 
 5491              	.LASF183:
 5492 0547 4F535F45 		.ascii	"OS_ERR_TMR_INVALID\000"
 5492      52525F54 
 5492      4D525F49 
 5492      4E56414C 
 5492      494400
 5493              	.LASF269:
 5494 055a 4F535F50 		.ascii	"OS_PEND_DATA\000"
 5494      454E445F 
 5494      44415441 
 5494      00
 5495              	.LASF153:
 5496 0567 4F535F45 		.ascii	"OS_ERR_TASK_SUSPEND_INT_HANDLER\000"
 5496      52525F54 
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 125


 5496      41534B5F 
 5496      53555350 
 5496      454E445F 
 5497              	.LASF138:
 5498 0587 4F535F45 		.ascii	"OS_ERR_TASK_DEL_INVALID\000"
 5498      52525F54 
 5498      41534B5F 
 5498      44454C5F 
 5498      494E5641 
 5499              	.LASF188:
 5500 059f 4F535F45 		.ascii	"OS_ERR_TMR_STK_INVALID\000"
 5500      52525F54 
 5500      4D525F53 
 5500      544B5F49 
 5500      4E56414C 
 5501              	.LASF300:
 5502 05b6 4F53466C 		.ascii	"OSFlagPendAbort\000"
 5502      61675065 
 5502      6E644162 
 5502      6F727400 
 5503              	.LASF4:
 5504 05c6 4350555F 		.ascii	"CPU_INT08U\000"
 5504      494E5430 
 5504      385500
 5505              	.LASF209:
 5506 05d1 6F735F6D 		.ascii	"os_msg\000"
 5506      736700
 5507              	.LASF157:
 5508 05d8 4F535F45 		.ascii	"OS_ERR_TCB_INVALID\000"
 5508      52525F54 
 5508      43425F49 
 5508      4E56414C 
 5508      494400
 5509              	.LASF239:
 5510 05eb 53746B53 		.ascii	"StkSize\000"
 5510      697A6500 
 5511              	.LASF231:
 5512 05f3 53746B42 		.ascii	"StkBasePtr\000"
 5512      61736550 
 5512      747200
 5513              	.LASF109:
 5514 05fe 4F535F45 		.ascii	"OS_ERR_Q_EMPTY\000"
 5514      52525F51 
 5514      5F454D50 
 5514      545900
 5515              	.LASF173:
 5516 060d 4F535F45 		.ascii	"OS_ERR_TIME_INVALID_MILLISECONDS\000"
 5516      52525F54 
 5516      494D455F 
 5516      494E5641 
 5516      4C49445F 
 5517              	.LASF32:
 5518 062e 4F535F52 		.ascii	"OS_REG\000"
 5518      454700
 5519              	.LASF309:
 5520 0635 4F535F46 		.ascii	"OS_FlagDbgListRemove\000"
 5520      6C616744 
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 126


 5520      62674C69 
 5520      73745265 
 5520      6D6F7665 
 5521              	.LASF82:
 5522 064a 4F535F45 		.ascii	"OS_ERR_NAME\000"
 5522      52525F4E 
 5522      414D4500 
 5523              	.LASF246:
 5524 0656 54696D65 		.ascii	"TimeQuantaCtr\000"
 5524      5175616E 
 5524      74614374 
 5524      7200
 5525              	.LASF35:
 5526 0664 4F535F53 		.ascii	"OS_STATUS\000"
 5526      54415455 
 5526      5300
 5527              	.LASF237:
 5528 066e 5461736B 		.ascii	"TaskState\000"
 5528      53746174 
 5528      6500
 5529              	.LASF162:
 5530 0678 4F535F45 		.ascii	"OS_ERR_TLS_DESTRUCT_ASSIGNED\000"
 5530      52525F54 
 5530      4C535F44 
 5530      45535452 
 5530      5543545F 
 5531              	.LASF78:
 5532 0695 4F535F45 		.ascii	"OS_ERR_MUTEX_NOT_OWNER\000"
 5532      52525F4D 
 5532      55544558 
 5532      5F4E4F54 
 5532      5F4F574E 
 5533              	.LASF26:
 5534 06ac 4F535F4D 		.ascii	"OS_MSG_SIZE\000"
 5534      53475F53 
 5534      495A4500 
 5535              	.LASF170:
 5536 06b8 4F535F45 		.ascii	"OS_ERR_TIME_INVALID_HOURS\000"
 5536      52525F54 
 5536      494D455F 
 5536      494E5641 
 5536      4C49445F 
 5537              	.LASF186:
 5538 06d2 4F535F45 		.ascii	"OS_ERR_TMR_NON_AVAIL\000"
 5538      52525F54 
 5538      4D525F4E 
 5538      4F4E5F41 
 5538      5641494C 
 5539              	.LASF0:
 5540 06e7 4350555F 		.ascii	"CPU_CHAR\000"
 5540      43484152 
 5540      00
 5541              	.LASF135:
 5542 06f0 4F535F45 		.ascii	"OS_ERR_TASK_CREATE_ISR\000"
 5542      52525F54 
 5542      41534B5F 
 5542      43524541 
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 127


 5542      54455F49 
 5543              	.LASF17:
 5544 0707 4350555F 		.ascii	"CPU_STK_SIZE\000"
 5544      53544B5F 
 5544      53495A45 
 5544      00
 5545              	.LASF307:
 5546 0714 4F535F46 		.ascii	"OS_FlagInit\000"
 5546      6C616749 
 5546      6E697400 
 5547              	.LASF25:
 5548 0720 4F535F4D 		.ascii	"OS_MSG_QTY\000"
 5548      53475F51 
 5548      545900
 5549              	.LASF91:
 5550 072b 4F535F45 		.ascii	"OS_ERR_OS_RUNNING\000"
 5550      52525F4F 
 5550      535F5255 
 5550      4E4E494E 
 5550      4700
 5551              	.LASF265:
 5552 073d 53746B46 		.ascii	"StkFree\000"
 5552      72656500 
 5553              	.LASF242:
 5554 0745 5469636B 		.ascii	"TickCtrPrev\000"
 5554      43747250 
 5554      72657600 
 5555              	.LASF218:
 5556 0751 4E627245 		.ascii	"NbrEntriesSize\000"
 5556      6E747269 
 5556      65735369 
 5556      7A6500
 5557              	.LASF176:
 5558 0760 4F535F45 		.ascii	"OS_ERR_TIME_ZERO_DLY\000"
 5558      52525F54 
 5558      494D455F 
 5558      5A45524F 
 5558      5F444C59 
 5559              	.LASF229:
 5560 0775 5469636B 		.ascii	"TickPrevPtr\000"
 5560      50726576 
 5560      50747200 
 5561              	.LASF252:
 5562 0781 466C6167 		.ascii	"FlagsRdy\000"
 5562      73526479 
 5562      00
 5563              	.LASF126:
 5564 078a 4F535F45 		.ascii	"OS_ERR_STAT_STK_INVALID\000"
 5564      52525F53 
 5564      5441545F 
 5564      53544B5F 
 5564      494E5641 
 5565              	.LASF48:
 5566 07a2 4F535F45 		.ascii	"OS_ERR_FLAG_GRP_DEPLETED\000"
 5566      52525F46 
 5566      4C41475F 
 5566      4752505F 
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 128


 5566      4445504C 
 5567              	.LASF314:
 5568 07bb 4F535F46 		.ascii	"OS_FlagTaskRdy\000"
 5568      6C616754 
 5568      61736B52 
 5568      647900
 5569              	.LASF69:
 5570 07ca 4F535F45 		.ascii	"OS_ERR_MEM_INVALID_BLKS\000"
 5570      52525F4D 
 5570      454D5F49 
 5570      4E56414C 
 5570      49445F42 
 5571              	.LASF286:
 5572 07e2 705F6572 		.ascii	"p_err\000"
 5572      7200
 5573              	.LASF249:
 5574 07e8 4D736751 		.ascii	"MsgQPendTimeMax\000"
 5574      50656E64 
 5574      54696D65 
 5574      4D617800 
 5575              	.LASF248:
 5576 07f8 4D736751 		.ascii	"MsgQPendTime\000"
 5576      50656E64 
 5576      54696D65 
 5576      00
 5577              	.LASF207:
 5578 0805 4F535F4D 		.ascii	"OS_MSG\000"
 5578      534700
 5579              	.LASF284:
 5580 080c 705F6E61 		.ascii	"p_name\000"
 5580      6D6500
 5581              	.LASF179:
 5582 0813 4F535F45 		.ascii	"OS_ERR_TMR_INVALID_DEST\000"
 5582      52525F54 
 5582      4D525F49 
 5582      4E56414C 
 5582      49445F44 
 5583              	.LASF118:
 5584 082b 4F535F45 		.ascii	"OS_ERR_SCHED_LOCK_ISR\000"
 5584      52525F53 
 5584      43484544 
 5584      5F4C4F43 
 5584      4B5F4953 
 5585              	.LASF44:
 5586 0841 4F535F45 		.ascii	"OS_ERR_DEL_ISR\000"
 5586      52525F44 
 5586      454C5F49 
 5586      535200
 5587              	.LASF110:
 5588 0850 4F535F45 		.ascii	"OS_ERR_Q_MAX\000"
 5588      52525F51 
 5588      5F4D4158 
 5588      00
 5589              	.LASF289:
 5590 085d 705F7065 		.ascii	"p_pend_data\000"
 5590      6E645F64 
 5590      61746100 
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 129


 5591              	.LASF227:
 5592 0869 50726576 		.ascii	"PrevPtr\000"
 5592      50747200 
 5593              	.LASF2:
 5594 0871 63686172 		.ascii	"char\000"
 5594      00
 5595              	.LASF29:
 5596 0876 4F535F4F 		.ascii	"OS_OBJ_TYPE\000"
 5596      424A5F54 
 5596      59504500 
 5597              	.LASF161:
 5598 0882 4F535F45 		.ascii	"OS_ERR_TLS_NOT_EN\000"
 5598      52525F54 
 5598      4C535F4E 
 5598      4F545F45 
 5598      4E00
 5599              	.LASF89:
 5600 0894 4F535F45 		.ascii	"OS_ERR_OPT_INVALID\000"
 5600      52525F4F 
 5600      50545F49 
 5600      4E56414C 
 5600      494400
 5601              	.LASF18:
 5602 08a7 4350555F 		.ascii	"CPU_SR\000"
 5602      535200
 5603              	.LASF305:
 5604 08ae 4F535F46 		.ascii	"OS_FlagBlock\000"
 5604      6C616742 
 5604      6C6F636B 
 5604      00
 5605              	.LASF117:
 5606 08bb 4F535F45 		.ascii	"OS_ERR_SCHED_INVALID_TIME_SLICE\000"
 5606      52525F53 
 5606      43484544 
 5606      5F494E56 
 5606      414C4944 
 5607              	.LASF247:
 5608 08db 4D736751 		.ascii	"MsgQ\000"
 5608      00
 5609              	.LASF312:
 5610 08e0 4F535F46 		.ascii	"OS_FlagPost\000"
 5610      6C616750 
 5610      6F737400 
 5611              	.LASF232:
 5612 08ec 5461736B 		.ascii	"TaskEntryAddr\000"
 5612      456E7472 
 5612      79416464 
 5612      7200
 5613              	.LASF125:
 5614 08fa 4F535F45 		.ascii	"OS_ERR_STAT_PRIO_INVALID\000"
 5614      52525F53 
 5614      5441545F 
 5614      5052494F 
 5614      5F494E56 
 5615              	.LASF311:
 5616 0913 705F6772 		.ascii	"p_grp_prev\000"
 5616      705F7072 
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 130


 5616      657600
 5617              	.LASF174:
 5618 091e 4F535F45 		.ascii	"OS_ERR_TIME_NOT_DLY\000"
 5618      52525F54 
 5618      494D455F 
 5618      4E4F545F 
 5618      444C5900 
 5619              	.LASF201:
 5620 0932 4E616D65 		.ascii	"NamePtr\000"
 5620      50747200 
 5621              	.LASF236:
 5622 093a 50656E64 		.ascii	"PendStatus\000"
 5622      53746174 
 5622      757300
 5623              	.LASF321:
 5624 0945 433A5C4D 		.ascii	"C:\\Micrium\\Software\\uCOS-III\\Source\\os_flag.c\000"
 5624      69637269 
 5624      756D5C53 
 5624      6F667477 
 5624      6172655C 
 5625              	.LASF200:
 5626 0973 54797065 		.ascii	"Type\000"
 5626      00
 5627              	.LASF196:
 5628 0978 4F535F45 		.ascii	"OS_ERR_YIELD_ISR\000"
 5628      52525F59 
 5628      49454C44 
 5628      5F495352 
 5628      00
 5629              	.LASF86:
 5630 0989 4F535F45 		.ascii	"OS_ERR_OBJ_DEL\000"
 5630      52525F4F 
 5630      424A5F44 
 5630      454C00
 5631              	.LASF293:
 5632 0998 4F53466C 		.ascii	"OSFlagPend\000"
 5632      61675065 
 5632      6E6400
 5633              	.LASF20:
 5634 09a3 4350555F 		.ascii	"CPU_TS\000"
 5634      545300
 5635              	.LASF12:
 5636 09aa 6C6F6E67 		.ascii	"long long int\000"
 5636      206C6F6E 
 5636      6720696E 
 5636      7400
 5637              	.LASF292:
 5638 09b8 4F53466C 		.ascii	"OSFlagDel\000"
 5638      61674465 
 5638      6C00
 5639              	.LASF50:
 5640 09c2 4F535F45 		.ascii	"OS_ERR_FLAG_PEND_OPT\000"
 5640      52525F46 
 5640      4C41475F 
 5640      50454E44 
 5640      5F4F5054 
 5641              	.LASF224:
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 131


 5642 09d7 53746B50 		.ascii	"StkPtr\000"
 5642      747200
 5643              	.LASF267:
 5644 09de 6F735F74 		.ascii	"os_tick_spoke\000"
 5644      69636B5F 
 5644      73706F6B 
 5644      6500
 5645              	.LASF291:
 5646 09ec 705F7463 		.ascii	"p_tcb\000"
 5646      6200
 5647              	.LASF111:
 5648 09f2 4F535F45 		.ascii	"OS_ERR_Q_SIZE\000"
 5648      52525F51 
 5648      5F53495A 
 5648      4500
 5649              	.LASF259:
 5650 0a00 4379636C 		.ascii	"CyclesStart\000"
 5650      65735374 
 5650      61727400 
 5651              	.LASF299:
 5652 0a0c 70656E64 		.ascii	"pend_data\000"
 5652      5F646174 
 5652      6100
 5653              	.LASF271:
 5654 0a16 54434250 		.ascii	"TCBPtr\000"
 5654      747200
 5655              	.LASF96:
 5656 0a1d 4F535F45 		.ascii	"OS_ERR_PEND_ABORT_SELF\000"
 5656      52525F50 
 5656      454E445F 
 5656      41424F52 
 5656      545F5345 
 5657              	.LASF6:
 5658 0a34 4350555F 		.ascii	"CPU_INT16U\000"
 5658      494E5431 
 5658      365500
 5659              	.LASF115:
 5660 0a3f 4F535F45 		.ascii	"OS_ERR_ROUND_ROBIN_DISABLED\000"
 5660      52525F52 
 5660      4F554E44 
 5660      5F524F42 
 5660      494E5F44 
 5661              	.LASF296:
 5662 0a5b 636F6E73 		.ascii	"consume\000"
 5662      756D6500 
 5663              	.LASF70:
 5664 0a63 4F535F45 		.ascii	"OS_ERR_MEM_INVALID_PART\000"
 5664      52525F4D 
 5664      454D5F49 
 5664      4E56414C 
 5664      49445F50 
 5665              	.LASF87:
 5666 0a7b 4F535F45 		.ascii	"OS_ERR_OBJ_PTR_NULL\000"
 5666      52525F4F 
 5666      424A5F50 
 5666      54525F4E 
 5666      554C4C00 
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 132


 5667              	.LASF113:
 5668 0a8f 4F535F45 		.ascii	"OS_ERR_REG_ID_INVALID\000"
 5668      52525F52 
 5668      45475F49 
 5668      445F494E 
 5668      56414C49 
 5669              	.LASF288:
 5670 0aa5 6E62725F 		.ascii	"nbr_tasks\000"
 5670      7461736B 
 5670      7300
 5671              	.LASF36:
 5672 0aaf 4F535F54 		.ascii	"OS_TICK\000"
 5672      49434B00 
 5673              	.LASF67:
 5674 0ab7 4F535F45 		.ascii	"OS_ERR_MEM_FULL\000"
 5674      52525F4D 
 5674      454D5F46 
 5674      554C4C00 
 5675              	.LASF141:
 5676 0ac7 4F535F45 		.ascii	"OS_ERR_TASK_NO_MORE_TCB\000"
 5676      52525F54 
 5676      41534B5F 
 5676      4E4F5F4D 
 5676      4F52455F 
 5677              	.LASF72:
 5678 0adf 4F535F45 		.ascii	"OS_ERR_MEM_INVALID_P_MEM\000"
 5678      52525F4D 
 5678      454D5F49 
 5678      4E56414C 
 5678      49445F50 
 5679              	.LASF19:
 5680 0af8 4350555F 		.ascii	"CPU_TS32\000"
 5680      54533332 
 5680      00
 5681              	.LASF254:
 5682 0b01 53757370 		.ascii	"SuspendCtr\000"
 5682      656E6443 
 5682      747200
 5683              	.LASF226:
 5684 0b0c 53746B4C 		.ascii	"StkLimitPtr\000"
 5684      696D6974 
 5684      50747200 
 5685              	.LASF258:
 5686 0b18 4379636C 		.ascii	"CyclesDelta\000"
 5686      65734465 
 5686      6C746100 
 5687              	.LASF33:
 5688 0b24 4F535F53 		.ascii	"OS_SEM_CTR\000"
 5688      454D5F43 
 5688      545200
 5689              	.LASF189:
 5690 0b2f 4F535F45 		.ascii	"OS_ERR_TMR_STK_SIZE_INVALID\000"
 5690      52525F54 
 5690      4D525F53 
 5690      544B5F53 
 5690      495A455F 
 5691              	.LASF166:
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 133


 5692 0b4b 4F535F45 		.ascii	"OS_ERR_TICK_WHEEL_SIZE\000"
 5692      52525F54 
 5692      49434B5F 
 5692      57484545 
 5692      4C5F5349 
 5693              	.LASF228:
 5694 0b62 5469636B 		.ascii	"TickNextPtr\000"
 5694      4E657874 
 5694      50747200 
 5695              	.LASF143:
 5696 0b6e 4F535F45 		.ascii	"OS_ERR_TASK_NOT_EXIST\000"
 5696      52525F54 
 5696      41534B5F 
 5696      4E4F545F 
 5696      45584953 
 5697              	.LASF313:
 5698 0b84 705F7065 		.ascii	"p_pend_data_next\000"
 5698      6E645F64 
 5698      6174615F 
 5698      6E657874 
 5698      00
 5699              	.LASF140:
 5700 0b95 4F535F45 		.ascii	"OS_ERR_TASK_INVALID\000"
 5700      52525F54 
 5700      41534B5F 
 5700      494E5641 
 5700      4C494400 
 5701              	.LASF187:
 5702 0ba9 4F535F45 		.ascii	"OS_ERR_TMR_PRIO_INVALID\000"
 5702      52525F54 
 5702      4D525F50 
 5702      52494F5F 
 5702      494E5641 
 5703              	.LASF295:
 5704 0bc1 705F7473 		.ascii	"p_ts\000"
 5704      00
 5705              	.LASF155:
 5706 0bc6 4F535F45 		.ascii	"OS_ERR_TASK_SUSPEND_PRIO\000"
 5706      52525F54 
 5706      41534B5F 
 5706      53555350 
 5706      454E445F 
 5707              	.LASF273:
 5708 0bdf 5264794F 		.ascii	"RdyObjPtr\000"
 5708      626A5074 
 5708      7200
 5709              	.LASF60:
 5710 0be9 4F535F45 		.ascii	"OS_ERR_INT_Q_STK_SIZE_INVALID\000"
 5710      52525F49 
 5710      4E545F51 
 5710      5F53544B 
 5710      5F53495A 
 5711              	.LASF159:
 5712 0c07 4F535F45 		.ascii	"OS_ERR_TLS_ISR\000"
 5712      52525F54 
 5712      4C535F49 
 5712      535200
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 134


 5713              	.LASF139:
 5714 0c16 4F535F45 		.ascii	"OS_ERR_TASK_DEL_ISR\000"
 5714      52525F54 
 5714      41534B5F 
 5714      44454C5F 
 5714      49535200 
 5715              	.LASF262:
 5716 0c2a 53656D50 		.ascii	"SemPendTime\000"
 5716      656E6454 
 5716      696D6500 
 5717              	.LASF106:
 5718 0c36 4F535F45 		.ascii	"OS_ERR_PTR_INVALID\000"
 5718      52525F50 
 5718      54525F49 
 5718      4E56414C 
 5718      494400
 5719              	.LASF128:
 5720 0c49 4F535F45 		.ascii	"OS_ERR_STATE_INVALID\000"
 5720      52525F53 
 5720      54415445 
 5720      5F494E56 
 5720      414C4944 
 5721              	.LASF210:
 5722 0c5e 4E657874 		.ascii	"NextPtr\000"
 5722      50747200 
 5723              	.LASF90:
 5724 0c66 4F535F45 		.ascii	"OS_ERR_OS_NOT_RUNNING\000"
 5724      52525F4F 
 5724      535F4E4F 
 5724      545F5255 
 5724      4E4E494E 
 5725              	.LASF315:
 5726 0c7c 4F53496E 		.ascii	"OSIntNestingCtr\000"
 5726      744E6573 
 5726      74696E67 
 5726      43747200 
 5727              	.LASF175:
 5728 0c8c 4F535F45 		.ascii	"OS_ERR_TIME_SET_ISR\000"
 5728      52525F54 
 5728      494D455F 
 5728      5345545F 
 5728      49535200 
 5729              	.LASF114:
 5730 0ca0 4F535F45 		.ascii	"OS_ERR_ROUND_ROBIN_1\000"
 5730      52525F52 
 5730      4F554E44 
 5730      5F524F42 
 5730      494E5F31 
 5731              	.LASF71:
 5732 0cb5 4F535F45 		.ascii	"OS_ERR_MEM_INVALID_P_BLK\000"
 5732      52525F4D 
 5732      454D5F49 
 5732      4E56414C 
 5732      49445F50 
 5733              	.LASF68:
 5734 0cce 4F535F45 		.ascii	"OS_ERR_MEM_INVALID_P_ADDR\000"
 5734      52525F4D 
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 135


 5734      454D5F49 
 5734      4E56414C 
 5734      49445F50 
 5735              	.LASF276:
 5736 0ce8 52647954 		.ascii	"RdyTS\000"
 5736      5300
 5737              	.LASF64:
 5738 0cee 4F535F45 		.ascii	"OS_ERR_LOCK_NESTING_OVF\000"
 5738      52525F4C 
 5738      4F434B5F 
 5738      4E455354 
 5738      494E475F 
 5739              	.LASF150:
 5740 0d06 4F535F45 		.ascii	"OS_ERR_TASK_STK_CHK_ISR\000"
 5740      52525F54 
 5740      41534B5F 
 5740      53544B5F 
 5740      43484B5F 
 5741              	.LASF8:
 5742 0d1e 73686F72 		.ascii	"short int\000"
 5742      7420696E 
 5742      7400
 5743              	.LASF275:
 5744 0d28 5264794D 		.ascii	"RdyMsgSize\000"
 5744      73675369 
 5744      7A6500
 5745              	.LASF76:
 5746 0d33 4F535F45 		.ascii	"OS_ERR_MSG_POOL_EMPTY\000"
 5746      52525F4D 
 5746      53475F50 
 5746      4F4F4C5F 
 5746      454D5054 
 5747              	.LASF214:
 5748 0d49 4F535F4D 		.ascii	"OS_MSG_Q\000"
 5748      53475F51 
 5748      00
 5749              	.LASF121:
 5750 0d52 4F535F45 		.ascii	"OS_ERR_SCHED_UNLOCK_ISR\000"
 5750      52525F53 
 5750      43484544 
 5750      5F554E4C 
 5750      4F434B5F 
 5751              	.LASF263:
 5752 0d6a 53656D50 		.ascii	"SemPendTimeMax\000"
 5752      656E6454 
 5752      696D654D 
 5752      617800
 5753              	.LASF261:
 5754 0d79 4379636C 		.ascii	"CyclesTotalPrev\000"
 5754      6573546F 
 5754      74616C50 
 5754      72657600 
 5755              	.LASF164:
 5756 0d89 4F535F45 		.ascii	"OS_ERR_TICK_STK_INVALID\000"
 5756      52525F54 
 5756      49434B5F 
 5756      53544B5F 
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 136


 5756      494E5641 
 5757              	.LASF77:
 5758 0da1 4F535F45 		.ascii	"OS_ERR_MSG_POOL_NULL_PTR\000"
 5758      52525F4D 
 5758      53475F50 
 5758      4F4F4C5F 
 5758      4E554C4C 
 5759              	.LASF27:
 5760 0dba 4F535F4E 		.ascii	"OS_NESTING_CTR\000"
 5760      45535449 
 5760      4E475F43 
 5760      545200
 5761              	.LASF260:
 5762 0dc9 4379636C 		.ascii	"CyclesTotal\000"
 5762      6573546F 
 5762      74616C00 
 5763              	.LASF281:
 5764 0dd5 4F535F50 		.ascii	"OS_PEND_OBJ\000"
 5764      454E445F 
 5764      4F424A00 
 5765              	.LASF303:
 5766 0de1 666C6167 		.ascii	"flags_cur\000"
 5766      735F6375 
 5766      7200
 5767              	.LASF148:
 5768 0deb 4F535F45 		.ascii	"OS_ERR_TASK_RESUME_SELF\000"
 5768      52525F54 
 5768      41534B5F 
 5768      52455355 
 5768      4D455F53 
 5769              	.LASF256:
 5770 0e03 43505555 		.ascii	"CPUUsageMax\000"
 5770      73616765 
 5770      4D617800 
 5771              	.LASF202:
 5772 0e0f 50656E64 		.ascii	"PendList\000"
 5772      4C697374 
 5772      00
 5773              	.LASF88:
 5774 0e18 4F535F45 		.ascii	"OS_ERR_OBJ_TYPE\000"
 5774      52525F4F 
 5774      424A5F54 
 5774      59504500 
 5775              	.LASF234:
 5776 0e28 50656E64 		.ascii	"PendDataTblPtr\000"
 5776      44617461 
 5776      54626C50 
 5776      747200
 5777              	.LASF308:
 5778 0e37 4F535F46 		.ascii	"OS_FlagDbgListAdd\000"
 5778      6C616744 
 5778      62674C69 
 5778      73744164 
 5778      6400
 5779              	.LASF241:
 5780 0e49 53656D43 		.ascii	"SemCtr\000"
 5780      747200
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 137


 5781              	.LASF216:
 5782 0e50 496E5074 		.ascii	"InPtr\000"
 5782      7200
 5783              	.LASF244:
 5784 0e56 5469636B 		.ascii	"TickRemain\000"
 5784      52656D61 
 5784      696E00
 5785              	.LASF279:
 5786 0e61 48656164 		.ascii	"HeadPtr\000"
 5786      50747200 
 5787              	.LASF297:
 5788 0e69 666C6167 		.ascii	"flags_rdy\000"
 5788      735F7264 
 5788      7900
 5789              	.LASF95:
 5790 0e73 4F535F45 		.ascii	"OS_ERR_PEND_ABORT_NONE\000"
 5790      52525F50 
 5790      454E445F 
 5790      41424F52 
 5790      545F4E4F 
 5791              	.LASF10:
 5792 0e8a 756E7369 		.ascii	"unsigned int\000"
 5792      676E6564 
 5792      20696E74 
 5792      00
 5793              	.LASF212:
 5794 0e97 4D736753 		.ascii	"MsgSize\000"
 5794      697A6500 
 5795              	.LASF79:
 5796 0e9f 4F535F45 		.ascii	"OS_ERR_MUTEX_OWNER\000"
 5796      52525F4D 
 5796      55544558 
 5796      5F4F574E 
 5796      455200
 5797              	.LASF268:
 5798 0eb2 46697273 		.ascii	"FirstPtr\000"
 5798      74507472 
 5798      00
 5799              	.LASF127:
 5800 0ebb 4F535F45 		.ascii	"OS_ERR_STAT_STK_SIZE_INVALID\000"
 5800      52525F53 
 5800      5441545F 
 5800      53544B5F 
 5800      53495A45 
 5801              	.LASF49:
 5802 0ed8 4F535F45 		.ascii	"OS_ERR_FLAG_NOT_RDY\000"
 5802      52525F46 
 5802      4C41475F 
 5802      4E4F545F 
 5802      52445900 
 5803              	.LASF225:
 5804 0eec 45787450 		.ascii	"ExtPtr\000"
 5804      747200
 5805              	.LASF94:
 5806 0ef3 4F535F45 		.ascii	"OS_ERR_PEND_ABORT_ISR\000"
 5806      52525F50 
 5806      454E445F 
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 138


 5806      41424F52 
 5806      545F4953 
 5807              	.LASF15:
 5808 0f09 4350555F 		.ascii	"CPU_ADDR\000"
 5808      41444452 
 5808      00
 5809              	.LASF102:
 5810 0f12 4F535F45 		.ascii	"OS_ERR_POST_ISR\000"
 5810      52525F50 
 5810      4F53545F 
 5810      49535200 
 5811              	.LASF167:
 5812 0f22 4F535F45 		.ascii	"OS_ERR_TIME_DLY_ISR\000"
 5812      52525F54 
 5812      494D455F 
 5812      444C595F 
 5812      49535200 
 5813              	.LASF132:
 5814 0f36 4F535F45 		.ascii	"OS_ERR_STK_LIMIT_INVALID\000"
 5814      52525F53 
 5814      544B5F4C 
 5814      494D4954 
 5814      5F494E56 
 5815              	.LASF1:
 5816 0f4f 4350555F 		.ascii	"CPU_BOOLEAN\000"
 5816      424F4F4C 
 5816      45414E00 
 5817              	.LASF23:
 5818 0f5b 4F535F43 		.ascii	"OS_CYCLES\000"
 5818      59434C45 
 5818      5300
 5819              	.LASF222:
 5820 0f65 4F535F54 		.ascii	"OS_TCB\000"
 5820      434200
 5821              	.LASF131:
 5822 0f6c 4F535F45 		.ascii	"OS_ERR_STK_SIZE_INVALID\000"
 5822      52525F53 
 5822      544B5F53 
 5822      495A455F 
 5822      494E5641 
 5823              	.LASF190:
 5824 0f84 4F535F45 		.ascii	"OS_ERR_TMR_STOPPED\000"
 5824      52525F54 
 5824      4D525F53 
 5824      544F5050 
 5824      454400
 5825              	.LASF3:
 5826 0f97 756E7369 		.ascii	"unsigned char\000"
 5826      676E6564 
 5826      20636861 
 5826      7200
 5827              	.LASF145:
 5828 0fa5 4F535F45 		.ascii	"OS_ERR_TASK_OPT\000"
 5828      52525F54 
 5828      41534B5F 
 5828      4F505400 
 5829              	.LASF318:
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 139


 5830 0fb5 4F535363 		.ascii	"OSSchedLockNestingCtr\000"
 5830      6865644C 
 5830      6F636B4E 
 5830      65737469 
 5830      6E674374 
 5831              	.LASF177:
 5832 0fcb 4F535F45 		.ascii	"OS_ERR_TIMEOUT\000"
 5832      52525F54 
 5832      494D454F 
 5832      555400
 5833              	.LASF34:
 5834 0fda 4F535F53 		.ascii	"OS_STATE\000"
 5834      54415445 
 5834      00
 5835              	.LASF294:
 5836 0fe3 74696D65 		.ascii	"timeout\000"
 5836      6F757400 
 5837              	.LASF30:
 5838 0feb 4F535F4F 		.ascii	"OS_OPT\000"
 5838      505400
 5839              	.LASF221:
 5840 0ff2 4F535F54 		.ascii	"OS_TASK_PTR\000"
 5840      41534B5F 
 5840      50545200 
 5841              	.LASF66:
 5842 0ffe 4F535F45 		.ascii	"OS_ERR_MEM_CREATE_ISR\000"
 5842      52525F4D 
 5842      454D5F43 
 5842      52454154 
 5842      455F4953 
 5843              	.LASF129:
 5844 1014 4F535F45 		.ascii	"OS_ERR_STATUS_INVALID\000"
 5844      52525F53 
 5844      54415455 
 5844      535F494E 
 5844      56414C49 
 5845              	.LASF195:
 5846 102a 4F535F45 		.ascii	"OS_ERR_Y\000"
 5846      52525F59 
 5846      00
 5847              	.LASF98:
 5848 1033 4F535F45 		.ascii	"OS_ERR_PEND_ISR\000"
 5848      52525F50 
 5848      454E445F 
 5848      49535200 
 5849              	.LASF197:
 5850 1043 4F535F45 		.ascii	"OS_ERR_Z\000"
 5850      52525F5A 
 5850      00
 5851              	.LASF230:
 5852 104c 5469636B 		.ascii	"TickSpokePtr\000"
 5852      53706F6B 
 5852      65507472 
 5852      00
 5853              	.LASF205:
 5854 1059 4462674E 		.ascii	"DbgNamePtr\000"
 5854      616D6550 
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 140


 5854      747200
 5855              	.LASF217:
 5856 1064 4F757450 		.ascii	"OutPtr\000"
 5856      747200
 5857              	.LASF233:
 5858 106b 5461736B 		.ascii	"TaskEntryArg\000"
 5858      456E7472 
 5858      79417267 
 5858      00
 5859              	.LASF108:
 5860 1078 4F535F45 		.ascii	"OS_ERR_Q_FULL\000"
 5860      52525F51 
 5860      5F46554C 
 5860      4C00
 5861              	.LASF59:
 5862 1086 4F535F45 		.ascii	"OS_ERR_INT_Q_STK_INVALID\000"
 5862      52525F49 
 5862      4E545F51 
 5862      5F53544B 
 5862      5F494E56 
 5863              	.LASF172:
 5864 109f 4F535F45 		.ascii	"OS_ERR_TIME_INVALID_SECONDS\000"
 5864      52525F54 
 5864      494D455F 
 5864      494E5641 
 5864      4C49445F 
 5865              	.LASF301:
 5866 10bb 4F53466C 		.ascii	"OSFlagPendGetFlagsRdy\000"
 5866      61675065 
 5866      6E644765 
 5866      74466C61 
 5866      67735264 
 5867              	.LASF136:
 5868 10d1 4F535F45 		.ascii	"OS_ERR_TASK_DEL\000"
 5868      52525F54 
 5868      41534B5F 
 5868      44454C00 
 5869              	.LASF277:
 5870 10e1 4F535F50 		.ascii	"OS_PEND_LIST\000"
 5870      454E445F 
 5870      4C495354 
 5870      00
 5871              	.LASF316:
 5872 10ee 4F53466C 		.ascii	"OSFlagDbgListPtr\000"
 5872      61674462 
 5872      674C6973 
 5872      74507472 
 5872      00
 5873              	.LASF5:
 5874 10ff 7369676E 		.ascii	"signed char\000"
 5874      65642063 
 5874      68617200 
 5875              	.LASF213:
 5876 110b 4D736754 		.ascii	"MsgTS\000"
 5876      5300
 5877              	.LASF47:
 5878 1111 4F535F45 		.ascii	"OS_ERR_FATAL_RETURN\000"
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 141


 5878      52525F46 
 5878      4154414C 
 5878      5F524554 
 5878      55524E00 
 5879              	.LASF7:
 5880 1125 73686F72 		.ascii	"short unsigned int\000"
 5880      7420756E 
 5880      7369676E 
 5880      65642069 
 5880      6E7400
 5881              	.LASF317:
 5882 1138 4F53466C 		.ascii	"OSFlagQty\000"
 5882      61675174 
 5882      7900
 5883              	.LASF24:
 5884 1142 4F535F46 		.ascii	"OS_FLAGS\000"
 5884      4C414753 
 5884      00
 5885              	.LASF211:
 5886 114b 4D736750 		.ascii	"MsgPtr\000"
 5886      747200
 5887              	.LASF160:
 5888 1152 4F535F45 		.ascii	"OS_ERR_TLS_NO_MORE_AVAIL\000"
 5888      52525F54 
 5888      4C535F4E 
 5888      4F5F4D4F 
 5888      52455F41 
 5889              	.LASF37:
 5890 116b 4F535F45 		.ascii	"OS_ERR_NONE\000"
 5890      52525F4E 
 5890      4F4E4500 
 5891              	.LASF270:
 5892 1177 6F735F70 		.ascii	"os_pend_data\000"
 5892      656E645F 
 5892      64617461 
 5892      00
 5893              	.LASF119:
 5894 1184 4F535F45 		.ascii	"OS_ERR_SCHED_LOCKED\000"
 5894      52525F53 
 5894      43484544 
 5894      5F4C4F43 
 5894      4B454400 
 5895              	.LASF51:
 5896 1198 4F535F45 		.ascii	"OS_ERR_FLUSH_ISR\000"
 5896      52525F46 
 5896      4C555348 
 5896      5F495352 
 5896      00
 5897              	.LASF238:
 5898 11a9 5072696F 		.ascii	"Prio\000"
 5898      00
 5899              	.LASF14:
 5900 11ae 646F7562 		.ascii	"double\000"
 5900      6C6500
 5901              	.LASF93:
 5902 11b5 4F535F45 		.ascii	"OS_ERR_PEND_ABORT\000"
 5902      52525F50 
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 142


 5902      454E445F 
 5902      41424F52 
 5902      5400
 5903              	.LASF255:
 5904 11c7 43505555 		.ascii	"CPUUsage\000"
 5904      73616765 
 5904      00
 5905              	.LASF120:
 5906 11d0 4F535F45 		.ascii	"OS_ERR_SCHED_NOT_LOCKED\000"
 5906      52525F53 
 5906      43484544 
 5906      5F4E4F54 
 5906      5F4C4F43 
 5907              	.LASF104:
 5908 11e8 4F535F45 		.ascii	"OS_ERR_PRIO\000"
 5908      52525F50 
 5908      52494F00 
 5909              	.LASF97:
 5910 11f4 4F535F45 		.ascii	"OS_ERR_PEND_DEL\000"
 5910      52525F50 
 5910      454E445F 
 5910      44454C00 
 5911              	.LASF272:
 5912 1204 50656E64 		.ascii	"PendObjPtr\000"
 5912      4F626A50 
 5912      747200
 5913              	.LASF322:
 5914 120f 433A5C55 		.ascii	"C:\\Users\\daniel01\\Desktop\\CY8CKIT-050_uCOS-III\\"
 5914      73657273 
 5914      5C64616E 
 5914      69656C30 
 5914      315C4465 
 5915 123e 43593843 		.ascii	"CY8CKIT-050_uCOS-III\\Micrium\\Software\\EvalBoards"
 5915      4B49542D 
 5915      3035305F 
 5915      75434F53 
 5915      2D494949 
 5916 126e 5C437970 		.ascii	"\\Cypress\\CY8CKIT-050\\PSoC\\uCOS-III-Probe\\uCOS-"
 5916      72657373 
 5916      5C435938 
 5916      434B4954 
 5916      2D303530 
 5917 129c 4949492D 		.ascii	"III-Probe.cydsn\000"
 5917      50726F62 
 5917      652E6379 
 5917      64736E00 
 5918              	.LASF220:
 5919 12ac 4E627245 		.ascii	"NbrEntriesMax\000"
 5919      6E747269 
 5919      65734D61 
 5919      7800
 5920              	.LASF278:
 5921 12ba 6F735F70 		.ascii	"os_pend_list\000"
 5921      656E645F 
 5921      6C697374 
 5921      00
 5922              	.LASF74:
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 143


 5923 12c7 4F535F45 		.ascii	"OS_ERR_MEM_INVALID_SIZE\000"
 5923      52525F4D 
 5923      454D5F49 
 5923      4E56414C 
 5923      49445F53 
 5924              	.LASF151:
 5925 12df 4F535F45 		.ascii	"OS_ERR_TASK_SUSPENDED\000"
 5925      52525F54 
 5925      41534B5F 
 5925      53555350 
 5925      454E4445 
 5926              	.LASF199:
 5927 12f5 4F535F46 		.ascii	"OS_FLAG_GRP\000"
 5927      4C41475F 
 5927      47525000 
 5928              	.LASF123:
 5929 1301 4F535F45 		.ascii	"OS_ERR_SET_ISR\000"
 5929      52525F53 
 5929      45545F49 
 5929      535200
 5930              	.LASF250:
 5931 1310 52656754 		.ascii	"RegTbl\000"
 5931      626C00
 5932              	.LASF122:
 5933 1317 4F535F45 		.ascii	"OS_ERR_SEM_OVF\000"
 5933      52525F53 
 5933      454D5F4F 
 5933      564600
 5934              	.LASF137:
 5935 1326 4F535F45 		.ascii	"OS_ERR_TASK_DEL_IDLE\000"
 5935      52525F54 
 5935      41534B5F 
 5935      44454C5F 
 5935      49444C45 
 5936              	.LASF169:
 5937 133b 4F535F45 		.ascii	"OS_ERR_TIME_GET_ISR\000"
 5937      52525F54 
 5937      494D455F 
 5937      4745545F 
 5937      49535200 
 5938              	.LASF245:
 5939 134f 54696D65 		.ascii	"TimeQuanta\000"
 5939      5175616E 
 5939      746100
 5940              	.LASF168:
 5941 135a 4F535F45 		.ascii	"OS_ERR_TIME_DLY_RESUME_ISR\000"
 5941      52525F54 
 5941      494D455F 
 5941      444C595F 
 5941      52455355 
 5942              	.LASF163:
 5943 1375 4F535F45 		.ascii	"OS_ERR_TICK_PRIO_INVALID\000"
 5943      52525F54 
 5943      49434B5F 
 5943      5052494F 
 5943      5F494E56 
 5944              	.LASF103:
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccFPInc7.s 			page 144


 5945 138e 4F535F45 		.ascii	"OS_ERR_PRIO_EXIST\000"
 5945      52525F50 
 5945      52494F5F 
 5945      45584953 
 5945      5400
 5946              	.LASF215:
 5947 13a0 6F735F6D 		.ascii	"os_msg_q\000"
 5947      73675F71 
 5947      00
 5948              	.LASF75:
 5949 13a9 4F535F45 		.ascii	"OS_ERR_MEM_NO_FREE_BLKS\000"
 5949      52525F4D 
 5949      454D5F4E 
 5949      4F5F4652 
 5949      45455F42 
 5950              	.LASF16:
 5951 13c1 4350555F 		.ascii	"CPU_STK\000"
 5951      53544B00 
 5952              		.ident	"GCC: (Sourcery G++ Lite 2010q1-188) 4.4.1"
