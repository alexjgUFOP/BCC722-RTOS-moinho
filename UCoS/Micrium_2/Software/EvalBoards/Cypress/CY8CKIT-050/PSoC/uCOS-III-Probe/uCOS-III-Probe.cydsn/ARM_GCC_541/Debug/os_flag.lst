ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"os_flag.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.OSFlagCreate,"ax",%progbits
  20              		.align	2
  21              		.global	OSFlagCreate
  22              		.thumb
  23              		.thumb_func
  24              		.type	OSFlagCreate, %function
  25              	OSFlagCreate:
  26              	.LFB0:
  27              		.file 1 "..\\..\\..\\..\\..\\..\\uCOS-III\\Source\\os_flag.c"
   1:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** /*
   2:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** ***************************************************************************************************
   3:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                                      uC/OS-III
   4:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                                 The Real-Time Kernel
   5:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
   6:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                  (c) Copyright 2009-2012; Micrium, Inc.; Weston, FL
   7:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                           All rights reserved.  Protected by international copyright laws.
   8:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
   9:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                                EVENT FLAG MANAGEMENT
  10:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
  11:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** * File    : OS_FLAG.C
  12:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** * By      : JJL
  13:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** * Version : V3.03.01
  14:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
  15:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** * LICENSING TERMS:
  16:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** * ---------------
  17:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *           uC/OS-III is provided in source form for FREE short-term evaluation, for educational us
  18:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *           for peaceful research.  If you plan or intend to use uC/OS-III in a commercial applicat
  19:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *           product then, you need to contact Micrium to properly license uC/OS-III for its use in 
  20:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *           application/product.   We provide ALL the source code for your convenience and to help 
  21:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *           experience uC/OS-III.  The fact that the source is provided does NOT mean that you can 
  22:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *           it commercially without paying a licensing fee.
  23:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
  24:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *           Knowledge of the source code may NOT be used to develop a similar product.
  25:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
  26:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *           Please help us continue to provide the embedded community with the finest software avai
  27:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *           Your honesty is greatly appreciated.
  28:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
  29:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *           You can contact us at www.micrium.com, or by phone at +1 (954) 217-2036.
  30:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** ***************************************************************************************************
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 2


  31:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** */
  32:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
  33:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #define  MICRIUM_SOURCE
  34:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #include <os.h>
  35:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
  36:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #ifdef VSC_INCLUDE_SOURCE_FILE_NAMES
  37:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** const  CPU_CHAR  *os_flag__c = "$Id: $";
  38:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #endif
  39:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
  40:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
  41:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #if OS_CFG_FLAG_EN > 0u
  42:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
  43:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** /*$PAGE*/
  44:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** /*
  45:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** ***************************************************************************************************
  46:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                                 CREATE AN EVENT FLAG
  47:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
  48:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** * Description: This function is called to create an event flag group.
  49:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
  50:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** * Arguments  : p_grp          is a pointer to the event flag group to create
  51:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
  52:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *              p_name         is the name of the event flag group
  53:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
  54:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *              flags          contains the initial value to store in the event flag group (typicall
  55:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
  56:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *              p_err          is a pointer to an error code which will be returned to your applicat
  57:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
  58:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                 OS_ERR_NONE                    if the call was successful.
  59:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                 OS_ERR_CREATE_ISR              if you attempted to create an Even
  60:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                 OS_ERR_ILLEGAL_CREATE_RUN_TIME if you are trying to create the Ev
  61:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                                                   called OSSafetyCriticalStart().
  62:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                 OS_ERR_NAME                    if 'p_name' is a NULL pointer
  63:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                 OS_ERR_OBJ_CREATED             if the event flag group has alread
  64:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                 OS_ERR_OBJ_PTR_NULL            if 'p_grp' is a NULL pointer
  65:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
  66:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** * Returns    : none
  67:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** ***************************************************************************************************
  68:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** */
  69:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
  70:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** void  OSFlagCreate (OS_FLAG_GRP  *p_grp,
  71:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                     CPU_CHAR     *p_name,
  72:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                     OS_FLAGS      flags,
  73:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                     OS_ERR       *p_err)
  74:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** {
  28              		.loc 1 74 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 24
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 80B5     		push	{r7, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 86B0     		sub	sp, sp, #24
  37              		.cfi_def_cfa_offset 32
  38 0004 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40 0006 F860     		str	r0, [r7, #12]
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 3


  41 0008 B960     		str	r1, [r7, #8]
  42 000a 7A60     		str	r2, [r7, #4]
  43 000c 3B60     		str	r3, [r7]
  75:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     CPU_SR_ALLOC();
  44              		.loc 1 75 0
  45 000e 0023     		movs	r3, #0
  46 0010 7B61     		str	r3, [r7, #20]
  76:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
  77:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
  78:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
  79:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #ifdef OS_SAFETY_CRITICAL
  80:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     if (p_err == (OS_ERR *)0) {
  81:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
  82:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         return;
  83:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     }
  84:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #endif
  85:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
  86:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #ifdef OS_SAFETY_CRITICAL_IEC61508
  87:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     if (OSSafetyCriticalStartFlag == DEF_TRUE) {
  88:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****        *p_err = OS_ERR_ILLEGAL_CREATE_RUN_TIME;
  89:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         return;
  90:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     }
  91:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #endif
  92:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
  93:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #if OS_CFG_CALLED_FROM_ISR_CHK_EN > 0u
  94:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     if (OSIntNestingCtr > (OS_NESTING_CTR)0) {              /* See if called from ISR ...          
  47              		.loc 1 94 0
  48 0012 1B4B     		ldr	r3, .L5
  49 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  50 0016 002B     		cmp	r3, #0
  51 0018 04D0     		beq	.L2
  95:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****        *p_err = OS_ERR_CREATE_ISR;                          /* ... can't CREATE from an ISR        
  52              		.loc 1 95 0
  53 001a 3B68     		ldr	r3, [r7]
  54 001c 42F6E162 		movw	r2, #12001
  55 0020 1A80     		strh	r2, [r3]	@ movhi
  96:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         return;
  56              		.loc 1 96 0
  57 0022 2AE0     		b	.L1
  58              	.L2:
  97:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     }
  98:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #endif
  99:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 100:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #if OS_CFG_ARG_CHK_EN > 0u
 101:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     if (p_grp == (OS_FLAG_GRP *)0) {                        /* Validate 'p_grp'                    
  59              		.loc 1 101 0
  60 0024 FB68     		ldr	r3, [r7, #12]
  61 0026 002B     		cmp	r3, #0
  62 0028 04D1     		bne	.L4
 102:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****        *p_err = OS_ERR_OBJ_PTR_NULL;
  63              		.loc 1 102 0
  64 002a 3B68     		ldr	r3, [r7]
  65 002c 45F6C352 		movw	r2, #24003
  66 0030 1A80     		strh	r2, [r3]	@ movhi
 103:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         return;
  67              		.loc 1 103 0
  68 0032 22E0     		b	.L1
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 4


  69              	.L4:
 104:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     }
 105:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #endif
 106:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 107:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     OS_CRITICAL_ENTER();
  70              		.loc 1 107 0
  71 0034 FFF7FEFF 		bl	CPU_SR_Save
  72 0038 7861     		str	r0, [r7, #20]
 108:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     p_grp->Type    = OS_OBJ_TYPE_FLAG;                      /* Set to event flag group type        
  73              		.loc 1 108 0
  74 003a FB68     		ldr	r3, [r7, #12]
  75 003c 114A     		ldr	r2, .L5+4
  76 003e 1A60     		str	r2, [r3]
 109:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     p_grp->NamePtr = p_name;
  77              		.loc 1 109 0
  78 0040 FB68     		ldr	r3, [r7, #12]
  79 0042 BA68     		ldr	r2, [r7, #8]
  80 0044 5A60     		str	r2, [r3, #4]
 110:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     p_grp->Flags   = flags;                                 /* Set to desired initial value        
  81              		.loc 1 110 0
  82 0046 FB68     		ldr	r3, [r7, #12]
  83 0048 7A68     		ldr	r2, [r7, #4]
  84 004a 1A62     		str	r2, [r3, #32]
 111:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     p_grp->TS      = (CPU_TS)0;
  85              		.loc 1 111 0
  86 004c FB68     		ldr	r3, [r7, #12]
  87 004e 0022     		movs	r2, #0
  88 0050 5A62     		str	r2, [r3, #36]
 112:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     OS_PendListInit(&p_grp->PendList);
  89              		.loc 1 112 0
  90 0052 FB68     		ldr	r3, [r7, #12]
  91 0054 0833     		adds	r3, r3, #8
  92 0056 1846     		mov	r0, r3
  93 0058 FFF7FEFF 		bl	OS_PendListInit
 113:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 114:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #if OS_CFG_DBG_EN > 0u
 115:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     OS_FlagDbgListAdd(p_grp);
  94              		.loc 1 115 0
  95 005c F868     		ldr	r0, [r7, #12]
  96 005e FFF7FEFF 		bl	OS_FlagDbgListAdd
 116:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #endif
 117:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     OSFlagQty++;
  97              		.loc 1 117 0
  98 0062 094B     		ldr	r3, .L5+8
  99 0064 1B88     		ldrh	r3, [r3]
 100 0066 0133     		adds	r3, r3, #1
 101 0068 9AB2     		uxth	r2, r3
 102 006a 074B     		ldr	r3, .L5+8
 103 006c 1A80     		strh	r2, [r3]	@ movhi
 118:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 119:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     OS_CRITICAL_EXIT_NO_SCHED();
 104              		.loc 1 119 0
 105 006e 7869     		ldr	r0, [r7, #20]
 106 0070 FFF7FEFF 		bl	CPU_SR_Restore
 120:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****    *p_err = OS_ERR_NONE;
 107              		.loc 1 120 0
 108 0074 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 5


 109 0076 0022     		movs	r2, #0
 110 0078 1A80     		strh	r2, [r3]	@ movhi
 111              	.L1:
 121:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** }
 112              		.loc 1 121 0
 113 007a 1837     		adds	r7, r7, #24
 114              		.cfi_def_cfa_offset 8
 115 007c BD46     		mov	sp, r7
 116              		.cfi_def_cfa_register 13
 117              		@ sp needed
 118 007e 80BD     		pop	{r7, pc}
 119              	.L6:
 120              		.align	2
 121              	.L5:
 122 0080 00000000 		.word	OSIntNestingCtr
 123 0084 464C4147 		.word	1195461702
 124 0088 00000000 		.word	OSFlagQty
 125              		.cfi_endproc
 126              	.LFE0:
 127              		.size	OSFlagCreate, .-OSFlagCreate
 128              		.section	.text.OSFlagDel,"ax",%progbits
 129              		.align	2
 130              		.global	OSFlagDel
 131              		.thumb
 132              		.thumb_func
 133              		.type	OSFlagDel, %function
 134              	OSFlagDel:
 135              	.LFB1:
 122:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 123:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** /*$PAGE*/
 124:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** /*
 125:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** ***************************************************************************************************
 126:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                             DELETE AN EVENT FLAG GROUP
 127:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 128:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** * Description: This function deletes an event flag group and readies all tasks pending on the event
 129:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 130:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** * Arguments  : p_grp     is a pointer to the desired event flag group.
 131:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 132:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *              opt       determines delete options as follows:
 133:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 134:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                            OS_OPT_DEL_NO_PEND           Deletes the event flag group ONLY if no t
 135:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                            OS_OPT_DEL_ALWAYS            Deletes the event flag group even if task
 136:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                                         In this case, all the tasks pending will 
 137:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 138:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *              p_err     is a pointer to an error code that can contain one of the following values
 139:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 140:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                            OS_ERR_NONE                  The call was successful and the event fla
 141:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                            OS_ERR_DEL_ISR               If you attempted to delete the event flag
 142:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                            OS_ERR_OBJ_PTR_NULL          If 'p_grp' is a NULL pointer.
 143:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                            OS_ERR_OBJ_TYPE              If you didn't pass a pointer to an event 
 144:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                            OS_ERR_OPT_INVALID           An invalid option was specified
 145:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                            OS_ERR_TASK_WAITING          One or more tasks were waiting on the eve
 146:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 147:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** * Returns    : == 0          if no tasks were waiting on the event flag group, or upon error.
 148:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *              >  0          if one or more tasks waiting on the event flag group are now readied a
 149:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 150:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** * Note(s)    : 1) This function must be used with care.  Tasks that would normally expect the prese
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 6


 151:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                 group MUST check the return code of OSFlagPost and OSFlagPend().
 152:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** ***************************************************************************************************
 153:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** */
 154:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 155:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #if OS_CFG_FLAG_DEL_EN > 0u
 156:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** OS_OBJ_QTY  OSFlagDel (OS_FLAG_GRP  *p_grp,
 157:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                        OS_OPT        opt,
 158:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                        OS_ERR       *p_err)
 159:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** {
 136              		.loc 1 159 0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 48
 139              		@ frame_needed = 1, uses_anonymous_args = 0
 140 0000 80B5     		push	{r7, lr}
 141              		.cfi_def_cfa_offset 8
 142              		.cfi_offset 7, -8
 143              		.cfi_offset 14, -4
 144 0002 8CB0     		sub	sp, sp, #48
 145              		.cfi_def_cfa_offset 56
 146 0004 00AF     		add	r7, sp, #0
 147              		.cfi_def_cfa_register 7
 148 0006 F860     		str	r0, [r7, #12]
 149 0008 0B46     		mov	r3, r1
 150 000a 7A60     		str	r2, [r7, #4]
 151 000c 7B81     		strh	r3, [r7, #10]	@ movhi
 160:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     OS_OBJ_QTY        cnt;
 161:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     OS_OBJ_QTY        nbr_tasks;
 162:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     OS_PEND_DATA     *p_pend_data;
 163:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     OS_PEND_LIST     *p_pend_list;
 164:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     OS_TCB           *p_tcb;
 165:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     CPU_TS            ts;
 166:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     CPU_SR_ALLOC();
 152              		.loc 1 166 0
 153 000e 0023     		movs	r3, #0
 154 0010 BB62     		str	r3, [r7, #40]
 167:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 168:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 169:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 170:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #ifdef OS_SAFETY_CRITICAL
 171:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     if (p_err == (OS_ERR *)0) {
 172:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 173:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         return ((OS_OBJ_QTY)0);
 174:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     }
 175:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #endif
 176:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 177:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #if OS_CFG_CALLED_FROM_ISR_CHK_EN > 0u
 178:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     if (OSIntNestingCtr > (OS_NESTING_CTR)0) {              /* See if called from ISR ...          
 155              		.loc 1 178 0
 156 0012 424B     		ldr	r3, .L25
 157 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 158 0016 002B     		cmp	r3, #0
 159 0018 05D0     		beq	.L8
 179:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****        *p_err = OS_ERR_DEL_ISR;                             /* ... can't DELETE from an ISR        
 160              		.loc 1 179 0
 161 001a 7B68     		ldr	r3, [r7, #4]
 162 001c 43F2C922 		movw	r2, #13001
 163 0020 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 7


 180:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         return ((OS_OBJ_QTY)0);
 164              		.loc 1 180 0
 165 0022 0023     		movs	r3, #0
 166 0024 75E0     		b	.L9
 167              	.L8:
 181:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     }
 182:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #endif
 183:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 184:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #if OS_CFG_ARG_CHK_EN > 0u
 185:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     if (p_grp == (OS_FLAG_GRP *)0) {                        /* Validate 'p_grp'                    
 168              		.loc 1 185 0
 169 0026 FB68     		ldr	r3, [r7, #12]
 170 0028 002B     		cmp	r3, #0
 171 002a 05D1     		bne	.L10
 186:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****        *p_err  = OS_ERR_OBJ_PTR_NULL;
 172              		.loc 1 186 0
 173 002c 7B68     		ldr	r3, [r7, #4]
 174 002e 45F6C352 		movw	r2, #24003
 175 0032 1A80     		strh	r2, [r3]	@ movhi
 187:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         return ((OS_OBJ_QTY)0);
 176              		.loc 1 187 0
 177 0034 0023     		movs	r3, #0
 178 0036 6CE0     		b	.L9
 179              	.L10:
 188:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     }
 189:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     switch (opt) {                                          /* Validate 'opt'                      
 180              		.loc 1 189 0
 181 0038 7B89     		ldrh	r3, [r7, #10]
 182 003a 0033     		adds	r3, r3, #0
 183 003c 012B     		cmp	r3, #1
 184 003e 05D9     		bls	.L24
 190:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         case OS_OPT_DEL_NO_PEND:
 191:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         case OS_OPT_DEL_ALWAYS:
 192:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              break;
 193:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 194:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         default:
 195:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****             *p_err = OS_ERR_OPT_INVALID;
 185              		.loc 1 195 0
 186 0040 7B68     		ldr	r3, [r7, #4]
 187 0042 45F62562 		movw	r2, #24101
 188 0046 1A80     		strh	r2, [r3]	@ movhi
 196:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              return ((OS_OBJ_QTY)0);
 189              		.loc 1 196 0
 190 0048 0023     		movs	r3, #0
 191 004a 62E0     		b	.L9
 192              	.L24:
 192:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 193              		.loc 1 192 0
 194 004c 00BF     		nop
 197:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     }
 198:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #endif
 199:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 200:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #if OS_CFG_OBJ_TYPE_CHK_EN > 0u
 201:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     if (p_grp->Type != OS_OBJ_TYPE_FLAG) {                  /* Validate event group object         
 202:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****        *p_err = OS_ERR_OBJ_TYPE;
 203:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         return ((OS_OBJ_QTY)0);
 204:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     }
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 8


 205:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #endif
 206:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     OS_CRITICAL_ENTER();
 195              		.loc 1 206 0
 196 004e FFF7FEFF 		bl	CPU_SR_Save
 197 0052 B862     		str	r0, [r7, #40]
 207:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     p_pend_list = &p_grp->PendList;
 198              		.loc 1 207 0
 199 0054 FB68     		ldr	r3, [r7, #12]
 200 0056 0833     		adds	r3, r3, #8
 201 0058 7B62     		str	r3, [r7, #36]
 208:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     cnt         = p_pend_list->NbrEntries;
 202              		.loc 1 208 0
 203 005a 7B6A     		ldr	r3, [r7, #36]
 204 005c 1B89     		ldrh	r3, [r3, #8]	@ movhi
 205 005e FB85     		strh	r3, [r7, #46]	@ movhi
 209:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     nbr_tasks   = cnt;
 206              		.loc 1 209 0
 207 0060 FB8D     		ldrh	r3, [r7, #46]	@ movhi
 208 0062 7B84     		strh	r3, [r7, #34]	@ movhi
 210:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     switch (opt) {
 209              		.loc 1 210 0
 210 0064 7B89     		ldrh	r3, [r7, #10]
 211 0066 002B     		cmp	r3, #0
 212 0068 02D0     		beq	.L15
 213 006a 012B     		cmp	r3, #1
 214 006c 1ED0     		beq	.L16
 215 006e 47E0     		b	.L23
 216              	.L15:
 211:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         case OS_OPT_DEL_NO_PEND:                            /* Delete group if no task waiting     
 212:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              if (nbr_tasks == (OS_OBJ_QTY)0) {
 217              		.loc 1 212 0
 218 0070 7B8C     		ldrh	r3, [r7, #34]
 219 0072 002B     		cmp	r3, #0
 220 0074 12D1     		bne	.L17
 213:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #if OS_CFG_DBG_EN > 0u
 214:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  OS_FlagDbgListRemove(p_grp);
 221              		.loc 1 214 0
 222 0076 F868     		ldr	r0, [r7, #12]
 223 0078 FFF7FEFF 		bl	OS_FlagDbgListRemove
 215:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #endif
 216:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  OSFlagQty--;
 224              		.loc 1 216 0
 225 007c 284B     		ldr	r3, .L25+4
 226 007e 1B88     		ldrh	r3, [r3]
 227 0080 013B     		subs	r3, r3, #1
 228 0082 9AB2     		uxth	r2, r3
 229 0084 264B     		ldr	r3, .L25+4
 230 0086 1A80     		strh	r2, [r3]	@ movhi
 217:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  OS_FlagClr(p_grp);
 231              		.loc 1 217 0
 232 0088 F868     		ldr	r0, [r7, #12]
 233 008a FFF7FEFF 		bl	OS_FlagClr
 218:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 219:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  OS_CRITICAL_EXIT();
 234              		.loc 1 219 0
 235 008e B86A     		ldr	r0, [r7, #40]
 236 0090 FFF7FEFF 		bl	CPU_SR_Restore
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 9


 220:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                 *p_err = OS_ERR_NONE;
 237              		.loc 1 220 0
 238 0094 7B68     		ldr	r3, [r7, #4]
 239 0096 0022     		movs	r2, #0
 240 0098 1A80     		strh	r2, [r3]	@ movhi
 221:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              } else {
 222:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  OS_CRITICAL_EXIT();
 223:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                 *p_err = OS_ERR_TASK_WAITING;
 224:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              }
 225:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              break;
 241              		.loc 1 225 0
 242 009a 39E0     		b	.L19
 243              	.L17:
 222:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                 *p_err = OS_ERR_TASK_WAITING;
 244              		.loc 1 222 0
 245 009c B86A     		ldr	r0, [r7, #40]
 246 009e FFF7FEFF 		bl	CPU_SR_Restore
 223:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              }
 247              		.loc 1 223 0
 248 00a2 7B68     		ldr	r3, [r7, #4]
 249 00a4 47F25F12 		movw	r2, #29023
 250 00a8 1A80     		strh	r2, [r3]	@ movhi
 251              		.loc 1 225 0
 252 00aa 31E0     		b	.L19
 253              	.L16:
 226:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 227:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         case OS_OPT_DEL_ALWAYS:                             /* Always delete the event flag group  
 228:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              ts = OS_TS_GET();                              /* Get local time stamp so all tasks ge
 254              		.loc 1 228 0
 255 00ac FFF7FEFF 		bl	CPU_TS_TmrRd
 256 00b0 F861     		str	r0, [r7, #28]
 229:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              while (cnt > 0u) {                             /* Remove all tasks from the pend list 
 257              		.loc 1 229 0
 258 00b2 0DE0     		b	.L20
 259              	.L21:
 230:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  p_pend_data = p_pend_list->HeadPtr;
 260              		.loc 1 230 0
 261 00b4 7B6A     		ldr	r3, [r7, #36]
 262 00b6 1B68     		ldr	r3, [r3]
 263 00b8 BB61     		str	r3, [r7, #24]
 231:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  p_tcb       = p_pend_data->TCBPtr;
 264              		.loc 1 231 0
 265 00ba BB69     		ldr	r3, [r7, #24]
 266 00bc 9B68     		ldr	r3, [r3, #8]
 267 00be 7B61     		str	r3, [r7, #20]
 232:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  OS_PendObjDel((OS_PEND_OBJ *)((void *)p_grp),
 268              		.loc 1 232 0
 269 00c0 FA69     		ldr	r2, [r7, #28]
 270 00c2 7969     		ldr	r1, [r7, #20]
 271 00c4 F868     		ldr	r0, [r7, #12]
 272 00c6 FFF7FEFF 		bl	OS_PendObjDel
 233:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                                p_tcb,
 234:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                                ts);
 235:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  cnt--;
 273              		.loc 1 235 0
 274 00ca FB8D     		ldrh	r3, [r7, #46]
 275 00cc 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 10


 276 00ce FB85     		strh	r3, [r7, #46]	@ movhi
 277              	.L20:
 229:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  p_pend_data = p_pend_list->HeadPtr;
 278              		.loc 1 229 0
 279 00d0 FB8D     		ldrh	r3, [r7, #46]
 280 00d2 002B     		cmp	r3, #0
 281 00d4 EED1     		bne	.L21
 236:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              }
 237:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #if OS_CFG_DBG_EN > 0u
 238:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              OS_FlagDbgListRemove(p_grp);
 282              		.loc 1 238 0
 283 00d6 F868     		ldr	r0, [r7, #12]
 284 00d8 FFF7FEFF 		bl	OS_FlagDbgListRemove
 239:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #endif
 240:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              OSFlagQty--;
 285              		.loc 1 240 0
 286 00dc 104B     		ldr	r3, .L25+4
 287 00de 1B88     		ldrh	r3, [r3]
 288 00e0 013B     		subs	r3, r3, #1
 289 00e2 9AB2     		uxth	r2, r3
 290 00e4 0E4B     		ldr	r3, .L25+4
 291 00e6 1A80     		strh	r2, [r3]	@ movhi
 241:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              OS_FlagClr(p_grp);
 292              		.loc 1 241 0
 293 00e8 F868     		ldr	r0, [r7, #12]
 294 00ea FFF7FEFF 		bl	OS_FlagClr
 242:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              OS_CRITICAL_EXIT_NO_SCHED();
 295              		.loc 1 242 0
 296 00ee B86A     		ldr	r0, [r7, #40]
 297 00f0 FFF7FEFF 		bl	CPU_SR_Restore
 243:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              OSSched();                                     /* Find highest priority task ready to 
 298              		.loc 1 243 0
 299 00f4 FFF7FEFF 		bl	OSSched
 244:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****             *p_err = OS_ERR_NONE;
 300              		.loc 1 244 0
 301 00f8 7B68     		ldr	r3, [r7, #4]
 302 00fa 0022     		movs	r2, #0
 303 00fc 1A80     		strh	r2, [r3]	@ movhi
 245:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              break;
 304              		.loc 1 245 0
 305 00fe 07E0     		b	.L19
 306              	.L23:
 246:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 247:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         default:
 248:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              OS_CRITICAL_EXIT();
 307              		.loc 1 248 0
 308 0100 B86A     		ldr	r0, [r7, #40]
 309 0102 FFF7FEFF 		bl	CPU_SR_Restore
 249:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****             *p_err = OS_ERR_OPT_INVALID;
 310              		.loc 1 249 0
 311 0106 7B68     		ldr	r3, [r7, #4]
 312 0108 45F62562 		movw	r2, #24101
 313 010c 1A80     		strh	r2, [r3]	@ movhi
 250:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              break;
 314              		.loc 1 250 0
 315 010e 00BF     		nop
 316              	.L19:
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 11


 251:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     }
 252:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     return (nbr_tasks);
 317              		.loc 1 252 0
 318 0110 7B8C     		ldrh	r3, [r7, #34]
 319              	.L9:
 253:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** }
 320              		.loc 1 253 0
 321 0112 1846     		mov	r0, r3
 322 0114 3037     		adds	r7, r7, #48
 323              		.cfi_def_cfa_offset 8
 324 0116 BD46     		mov	sp, r7
 325              		.cfi_def_cfa_register 13
 326              		@ sp needed
 327 0118 80BD     		pop	{r7, pc}
 328              	.L26:
 329 011a 00BF     		.align	2
 330              	.L25:
 331 011c 00000000 		.word	OSIntNestingCtr
 332 0120 00000000 		.word	OSFlagQty
 333              		.cfi_endproc
 334              	.LFE1:
 335              		.size	OSFlagDel, .-OSFlagDel
 336              		.section	.text.OSFlagPend,"ax",%progbits
 337              		.align	2
 338              		.global	OSFlagPend
 339              		.thumb
 340              		.thumb_func
 341              		.type	OSFlagPend, %function
 342              	OSFlagPend:
 343              	.LFB2:
 254:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #endif
 255:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 256:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** /*
 257:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** ***************************************************************************************************
 258:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                             WAIT ON AN EVENT FLAG GROUP
 259:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 260:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** * Description: This function is called to wait for a combination of bits to be set in an event flag
 261:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *              application can wait for ANY bit to be set or ALL bits to be set.
 262:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 263:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** * Arguments  : p_grp         is a pointer to the desired event flag group.
 264:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 265:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *              flags         Is a bit pattern indicating which bit(s) (i.e. flags) you wish to wait
 266:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                            The bits you want are specified by setting the corresponding bits in '
 267:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                            e.g. if your application wants to wait for bits 0 and 1 then 'flags' w
 268:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 269:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *              timeout       is an optional timeout (in clock ticks) that your task will wait for t
 270:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                            desired bit combination.  If you specify 0, however, your task will wa
 271:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                            forever at the specified event flag group or, until a message arrives.
 272:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 273:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *              opt           specifies whether you want ALL bits to be set or ANY of the bits to be
 274:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                            You can specify the 'ONE' of the following arguments:
 275:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 276:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                OS_OPT_PEND_FLAG_CLR_ALL   You will wait for ALL bits in 'flags' t
 277:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                OS_OPT_PEND_FLAG_CLR_ANY   You will wait for ANY bit  in 'flags' t
 278:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                OS_OPT_PEND_FLAG_SET_ALL   You will wait for ALL bits in 'flags' t
 279:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                OS_OPT_PEND_FLAG_SET_ANY   You will wait for ANY bit  in 'flags' t
 280:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 12


 281:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                            You can 'ADD' OS_OPT_PEND_FLAG_CONSUME if you want the event flag to b
 282:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                      the call.  Example, to wait for any flag in a group AND then
 283:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                      the flags that are present, set 'wait_opt' to:
 284:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 285:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                      OS_OPT_PEND_FLAG_SET_ANY + OS_OPT_PEND_FLAG_CONSUME
 286:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 287:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                            You can also 'ADD' the type of pend with 'ONE' of the two option:
 288:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 289:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                OS_OPT_PEND_NON_BLOCKING   Task will NOT block if flags are not av
 290:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                OS_OPT_PEND_BLOCKING       Task will     block if flags are not av
 291:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 292:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *              p_ts          is a pointer to a variable that will receive the timestamp of when the
 293:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                            posted, aborted or the event flag group deleted.  If you pass a NULL p
 294:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                            then you will not get the timestamp.  In other words, passing a NULL p
 295:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                            indicates that you don't need the timestamp.
 296:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 297:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *              p_err         is a pointer to an error code and can be:
 298:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 299:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                OS_ERR_NONE                The desired bits have been set within t
 300:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                OS_ERR_OBJ_PTR_NULL        If 'p_grp' is a NULL pointer.
 301:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                OS_ERR_OBJ_TYPE            You are not pointing to an event flag g
 302:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                OS_ERR_OPT_INVALID         You didn't specify a proper 'opt' argum
 303:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                OS_ERR_PEND_ABORT          The wait on the flag was aborted.
 304:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                OS_ERR_PEND_ISR            If you tried to PEND from an ISR
 305:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                OS_ERR_PEND_WOULD_BLOCK    If you specified non-blocking but the f
 306:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                                           available.
 307:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                OS_ERR_SCHED_LOCKED        If you called this function when the sc
 308:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                OS_ERR_TIMEOUT             The bit(s) have not been set in the spe
 309:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 310:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** * Returns    : The flags in the event flag group that made the task ready or, 0 if a timeout or an 
 311:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *              occurred.
 312:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** ***************************************************************************************************
 313:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** */
 314:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 315:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** OS_FLAGS  OSFlagPend (OS_FLAG_GRP  *p_grp,
 316:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                       OS_FLAGS      flags,
 317:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                       OS_TICK       timeout,
 318:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                       OS_OPT        opt,
 319:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                       CPU_TS       *p_ts,
 320:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                       OS_ERR       *p_err)
 321:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** {
 344              		.loc 1 321 0
 345              		.cfi_startproc
 346              		@ args = 8, pretend = 0, frame = 64
 347              		@ frame_needed = 1, uses_anonymous_args = 0
 348 0000 80B5     		push	{r7, lr}
 349              		.cfi_def_cfa_offset 8
 350              		.cfi_offset 7, -8
 351              		.cfi_offset 14, -4
 352 0002 92B0     		sub	sp, sp, #72
 353              		.cfi_def_cfa_offset 80
 354 0004 02AF     		add	r7, sp, #8
 355              		.cfi_def_cfa 7, 72
 356 0006 F860     		str	r0, [r7, #12]
 357 0008 B960     		str	r1, [r7, #8]
 358 000a 7A60     		str	r2, [r7, #4]
 359 000c 7B80     		strh	r3, [r7, #2]	@ movhi
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 13


 322:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     CPU_BOOLEAN   consume;
 323:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     OS_FLAGS      flags_rdy;
 324:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     OS_OPT        mode;
 325:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     OS_PEND_DATA  pend_data;
 326:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     CPU_SR_ALLOC();
 360              		.loc 1 326 0
 361 000e 0023     		movs	r3, #0
 362 0010 BB63     		str	r3, [r7, #56]
 327:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 328:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 329:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 330:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #ifdef OS_SAFETY_CRITICAL
 331:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     if (p_err == (OS_ERR *)0) {
 332:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 333:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         return ((OS_FLAGS)0);
 334:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     }
 335:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #endif
 336:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 337:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #if OS_CFG_CALLED_FROM_ISR_CHK_EN > 0u
 338:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     if (OSIntNestingCtr > (OS_NESTING_CTR)0) {              /* See if called from ISR ...          
 363              		.loc 1 338 0
 364 0012 964B     		ldr	r3, .L87
 365 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 366 0016 002B     		cmp	r3, #0
 367 0018 05D0     		beq	.L28
 339:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****        *p_err = OS_ERR_PEND_ISR;                            /* ... can't PEND from an ISR          
 368              		.loc 1 339 0
 369 001a FB6C     		ldr	r3, [r7, #76]
 370 001c 46F2AE12 		movw	r2, #25006
 371 0020 1A80     		strh	r2, [r3]	@ movhi
 340:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         return ((OS_FLAGS)0);
 372              		.loc 1 340 0
 373 0022 0023     		movs	r3, #0
 374 0024 6DE2     		b	.L85
 375              	.L28:
 341:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     }
 342:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #endif
 343:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 344:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #if OS_CFG_ARG_CHK_EN > 0u
 345:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     if (p_grp == (OS_FLAG_GRP *)0) {                        /* Validate 'p_grp'                    
 376              		.loc 1 345 0
 377 0026 FB68     		ldr	r3, [r7, #12]
 378 0028 002B     		cmp	r3, #0
 379 002a 05D1     		bne	.L30
 346:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****        *p_err = OS_ERR_OBJ_PTR_NULL;
 380              		.loc 1 346 0
 381 002c FB6C     		ldr	r3, [r7, #76]
 382 002e 45F6C352 		movw	r2, #24003
 383 0032 1A80     		strh	r2, [r3]	@ movhi
 347:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         return ((OS_FLAGS)0);
 384              		.loc 1 347 0
 385 0034 0023     		movs	r3, #0
 386 0036 64E2     		b	.L85
 387              	.L30:
 348:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     }
 349:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     switch (opt) {                                          /* Validate 'opt'                      
 388              		.loc 1 349 0
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 14


 389 0038 7B88     		ldrh	r3, [r7, #2]
 390 003a B3F5847F 		cmp	r3, #264
 391 003e 43D0     		beq	.L86
 392 0040 B3F5847F 		cmp	r3, #264
 393 0044 14DC     		bgt	.L33
 394 0046 082B     		cmp	r3, #8
 395 0048 3ED0     		beq	.L86
 396 004a 082B     		cmp	r3, #8
 397 004c 06DC     		bgt	.L34
 398 004e 012B     		cmp	r3, #1
 399 0050 34DB     		blt	.L31
 400 0052 022B     		cmp	r3, #2
 401 0054 38DD     		ble	.L86
 402 0056 042B     		cmp	r3, #4
 403 0058 36D0     		beq	.L86
 404 005a 2FE0     		b	.L31
 405              	.L34:
 406 005c B3F5807F 		cmp	r3, #256
 407 0060 2CDD     		ble	.L31
 408 0062 B3F5817F 		cmp	r3, #258
 409 0066 2FDD     		ble	.L86
 410 0068 B3F5827F 		cmp	r3, #260
 411 006c 2CD0     		beq	.L86
 412 006e 25E0     		b	.L31
 413              	.L33:
 414 0070 48F20802 		movw	r2, #32776
 415 0074 9342     		cmp	r3, r2
 416 0076 27D0     		beq	.L86
 417 0078 48F20802 		movw	r2, #32776
 418 007c 9342     		cmp	r3, r2
 419 007e 0BDC     		bgt	.L35
 420 0080 B3F5004F 		cmp	r3, #32768
 421 0084 1ADD     		ble	.L31
 422 0086 48F20202 		movw	r2, #32770
 423 008a 9342     		cmp	r3, r2
 424 008c 1CDD     		ble	.L86
 425 008e 48F20402 		movw	r2, #32772
 426 0092 9342     		cmp	r3, r2
 427 0094 18D0     		beq	.L86
 428 0096 11E0     		b	.L31
 429              	.L35:
 430 0098 48F20412 		movw	r2, #33028
 431 009c 9342     		cmp	r3, r2
 432 009e 13D0     		beq	.L86
 433 00a0 48F20412 		movw	r2, #33028
 434 00a4 9342     		cmp	r3, r2
 435 00a6 05DC     		bgt	.L36
 436 00a8 A3F50143 		sub	r3, r3, #33024
 437 00ac 013B     		subs	r3, r3, #1
 438 00ae 012B     		cmp	r3, #1
 439 00b0 04D8     		bhi	.L31
 350:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         case OS_OPT_PEND_FLAG_CLR_ALL:
 351:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         case OS_OPT_PEND_FLAG_CLR_ANY:
 352:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         case OS_OPT_PEND_FLAG_SET_ALL:
 353:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         case OS_OPT_PEND_FLAG_SET_ANY:
 354:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         case OS_OPT_PEND_FLAG_CLR_ALL | OS_OPT_PEND_FLAG_CONSUME:
 355:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         case OS_OPT_PEND_FLAG_CLR_ANY | OS_OPT_PEND_FLAG_CONSUME:
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 15


 356:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         case OS_OPT_PEND_FLAG_SET_ALL | OS_OPT_PEND_FLAG_CONSUME:
 357:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         case OS_OPT_PEND_FLAG_SET_ANY | OS_OPT_PEND_FLAG_CONSUME:
 358:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         case OS_OPT_PEND_FLAG_CLR_ALL | OS_OPT_PEND_NON_BLOCKING:
 359:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         case OS_OPT_PEND_FLAG_CLR_ANY | OS_OPT_PEND_NON_BLOCKING:
 360:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         case OS_OPT_PEND_FLAG_SET_ALL | OS_OPT_PEND_NON_BLOCKING:
 361:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         case OS_OPT_PEND_FLAG_SET_ANY | OS_OPT_PEND_NON_BLOCKING:
 362:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         case OS_OPT_PEND_FLAG_CLR_ALL | OS_OPT_PEND_FLAG_CONSUME | OS_OPT_PEND_NON_BLOCKING:
 363:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         case OS_OPT_PEND_FLAG_CLR_ANY | OS_OPT_PEND_FLAG_CONSUME | OS_OPT_PEND_NON_BLOCKING:
 364:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         case OS_OPT_PEND_FLAG_SET_ALL | OS_OPT_PEND_FLAG_CONSUME | OS_OPT_PEND_NON_BLOCKING:
 365:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         case OS_OPT_PEND_FLAG_SET_ANY | OS_OPT_PEND_FLAG_CONSUME | OS_OPT_PEND_NON_BLOCKING:
 366:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              break;
 440              		.loc 1 366 0
 441 00b2 09E0     		b	.L86
 442              	.L36:
 349:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         case OS_OPT_PEND_FLAG_CLR_ALL:
 443              		.loc 1 349 0
 444 00b4 48F20812 		movw	r2, #33032
 445 00b8 9342     		cmp	r3, r2
 446 00ba 05D0     		beq	.L86
 447              	.L31:
 367:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 368:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         default:
 369:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****             *p_err = OS_ERR_OPT_INVALID;
 448              		.loc 1 369 0
 449 00bc FB6C     		ldr	r3, [r7, #76]
 450 00be 45F62562 		movw	r2, #24101
 451 00c2 1A80     		strh	r2, [r3]	@ movhi
 370:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              return ((OS_OBJ_QTY)0);
 452              		.loc 1 370 0
 453 00c4 0023     		movs	r3, #0
 454 00c6 1CE2     		b	.L85
 455              	.L86:
 366:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 456              		.loc 1 366 0
 457 00c8 00BF     		nop
 371:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     }
 372:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #endif
 373:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 374:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #if OS_CFG_OBJ_TYPE_CHK_EN > 0u
 375:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     if (p_grp->Type != OS_OBJ_TYPE_FLAG) {                  /* Validate that we are pointing at an 
 376:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****        *p_err = OS_ERR_OBJ_TYPE;
 377:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         return ((OS_FLAGS)0);
 378:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     }
 379:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #endif
 380:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 381:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     if ((opt & OS_OPT_PEND_FLAG_CONSUME) != (OS_OPT)0) {    /* See if we need to consume the flags 
 458              		.loc 1 381 0
 459 00ca 7B88     		ldrh	r3, [r7, #2]
 460 00cc 03F48073 		and	r3, r3, #256
 461 00d0 002B     		cmp	r3, #0
 462 00d2 03D0     		beq	.L38
 382:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         consume = DEF_TRUE;
 463              		.loc 1 382 0
 464 00d4 0123     		movs	r3, #1
 465 00d6 87F83F30 		strb	r3, [r7, #63]
 466 00da 02E0     		b	.L39
 467              	.L38:
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 16


 383:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     } else {
 384:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         consume = DEF_FALSE;
 468              		.loc 1 384 0
 469 00dc 0023     		movs	r3, #0
 470 00de 87F83F30 		strb	r3, [r7, #63]
 471              	.L39:
 385:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     }
 386:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 387:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     if (p_ts != (CPU_TS *)0) {
 472              		.loc 1 387 0
 473 00e2 BB6C     		ldr	r3, [r7, #72]
 474 00e4 002B     		cmp	r3, #0
 475 00e6 02D0     		beq	.L40
 388:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****        *p_ts = (CPU_TS)0;                                   /* Initialize the returned timestamp   
 476              		.loc 1 388 0
 477 00e8 BB6C     		ldr	r3, [r7, #72]
 478 00ea 0022     		movs	r2, #0
 479 00ec 1A60     		str	r2, [r3]
 480              	.L40:
 389:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     }
 390:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 391:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     mode = opt & OS_OPT_PEND_FLAG_MASK;
 481              		.loc 1 391 0
 482 00ee 7B88     		ldrh	r3, [r7, #2]	@ movhi
 483 00f0 03F00F03 		and	r3, r3, #15
 484 00f4 FB86     		strh	r3, [r7, #54]	@ movhi
 392:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     CPU_CRITICAL_ENTER();
 485              		.loc 1 392 0
 486 00f6 FFF7FEFF 		bl	CPU_SR_Save
 487 00fa B863     		str	r0, [r7, #56]
 393:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     switch (mode) {
 488              		.loc 1 393 0
 489 00fc FB8E     		ldrh	r3, [r7, #54]
 490 00fe 013B     		subs	r3, r3, #1
 491 0100 072B     		cmp	r3, #7
 492 0102 00F25881 		bhi	.L41
 493 0106 01A2     		adr	r2, .L43
 494 0108 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 495              		.p2align 2
 496              	.L43:
 497 010c 79020000 		.word	.L42+1
 498 0110 19030000 		.word	.L44+1
 499 0114 B7030000 		.word	.L41+1
 500 0118 2D010000 		.word	.L45+1
 501 011c B7030000 		.word	.L41+1
 502 0120 B7030000 		.word	.L41+1
 503 0124 B7030000 		.word	.L41+1
 504 0128 CD010000 		.word	.L46+1
 505              		.p2align 1
 506              	.L45:
 394:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         case OS_OPT_PEND_FLAG_SET_ALL:                      /* See if all required flags are set   
 395:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              flags_rdy = (OS_FLAGS)(p_grp->Flags & flags);  /* Extract only the bits we want       
 507              		.loc 1 395 0
 508 012c FB68     		ldr	r3, [r7, #12]
 509 012e 1A6A     		ldr	r2, [r3, #32]
 510 0130 BB68     		ldr	r3, [r7, #8]
 511 0132 1340     		ands	r3, r3, r2
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 17


 512 0134 3B63     		str	r3, [r7, #48]
 396:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              if (flags_rdy == flags) {                      /* Must match ALL the bits that we want
 513              		.loc 1 396 0
 514 0136 3A6B     		ldr	r2, [r7, #48]
 515 0138 BB68     		ldr	r3, [r7, #8]
 516 013a 9A42     		cmp	r2, r3
 517 013c 1ED1     		bne	.L47
 397:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  if (consume == DEF_TRUE) {                 /* See if we need to consume the flags 
 518              		.loc 1 397 0
 519 013e 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 520 0142 012B     		cmp	r3, #1
 521 0144 06D1     		bne	.L48
 398:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                      p_grp->Flags &= ~flags_rdy;            /* Clear ONLY the flags that we wanted 
 522              		.loc 1 398 0
 523 0146 FB68     		ldr	r3, [r7, #12]
 524 0148 1A6A     		ldr	r2, [r3, #32]
 525 014a 3B6B     		ldr	r3, [r7, #48]
 526 014c DB43     		mvns	r3, r3
 527 014e 1A40     		ands	r2, r2, r3
 528 0150 FB68     		ldr	r3, [r7, #12]
 529 0152 1A62     		str	r2, [r3, #32]
 530              	.L48:
 399:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  }
 400:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  OSTCBCurPtr->FlagsRdy = flags_rdy;         /* Save flags that were ready          
 531              		.loc 1 400 0
 532 0154 464B     		ldr	r3, .L87+4
 533 0156 1B68     		ldr	r3, [r3]
 534 0158 3A6B     		ldr	r2, [r7, #48]
 535 015a C3F88420 		str	r2, [r3, #132]
 401:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  if (p_ts != (CPU_TS *)0) {
 536              		.loc 1 401 0
 537 015e BB6C     		ldr	r3, [r7, #72]
 538 0160 002B     		cmp	r3, #0
 539 0162 03D0     		beq	.L49
 402:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                     *p_ts  = p_grp->TS;
 540              		.loc 1 402 0
 541 0164 FB68     		ldr	r3, [r7, #12]
 542 0166 5A6A     		ldr	r2, [r3, #36]
 543 0168 BB6C     		ldr	r3, [r7, #72]
 544 016a 1A60     		str	r2, [r3]
 545              	.L49:
 403:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  }
 404:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  CPU_CRITICAL_EXIT();                       /* Yes, condition met, return to caller
 546              		.loc 1 404 0
 547 016c B86B     		ldr	r0, [r7, #56]
 548 016e FFF7FEFF 		bl	CPU_SR_Restore
 405:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                 *p_err = OS_ERR_NONE;
 549              		.loc 1 405 0
 550 0172 FB6C     		ldr	r3, [r7, #76]
 551 0174 0022     		movs	r2, #0
 552 0176 1A80     		strh	r2, [r3]	@ movhi
 406:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  return (flags_rdy);
 553              		.loc 1 406 0
 554 0178 3B6B     		ldr	r3, [r7, #48]
 555 017a C2E1     		b	.L85
 556              	.L47:
 407:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              } else {                                       /* Block task until events occur or tim
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 18


 408:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  if ((opt & OS_OPT_PEND_NON_BLOCKING) != (OS_OPT)0) {
 557              		.loc 1 408 0
 558 017c B7F90230 		ldrsh	r3, [r7, #2]
 559 0180 002B     		cmp	r3, #0
 560 0182 08DA     		bge	.L50
 409:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                      CPU_CRITICAL_EXIT();
 561              		.loc 1 409 0
 562 0184 B86B     		ldr	r0, [r7, #56]
 563 0186 FFF7FEFF 		bl	CPU_SR_Restore
 410:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                     *p_err = OS_ERR_PEND_WOULD_BLOCK;       /* Specified non-blocking so task would
 564              		.loc 1 410 0
 565 018a FB6C     		ldr	r3, [r7, #76]
 566 018c 46F2B012 		movw	r2, #25008
 567 0190 1A80     		strh	r2, [r3]	@ movhi
 411:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                      return ((OS_FLAGS)0);
 568              		.loc 1 411 0
 569 0192 0023     		movs	r3, #0
 570 0194 B5E1     		b	.L85
 571              	.L50:
 412:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  } else {                                   /* Specified blocking so check is sched
 413:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                      if (OSSchedLockNestingCtr > (OS_NESTING_CTR)0) { /* See if called with schedul
 572              		.loc 1 413 0
 573 0196 374B     		ldr	r3, .L87+8
 574 0198 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 575 019a 002B     		cmp	r3, #0
 576 019c 08D0     		beq	.L51
 414:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                          CPU_CRITICAL_EXIT();
 577              		.loc 1 414 0
 578 019e B86B     		ldr	r0, [r7, #56]
 579 01a0 FFF7FEFF 		bl	CPU_SR_Restore
 415:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                         *p_err = OS_ERR_SCHED_LOCKED;                 /* ... can't PEND when locked
 580              		.loc 1 415 0
 581 01a4 FB6C     		ldr	r3, [r7, #76]
 582 01a6 46F66352 		movw	r2, #28003
 583 01aa 1A80     		strh	r2, [r3]	@ movhi
 416:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                          return ((OS_FLAGS)0);
 584              		.loc 1 416 0
 585 01ac 0023     		movs	r3, #0
 586 01ae A8E1     		b	.L85
 587              	.L51:
 417:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                      }
 418:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  }
 419:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                                                             /* Lock the scheduler/re-enable interru
 420:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  OS_CRITICAL_ENTER_CPU_EXIT();              
 421:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  OS_FlagBlock(&pend_data,
 588              		.loc 1 421 0
 589 01b0 7A88     		ldrh	r2, [r7, #2]
 590 01b2 07F11000 		add	r0, r7, #16
 591 01b6 7B68     		ldr	r3, [r7, #4]
 592 01b8 0093     		str	r3, [sp]
 593 01ba 1346     		mov	r3, r2
 594 01bc BA68     		ldr	r2, [r7, #8]
 595 01be F968     		ldr	r1, [r7, #12]
 596 01c0 FFF7FEFF 		bl	OS_FlagBlock
 422:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                               p_grp,
 423:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                               flags,
 424:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                               opt,
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 19


 425:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                               timeout);
 426:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  OS_CRITICAL_EXIT_NO_SCHED();
 597              		.loc 1 426 0
 598 01c4 B86B     		ldr	r0, [r7, #56]
 599 01c6 FFF7FEFF 		bl	CPU_SR_Restore
 427:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              }
 428:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              break;
 600              		.loc 1 428 0
 601 01ca FDE0     		b	.L52
 602              	.L46:
 429:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 430:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         case OS_OPT_PEND_FLAG_SET_ANY:
 431:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              flags_rdy = (OS_FLAGS)(p_grp->Flags & flags);  /* Extract only the bits we want       
 603              		.loc 1 431 0
 604 01cc FB68     		ldr	r3, [r7, #12]
 605 01ce 1A6A     		ldr	r2, [r3, #32]
 606 01d0 BB68     		ldr	r3, [r7, #8]
 607 01d2 1340     		ands	r3, r3, r2
 608 01d4 3B63     		str	r3, [r7, #48]
 432:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              if (flags_rdy != (OS_FLAGS)0) {                /* See if any flag set                 
 609              		.loc 1 432 0
 610 01d6 3B6B     		ldr	r3, [r7, #48]
 611 01d8 002B     		cmp	r3, #0
 612 01da 1ED0     		beq	.L53
 433:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  if (consume == DEF_TRUE) {                 /* See if we need to consume the flags 
 613              		.loc 1 433 0
 614 01dc 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 615 01e0 012B     		cmp	r3, #1
 616 01e2 06D1     		bne	.L54
 434:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                      p_grp->Flags &= ~flags_rdy;            /* Clear ONLY the flags that we got    
 617              		.loc 1 434 0
 618 01e4 FB68     		ldr	r3, [r7, #12]
 619 01e6 1A6A     		ldr	r2, [r3, #32]
 620 01e8 3B6B     		ldr	r3, [r7, #48]
 621 01ea DB43     		mvns	r3, r3
 622 01ec 1A40     		ands	r2, r2, r3
 623 01ee FB68     		ldr	r3, [r7, #12]
 624 01f0 1A62     		str	r2, [r3, #32]
 625              	.L54:
 435:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  }
 436:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  OSTCBCurPtr->FlagsRdy = flags_rdy;         /* Save flags that were ready          
 626              		.loc 1 436 0
 627 01f2 1F4B     		ldr	r3, .L87+4
 628 01f4 1B68     		ldr	r3, [r3]
 629 01f6 3A6B     		ldr	r2, [r7, #48]
 630 01f8 C3F88420 		str	r2, [r3, #132]
 437:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  if (p_ts != (CPU_TS *)0) {
 631              		.loc 1 437 0
 632 01fc BB6C     		ldr	r3, [r7, #72]
 633 01fe 002B     		cmp	r3, #0
 634 0200 03D0     		beq	.L55
 438:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                     *p_ts  = p_grp->TS;
 635              		.loc 1 438 0
 636 0202 FB68     		ldr	r3, [r7, #12]
 637 0204 5A6A     		ldr	r2, [r3, #36]
 638 0206 BB6C     		ldr	r3, [r7, #72]
 639 0208 1A60     		str	r2, [r3]
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 20


 640              	.L55:
 439:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  }
 440:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  CPU_CRITICAL_EXIT();                       /* Yes, condition met, return to caller
 641              		.loc 1 440 0
 642 020a B86B     		ldr	r0, [r7, #56]
 643 020c FFF7FEFF 		bl	CPU_SR_Restore
 441:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                 *p_err = OS_ERR_NONE;
 644              		.loc 1 441 0
 645 0210 FB6C     		ldr	r3, [r7, #76]
 646 0212 0022     		movs	r2, #0
 647 0214 1A80     		strh	r2, [r3]	@ movhi
 442:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  return (flags_rdy);
 648              		.loc 1 442 0
 649 0216 3B6B     		ldr	r3, [r7, #48]
 650 0218 73E1     		b	.L85
 651              	.L53:
 443:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              } else {                                       /* Block task until events occur or tim
 444:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  if ((opt & OS_OPT_PEND_NON_BLOCKING) != (OS_OPT)0) {
 652              		.loc 1 444 0
 653 021a B7F90230 		ldrsh	r3, [r7, #2]
 654 021e 002B     		cmp	r3, #0
 655 0220 08DA     		bge	.L56
 445:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                      CPU_CRITICAL_EXIT();
 656              		.loc 1 445 0
 657 0222 B86B     		ldr	r0, [r7, #56]
 658 0224 FFF7FEFF 		bl	CPU_SR_Restore
 446:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                     *p_err = OS_ERR_PEND_WOULD_BLOCK;       /* Specified non-blocking so task would
 659              		.loc 1 446 0
 660 0228 FB6C     		ldr	r3, [r7, #76]
 661 022a 46F2B012 		movw	r2, #25008
 662 022e 1A80     		strh	r2, [r3]	@ movhi
 447:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                      return ((OS_FLAGS)0);
 663              		.loc 1 447 0
 664 0230 0023     		movs	r3, #0
 665 0232 66E1     		b	.L85
 666              	.L56:
 448:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  } else {                                   /* Specified blocking so check is sched
 449:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                      if (OSSchedLockNestingCtr > (OS_NESTING_CTR)0) { /* See if called with schedul
 667              		.loc 1 449 0
 668 0234 0F4B     		ldr	r3, .L87+8
 669 0236 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 670 0238 002B     		cmp	r3, #0
 671 023a 08D0     		beq	.L57
 450:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                          CPU_CRITICAL_EXIT();
 672              		.loc 1 450 0
 673 023c B86B     		ldr	r0, [r7, #56]
 674 023e FFF7FEFF 		bl	CPU_SR_Restore
 451:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                         *p_err = OS_ERR_SCHED_LOCKED;                 /* ... can't PEND when locked
 675              		.loc 1 451 0
 676 0242 FB6C     		ldr	r3, [r7, #76]
 677 0244 46F66352 		movw	r2, #28003
 678 0248 1A80     		strh	r2, [r3]	@ movhi
 452:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                          return ((OS_FLAGS)0);
 679              		.loc 1 452 0
 680 024a 0023     		movs	r3, #0
 681 024c 59E1     		b	.L85
 682              	.L57:
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 21


 453:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                      }
 454:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  }
 455:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                                                             /* Lock the scheduler/re-enable interru
 456:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  OS_CRITICAL_ENTER_CPU_EXIT();              
 457:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  OS_FlagBlock(&pend_data,
 683              		.loc 1 457 0
 684 024e 7A88     		ldrh	r2, [r7, #2]
 685 0250 07F11000 		add	r0, r7, #16
 686 0254 7B68     		ldr	r3, [r7, #4]
 687 0256 0093     		str	r3, [sp]
 688 0258 1346     		mov	r3, r2
 689 025a BA68     		ldr	r2, [r7, #8]
 690 025c F968     		ldr	r1, [r7, #12]
 691 025e FFF7FEFF 		bl	OS_FlagBlock
 458:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                               p_grp,
 459:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                               flags,
 460:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                               opt,
 461:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                               timeout);
 462:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  OS_CRITICAL_EXIT_NO_SCHED();
 692              		.loc 1 462 0
 693 0262 B86B     		ldr	r0, [r7, #56]
 694 0264 FFF7FEFF 		bl	CPU_SR_Restore
 463:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              }
 464:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              break;
 695              		.loc 1 464 0
 696 0268 AEE0     		b	.L52
 697              	.L88:
 698 026a 00BF     		.align	2
 699              	.L87:
 700 026c 00000000 		.word	OSIntNestingCtr
 701 0270 00000000 		.word	OSTCBCurPtr
 702 0274 00000000 		.word	OSSchedLockNestingCtr
 703              	.L42:
 465:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 466:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #if OS_CFG_FLAG_MODE_CLR_EN > 0u
 467:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         case OS_OPT_PEND_FLAG_CLR_ALL:                      /* See if all required flags are cleare
 468:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              flags_rdy = (OS_FLAGS)(~p_grp->Flags & flags); /* Extract only the bits we want       
 704              		.loc 1 468 0
 705 0278 FB68     		ldr	r3, [r7, #12]
 706 027a 1B6A     		ldr	r3, [r3, #32]
 707 027c DA43     		mvns	r2, r3
 708 027e BB68     		ldr	r3, [r7, #8]
 709 0280 1340     		ands	r3, r3, r2
 710 0282 3B63     		str	r3, [r7, #48]
 469:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              if (flags_rdy == flags) {                      /* Must match ALL the bits that we want
 711              		.loc 1 469 0
 712 0284 3A6B     		ldr	r2, [r7, #48]
 713 0286 BB68     		ldr	r3, [r7, #8]
 714 0288 9A42     		cmp	r2, r3
 715 028a 1DD1     		bne	.L58
 470:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  if (consume == DEF_TRUE) {                 /* See if we need to consume the flags 
 716              		.loc 1 470 0
 717 028c 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 718 0290 012B     		cmp	r3, #1
 719 0292 05D1     		bne	.L59
 471:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                      p_grp->Flags |= flags_rdy;             /* Set ONLY the flags that we wanted   
 720              		.loc 1 471 0
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 22


 721 0294 FB68     		ldr	r3, [r7, #12]
 722 0296 1A6A     		ldr	r2, [r3, #32]
 723 0298 3B6B     		ldr	r3, [r7, #48]
 724 029a 1A43     		orrs	r2, r2, r3
 725 029c FB68     		ldr	r3, [r7, #12]
 726 029e 1A62     		str	r2, [r3, #32]
 727              	.L59:
 472:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  }
 473:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  OSTCBCurPtr->FlagsRdy = flags_rdy;         /* Save flags that were ready          
 728              		.loc 1 473 0
 729 02a0 9A4B     		ldr	r3, .L89
 730 02a2 1B68     		ldr	r3, [r3]
 731 02a4 3A6B     		ldr	r2, [r7, #48]
 732 02a6 C3F88420 		str	r2, [r3, #132]
 474:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  if (p_ts != (CPU_TS *)0) {
 733              		.loc 1 474 0
 734 02aa BB6C     		ldr	r3, [r7, #72]
 735 02ac 002B     		cmp	r3, #0
 736 02ae 03D0     		beq	.L60
 475:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                     *p_ts  = p_grp->TS;
 737              		.loc 1 475 0
 738 02b0 FB68     		ldr	r3, [r7, #12]
 739 02b2 5A6A     		ldr	r2, [r3, #36]
 740 02b4 BB6C     		ldr	r3, [r7, #72]
 741 02b6 1A60     		str	r2, [r3]
 742              	.L60:
 476:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  }
 477:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  CPU_CRITICAL_EXIT();                       /* Yes, condition met, return to caller
 743              		.loc 1 477 0
 744 02b8 B86B     		ldr	r0, [r7, #56]
 745 02ba FFF7FEFF 		bl	CPU_SR_Restore
 478:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                 *p_err = OS_ERR_NONE;
 746              		.loc 1 478 0
 747 02be FB6C     		ldr	r3, [r7, #76]
 748 02c0 0022     		movs	r2, #0
 749 02c2 1A80     		strh	r2, [r3]	@ movhi
 479:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  return (flags_rdy);
 750              		.loc 1 479 0
 751 02c4 3B6B     		ldr	r3, [r7, #48]
 752 02c6 1CE1     		b	.L85
 753              	.L58:
 480:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              } else {                                       /* Block task until events occur or tim
 481:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  if ((opt & OS_OPT_PEND_NON_BLOCKING) != (OS_OPT)0) {
 754              		.loc 1 481 0
 755 02c8 B7F90230 		ldrsh	r3, [r7, #2]
 756 02cc 002B     		cmp	r3, #0
 757 02ce 08DA     		bge	.L61
 482:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                      CPU_CRITICAL_EXIT();
 758              		.loc 1 482 0
 759 02d0 B86B     		ldr	r0, [r7, #56]
 760 02d2 FFF7FEFF 		bl	CPU_SR_Restore
 483:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                     *p_err = OS_ERR_PEND_WOULD_BLOCK;       /* Specified non-blocking so task would
 761              		.loc 1 483 0
 762 02d6 FB6C     		ldr	r3, [r7, #76]
 763 02d8 46F2B012 		movw	r2, #25008
 764 02dc 1A80     		strh	r2, [r3]	@ movhi
 484:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                      return ((OS_FLAGS)0);
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 23


 765              		.loc 1 484 0
 766 02de 0023     		movs	r3, #0
 767 02e0 0FE1     		b	.L85
 768              	.L61:
 485:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  } else {                                   /* Specified blocking so check is sched
 486:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                      if (OSSchedLockNestingCtr > (OS_NESTING_CTR)0) { /* See if called with schedul
 769              		.loc 1 486 0
 770 02e2 8B4B     		ldr	r3, .L89+4
 771 02e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 772 02e6 002B     		cmp	r3, #0
 773 02e8 08D0     		beq	.L62
 487:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                          CPU_CRITICAL_EXIT();
 774              		.loc 1 487 0
 775 02ea B86B     		ldr	r0, [r7, #56]
 776 02ec FFF7FEFF 		bl	CPU_SR_Restore
 488:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                         *p_err = OS_ERR_SCHED_LOCKED;                 /* ... can't PEND when locked
 777              		.loc 1 488 0
 778 02f0 FB6C     		ldr	r3, [r7, #76]
 779 02f2 46F66352 		movw	r2, #28003
 780 02f6 1A80     		strh	r2, [r3]	@ movhi
 489:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                          return ((OS_FLAGS)0);
 781              		.loc 1 489 0
 782 02f8 0023     		movs	r3, #0
 783 02fa 02E1     		b	.L85
 784              	.L62:
 490:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                      }
 491:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  }
 492:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                                                             
 493:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  OS_CRITICAL_ENTER_CPU_EXIT();              /* Lock the scheduler/re-enable interru
 494:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  OS_FlagBlock(&pend_data,
 785              		.loc 1 494 0
 786 02fc 7A88     		ldrh	r2, [r7, #2]
 787 02fe 07F11000 		add	r0, r7, #16
 788 0302 7B68     		ldr	r3, [r7, #4]
 789 0304 0093     		str	r3, [sp]
 790 0306 1346     		mov	r3, r2
 791 0308 BA68     		ldr	r2, [r7, #8]
 792 030a F968     		ldr	r1, [r7, #12]
 793 030c FFF7FEFF 		bl	OS_FlagBlock
 495:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                               p_grp,
 496:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                               flags,
 497:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                               opt,
 498:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                               timeout);
 499:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  OS_CRITICAL_EXIT_NO_SCHED();
 794              		.loc 1 499 0
 795 0310 B86B     		ldr	r0, [r7, #56]
 796 0312 FFF7FEFF 		bl	CPU_SR_Restore
 500:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              }
 501:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              break;
 797              		.loc 1 501 0
 798 0316 57E0     		b	.L52
 799              	.L44:
 502:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 503:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         case OS_OPT_PEND_FLAG_CLR_ANY:
 504:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              flags_rdy = (OS_FLAGS)(~p_grp->Flags & flags); /* Extract only the bits we want       
 800              		.loc 1 504 0
 801 0318 FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 24


 802 031a 1B6A     		ldr	r3, [r3, #32]
 803 031c DA43     		mvns	r2, r3
 804 031e BB68     		ldr	r3, [r7, #8]
 805 0320 1340     		ands	r3, r3, r2
 806 0322 3B63     		str	r3, [r7, #48]
 505:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              if (flags_rdy != (OS_FLAGS)0) {                /* See if any flag cleared             
 807              		.loc 1 505 0
 808 0324 3B6B     		ldr	r3, [r7, #48]
 809 0326 002B     		cmp	r3, #0
 810 0328 1DD0     		beq	.L63
 506:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  if (consume == DEF_TRUE) {                 /* See if we need to consume the flags 
 811              		.loc 1 506 0
 812 032a 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 813 032e 012B     		cmp	r3, #1
 814 0330 05D1     		bne	.L64
 507:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                      p_grp->Flags |= flags_rdy;             /* Set ONLY the flags that we got      
 815              		.loc 1 507 0
 816 0332 FB68     		ldr	r3, [r7, #12]
 817 0334 1A6A     		ldr	r2, [r3, #32]
 818 0336 3B6B     		ldr	r3, [r7, #48]
 819 0338 1A43     		orrs	r2, r2, r3
 820 033a FB68     		ldr	r3, [r7, #12]
 821 033c 1A62     		str	r2, [r3, #32]
 822              	.L64:
 508:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  }
 509:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  OSTCBCurPtr->FlagsRdy = flags_rdy;         /* Save flags that were ready          
 823              		.loc 1 509 0
 824 033e 734B     		ldr	r3, .L89
 825 0340 1B68     		ldr	r3, [r3]
 826 0342 3A6B     		ldr	r2, [r7, #48]
 827 0344 C3F88420 		str	r2, [r3, #132]
 510:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  if (p_ts != (CPU_TS *)0) {
 828              		.loc 1 510 0
 829 0348 BB6C     		ldr	r3, [r7, #72]
 830 034a 002B     		cmp	r3, #0
 831 034c 03D0     		beq	.L65
 511:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                     *p_ts  = p_grp->TS;
 832              		.loc 1 511 0
 833 034e FB68     		ldr	r3, [r7, #12]
 834 0350 5A6A     		ldr	r2, [r3, #36]
 835 0352 BB6C     		ldr	r3, [r7, #72]
 836 0354 1A60     		str	r2, [r3]
 837              	.L65:
 512:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  }
 513:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  CPU_CRITICAL_EXIT();                       /* Yes, condition met, return to caller
 838              		.loc 1 513 0
 839 0356 B86B     		ldr	r0, [r7, #56]
 840 0358 FFF7FEFF 		bl	CPU_SR_Restore
 514:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                 *p_err = OS_ERR_NONE;
 841              		.loc 1 514 0
 842 035c FB6C     		ldr	r3, [r7, #76]
 843 035e 0022     		movs	r2, #0
 844 0360 1A80     		strh	r2, [r3]	@ movhi
 515:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  return (flags_rdy);
 845              		.loc 1 515 0
 846 0362 3B6B     		ldr	r3, [r7, #48]
 847 0364 CDE0     		b	.L85
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 25


 848              	.L63:
 516:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              } else {                                       /* Block task until events occur or tim
 517:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  if ((opt & OS_OPT_PEND_NON_BLOCKING) != (OS_OPT)0) {
 849              		.loc 1 517 0
 850 0366 B7F90230 		ldrsh	r3, [r7, #2]
 851 036a 002B     		cmp	r3, #0
 852 036c 08DA     		bge	.L66
 518:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                      CPU_CRITICAL_EXIT();
 853              		.loc 1 518 0
 854 036e B86B     		ldr	r0, [r7, #56]
 855 0370 FFF7FEFF 		bl	CPU_SR_Restore
 519:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                     *p_err = OS_ERR_PEND_WOULD_BLOCK;       /* Specified non-blocking so task would
 856              		.loc 1 519 0
 857 0374 FB6C     		ldr	r3, [r7, #76]
 858 0376 46F2B012 		movw	r2, #25008
 859 037a 1A80     		strh	r2, [r3]	@ movhi
 520:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                      return ((OS_FLAGS)0);
 860              		.loc 1 520 0
 861 037c 0023     		movs	r3, #0
 862 037e C0E0     		b	.L85
 863              	.L66:
 521:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  } else {                                   /* Specified blocking so check is sched
 522:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                      if (OSSchedLockNestingCtr > (OS_NESTING_CTR)0) { /* See if called with schedul
 864              		.loc 1 522 0
 865 0380 634B     		ldr	r3, .L89+4
 866 0382 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 867 0384 002B     		cmp	r3, #0
 868 0386 08D0     		beq	.L67
 523:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                          CPU_CRITICAL_EXIT();
 869              		.loc 1 523 0
 870 0388 B86B     		ldr	r0, [r7, #56]
 871 038a FFF7FEFF 		bl	CPU_SR_Restore
 524:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                         *p_err = OS_ERR_SCHED_LOCKED;                 /* ... can't PEND when locked
 872              		.loc 1 524 0
 873 038e FB6C     		ldr	r3, [r7, #76]
 874 0390 46F66352 		movw	r2, #28003
 875 0394 1A80     		strh	r2, [r3]	@ movhi
 525:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                          return ((OS_FLAGS)0);
 876              		.loc 1 525 0
 877 0396 0023     		movs	r3, #0
 878 0398 B3E0     		b	.L85
 879              	.L67:
 526:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                      }
 527:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  }
 528:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                                                             
 529:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  OS_CRITICAL_ENTER_CPU_EXIT();              /* Lock the scheduler/re-enable interru
 530:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  OS_FlagBlock(&pend_data,              
 880              		.loc 1 530 0
 881 039a 7A88     		ldrh	r2, [r7, #2]
 882 039c 07F11000 		add	r0, r7, #16
 883 03a0 7B68     		ldr	r3, [r7, #4]
 884 03a2 0093     		str	r3, [sp]
 885 03a4 1346     		mov	r3, r2
 886 03a6 BA68     		ldr	r2, [r7, #8]
 887 03a8 F968     		ldr	r1, [r7, #12]
 888 03aa FFF7FEFF 		bl	OS_FlagBlock
 531:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                               p_grp,
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 26


 532:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                               flags,
 533:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                               opt,
 534:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                               timeout);
 535:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  OS_CRITICAL_EXIT_NO_SCHED();
 889              		.loc 1 535 0
 890 03ae B86B     		ldr	r0, [r7, #56]
 891 03b0 FFF7FEFF 		bl	CPU_SR_Restore
 536:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              }
 537:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              break;
 892              		.loc 1 537 0
 893 03b4 08E0     		b	.L52
 894              	.L41:
 538:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #endif
 539:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 540:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         default:
 541:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              CPU_CRITICAL_EXIT();
 895              		.loc 1 541 0
 896 03b6 B86B     		ldr	r0, [r7, #56]
 897 03b8 FFF7FEFF 		bl	CPU_SR_Restore
 542:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****             *p_err = OS_ERR_OPT_INVALID;
 898              		.loc 1 542 0
 899 03bc FB6C     		ldr	r3, [r7, #76]
 900 03be 45F62562 		movw	r2, #24101
 901 03c2 1A80     		strh	r2, [r3]	@ movhi
 543:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              return ((OS_FLAGS)0);
 902              		.loc 1 543 0
 903 03c4 0023     		movs	r3, #0
 904 03c6 9CE0     		b	.L85
 905              	.L52:
 544:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     }
 545:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 546:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     OSSched();                                              /* Find next HPT ready to run          
 906              		.loc 1 546 0
 907 03c8 FFF7FEFF 		bl	OSSched
 547:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 548:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     CPU_CRITICAL_ENTER();
 908              		.loc 1 548 0
 909 03cc FFF7FEFF 		bl	CPU_SR_Save
 910 03d0 B863     		str	r0, [r7, #56]
 549:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     switch (OSTCBCurPtr->PendStatus) {
 911              		.loc 1 549 0
 912 03d2 4E4B     		ldr	r3, .L89
 913 03d4 1B68     		ldr	r3, [r3]
 914 03d6 93F83530 		ldrb	r3, [r3, #53]	@ zero_extendqisi2
 915 03da 032B     		cmp	r3, #3
 916 03dc 44D8     		bhi	.L68
 917 03de 01A2     		adr	r2, .L70
 918 03e0 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 919              		.p2align 2
 920              	.L70:
 921 03e4 F5030000 		.word	.L69+1
 922 03e8 0D040000 		.word	.L71+1
 923 03ec 49040000 		.word	.L72+1
 924 03f0 2D040000 		.word	.L73+1
 925              		.p2align 1
 926              	.L69:
 550:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         case OS_STATUS_PEND_OK:                             /* We got the vent flags               
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 27


 551:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              if (p_ts != (CPU_TS *)0) {
 927              		.loc 1 551 0
 928 03f4 BB6C     		ldr	r3, [r7, #72]
 929 03f6 002B     		cmp	r3, #0
 930 03f8 04D0     		beq	.L74
 552:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                 *p_ts  = OSTCBCurPtr->TS;
 931              		.loc 1 552 0
 932 03fa 444B     		ldr	r3, .L89
 933 03fc 1B68     		ldr	r3, [r3]
 934 03fe 1A6C     		ldr	r2, [r3, #64]
 935 0400 BB6C     		ldr	r3, [r7, #72]
 936 0402 1A60     		str	r2, [r3]
 937              	.L74:
 553:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              }
 554:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****             *p_err = OS_ERR_NONE;
 938              		.loc 1 554 0
 939 0404 FB6C     		ldr	r3, [r7, #76]
 940 0406 0022     		movs	r2, #0
 941 0408 1A80     		strh	r2, [r3]	@ movhi
 555:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              break;
 942              		.loc 1 555 0
 943 040a 35E0     		b	.L75
 944              	.L71:
 556:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 557:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         case OS_STATUS_PEND_ABORT:                          /* Indicate that we aborted            
 558:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              if (p_ts != (CPU_TS *)0) {
 945              		.loc 1 558 0
 946 040c BB6C     		ldr	r3, [r7, #72]
 947 040e 002B     		cmp	r3, #0
 948 0410 04D0     		beq	.L76
 559:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                 *p_ts  = OSTCBCurPtr->TS;
 949              		.loc 1 559 0
 950 0412 3E4B     		ldr	r3, .L89
 951 0414 1B68     		ldr	r3, [r3]
 952 0416 1A6C     		ldr	r2, [r3, #64]
 953 0418 BB6C     		ldr	r3, [r7, #72]
 954 041a 1A60     		str	r2, [r3]
 955              	.L76:
 560:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              }
 561:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              CPU_CRITICAL_EXIT();
 956              		.loc 1 561 0
 957 041c B86B     		ldr	r0, [r7, #56]
 958 041e FFF7FEFF 		bl	CPU_SR_Restore
 562:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****             *p_err = OS_ERR_PEND_ABORT;
 959              		.loc 1 562 0
 960 0422 FB6C     		ldr	r3, [r7, #76]
 961 0424 46F2A912 		movw	r2, #25001
 962 0428 1A80     		strh	r2, [r3]	@ movhi
 563:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              break;
 963              		.loc 1 563 0
 964 042a 25E0     		b	.L75
 965              	.L73:
 564:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 565:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         case OS_STATUS_PEND_TIMEOUT:                        /* Indicate that we didn't get semaphor
 566:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              if (p_ts != (CPU_TS *)0) {
 966              		.loc 1 566 0
 967 042c BB6C     		ldr	r3, [r7, #72]
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 28


 968 042e 002B     		cmp	r3, #0
 969 0430 02D0     		beq	.L77
 567:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                 *p_ts  = (CPU_TS  )0;
 970              		.loc 1 567 0
 971 0432 BB6C     		ldr	r3, [r7, #72]
 972 0434 0022     		movs	r2, #0
 973 0436 1A60     		str	r2, [r3]
 974              	.L77:
 568:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              }
 569:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              CPU_CRITICAL_EXIT();
 975              		.loc 1 569 0
 976 0438 B86B     		ldr	r0, [r7, #56]
 977 043a FFF7FEFF 		bl	CPU_SR_Restore
 570:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****             *p_err = OS_ERR_TIMEOUT;
 978              		.loc 1 570 0
 979 043e FB6C     		ldr	r3, [r7, #76]
 980 0440 47F2D922 		movw	r2, #29401
 981 0444 1A80     		strh	r2, [r3]	@ movhi
 571:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              break;
 982              		.loc 1 571 0
 983 0446 17E0     		b	.L75
 984              	.L72:
 572:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 573:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         case OS_STATUS_PEND_DEL:                            /* Indicate that object pended on has b
 574:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              if (p_ts != (CPU_TS *)0) {
 985              		.loc 1 574 0
 986 0448 BB6C     		ldr	r3, [r7, #72]
 987 044a 002B     		cmp	r3, #0
 988 044c 04D0     		beq	.L78
 575:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                 *p_ts  = OSTCBCurPtr->TS;
 989              		.loc 1 575 0
 990 044e 2F4B     		ldr	r3, .L89
 991 0450 1B68     		ldr	r3, [r3]
 992 0452 1A6C     		ldr	r2, [r3, #64]
 993 0454 BB6C     		ldr	r3, [r7, #72]
 994 0456 1A60     		str	r2, [r3]
 995              	.L78:
 576:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              }
 577:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              CPU_CRITICAL_EXIT();
 996              		.loc 1 577 0
 997 0458 B86B     		ldr	r0, [r7, #56]
 998 045a FFF7FEFF 		bl	CPU_SR_Restore
 578:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****             *p_err = OS_ERR_OBJ_DEL;
 999              		.loc 1 578 0
 1000 045e FB6C     		ldr	r3, [r7, #76]
 1001 0460 45F6C252 		movw	r2, #24002
 1002 0464 1A80     		strh	r2, [r3]	@ movhi
 579:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              break;
 1003              		.loc 1 579 0
 1004 0466 07E0     		b	.L75
 1005              	.L68:
 580:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 581:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         default:
 582:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              CPU_CRITICAL_EXIT();
 1006              		.loc 1 582 0
 1007 0468 B86B     		ldr	r0, [r7, #56]
 1008 046a FFF7FEFF 		bl	CPU_SR_Restore
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 29


 583:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****             *p_err = OS_ERR_STATUS_INVALID;
 1009              		.loc 1 583 0
 1010 046e FB6C     		ldr	r3, [r7, #76]
 1011 0470 46F62E62 		movw	r2, #28206
 1012 0474 1A80     		strh	r2, [r3]	@ movhi
 584:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              break;
 1013              		.loc 1 584 0
 1014 0476 00BF     		nop
 1015              	.L75:
 585:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     }
 586:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     if (*p_err != OS_ERR_NONE) {
 1016              		.loc 1 586 0
 1017 0478 FB6C     		ldr	r3, [r7, #76]
 1018 047a 1B88     		ldrh	r3, [r3]
 1019 047c 002B     		cmp	r3, #0
 1020 047e 01D0     		beq	.L79
 587:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         return ((OS_FLAGS)0);
 1021              		.loc 1 587 0
 1022 0480 0023     		movs	r3, #0
 1023 0482 3EE0     		b	.L85
 1024              	.L79:
 588:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     }
 589:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 590:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     flags_rdy = OSTCBCurPtr->FlagsRdy;
 1025              		.loc 1 590 0
 1026 0484 214B     		ldr	r3, .L89
 1027 0486 1B68     		ldr	r3, [r3]
 1028 0488 D3F88430 		ldr	r3, [r3, #132]
 1029 048c 3B63     		str	r3, [r7, #48]
 591:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     if (consume == DEF_TRUE) {                              /* See if we need to consume the flags 
 1030              		.loc 1 591 0
 1031 048e 97F83F30 		ldrb	r3, [r7, #63]	@ zero_extendqisi2
 1032 0492 012B     		cmp	r3, #1
 1033 0494 2ED1     		bne	.L80
 592:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         switch (mode) {
 1034              		.loc 1 592 0
 1035 0496 FB8E     		ldrh	r3, [r7, #54]
 1036 0498 013B     		subs	r3, r3, #1
 1037 049a 072B     		cmp	r3, #7
 1038 049c 21D8     		bhi	.L81
 1039 049e 01A2     		adr	r2, .L83
 1040 04a0 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1041              		.p2align 2
 1042              	.L83:
 1043 04a4 D5040000 		.word	.L82+1
 1044 04a8 D5040000 		.word	.L82+1
 1045 04ac E3040000 		.word	.L81+1
 1046 04b0 C5040000 		.word	.L84+1
 1047 04b4 E3040000 		.word	.L81+1
 1048 04b8 E3040000 		.word	.L81+1
 1049 04bc E3040000 		.word	.L81+1
 1050 04c0 C5040000 		.word	.L84+1
 1051              		.p2align 1
 1052              	.L84:
 593:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****             case OS_OPT_PEND_FLAG_SET_ALL:
 594:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****             case OS_OPT_PEND_FLAG_SET_ANY:                  /* Clear ONLY the flags we got         
 595:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  p_grp->Flags &= ~flags_rdy;
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 30


 1053              		.loc 1 595 0
 1054 04c4 FB68     		ldr	r3, [r7, #12]
 1055 04c6 1A6A     		ldr	r2, [r3, #32]
 1056 04c8 3B6B     		ldr	r3, [r7, #48]
 1057 04ca DB43     		mvns	r3, r3
 1058 04cc 1A40     		ands	r2, r2, r3
 1059 04ce FB68     		ldr	r3, [r7, #12]
 1060 04d0 1A62     		str	r2, [r3, #32]
 596:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  break;
 1061              		.loc 1 596 0
 1062 04d2 0FE0     		b	.L80
 1063              	.L82:
 597:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 598:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #if OS_CFG_FLAG_MODE_CLR_EN > 0u
 599:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****             case OS_OPT_PEND_FLAG_CLR_ALL:
 600:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****             case OS_OPT_PEND_FLAG_CLR_ANY:                  /* Set   ONLY the flags we got         
 601:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  p_grp->Flags |=  flags_rdy;
 1064              		.loc 1 601 0
 1065 04d4 FB68     		ldr	r3, [r7, #12]
 1066 04d6 1A6A     		ldr	r2, [r3, #32]
 1067 04d8 3B6B     		ldr	r3, [r7, #48]
 1068 04da 1A43     		orrs	r2, r2, r3
 1069 04dc FB68     		ldr	r3, [r7, #12]
 1070 04de 1A62     		str	r2, [r3, #32]
 602:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  break;
 1071              		.loc 1 602 0
 1072 04e0 08E0     		b	.L80
 1073              	.L81:
 603:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #endif
 604:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****             default:
 605:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  CPU_CRITICAL_EXIT();
 1074              		.loc 1 605 0
 1075 04e2 B86B     		ldr	r0, [r7, #56]
 1076 04e4 FFF7FEFF 		bl	CPU_SR_Restore
 606:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                 *p_err = OS_ERR_OPT_INVALID;
 1077              		.loc 1 606 0
 1078 04e8 FB6C     		ldr	r3, [r7, #76]
 1079 04ea 45F62562 		movw	r2, #24101
 1080 04ee 1A80     		strh	r2, [r3]	@ movhi
 607:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  return ((OS_FLAGS)0);
 1081              		.loc 1 607 0
 1082 04f0 0023     		movs	r3, #0
 1083 04f2 06E0     		b	.L85
 1084              	.L80:
 608:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         }
 609:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     }
 610:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     CPU_CRITICAL_EXIT();
 1085              		.loc 1 610 0
 1086 04f4 B86B     		ldr	r0, [r7, #56]
 1087 04f6 FFF7FEFF 		bl	CPU_SR_Restore
 611:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****    *p_err = OS_ERR_NONE;                                    /* Event(s) must have occurred         
 1088              		.loc 1 611 0
 1089 04fa FB6C     		ldr	r3, [r7, #76]
 1090 04fc 0022     		movs	r2, #0
 1091 04fe 1A80     		strh	r2, [r3]	@ movhi
 612:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     return (flags_rdy);
 1092              		.loc 1 612 0
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 31


 1093 0500 3B6B     		ldr	r3, [r7, #48]
 1094              	.L85:
 613:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** }
 1095              		.loc 1 613 0 discriminator 1
 1096 0502 1846     		mov	r0, r3
 1097 0504 4037     		adds	r7, r7, #64
 1098              		.cfi_def_cfa_offset 8
 1099 0506 BD46     		mov	sp, r7
 1100              		.cfi_def_cfa_register 13
 1101              		@ sp needed
 1102 0508 80BD     		pop	{r7, pc}
 1103              	.L90:
 1104 050a 00BF     		.align	2
 1105              	.L89:
 1106 050c 00000000 		.word	OSTCBCurPtr
 1107 0510 00000000 		.word	OSSchedLockNestingCtr
 1108              		.cfi_endproc
 1109              	.LFE2:
 1110              		.size	OSFlagPend, .-OSFlagPend
 1111              		.section	.text.OSFlagPendAbort,"ax",%progbits
 1112              		.align	2
 1113              		.global	OSFlagPendAbort
 1114              		.thumb
 1115              		.thumb_func
 1116              		.type	OSFlagPendAbort, %function
 1117              	OSFlagPendAbort:
 1118              	.LFB3:
 614:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 615:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** /*$PAGE*/
 616:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** /*
 617:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** ***************************************************************************************************
 618:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                          ABORT WAITING ON AN EVENT FLAG GROUP
 619:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 620:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** * Description: This function aborts & readies any tasks currently waiting on an event flag group.  
 621:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *              be used to fault-abort the wait on the event flag group, rather than to normally pos
 622:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *              group OSFlagPost().
 623:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 624:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** * Arguments  : p_grp     is a pointer to the event flag group
 625:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 626:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *              opt       determines the type of ABORT performed:
 627:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 628:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                            OS_OPT_PEND_ABORT_1          ABORT wait for a single task (HPT) waitin
 629:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                            OS_OPT_PEND_ABORT_ALL        ABORT wait for ALL tasks that are  waitin
 630:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                            OS_OPT_POST_NO_SCHED         Do not call the scheduler
 631:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 632:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *              p_err     is a pointer to a variable that will contain an error code returned by thi
 633:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 634:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                            OS_ERR_NONE                  At least one task waiting on the event fl
 635:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                                         readied and informed of the aborted wait;
 636:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                                         for the number of tasks whose wait on the
 637:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                                         was aborted.
 638:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                            OS_ERR_OBJ_PTR_NULL          If 'p_grp' is a NULL pointer.
 639:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                            OS_ERR_OBJ_TYPE              If 'p_grp' is not pointing at an event fl
 640:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                            OS_ERR_OPT_INVALID           If you specified an invalid option
 641:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                            OS_ERR_PEND_ABORT_ISR        If you called this function from an ISR
 642:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                            OS_ERR_PEND_ABORT_NONE       No task were pending
 643:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 32


 644:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** * Returns    : == 0          if no tasks were waiting on the event flag group, or upon error.
 645:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *              >  0          if one or more tasks waiting on the event flag group are now readied a
 646:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** ***************************************************************************************************
 647:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** */
 648:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 649:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #if OS_CFG_FLAG_PEND_ABORT_EN > 0u
 650:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** OS_OBJ_QTY  OSFlagPendAbort (OS_FLAG_GRP  *p_grp,
 651:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                              OS_OPT        opt,
 652:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                              OS_ERR       *p_err)
 653:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** {
 1119              		.loc 1 653 0
 1120              		.cfi_startproc
 1121              		@ args = 0, pretend = 0, frame = 40
 1122              		@ frame_needed = 1, uses_anonymous_args = 0
 1123 0000 80B5     		push	{r7, lr}
 1124              		.cfi_def_cfa_offset 8
 1125              		.cfi_offset 7, -8
 1126              		.cfi_offset 14, -4
 1127 0002 8AB0     		sub	sp, sp, #40
 1128              		.cfi_def_cfa_offset 48
 1129 0004 00AF     		add	r7, sp, #0
 1130              		.cfi_def_cfa_register 7
 1131 0006 F860     		str	r0, [r7, #12]
 1132 0008 0B46     		mov	r3, r1
 1133 000a 7A60     		str	r2, [r7, #4]
 1134 000c 7B81     		strh	r3, [r7, #10]	@ movhi
 654:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     OS_PEND_LIST  *p_pend_list;
 655:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     OS_TCB        *p_tcb;
 656:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     CPU_TS         ts;
 657:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     OS_OBJ_QTY     nbr_tasks;
 658:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     CPU_SR_ALLOC();
 1135              		.loc 1 658 0
 1136 000e 0023     		movs	r3, #0
 1137 0010 3B62     		str	r3, [r7, #32]
 659:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 660:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 661:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 662:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #ifdef OS_SAFETY_CRITICAL
 663:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     if (p_err == (OS_ERR *)0) {
 664:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 665:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         return ((OS_OBJ_QTY)0u);
 666:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     }
 667:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #endif
 668:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 669:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #if OS_CFG_CALLED_FROM_ISR_CHK_EN > 0u
 670:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     if (OSIntNestingCtr > (OS_NESTING_CTR)0u) {             /* Not allowed to Pend Abort from an IS
 1138              		.loc 1 670 0
 1139 0012 354B     		ldr	r3, .L106
 1140 0014 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1141 0016 002B     		cmp	r3, #0
 1142 0018 05D0     		beq	.L92
 671:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****        *p_err = OS_ERR_PEND_ABORT_ISR;
 1143              		.loc 1 671 0
 1144 001a 7B68     		ldr	r3, [r7, #4]
 1145 001c 46F2AA12 		movw	r2, #25002
 1146 0020 1A80     		strh	r2, [r3]	@ movhi
 672:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         return ((OS_OBJ_QTY)0u);
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 33


 1147              		.loc 1 672 0
 1148 0022 0023     		movs	r3, #0
 1149 0024 5BE0     		b	.L93
 1150              	.L92:
 673:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     }
 674:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #endif
 675:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 676:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #if OS_CFG_ARG_CHK_EN > 0u
 677:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     if (p_grp == (OS_FLAG_GRP *)0) {                        /* Validate 'p_grp'                    
 1151              		.loc 1 677 0
 1152 0026 FB68     		ldr	r3, [r7, #12]
 1153 0028 002B     		cmp	r3, #0
 1154 002a 05D1     		bne	.L94
 678:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****        *p_err  =  OS_ERR_OBJ_PTR_NULL;
 1155              		.loc 1 678 0
 1156 002c 7B68     		ldr	r3, [r7, #4]
 1157 002e 45F6C352 		movw	r2, #24003
 1158 0032 1A80     		strh	r2, [r3]	@ movhi
 679:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         return ((OS_OBJ_QTY)0u);
 1159              		.loc 1 679 0
 1160 0034 0023     		movs	r3, #0
 1161 0036 52E0     		b	.L93
 1162              	.L94:
 680:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     }
 681:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     switch (opt) {                                          /* Validate 'opt'                      
 1163              		.loc 1 681 0
 1164 0038 7B89     		ldrh	r3, [r7, #10]
 1165 003a B3F5807F 		cmp	r3, #256
 1166 003e 11D0     		beq	.L104
 1167 0040 B3F5807F 		cmp	r3, #256
 1168 0044 02DC     		bgt	.L97
 1169 0046 002B     		cmp	r3, #0
 1170 0048 0CD0     		beq	.L104
 1171 004a 05E0     		b	.L95
 1172              	.L97:
 1173 004c B3F5004F 		cmp	r3, #32768
 1174 0050 08D0     		beq	.L104
 1175 0052 B3F5014F 		cmp	r3, #33024
 1176 0056 05D0     		beq	.L104
 1177              	.L95:
 682:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         case OS_OPT_PEND_ABORT_1:
 683:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         case OS_OPT_PEND_ABORT_ALL:
 684:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         case OS_OPT_PEND_ABORT_1   | OS_OPT_POST_NO_SCHED:
 685:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         case OS_OPT_PEND_ABORT_ALL | OS_OPT_POST_NO_SCHED:
 686:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              break;
 687:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 688:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         default:
 689:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****             *p_err = OS_ERR_OPT_INVALID;
 1178              		.loc 1 689 0
 1179 0058 7B68     		ldr	r3, [r7, #4]
 1180 005a 45F62562 		movw	r2, #24101
 1181 005e 1A80     		strh	r2, [r3]	@ movhi
 690:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              return ((OS_OBJ_QTY)0u);
 1182              		.loc 1 690 0
 1183 0060 0023     		movs	r3, #0
 1184 0062 3CE0     		b	.L93
 1185              	.L104:
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 34


 686:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 1186              		.loc 1 686 0
 1187 0064 00BF     		nop
 691:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     }
 692:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #endif
 693:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 694:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #if OS_CFG_OBJ_TYPE_CHK_EN > 0u
 695:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     if (p_grp->Type != OS_OBJ_TYPE_FLAG) {                  /* Make sure event flag group was creat
 696:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****        *p_err = OS_ERR_OBJ_TYPE;
 697:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         return ((OS_OBJ_QTY)0u);
 698:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     }
 699:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #endif
 700:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 701:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     CPU_CRITICAL_ENTER();
 1188              		.loc 1 701 0
 1189 0066 FFF7FEFF 		bl	CPU_SR_Save
 1190 006a 3862     		str	r0, [r7, #32]
 702:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     p_pend_list = &p_grp->PendList;
 1191              		.loc 1 702 0
 1192 006c FB68     		ldr	r3, [r7, #12]
 1193 006e 0833     		adds	r3, r3, #8
 1194 0070 FB61     		str	r3, [r7, #28]
 703:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     if (p_pend_list->NbrEntries == (OS_OBJ_QTY)0u) {        /* Any task waiting on flag group?     
 1195              		.loc 1 703 0
 1196 0072 FB69     		ldr	r3, [r7, #28]
 1197 0074 1B89     		ldrh	r3, [r3, #8]
 1198 0076 002B     		cmp	r3, #0
 1199 0078 08D1     		bne	.L99
 704:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         CPU_CRITICAL_EXIT();                                /* No                                  
 1200              		.loc 1 704 0
 1201 007a 386A     		ldr	r0, [r7, #32]
 1202 007c FFF7FEFF 		bl	CPU_SR_Restore
 705:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****        *p_err = OS_ERR_PEND_ABORT_NONE;
 1203              		.loc 1 705 0
 1204 0080 7B68     		ldr	r3, [r7, #4]
 1205 0082 46F2AB12 		movw	r2, #25003
 1206 0086 1A80     		strh	r2, [r3]	@ movhi
 706:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         return ((OS_OBJ_QTY)0u);
 1207              		.loc 1 706 0
 1208 0088 0023     		movs	r3, #0
 1209 008a 28E0     		b	.L93
 1210              	.L99:
 707:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     }
 708:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 709:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     OS_CRITICAL_ENTER_CPU_EXIT();
 710:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     nbr_tasks = 0u;
 1211              		.loc 1 710 0
 1212 008c 0023     		movs	r3, #0
 1213 008e FB84     		strh	r3, [r7, #38]	@ movhi
 711:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     ts        = OS_TS_GET();                                /* Get local time stamp so all tasks ge
 1214              		.loc 1 711 0
 1215 0090 FFF7FEFF 		bl	CPU_TS_TmrRd
 1216 0094 B861     		str	r0, [r7, #24]
 712:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     while (p_pend_list->NbrEntries > (OS_OBJ_QTY)0u) {
 1217              		.loc 1 712 0
 1218 0096 0FE0     		b	.L100
 1219              	.L102:
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 35


 713:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         p_tcb = p_pend_list->HeadPtr->TCBPtr;
 1220              		.loc 1 713 0
 1221 0098 FB69     		ldr	r3, [r7, #28]
 1222 009a 1B68     		ldr	r3, [r3]
 1223 009c 9B68     		ldr	r3, [r3, #8]
 1224 009e 7B61     		str	r3, [r7, #20]
 714:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         OS_PendAbort((OS_PEND_OBJ *)((void *)p_grp),
 1225              		.loc 1 714 0
 1226 00a0 BA69     		ldr	r2, [r7, #24]
 1227 00a2 7969     		ldr	r1, [r7, #20]
 1228 00a4 F868     		ldr	r0, [r7, #12]
 1229 00a6 FFF7FEFF 		bl	OS_PendAbort
 715:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                      p_tcb,
 716:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                      ts);
 717:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         nbr_tasks++;
 1230              		.loc 1 717 0
 1231 00aa FB8C     		ldrh	r3, [r7, #38]
 1232 00ac 0133     		adds	r3, r3, #1
 1233 00ae FB84     		strh	r3, [r7, #38]	@ movhi
 718:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         if (opt != OS_OPT_PEND_ABORT_ALL) {                 /* Pend abort all tasks waiting?       
 1234              		.loc 1 718 0
 1235 00b0 7B89     		ldrh	r3, [r7, #10]
 1236 00b2 B3F5807F 		cmp	r3, #256
 1237 00b6 04D1     		bne	.L105
 1238              	.L100:
 712:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         p_tcb = p_pend_list->HeadPtr->TCBPtr;
 1239              		.loc 1 712 0
 1240 00b8 FB69     		ldr	r3, [r7, #28]
 1241 00ba 1B89     		ldrh	r3, [r3, #8]
 1242 00bc 002B     		cmp	r3, #0
 1243 00be EBD1     		bne	.L102
 1244 00c0 00E0     		b	.L101
 1245              	.L105:
 719:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****             break;                                          /* No                                  
 1246              		.loc 1 719 0
 1247 00c2 00BF     		nop
 1248              	.L101:
 720:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         }
 721:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     }
 722:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     OS_CRITICAL_EXIT_NO_SCHED();
 1249              		.loc 1 722 0
 1250 00c4 386A     		ldr	r0, [r7, #32]
 1251 00c6 FFF7FEFF 		bl	CPU_SR_Restore
 723:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 724:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     if ((opt & OS_OPT_POST_NO_SCHED) == (OS_OPT)0u) {
 1252              		.loc 1 724 0
 1253 00ca B7F90A30 		ldrsh	r3, [r7, #10]
 1254 00ce 002B     		cmp	r3, #0
 1255 00d0 01DB     		blt	.L103
 725:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         OSSched();                                          /* Run the scheduler                   
 1256              		.loc 1 725 0
 1257 00d2 FFF7FEFF 		bl	OSSched
 1258              	.L103:
 726:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     }
 727:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 728:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****    *p_err = OS_ERR_NONE;
 1259              		.loc 1 728 0
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 36


 1260 00d6 7B68     		ldr	r3, [r7, #4]
 1261 00d8 0022     		movs	r2, #0
 1262 00da 1A80     		strh	r2, [r3]	@ movhi
 729:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     return (nbr_tasks);
 1263              		.loc 1 729 0
 1264 00dc FB8C     		ldrh	r3, [r7, #38]
 1265              	.L93:
 730:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** }
 1266              		.loc 1 730 0
 1267 00de 1846     		mov	r0, r3
 1268 00e0 2837     		adds	r7, r7, #40
 1269              		.cfi_def_cfa_offset 8
 1270 00e2 BD46     		mov	sp, r7
 1271              		.cfi_def_cfa_register 13
 1272              		@ sp needed
 1273 00e4 80BD     		pop	{r7, pc}
 1274              	.L107:
 1275 00e6 00BF     		.align	2
 1276              	.L106:
 1277 00e8 00000000 		.word	OSIntNestingCtr
 1278              		.cfi_endproc
 1279              	.LFE3:
 1280              		.size	OSFlagPendAbort, .-OSFlagPendAbort
 1281              		.section	.text.OSFlagPendGetFlagsRdy,"ax",%progbits
 1282              		.align	2
 1283              		.global	OSFlagPendGetFlagsRdy
 1284              		.thumb
 1285              		.thumb_func
 1286              		.type	OSFlagPendGetFlagsRdy, %function
 1287              	OSFlagPendGetFlagsRdy:
 1288              	.LFB4:
 731:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #endif
 732:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 733:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** /*$PAGE*/
 734:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** /*
 735:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** ***************************************************************************************************
 736:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                       GET FLAGS WHO CAUSED TASK TO BECOME READY
 737:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 738:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** * Description: This function is called to obtain the flags that caused the task to become ready to 
 739:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *              In other words, this function allows you to tell "Who done it!".
 740:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 741:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** * Arguments  : p_err     is a pointer to an error code
 742:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 743:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                            OS_ERR_NONE       if the call was successful
 744:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                            OS_ERR_PEND_ISR   if called from an ISR
 745:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 746:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** * Returns    : The flags that caused the task to be ready.
 747:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** ***************************************************************************************************
 748:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** */
 749:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 750:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** OS_FLAGS  OSFlagPendGetFlagsRdy (OS_ERR  *p_err)
 751:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** {
 1289              		.loc 1 751 0
 1290              		.cfi_startproc
 1291              		@ args = 0, pretend = 0, frame = 16
 1292              		@ frame_needed = 1, uses_anonymous_args = 0
 1293 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 37


 1294              		.cfi_def_cfa_offset 8
 1295              		.cfi_offset 7, -8
 1296              		.cfi_offset 14, -4
 1297 0002 84B0     		sub	sp, sp, #16
 1298              		.cfi_def_cfa_offset 24
 1299 0004 00AF     		add	r7, sp, #0
 1300              		.cfi_def_cfa_register 7
 1301 0006 7860     		str	r0, [r7, #4]
 752:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     OS_FLAGS   flags;
 753:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     CPU_SR_ALLOC();
 1302              		.loc 1 753 0
 1303 0008 0023     		movs	r3, #0
 1304 000a FB60     		str	r3, [r7, #12]
 754:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 755:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 756:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 757:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #ifdef OS_SAFETY_CRITICAL
 758:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     if (p_err == (OS_ERR *)0) {
 759:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 760:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         return ((OS_FLAGS)0);
 761:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     }
 762:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #endif
 763:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 764:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #if OS_CFG_CALLED_FROM_ISR_CHK_EN > 0u
 765:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     if (OSIntNestingCtr > (OS_NESTING_CTR)0) {              /* See if called from ISR ...          
 1305              		.loc 1 765 0
 1306 000c 0E4B     		ldr	r3, .L111
 1307 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1308 0010 002B     		cmp	r3, #0
 1309 0012 05D0     		beq	.L109
 766:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****        *p_err = OS_ERR_PEND_ISR;                            /* ... can't get from an ISR           
 1310              		.loc 1 766 0
 1311 0014 7B68     		ldr	r3, [r7, #4]
 1312 0016 46F2AE12 		movw	r2, #25006
 1313 001a 1A80     		strh	r2, [r3]	@ movhi
 767:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         return ((OS_FLAGS)0);
 1314              		.loc 1 767 0
 1315 001c 0023     		movs	r3, #0
 1316 001e 0EE0     		b	.L110
 1317              	.L109:
 768:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     }
 769:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #endif
 770:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 771:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     CPU_CRITICAL_ENTER();
 1318              		.loc 1 771 0
 1319 0020 FFF7FEFF 		bl	CPU_SR_Save
 1320 0024 F860     		str	r0, [r7, #12]
 772:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     flags = OSTCBCurPtr->FlagsRdy;
 1321              		.loc 1 772 0
 1322 0026 094B     		ldr	r3, .L111+4
 1323 0028 1B68     		ldr	r3, [r3]
 1324 002a D3F88430 		ldr	r3, [r3, #132]
 1325 002e BB60     		str	r3, [r7, #8]
 773:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     CPU_CRITICAL_EXIT();
 1326              		.loc 1 773 0
 1327 0030 F868     		ldr	r0, [r7, #12]
 1328 0032 FFF7FEFF 		bl	CPU_SR_Restore
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 38


 774:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****    *p_err = OS_ERR_NONE;
 1329              		.loc 1 774 0
 1330 0036 7B68     		ldr	r3, [r7, #4]
 1331 0038 0022     		movs	r2, #0
 1332 003a 1A80     		strh	r2, [r3]	@ movhi
 775:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     return (flags);
 1333              		.loc 1 775 0
 1334 003c BB68     		ldr	r3, [r7, #8]
 1335              	.L110:
 776:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** }
 1336              		.loc 1 776 0
 1337 003e 1846     		mov	r0, r3
 1338 0040 1037     		adds	r7, r7, #16
 1339              		.cfi_def_cfa_offset 8
 1340 0042 BD46     		mov	sp, r7
 1341              		.cfi_def_cfa_register 13
 1342              		@ sp needed
 1343 0044 80BD     		pop	{r7, pc}
 1344              	.L112:
 1345 0046 00BF     		.align	2
 1346              	.L111:
 1347 0048 00000000 		.word	OSIntNestingCtr
 1348 004c 00000000 		.word	OSTCBCurPtr
 1349              		.cfi_endproc
 1350              	.LFE4:
 1351              		.size	OSFlagPendGetFlagsRdy, .-OSFlagPendGetFlagsRdy
 1352              		.section	.text.OSFlagPost,"ax",%progbits
 1353              		.align	2
 1354              		.global	OSFlagPost
 1355              		.thumb
 1356              		.thumb_func
 1357              		.type	OSFlagPost, %function
 1358              	OSFlagPost:
 1359              	.LFB5:
 777:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 778:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** /*$PAGE*/
 779:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** /*
 780:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** ***************************************************************************************************
 781:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                                POST EVENT FLAG BIT(S)
 782:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 783:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** * Description: This function is called to set or clear some bits in an event flag group.  The bits 
 784:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *              specified by a 'bit mask'.
 785:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 786:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** * Arguments  : p_grp         is a pointer to the desired event flag group.
 787:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 788:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *              flags         If 'opt' (see below) is OS_OPT_POST_FLAG_SET, each bit that is set in 
 789:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                            set the corresponding bit in the event flag group.  e.g. to set bits 0
 790:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                            and 5 you would set 'flags' to:
 791:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 792:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                0x31     (note, bit 0 is least significant bit)
 793:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 794:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                            If 'opt' (see below) is OS_OPT_POST_FLAG_CLR, each bit that is set in 
 795:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                            CLEAR the corresponding bit in the event flag group.  e.g. to clear bi
 796:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                            4 and 5 you would specify 'flags' as:
 797:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 798:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                0x31     (note, bit 0 is least significant bit)
 799:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 39


 800:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *              opt           indicates whether the flags will be:
 801:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 802:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                OS_OPT_POST_FLAG_SET       set
 803:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                OS_OPT_POST_FLAG_CLR       cleared
 804:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 805:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                            you can also 'add' OS_OPT_POST_NO_SCHED to prevent the scheduler from 
 806:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 807:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *              p_err         is a pointer to an error code and can be:
 808:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 809:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                OS_ERR_NONE                The call was successful
 810:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                OS_ERR_OBJ_PTR_NULL        You passed a NULL pointer
 811:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                OS_ERR_OBJ_TYPE            You are not pointing to an event flag g
 812:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                OS_ERR_OPT_INVALID         You specified an invalid option
 813:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 814:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** * Returns    : the new value of the event flags bits that are still set.
 815:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 816:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** * Note(s)    : 1) The execution time of this function depends on the number of tasks waiting on the
 817:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** ***************************************************************************************************
 818:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** */
 819:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 820:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** OS_FLAGS  OSFlagPost (OS_FLAG_GRP  *p_grp,
 821:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                       OS_FLAGS      flags,
 822:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                       OS_OPT        opt,
 823:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                       OS_ERR       *p_err)
 824:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** {
 1360              		.loc 1 824 0
 1361              		.cfi_startproc
 1362              		@ args = 0, pretend = 0, frame = 24
 1363              		@ frame_needed = 1, uses_anonymous_args = 0
 1364 0000 80B5     		push	{r7, lr}
 1365              		.cfi_def_cfa_offset 8
 1366              		.cfi_offset 7, -8
 1367              		.cfi_offset 14, -4
 1368 0002 88B0     		sub	sp, sp, #32
 1369              		.cfi_def_cfa_offset 40
 1370 0004 02AF     		add	r7, sp, #8
 1371              		.cfi_def_cfa 7, 32
 1372 0006 F860     		str	r0, [r7, #12]
 1373 0008 B960     		str	r1, [r7, #8]
 1374 000a 3B60     		str	r3, [r7]
 1375 000c 1346     		mov	r3, r2	@ movhi
 1376 000e FB80     		strh	r3, [r7, #6]	@ movhi
 825:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     OS_FLAGS  flags_cur;
 826:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     CPU_TS    ts;
 827:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 828:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 829:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 830:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #ifdef OS_SAFETY_CRITICAL
 831:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     if (p_err == (OS_ERR *)0) {
 832:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 833:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         return ((OS_FLAGS)0);
 834:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     }
 835:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #endif
 836:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 837:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #if OS_CFG_ARG_CHK_EN > 0u
 838:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     if (p_grp == (OS_FLAG_GRP *)0) {                        /* Validate 'p_grp'                    
 1377              		.loc 1 838 0
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 40


 1378 0010 FB68     		ldr	r3, [r7, #12]
 1379 0012 002B     		cmp	r3, #0
 1380 0014 05D1     		bne	.L114
 839:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****        *p_err  = OS_ERR_OBJ_PTR_NULL;
 1381              		.loc 1 839 0
 1382 0016 3B68     		ldr	r3, [r7]
 1383 0018 45F6C352 		movw	r2, #24003
 1384 001c 1A80     		strh	r2, [r3]	@ movhi
 840:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         return ((OS_FLAGS)0);
 1385              		.loc 1 840 0
 1386 001e 0023     		movs	r3, #0
 1387 0020 1CE0     		b	.L115
 1388              	.L114:
 841:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     }
 842:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     switch (opt) {                                          /* Validate 'opt'                      
 1389              		.loc 1 842 0
 1390 0022 FB88     		ldrh	r3, [r7, #6]
 1391 0024 002B     		cmp	r3, #0
 1392 0026 05DB     		blt	.L116
 1393 0028 012B     		cmp	r3, #1
 1394 002a 09DD     		ble	.L119
 1395 002c A3F50043 		sub	r3, r3, #32768
 1396 0030 012B     		cmp	r3, #1
 1397 0032 05D9     		bls	.L119
 1398              	.L116:
 843:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         case OS_OPT_POST_FLAG_SET:
 844:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         case OS_OPT_POST_FLAG_CLR:
 845:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         case OS_OPT_POST_FLAG_SET | OS_OPT_POST_NO_SCHED:
 846:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         case OS_OPT_POST_FLAG_CLR | OS_OPT_POST_NO_SCHED:
 847:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              break;
 848:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 849:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         default:
 850:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****             *p_err = OS_ERR_OPT_INVALID;
 1399              		.loc 1 850 0
 1400 0034 3B68     		ldr	r3, [r7]
 1401 0036 45F62562 		movw	r2, #24101
 1402 003a 1A80     		strh	r2, [r3]	@ movhi
 851:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              return ((OS_FLAGS)0);
 1403              		.loc 1 851 0
 1404 003c 0023     		movs	r3, #0
 1405 003e 0DE0     		b	.L115
 1406              	.L119:
 847:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 1407              		.loc 1 847 0
 1408 0040 00BF     		nop
 852:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     }
 853:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #endif
 854:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 855:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #if OS_CFG_OBJ_TYPE_CHK_EN > 0u
 856:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     if (p_grp->Type != OS_OBJ_TYPE_FLAG) {                  /* Make sure we are pointing to an even
 857:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****        *p_err = OS_ERR_OBJ_TYPE;
 858:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         return ((OS_FLAGS)0);
 859:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     }
 860:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #endif
 861:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 862:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     ts = OS_TS_GET();                                       /* Get timestamp                       
 1409              		.loc 1 862 0
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 41


 1410 0042 FFF7FEFF 		bl	CPU_TS_TmrRd
 1411 0046 7861     		str	r0, [r7, #20]
 863:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #if OS_CFG_ISR_POST_DEFERRED_EN > 0u
 864:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     if (OSIntNestingCtr > (OS_NESTING_CTR)0) {              /* See if called from an ISR           
 865:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         OS_IntQPost((OS_OBJ_TYPE)OS_OBJ_TYPE_FLAG,          /* Post to ISR queue                   
 866:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                     (void      *)p_grp,
 867:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                     (void      *)0,
 868:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                     (OS_MSG_SIZE)0,
 869:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                     (OS_FLAGS   )flags,
 870:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                     (OS_OPT     )opt,
 871:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                     (CPU_TS     )ts,
 872:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                     (OS_ERR    *)p_err);
 873:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         return ((OS_FLAGS)0);
 874:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     }
 875:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #endif
 876:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 877:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     flags_cur = OS_FlagPost(p_grp,
 1412              		.loc 1 877 0
 1413 0048 FA88     		ldrh	r2, [r7, #6]
 1414 004a 3B68     		ldr	r3, [r7]
 1415 004c 0093     		str	r3, [sp]
 1416 004e 7B69     		ldr	r3, [r7, #20]
 1417 0050 B968     		ldr	r1, [r7, #8]
 1418 0052 F868     		ldr	r0, [r7, #12]
 1419 0054 FFF7FEFF 		bl	OS_FlagPost
 1420 0058 3861     		str	r0, [r7, #16]
 878:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                             flags,
 879:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                             opt,
 880:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                             ts,
 881:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                             p_err);
 882:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 883:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     return (flags_cur);
 1421              		.loc 1 883 0
 1422 005a 3B69     		ldr	r3, [r7, #16]
 1423              	.L115:
 884:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** }
 1424              		.loc 1 884 0
 1425 005c 1846     		mov	r0, r3
 1426 005e 1837     		adds	r7, r7, #24
 1427              		.cfi_def_cfa_offset 8
 1428 0060 BD46     		mov	sp, r7
 1429              		.cfi_def_cfa_register 13
 1430              		@ sp needed
 1431 0062 80BD     		pop	{r7, pc}
 1432              		.cfi_endproc
 1433              	.LFE5:
 1434              		.size	OSFlagPost, .-OSFlagPost
 1435              		.section	.text.OS_FlagBlock,"ax",%progbits
 1436              		.align	2
 1437              		.global	OS_FlagBlock
 1438              		.thumb
 1439              		.thumb_func
 1440              		.type	OS_FlagBlock, %function
 1441              	OS_FlagBlock:
 1442              	.LFB6:
 885:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 886:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** /*$PAGE*/
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 42


 887:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** /*
 888:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** ***************************************************************************************************
 889:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                         SUSPEND TASK UNTIL EVENT FLAG(s) RECEIVED OR TIMEOUT OCCURS
 890:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 891:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** * Description: This function is internal to uC/OS-III and is used to put a task to sleep until the 
 892:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *              event flag bit(s) are set.
 893:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 894:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** * Arguments  : p_pend_data    is a pointer to an object used to link the task being blocked to the 
 895:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *              -----------    pending on the desired event flag group.
 896:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 897:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *              p_grp         is a pointer to the desired event flag group.
 898:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *              -----
 899:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 900:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *              flags         Is a bit pattern indicating which bit(s) (i.e. flags) you wish to chec
 901:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                            The bits you want are specified by setting the corresponding bits in
 902:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                            'flags'.  e.g. if your application wants to wait for bits 0 and 1 then
 903:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                            'flags' would contain 0x03.
 904:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 905:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *              opt           specifies whether you want ALL bits to be set/cleared or ANY of the bi
 906:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                            to be set/cleared.
 907:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                            You can specify the following argument:
 908:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 909:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                OS_OPT_PEND_FLAG_CLR_ALL   You will check ALL bits in 'mask' to be
 910:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                OS_OPT_PEND_FLAG_CLR_ANY   You will check ANY bit  in 'mask' to be
 911:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                OS_OPT_PEND_FLAG_SET_ALL   You will check ALL bits in 'mask' to be
 912:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                OS_OPT_PEND_FLAG_SET_ANY   You will check ANY bit  in 'mask' to be
 913:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 914:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *              timeout       is the desired amount of time that the task will wait for the event fl
 915:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                            bit(s) to be set.
 916:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 917:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** * Returns    : none
 918:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 919:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** * Note(s)    : This function is INTERNAL to uC/OS-III and your application should not call it.
 920:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** ***************************************************************************************************
 921:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** */
 922:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 923:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** void  OS_FlagBlock (OS_PEND_DATA  *p_pend_data,
 924:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                     OS_FLAG_GRP   *p_grp,
 925:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                     OS_FLAGS       flags,
 926:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                     OS_OPT         opt,
 927:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                     OS_TICK        timeout)
 928:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** {
 1443              		.loc 1 928 0
 1444              		.cfi_startproc
 1445              		@ args = 4, pretend = 0, frame = 16
 1446              		@ frame_needed = 1, uses_anonymous_args = 0
 1447 0000 80B5     		push	{r7, lr}
 1448              		.cfi_def_cfa_offset 8
 1449              		.cfi_offset 7, -8
 1450              		.cfi_offset 14, -4
 1451 0002 84B0     		sub	sp, sp, #16
 1452              		.cfi_def_cfa_offset 24
 1453 0004 00AF     		add	r7, sp, #0
 1454              		.cfi_def_cfa_register 7
 1455 0006 F860     		str	r0, [r7, #12]
 1456 0008 B960     		str	r1, [r7, #8]
 1457 000a 7A60     		str	r2, [r7, #4]
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 43


 1458 000c 7B80     		strh	r3, [r7, #2]	@ movhi
 929:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     OSTCBCurPtr->FlagsPend = flags;                         /* Save the flags that we need to wait 
 1459              		.loc 1 929 0
 1460 000e 0C4B     		ldr	r3, .L121
 1461 0010 1B68     		ldr	r3, [r3]
 1462 0012 7A68     		ldr	r2, [r7, #4]
 1463 0014 C3F88020 		str	r2, [r3, #128]
 930:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     OSTCBCurPtr->FlagsOpt  = opt;                           /* Save the type of wait we are doing  
 1464              		.loc 1 930 0
 1465 0018 094B     		ldr	r3, .L121
 1466 001a 1B68     		ldr	r3, [r3]
 1467 001c 7A88     		ldrh	r2, [r7, #2]	@ movhi
 1468 001e A3F88820 		strh	r2, [r3, #136]	@ movhi
 931:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     OSTCBCurPtr->FlagsRdy  = (OS_FLAGS)0;
 1469              		.loc 1 931 0
 1470 0022 074B     		ldr	r3, .L121
 1471 0024 1B68     		ldr	r3, [r3]
 1472 0026 0022     		movs	r2, #0
 1473 0028 C3F88420 		str	r2, [r3, #132]
 932:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 933:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     OS_Pend(p_pend_data,
 1474              		.loc 1 933 0
 1475 002c BB69     		ldr	r3, [r7, #24]
 1476 002e 0122     		movs	r2, #1
 1477 0030 B968     		ldr	r1, [r7, #8]
 1478 0032 F868     		ldr	r0, [r7, #12]
 1479 0034 FFF7FEFF 		bl	OS_Pend
 934:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****             (OS_PEND_OBJ *)((void *)p_grp),
 935:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              OS_TASK_PEND_ON_FLAG,
 936:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              timeout);
 937:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** }
 1480              		.loc 1 937 0
 1481 0038 00BF     		nop
 1482 003a 1037     		adds	r7, r7, #16
 1483              		.cfi_def_cfa_offset 8
 1484 003c BD46     		mov	sp, r7
 1485              		.cfi_def_cfa_register 13
 1486              		@ sp needed
 1487 003e 80BD     		pop	{r7, pc}
 1488              	.L122:
 1489              		.align	2
 1490              	.L121:
 1491 0040 00000000 		.word	OSTCBCurPtr
 1492              		.cfi_endproc
 1493              	.LFE6:
 1494              		.size	OS_FlagBlock, .-OS_FlagBlock
 1495              		.section	.rodata
 1496              		.align	2
 1497              	.LC0:
 1498 0000 3F464C41 		.ascii	"?FLAG\000"
 1498      4700
 1499              		.section	.text.OS_FlagClr,"ax",%progbits
 1500              		.align	2
 1501              		.global	OS_FlagClr
 1502              		.thumb
 1503              		.thumb_func
 1504              		.type	OS_FlagClr, %function
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 44


 1505              	OS_FlagClr:
 1506              	.LFB7:
 938:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 939:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** /*$PAGE*/
 940:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** /*
 941:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** ***************************************************************************************************
 942:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                      CLEAR THE CONTENTS OF AN EVENT FLAG GROUP
 943:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 944:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** * Description: This function is called by OSFlagDel() to clear the contents of an event flag group
 945:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 946:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 947:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** * Argument(s): p_grp     is a pointer to the event flag group to clear
 948:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *              -----
 949:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 950:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** * Returns    : none
 951:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 952:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** * Note(s)    : This function is INTERNAL to uC/OS-III and your application should not call it.
 953:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** ***************************************************************************************************
 954:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** */
 955:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 956:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** void  OS_FlagClr (OS_FLAG_GRP  *p_grp)
 957:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** {
 1507              		.loc 1 957 0
 1508              		.cfi_startproc
 1509              		@ args = 0, pretend = 0, frame = 16
 1510              		@ frame_needed = 1, uses_anonymous_args = 0
 1511 0000 80B5     		push	{r7, lr}
 1512              		.cfi_def_cfa_offset 8
 1513              		.cfi_offset 7, -8
 1514              		.cfi_offset 14, -4
 1515 0002 84B0     		sub	sp, sp, #16
 1516              		.cfi_def_cfa_offset 24
 1517 0004 00AF     		add	r7, sp, #0
 1518              		.cfi_def_cfa_register 7
 1519 0006 7860     		str	r0, [r7, #4]
 958:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     OS_PEND_LIST  *p_pend_list;
 959:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 960:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 961:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 962:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     p_grp->Type             = OS_OBJ_TYPE_NONE;
 1520              		.loc 1 962 0
 1521 0008 7B68     		ldr	r3, [r7, #4]
 1522 000a 094A     		ldr	r2, .L124
 1523 000c 1A60     		str	r2, [r3]
 963:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     p_grp->NamePtr          = (CPU_CHAR *)((void *)"?FLAG");    /* Unknown name                    
 1524              		.loc 1 963 0
 1525 000e 7B68     		ldr	r3, [r7, #4]
 1526 0010 084A     		ldr	r2, .L124+4
 1527 0012 5A60     		str	r2, [r3, #4]
 964:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     p_grp->Flags            = (OS_FLAGS )0;
 1528              		.loc 1 964 0
 1529 0014 7B68     		ldr	r3, [r7, #4]
 1530 0016 0022     		movs	r2, #0
 1531 0018 1A62     		str	r2, [r3, #32]
 965:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     p_pend_list             = &p_grp->PendList;
 1532              		.loc 1 965 0
 1533 001a 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 45


 1534 001c 0833     		adds	r3, r3, #8
 1535 001e FB60     		str	r3, [r7, #12]
 966:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     OS_PendListInit(p_pend_list);
 1536              		.loc 1 966 0
 1537 0020 F868     		ldr	r0, [r7, #12]
 1538 0022 FFF7FEFF 		bl	OS_PendListInit
 967:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** }
 1539              		.loc 1 967 0
 1540 0026 00BF     		nop
 1541 0028 1037     		adds	r7, r7, #16
 1542              		.cfi_def_cfa_offset 8
 1543 002a BD46     		mov	sp, r7
 1544              		.cfi_def_cfa_register 13
 1545              		@ sp needed
 1546 002c 80BD     		pop	{r7, pc}
 1547              	.L125:
 1548 002e 00BF     		.align	2
 1549              	.L124:
 1550 0030 4E4F4E45 		.word	1162760014
 1551 0034 00000000 		.word	.LC0
 1552              		.cfi_endproc
 1553              	.LFE7:
 1554              		.size	OS_FlagClr, .-OS_FlagClr
 1555              		.section	.text.OS_FlagInit,"ax",%progbits
 1556              		.align	2
 1557              		.global	OS_FlagInit
 1558              		.thumb
 1559              		.thumb_func
 1560              		.type	OS_FlagInit, %function
 1561              	OS_FlagInit:
 1562              	.LFB8:
 968:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 969:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** /*$PAGE*/
 970:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** /*
 971:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** ***************************************************************************************************
 972:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                          INITIALIZE THE EVENT FLAG MODULE
 973:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 974:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** * Description: This function is called by uC/OS-III to initialize the event flag module.  Your appl
 975:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *              this function.  In other words, this function is internal to uC/OS-III.
 976:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 977:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** * Arguments  : p_err     is a pointer to an error code that can contain one of the following values
 978:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 979:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                            OS_ERR_NONE   The call was successful.
 980:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 981:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** * Returns    : none
 982:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
 983:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** * Note(s)    : This function is INTERNAL to uC/OS-III and your application should not call it.
 984:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** ***************************************************************************************************
 985:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** */
 986:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 987:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** void  OS_FlagInit (OS_ERR  *p_err)
 988:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** {
 1563              		.loc 1 988 0
 1564              		.cfi_startproc
 1565              		@ args = 0, pretend = 0, frame = 8
 1566              		@ frame_needed = 1, uses_anonymous_args = 0
 1567              		@ link register save eliminated.
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 46


 1568 0000 80B4     		push	{r7}
 1569              		.cfi_def_cfa_offset 4
 1570              		.cfi_offset 7, -4
 1571 0002 83B0     		sub	sp, sp, #12
 1572              		.cfi_def_cfa_offset 16
 1573 0004 00AF     		add	r7, sp, #0
 1574              		.cfi_def_cfa_register 7
 1575 0006 7860     		str	r0, [r7, #4]
 989:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #ifdef OS_SAFETY_CRITICAL
 990:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     if (p_err == (OS_ERR *)0) {
 991:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 992:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         return;
 993:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     }
 994:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #endif
 995:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 996:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #if OS_CFG_DBG_EN > 0u
 997:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     OSFlagDbgListPtr = (OS_FLAG_GRP *)0;
 1576              		.loc 1 997 0
 1577 0008 064B     		ldr	r3, .L127
 1578 000a 0022     		movs	r2, #0
 1579 000c 1A60     		str	r2, [r3]
 998:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #endif
 999:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
1000:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     OSFlagQty        = (OS_OBJ_QTY   )0;
 1580              		.loc 1 1000 0
 1581 000e 064B     		ldr	r3, .L127+4
 1582 0010 0022     		movs	r2, #0
 1583 0012 1A80     		strh	r2, [r3]	@ movhi
1001:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****    *p_err            = OS_ERR_NONE;
 1584              		.loc 1 1001 0
 1585 0014 7B68     		ldr	r3, [r7, #4]
 1586 0016 0022     		movs	r2, #0
 1587 0018 1A80     		strh	r2, [r3]	@ movhi
1002:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** }
 1588              		.loc 1 1002 0
 1589 001a 00BF     		nop
 1590 001c 0C37     		adds	r7, r7, #12
 1591              		.cfi_def_cfa_offset 4
 1592 001e BD46     		mov	sp, r7
 1593              		.cfi_def_cfa_register 13
 1594              		@ sp needed
 1595 0020 80BC     		pop	{r7}
 1596              		.cfi_restore 7
 1597              		.cfi_def_cfa_offset 0
 1598 0022 7047     		bx	lr
 1599              	.L128:
 1600              		.align	2
 1601              	.L127:
 1602 0024 00000000 		.word	OSFlagDbgListPtr
 1603 0028 00000000 		.word	OSFlagQty
 1604              		.cfi_endproc
 1605              	.LFE8:
 1606              		.size	OS_FlagInit, .-OS_FlagInit
 1607              		.section	.rodata
 1608 0006 0000     		.align	2
 1609              	.LC1:
 1610 0008 2000     		.ascii	" \000"
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 47


 1611              		.section	.text.OS_FlagDbgListAdd,"ax",%progbits
 1612              		.align	2
 1613              		.global	OS_FlagDbgListAdd
 1614              		.thumb
 1615              		.thumb_func
 1616              		.type	OS_FlagDbgListAdd, %function
 1617              	OS_FlagDbgListAdd:
 1618              	.LFB9:
1003:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
1004:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** /*$PAGE*/
1005:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** /*
1006:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** ***************************************************************************************************
1007:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                    ADD/REMOVE EVENT FLAG GROUP TO/FROM DEBUG LIST
1008:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
1009:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** * Description: These functions are called by uC/OS-III to add or remove an event flag group from th
1010:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *              list.
1011:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
1012:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** * Arguments  : p_grp     is a pointer to the event flag group to add/remove
1013:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
1014:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** * Returns    : none
1015:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
1016:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** * Note(s)    : These functions are INTERNAL to uC/OS-III and your application should not call it.
1017:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** ***************************************************************************************************
1018:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** */
1019:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
1020:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #if OS_CFG_DBG_EN > 0u
1021:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** void  OS_FlagDbgListAdd (OS_FLAG_GRP  *p_grp)
1022:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** {
 1619              		.loc 1 1022 0
 1620              		.cfi_startproc
 1621              		@ args = 0, pretend = 0, frame = 8
 1622              		@ frame_needed = 1, uses_anonymous_args = 0
 1623              		@ link register save eliminated.
 1624 0000 80B4     		push	{r7}
 1625              		.cfi_def_cfa_offset 4
 1626              		.cfi_offset 7, -4
 1627 0002 83B0     		sub	sp, sp, #12
 1628              		.cfi_def_cfa_offset 16
 1629 0004 00AF     		add	r7, sp, #0
 1630              		.cfi_def_cfa_register 7
 1631 0006 7860     		str	r0, [r7, #4]
1023:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     p_grp->DbgNamePtr                = (CPU_CHAR    *)((void *)" ");
 1632              		.loc 1 1023 0
 1633 0008 7B68     		ldr	r3, [r7, #4]
 1634 000a 0E4A     		ldr	r2, .L132
 1635 000c DA61     		str	r2, [r3, #28]
1024:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     p_grp->DbgPrevPtr                = (OS_FLAG_GRP *)0;
 1636              		.loc 1 1024 0
 1637 000e 7B68     		ldr	r3, [r7, #4]
 1638 0010 0022     		movs	r2, #0
 1639 0012 5A61     		str	r2, [r3, #20]
1025:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     if (OSFlagDbgListPtr == (OS_FLAG_GRP *)0) {
 1640              		.loc 1 1025 0
 1641 0014 0C4B     		ldr	r3, .L132+4
 1642 0016 1B68     		ldr	r3, [r3]
 1643 0018 002B     		cmp	r3, #0
 1644 001a 03D1     		bne	.L130
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 48


1026:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         p_grp->DbgNextPtr            = (OS_FLAG_GRP *)0;
 1645              		.loc 1 1026 0
 1646 001c 7B68     		ldr	r3, [r7, #4]
 1647 001e 0022     		movs	r2, #0
 1648 0020 9A61     		str	r2, [r3, #24]
 1649 0022 07E0     		b	.L131
 1650              	.L130:
1027:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     } else {
1028:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         p_grp->DbgNextPtr            =  OSFlagDbgListPtr;
 1651              		.loc 1 1028 0
 1652 0024 084B     		ldr	r3, .L132+4
 1653 0026 1A68     		ldr	r2, [r3]
 1654 0028 7B68     		ldr	r3, [r7, #4]
 1655 002a 9A61     		str	r2, [r3, #24]
1029:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         OSFlagDbgListPtr->DbgPrevPtr =  p_grp;
 1656              		.loc 1 1029 0
 1657 002c 064B     		ldr	r3, .L132+4
 1658 002e 1B68     		ldr	r3, [r3]
 1659 0030 7A68     		ldr	r2, [r7, #4]
 1660 0032 5A61     		str	r2, [r3, #20]
 1661              	.L131:
1030:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     }
1031:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     OSFlagDbgListPtr                 =  p_grp;
 1662              		.loc 1 1031 0
 1663 0034 044A     		ldr	r2, .L132+4
 1664 0036 7B68     		ldr	r3, [r7, #4]
 1665 0038 1360     		str	r3, [r2]
1032:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** }
 1666              		.loc 1 1032 0
 1667 003a 00BF     		nop
 1668 003c 0C37     		adds	r7, r7, #12
 1669              		.cfi_def_cfa_offset 4
 1670 003e BD46     		mov	sp, r7
 1671              		.cfi_def_cfa_register 13
 1672              		@ sp needed
 1673 0040 80BC     		pop	{r7}
 1674              		.cfi_restore 7
 1675              		.cfi_def_cfa_offset 0
 1676 0042 7047     		bx	lr
 1677              	.L133:
 1678              		.align	2
 1679              	.L132:
 1680 0044 08000000 		.word	.LC1
 1681 0048 00000000 		.word	OSFlagDbgListPtr
 1682              		.cfi_endproc
 1683              	.LFE9:
 1684              		.size	OS_FlagDbgListAdd, .-OS_FlagDbgListAdd
 1685              		.section	.text.OS_FlagDbgListRemove,"ax",%progbits
 1686              		.align	2
 1687              		.global	OS_FlagDbgListRemove
 1688              		.thumb
 1689              		.thumb_func
 1690              		.type	OS_FlagDbgListRemove, %function
 1691              	OS_FlagDbgListRemove:
 1692              	.LFB10:
1033:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
1034:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 49


1035:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
1036:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** void  OS_FlagDbgListRemove (OS_FLAG_GRP  *p_grp)
1037:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** {
 1693              		.loc 1 1037 0
 1694              		.cfi_startproc
 1695              		@ args = 0, pretend = 0, frame = 16
 1696              		@ frame_needed = 1, uses_anonymous_args = 0
 1697              		@ link register save eliminated.
 1698 0000 80B4     		push	{r7}
 1699              		.cfi_def_cfa_offset 4
 1700              		.cfi_offset 7, -4
 1701 0002 85B0     		sub	sp, sp, #20
 1702              		.cfi_def_cfa_offset 24
 1703 0004 00AF     		add	r7, sp, #0
 1704              		.cfi_def_cfa_register 7
 1705 0006 7860     		str	r0, [r7, #4]
1038:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     OS_FLAG_GRP  *p_grp_next;
1039:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     OS_FLAG_GRP  *p_grp_prev;
1040:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
1041:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
1042:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     p_grp_prev = p_grp->DbgPrevPtr;
 1706              		.loc 1 1042 0
 1707 0008 7B68     		ldr	r3, [r7, #4]
 1708 000a 5B69     		ldr	r3, [r3, #20]
 1709 000c FB60     		str	r3, [r7, #12]
1043:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     p_grp_next = p_grp->DbgNextPtr;
 1710              		.loc 1 1043 0
 1711 000e 7B68     		ldr	r3, [r7, #4]
 1712 0010 9B69     		ldr	r3, [r3, #24]
 1713 0012 BB60     		str	r3, [r7, #8]
1044:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
1045:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     if (p_grp_prev == (OS_FLAG_GRP *)0) {
 1714              		.loc 1 1045 0
 1715 0014 FB68     		ldr	r3, [r7, #12]
 1716 0016 002B     		cmp	r3, #0
 1717 0018 0CD1     		bne	.L135
1046:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         OSFlagDbgListPtr = p_grp_next;
 1718              		.loc 1 1046 0
 1719 001a 144A     		ldr	r2, .L140
 1720 001c BB68     		ldr	r3, [r7, #8]
 1721 001e 1360     		str	r3, [r2]
1047:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         if (p_grp_next != (OS_FLAG_GRP *)0) {
 1722              		.loc 1 1047 0
 1723 0020 BB68     		ldr	r3, [r7, #8]
 1724 0022 002B     		cmp	r3, #0
 1725 0024 02D0     		beq	.L136
1048:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****             p_grp_next->DbgPrevPtr = (OS_FLAG_GRP *)0;
 1726              		.loc 1 1048 0
 1727 0026 BB68     		ldr	r3, [r7, #8]
 1728 0028 0022     		movs	r2, #0
 1729 002a 5A61     		str	r2, [r3, #20]
 1730              	.L136:
1049:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         }
1050:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         p_grp->DbgNextPtr = (OS_FLAG_GRP *)0;
 1731              		.loc 1 1050 0
 1732 002c 7B68     		ldr	r3, [r7, #4]
 1733 002e 0022     		movs	r2, #0
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 50


 1734 0030 9A61     		str	r2, [r3, #24]
1051:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
1052:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     } else if (p_grp_next == (OS_FLAG_GRP *)0) {
1053:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         p_grp_prev->DbgNextPtr = (OS_FLAG_GRP *)0;
1054:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         p_grp->DbgPrevPtr      = (OS_FLAG_GRP *)0;
1055:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
1056:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     } else {
1057:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         p_grp_prev->DbgNextPtr =  p_grp_next;
1058:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         p_grp_next->DbgPrevPtr =  p_grp_prev;
1059:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         p_grp->DbgNextPtr      = (OS_FLAG_GRP *)0;
1060:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         p_grp->DbgPrevPtr      = (OS_FLAG_GRP *)0;
1061:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     }
1062:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** }
 1735              		.loc 1 1062 0
 1736 0032 15E0     		b	.L139
 1737              	.L135:
1052:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         p_grp_prev->DbgNextPtr = (OS_FLAG_GRP *)0;
 1738              		.loc 1 1052 0
 1739 0034 BB68     		ldr	r3, [r7, #8]
 1740 0036 002B     		cmp	r3, #0
 1741 0038 06D1     		bne	.L138
1053:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         p_grp->DbgPrevPtr      = (OS_FLAG_GRP *)0;
 1742              		.loc 1 1053 0
 1743 003a FB68     		ldr	r3, [r7, #12]
 1744 003c 0022     		movs	r2, #0
 1745 003e 9A61     		str	r2, [r3, #24]
1054:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 1746              		.loc 1 1054 0
 1747 0040 7B68     		ldr	r3, [r7, #4]
 1748 0042 0022     		movs	r2, #0
 1749 0044 5A61     		str	r2, [r3, #20]
 1750              		.loc 1 1062 0
 1751 0046 0BE0     		b	.L139
 1752              	.L138:
1057:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         p_grp_next->DbgPrevPtr =  p_grp_prev;
 1753              		.loc 1 1057 0
 1754 0048 FB68     		ldr	r3, [r7, #12]
 1755 004a BA68     		ldr	r2, [r7, #8]
 1756 004c 9A61     		str	r2, [r3, #24]
1058:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         p_grp->DbgNextPtr      = (OS_FLAG_GRP *)0;
 1757              		.loc 1 1058 0
 1758 004e BB68     		ldr	r3, [r7, #8]
 1759 0050 FA68     		ldr	r2, [r7, #12]
 1760 0052 5A61     		str	r2, [r3, #20]
1059:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         p_grp->DbgPrevPtr      = (OS_FLAG_GRP *)0;
 1761              		.loc 1 1059 0
 1762 0054 7B68     		ldr	r3, [r7, #4]
 1763 0056 0022     		movs	r2, #0
 1764 0058 9A61     		str	r2, [r3, #24]
1060:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     }
 1765              		.loc 1 1060 0
 1766 005a 7B68     		ldr	r3, [r7, #4]
 1767 005c 0022     		movs	r2, #0
 1768 005e 5A61     		str	r2, [r3, #20]
 1769              	.L139:
 1770              		.loc 1 1062 0
 1771 0060 00BF     		nop
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 51


 1772 0062 1437     		adds	r7, r7, #20
 1773              		.cfi_def_cfa_offset 4
 1774 0064 BD46     		mov	sp, r7
 1775              		.cfi_def_cfa_register 13
 1776              		@ sp needed
 1777 0066 80BC     		pop	{r7}
 1778              		.cfi_restore 7
 1779              		.cfi_def_cfa_offset 0
 1780 0068 7047     		bx	lr
 1781              	.L141:
 1782 006a 00BF     		.align	2
 1783              	.L140:
 1784 006c 00000000 		.word	OSFlagDbgListPtr
 1785              		.cfi_endproc
 1786              	.LFE10:
 1787              		.size	OS_FlagDbgListRemove, .-OS_FlagDbgListRemove
 1788              		.section	.text.OS_FlagPost,"ax",%progbits
 1789              		.align	2
 1790              		.global	OS_FlagPost
 1791              		.thumb
 1792              		.thumb_func
 1793              		.type	OS_FlagPost, %function
 1794              	OS_FlagPost:
 1795              	.LFB11:
1063:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #endif
1064:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
1065:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** /*$PAGE*/
1066:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** /*
1067:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** ***************************************************************************************************
1068:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                                POST EVENT FLAG BIT(S)
1069:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
1070:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** * Description: This function is called to set or clear some bits in an event flag group.  The bits 
1071:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *              specified by a 'bit mask'.
1072:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
1073:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** * Arguments  : p_grp         is a pointer to the desired event flag group.
1074:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
1075:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *              flags         If 'opt' (see below) is OS_OPT_POST_FLAG_SET, each bit that is set in 
1076:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                            set the corresponding bit in the event flag group.  e.g. to set bits 0
1077:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                            and 5 you would set 'flags' to:
1078:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
1079:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                0x31     (note, bit 0 is least significant bit)
1080:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
1081:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                            If 'opt' (see below) is OS_OPT_POST_FLAG_CLR, each bit that is set in 
1082:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                            CLEAR the corresponding bit in the event flag group.  e.g. to clear bi
1083:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                            4 and 5 you would specify 'flags' as:
1084:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
1085:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                0x31     (note, bit 0 is least significant bit)
1086:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
1087:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *              opt           indicates whether the flags will be:
1088:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
1089:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                OS_OPT_POST_FLAG_SET       set
1090:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                OS_OPT_POST_FLAG_CLR       cleared
1091:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
1092:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                            you can also 'add' OS_OPT_POST_NO_SCHED to prevent the scheduler from 
1093:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
1094:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *              ts            is the timestamp of the post
1095:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 52


1096:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *              p_err         is a pointer to an error code and can be:
1097:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
1098:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                OS_ERR_NONE                The call was successful
1099:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                OS_ERR_OBJ_PTR_NULL        You passed a NULL pointer
1100:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                OS_ERR_OBJ_TYPE            You are not pointing to an event flag g
1101:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                OS_ERR_OPT_INVALID         You specified an invalid option
1102:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
1103:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** * Returns    : the new value of the event flags bits that are still set.
1104:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
1105:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** * Note(s)    : 1) The execution time of this function depends on the number of tasks waiting on the
1106:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** ***************************************************************************************************
1107:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** */
1108:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
1109:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** OS_FLAGS  OS_FlagPost (OS_FLAG_GRP  *p_grp,
1110:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                        OS_FLAGS      flags,
1111:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                        OS_OPT        opt,
1112:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                        CPU_TS        ts,
1113:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                        OS_ERR       *p_err)
1114:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** {
 1796              		.loc 1 1114 0
 1797              		.cfi_startproc
 1798              		@ args = 4, pretend = 0, frame = 48
 1799              		@ frame_needed = 1, uses_anonymous_args = 0
 1800 0000 80B5     		push	{r7, lr}
 1801              		.cfi_def_cfa_offset 8
 1802              		.cfi_offset 7, -8
 1803              		.cfi_offset 14, -4
 1804 0002 8CB0     		sub	sp, sp, #48
 1805              		.cfi_def_cfa_offset 56
 1806 0004 00AF     		add	r7, sp, #0
 1807              		.cfi_def_cfa_register 7
 1808 0006 F860     		str	r0, [r7, #12]
 1809 0008 B960     		str	r1, [r7, #8]
 1810 000a 3B60     		str	r3, [r7]
 1811 000c 1346     		mov	r3, r2	@ movhi
 1812 000e FB80     		strh	r3, [r7, #6]	@ movhi
1115:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     OS_FLAGS        flags_cur;
1116:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     OS_FLAGS        flags_rdy;
1117:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     OS_OPT          mode;
1118:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     OS_PEND_DATA   *p_pend_data;
1119:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     OS_PEND_DATA   *p_pend_data_next;
1120:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     OS_PEND_LIST   *p_pend_list;
1121:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     OS_TCB         *p_tcb;
1122:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     CPU_SR_ALLOC();
 1813              		.loc 1 1122 0
 1814 0010 0023     		movs	r3, #0
 1815 0012 7B62     		str	r3, [r7, #36]
1123:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
1124:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
1125:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
1126:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     CPU_CRITICAL_ENTER();
 1816              		.loc 1 1126 0
 1817 0014 FFF7FEFF 		bl	CPU_SR_Save
 1818 0018 7862     		str	r0, [r7, #36]
1127:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     switch (opt) {
 1819              		.loc 1 1127 0
 1820 001a FB88     		ldrh	r3, [r7, #6]
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 53


 1821 001c 012B     		cmp	r3, #1
 1822 001e 13D0     		beq	.L144
 1823 0020 012B     		cmp	r3, #1
 1824 0022 02DC     		bgt	.L145
 1825 0024 002B     		cmp	r3, #0
 1826 0026 08D0     		beq	.L146
 1827 0028 16E0     		b	.L143
 1828              	.L145:
 1829 002a B3F5004F 		cmp	r3, #32768
 1830 002e 04D0     		beq	.L146
 1831 0030 48F20102 		movw	r2, #32769
 1832 0034 9342     		cmp	r3, r2
 1833 0036 07D0     		beq	.L144
 1834 0038 0EE0     		b	.L143
 1835              	.L146:
1128:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         case OS_OPT_POST_FLAG_SET:
1129:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         case OS_OPT_POST_FLAG_SET | OS_OPT_POST_NO_SCHED:
1130:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              p_grp->Flags |=  flags;                            /* Set   the flags specified in the
 1836              		.loc 1 1130 0
 1837 003a FB68     		ldr	r3, [r7, #12]
 1838 003c 1A6A     		ldr	r2, [r3, #32]
 1839 003e BB68     		ldr	r3, [r7, #8]
 1840 0040 1A43     		orrs	r2, r2, r3
 1841 0042 FB68     		ldr	r3, [r7, #12]
 1842 0044 1A62     		str	r2, [r3, #32]
1131:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              break;
 1843              		.loc 1 1131 0
 1844 0046 10E0     		b	.L147
 1845              	.L144:
1132:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
1133:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         case OS_OPT_POST_FLAG_CLR:
1134:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         case OS_OPT_POST_FLAG_CLR | OS_OPT_POST_NO_SCHED:
1135:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              p_grp->Flags &= ~flags;                            /* Clear the flags specified in the
 1846              		.loc 1 1135 0
 1847 0048 FB68     		ldr	r3, [r7, #12]
 1848 004a 1A6A     		ldr	r2, [r3, #32]
 1849 004c BB68     		ldr	r3, [r7, #8]
 1850 004e DB43     		mvns	r3, r3
 1851 0050 1A40     		ands	r2, r2, r3
 1852 0052 FB68     		ldr	r3, [r7, #12]
 1853 0054 1A62     		str	r2, [r3, #32]
1136:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              break;
 1854              		.loc 1 1136 0
 1855 0056 08E0     		b	.L147
 1856              	.L143:
1137:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
1138:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         default:
1139:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              CPU_CRITICAL_EXIT();                               /* INVALID option                  
 1857              		.loc 1 1139 0
 1858 0058 786A     		ldr	r0, [r7, #36]
 1859 005a FFF7FEFF 		bl	CPU_SR_Restore
1140:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****             *p_err = OS_ERR_OPT_INVALID;
 1860              		.loc 1 1140 0
 1861 005e BB6B     		ldr	r3, [r7, #56]
 1862 0060 45F62562 		movw	r2, #24101
 1863 0064 1A80     		strh	r2, [r3]	@ movhi
1141:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              return ((OS_FLAGS)0);
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 54


 1864              		.loc 1 1141 0
 1865 0066 0023     		movs	r3, #0
 1866 0068 B7E0     		b	.L148
 1867              	.L147:
1142:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     }
1143:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     p_grp->TS   = ts;
 1868              		.loc 1 1143 0
 1869 006a FB68     		ldr	r3, [r7, #12]
 1870 006c 3A68     		ldr	r2, [r7]
 1871 006e 5A62     		str	r2, [r3, #36]
1144:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     p_pend_list = &p_grp->PendList;
 1872              		.loc 1 1144 0
 1873 0070 FB68     		ldr	r3, [r7, #12]
 1874 0072 0833     		adds	r3, r3, #8
 1875 0074 3B62     		str	r3, [r7, #32]
1145:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     if (p_pend_list->NbrEntries == 0u) {                        /* Any task waiting on event flag g
 1876              		.loc 1 1145 0
 1877 0076 3B6A     		ldr	r3, [r7, #32]
 1878 0078 1B89     		ldrh	r3, [r3, #8]
 1879 007a 002B     		cmp	r3, #0
 1880 007c 08D1     		bne	.L149
1146:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         CPU_CRITICAL_EXIT();                                    /* No                              
 1881              		.loc 1 1146 0
 1882 007e 786A     		ldr	r0, [r7, #36]
 1883 0080 FFF7FEFF 		bl	CPU_SR_Restore
1147:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****        *p_err = OS_ERR_NONE;
 1884              		.loc 1 1147 0
 1885 0084 BB6B     		ldr	r3, [r7, #56]
 1886 0086 0022     		movs	r2, #0
 1887 0088 1A80     		strh	r2, [r3]	@ movhi
1148:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         return (p_grp->Flags);
 1888              		.loc 1 1148 0
 1889 008a FB68     		ldr	r3, [r7, #12]
 1890 008c 1B6A     		ldr	r3, [r3, #32]
 1891 008e A4E0     		b	.L148
 1892              	.L149:
1149:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     }
1150:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
1151:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     OS_CRITICAL_ENTER_CPU_EXIT();
1152:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     p_pend_data = p_pend_list->HeadPtr;
 1893              		.loc 1 1152 0
 1894 0090 3B6A     		ldr	r3, [r7, #32]
 1895 0092 1B68     		ldr	r3, [r3]
 1896 0094 FB62     		str	r3, [r7, #44]
1153:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     p_tcb       = p_pend_data->TCBPtr;
 1897              		.loc 1 1153 0
 1898 0096 FB6A     		ldr	r3, [r7, #44]
 1899 0098 9B68     		ldr	r3, [r3, #8]
 1900 009a BB62     		str	r3, [r7, #40]
1154:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     while (p_tcb != (OS_TCB *)0) {                              /* Go through all tasks waiting on 
 1901              		.loc 1 1154 0
 1902 009c 83E0     		b	.L150
 1903              	.L163:
1155:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         p_pend_data_next = p_pend_data->NextPtr;
 1904              		.loc 1 1155 0
 1905 009e FB6A     		ldr	r3, [r7, #44]
 1906 00a0 5B68     		ldr	r3, [r3, #4]
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 55


 1907 00a2 FB61     		str	r3, [r7, #28]
1156:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         mode             = p_tcb->FlagsOpt & OS_OPT_PEND_FLAG_MASK;
 1908              		.loc 1 1156 0
 1909 00a4 BB6A     		ldr	r3, [r7, #40]
 1910 00a6 B3F88830 		ldrh	r3, [r3, #136]
 1911 00aa 03F00F03 		and	r3, r3, #15
 1912 00ae 7B83     		strh	r3, [r7, #26]	@ movhi
1157:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         switch (mode) {
 1913              		.loc 1 1157 0
 1914 00b0 7B8B     		ldrh	r3, [r7, #26]
 1915 00b2 013B     		subs	r3, r3, #1
 1916 00b4 072B     		cmp	r3, #7
 1917 00b6 5BD8     		bhi	.L151
 1918 00b8 01A2     		adr	r2, .L153
 1919 00ba 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 1920 00be 00BF     		.p2align 2
 1921              	.L153:
 1922 00c0 27010000 		.word	.L152+1
 1923 00c4 4F010000 		.word	.L154+1
 1924 00c8 71010000 		.word	.L151+1
 1925 00cc E1000000 		.word	.L155+1
 1926 00d0 71010000 		.word	.L151+1
 1927 00d4 71010000 		.word	.L151+1
 1928 00d8 71010000 		.word	.L151+1
 1929 00dc 07010000 		.word	.L156+1
 1930              		.p2align 1
 1931              	.L155:
1158:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****             case OS_OPT_PEND_FLAG_SET_ALL:                      /* See if all req. flags are set fo
1159:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  flags_rdy = (OS_FLAGS)(p_grp->Flags & p_tcb->FlagsPend);
 1932              		.loc 1 1159 0
 1933 00e0 FB68     		ldr	r3, [r7, #12]
 1934 00e2 1A6A     		ldr	r2, [r3, #32]
 1935 00e4 BB6A     		ldr	r3, [r7, #40]
 1936 00e6 D3F88030 		ldr	r3, [r3, #128]
 1937 00ea 1340     		ands	r3, r3, r2
 1938 00ec 7B61     		str	r3, [r7, #20]
1160:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  if (flags_rdy == p_tcb->FlagsPend) {
 1939              		.loc 1 1160 0
 1940 00ee BB6A     		ldr	r3, [r7, #40]
 1941 00f0 D3F88020 		ldr	r2, [r3, #128]
 1942 00f4 7B69     		ldr	r3, [r7, #20]
 1943 00f6 9A42     		cmp	r2, r3
 1944 00f8 43D1     		bne	.L165
1161:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                      OS_FlagTaskRdy(p_tcb,                      /* Make task RTR, event(s) Rx'd    
 1945              		.loc 1 1161 0
 1946 00fa 3A68     		ldr	r2, [r7]
 1947 00fc 7969     		ldr	r1, [r7, #20]
 1948 00fe B86A     		ldr	r0, [r7, #40]
 1949 0100 FFF7FEFF 		bl	OS_FlagTaskRdy
1162:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                                     flags_rdy,
1163:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                                     ts);
1164:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  }
1165:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  break;
 1950              		.loc 1 1165 0
 1951 0104 3DE0     		b	.L165
 1952              	.L156:
1166:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 56


1167:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****             case OS_OPT_PEND_FLAG_SET_ANY:                      /* See if any flag set             
1168:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  flags_rdy = (OS_FLAGS)(p_grp->Flags & p_tcb->FlagsPend);
 1953              		.loc 1 1168 0
 1954 0106 FB68     		ldr	r3, [r7, #12]
 1955 0108 1A6A     		ldr	r2, [r3, #32]
 1956 010a BB6A     		ldr	r3, [r7, #40]
 1957 010c D3F88030 		ldr	r3, [r3, #128]
 1958 0110 1340     		ands	r3, r3, r2
 1959 0112 7B61     		str	r3, [r7, #20]
1169:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  if (flags_rdy != (OS_FLAGS)0) {
 1960              		.loc 1 1169 0
 1961 0114 7B69     		ldr	r3, [r7, #20]
 1962 0116 002B     		cmp	r3, #0
 1963 0118 35D0     		beq	.L166
1170:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                      OS_FlagTaskRdy(p_tcb,                      /* Make task RTR, event(s) Rx'd    
 1964              		.loc 1 1170 0
 1965 011a 3A68     		ldr	r2, [r7]
 1966 011c 7969     		ldr	r1, [r7, #20]
 1967 011e B86A     		ldr	r0, [r7, #40]
 1968 0120 FFF7FEFF 		bl	OS_FlagTaskRdy
1171:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                                     flags_rdy,
1172:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                                     ts);
1173:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  }
1174:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  break;
 1969              		.loc 1 1174 0
 1970 0124 2FE0     		b	.L166
 1971              	.L152:
1175:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
1176:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #if OS_CFG_FLAG_MODE_CLR_EN > 0u
1177:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****             case OS_OPT_PEND_FLAG_CLR_ALL:                      /* See if all req. flags are set fo
1178:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  flags_rdy = (OS_FLAGS)(~p_grp->Flags & p_tcb->FlagsPend);
 1972              		.loc 1 1178 0
 1973 0126 FB68     		ldr	r3, [r7, #12]
 1974 0128 1B6A     		ldr	r3, [r3, #32]
 1975 012a DA43     		mvns	r2, r3
 1976 012c BB6A     		ldr	r3, [r7, #40]
 1977 012e D3F88030 		ldr	r3, [r3, #128]
 1978 0132 1340     		ands	r3, r3, r2
 1979 0134 7B61     		str	r3, [r7, #20]
1179:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  if (flags_rdy == p_tcb->FlagsPend) {
 1980              		.loc 1 1179 0
 1981 0136 BB6A     		ldr	r3, [r7, #40]
 1982 0138 D3F88020 		ldr	r2, [r3, #128]
 1983 013c 7B69     		ldr	r3, [r7, #20]
 1984 013e 9A42     		cmp	r2, r3
 1985 0140 23D1     		bne	.L167
1180:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                      OS_FlagTaskRdy(p_tcb,                      /* Make task RTR, event(s) Rx'd    
 1986              		.loc 1 1180 0
 1987 0142 3A68     		ldr	r2, [r7]
 1988 0144 7969     		ldr	r1, [r7, #20]
 1989 0146 B86A     		ldr	r0, [r7, #40]
 1990 0148 FFF7FEFF 		bl	OS_FlagTaskRdy
1181:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                                     flags_rdy,
1182:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                                     ts);
1183:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  }
1184:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  break;
 1991              		.loc 1 1184 0
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 57


 1992 014c 1DE0     		b	.L167
 1993              	.L154:
1185:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
1186:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****             case OS_OPT_PEND_FLAG_CLR_ANY:                      /* See if any flag set             
1187:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  flags_rdy = (OS_FLAGS)(~p_grp->Flags & p_tcb->FlagsPend);
 1994              		.loc 1 1187 0
 1995 014e FB68     		ldr	r3, [r7, #12]
 1996 0150 1B6A     		ldr	r3, [r3, #32]
 1997 0152 DA43     		mvns	r2, r3
 1998 0154 BB6A     		ldr	r3, [r7, #40]
 1999 0156 D3F88030 		ldr	r3, [r3, #128]
 2000 015a 1340     		ands	r3, r3, r2
 2001 015c 7B61     		str	r3, [r7, #20]
1188:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  if (flags_rdy != (OS_FLAGS)0) {
 2002              		.loc 1 1188 0
 2003 015e 7B69     		ldr	r3, [r7, #20]
 2004 0160 002B     		cmp	r3, #0
 2005 0162 14D0     		beq	.L168
1189:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                      OS_FlagTaskRdy(p_tcb,                      /* Make task RTR, event(s) Rx'd    
 2006              		.loc 1 1189 0
 2007 0164 3A68     		ldr	r2, [r7]
 2008 0166 7969     		ldr	r1, [r7, #20]
 2009 0168 B86A     		ldr	r0, [r7, #40]
 2010 016a FFF7FEFF 		bl	OS_FlagTaskRdy
1190:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                                     flags_rdy,
1191:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                                     ts);
1192:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  }
1193:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  break;
 2011              		.loc 1 1193 0
 2012 016e 0EE0     		b	.L168
 2013              	.L151:
1194:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #endif
1195:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****             default:
1196:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  OS_CRITICAL_EXIT();
 2014              		.loc 1 1196 0
 2015 0170 786A     		ldr	r0, [r7, #36]
 2016 0172 FFF7FEFF 		bl	CPU_SR_Restore
1197:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                 *p_err = OS_ERR_FLAG_PEND_OPT;
 2017              		.loc 1 1197 0
 2018 0176 BB6B     		ldr	r3, [r7, #56]
 2019 0178 43F6FF22 		movw	r2, #15103
 2020 017c 1A80     		strh	r2, [r3]	@ movhi
1198:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                  return ((OS_FLAGS)0);
 2021              		.loc 1 1198 0
 2022 017e 0023     		movs	r3, #0
 2023 0180 2BE0     		b	.L148
 2024              	.L165:
1165:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 2025              		.loc 1 1165 0
 2026 0182 00BF     		nop
 2027 0184 04E0     		b	.L158
 2028              	.L166:
1174:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 2029              		.loc 1 1174 0
 2030 0186 00BF     		nop
 2031 0188 02E0     		b	.L158
 2032              	.L167:
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 58


1184:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
 2033              		.loc 1 1184 0
 2034 018a 00BF     		nop
 2035 018c 00E0     		b	.L158
 2036              	.L168:
1193:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** #endif
 2037              		.loc 1 1193 0
 2038 018e 00BF     		nop
 2039              	.L158:
1199:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         }
1200:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         p_pend_data = p_pend_data_next;                         /* Point to next task waiting for e
 2040              		.loc 1 1200 0
 2041 0190 FB69     		ldr	r3, [r7, #28]
 2042 0192 FB62     		str	r3, [r7, #44]
1201:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         if (p_pend_data != (OS_PEND_DATA *)0) {
 2043              		.loc 1 1201 0
 2044 0194 FB6A     		ldr	r3, [r7, #44]
 2045 0196 002B     		cmp	r3, #0
 2046 0198 03D0     		beq	.L162
1202:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****             p_tcb = p_pend_data->TCBPtr;
 2047              		.loc 1 1202 0
 2048 019a FB6A     		ldr	r3, [r7, #44]
 2049 019c 9B68     		ldr	r3, [r3, #8]
 2050 019e BB62     		str	r3, [r7, #40]
 2051 01a0 01E0     		b	.L150
 2052              	.L162:
1203:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         } else {
1204:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****             p_tcb = (OS_TCB *)0;
 2053              		.loc 1 1204 0
 2054 01a2 0023     		movs	r3, #0
 2055 01a4 BB62     		str	r3, [r7, #40]
 2056              	.L150:
1154:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         p_pend_data_next = p_pend_data->NextPtr;
 2057              		.loc 1 1154 0
 2058 01a6 BB6A     		ldr	r3, [r7, #40]
 2059 01a8 002B     		cmp	r3, #0
 2060 01aa 7FF478AF 		bne	.L163
1205:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         }
1206:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     }
1207:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     OS_CRITICAL_EXIT_NO_SCHED();
 2061              		.loc 1 1207 0
 2062 01ae 786A     		ldr	r0, [r7, #36]
 2063 01b0 FFF7FEFF 		bl	CPU_SR_Restore
1208:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
1209:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     if ((opt & OS_OPT_POST_NO_SCHED) == (OS_OPT)0) {
 2064              		.loc 1 1209 0
 2065 01b4 B7F90630 		ldrsh	r3, [r7, #6]
 2066 01b8 002B     		cmp	r3, #0
 2067 01ba 01DB     		blt	.L164
1210:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         OSSched();
 2068              		.loc 1 1210 0
 2069 01bc FFF7FEFF 		bl	OSSched
 2070              	.L164:
1211:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     }
1212:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
1213:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     CPU_CRITICAL_ENTER();
 2071              		.loc 1 1213 0
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 59


 2072 01c0 FFF7FEFF 		bl	CPU_SR_Save
 2073 01c4 7862     		str	r0, [r7, #36]
1214:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     flags_cur = p_grp->Flags;
 2074              		.loc 1 1214 0
 2075 01c6 FB68     		ldr	r3, [r7, #12]
 2076 01c8 1B6A     		ldr	r3, [r3, #32]
 2077 01ca 3B61     		str	r3, [r7, #16]
1215:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     CPU_CRITICAL_EXIT();
 2078              		.loc 1 1215 0
 2079 01cc 786A     		ldr	r0, [r7, #36]
 2080 01ce FFF7FEFF 		bl	CPU_SR_Restore
1216:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****    *p_err     = OS_ERR_NONE;
 2081              		.loc 1 1216 0
 2082 01d2 BB6B     		ldr	r3, [r7, #56]
 2083 01d4 0022     		movs	r2, #0
 2084 01d6 1A80     		strh	r2, [r3]	@ movhi
1217:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     return (flags_cur);
 2085              		.loc 1 1217 0
 2086 01d8 3B69     		ldr	r3, [r7, #16]
 2087              	.L148:
1218:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** }
 2088              		.loc 1 1218 0
 2089 01da 1846     		mov	r0, r3
 2090 01dc 3037     		adds	r7, r7, #48
 2091              		.cfi_def_cfa_offset 8
 2092 01de BD46     		mov	sp, r7
 2093              		.cfi_def_cfa_register 13
 2094              		@ sp needed
 2095 01e0 80BD     		pop	{r7, pc}
 2096              		.cfi_endproc
 2097              	.LFE11:
 2098              		.size	OS_FlagPost, .-OS_FlagPost
 2099 01e2 00BF     		.section	.text.OS_FlagTaskRdy,"ax",%progbits
 2100              		.align	2
 2101              		.global	OS_FlagTaskRdy
 2102              		.thumb
 2103              		.thumb_func
 2104              		.type	OS_FlagTaskRdy, %function
 2105              	OS_FlagTaskRdy:
 2106              	.LFB12:
1219:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
1220:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** /*$PAGE*/
1221:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** /*
1222:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** ***************************************************************************************************
1223:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *                                        MAKE TASK READY-TO-RUN, EVENT(s) OCCURRED
1224:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
1225:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** * Description: This function is internal to uC/OS-III and is used to make a task ready-to-run becau
1226:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *              flag bits have been set.
1227:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
1228:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** * Arguments  : p_tcb         is a pointer to the OS_TCB of the task to remove
1229:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *              -----
1230:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
1231:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *              flags_rdy     contains the bit pattern of the event flags that cause the task to bec
1232:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
1233:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *              ts            is a timestamp associated with the post
1234:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
1235:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** * Returns    : none
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 60


1236:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** *
1237:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** * Note(s)    : This function is INTERNAL to uC/OS-III and your application should not call it.
1238:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** ***************************************************************************************************
1239:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** */
1240:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
1241:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** void   OS_FlagTaskRdy (OS_TCB    *p_tcb,
1242:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                        OS_FLAGS   flags_rdy,
1243:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****                        CPU_TS     ts)
1244:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** {
 2107              		.loc 1 1244 0
 2108              		.cfi_startproc
 2109              		@ args = 0, pretend = 0, frame = 16
 2110              		@ frame_needed = 1, uses_anonymous_args = 0
 2111 0000 80B5     		push	{r7, lr}
 2112              		.cfi_def_cfa_offset 8
 2113              		.cfi_offset 7, -8
 2114              		.cfi_offset 14, -4
 2115 0002 84B0     		sub	sp, sp, #16
 2116              		.cfi_def_cfa_offset 24
 2117 0004 00AF     		add	r7, sp, #0
 2118              		.cfi_def_cfa_register 7
 2119 0006 F860     		str	r0, [r7, #12]
 2120 0008 B960     		str	r1, [r7, #8]
 2121 000a 7A60     		str	r2, [r7, #4]
1245:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     p_tcb->FlagsRdy   = flags_rdy;
 2122              		.loc 1 1245 0
 2123 000c FB68     		ldr	r3, [r7, #12]
 2124 000e BA68     		ldr	r2, [r7, #8]
 2125 0010 C3F88420 		str	r2, [r3, #132]
1246:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     p_tcb->PendStatus = OS_STATUS_PEND_OK;                  /* Clear pend status                   
 2126              		.loc 1 1246 0
 2127 0014 FB68     		ldr	r3, [r7, #12]
 2128 0016 0022     		movs	r2, #0
 2129 0018 83F83520 		strb	r2, [r3, #53]
1247:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     p_tcb->PendOn     = OS_TASK_PEND_ON_NOTHING;            /* Indicate no longer pending          
 2130              		.loc 1 1247 0
 2131 001c FB68     		ldr	r3, [r7, #12]
 2132 001e 0022     		movs	r2, #0
 2133 0020 83F83420 		strb	r2, [r3, #52]
1248:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     p_tcb->TS         = ts;
 2134              		.loc 1 1248 0
 2135 0024 FB68     		ldr	r3, [r7, #12]
 2136 0026 7A68     		ldr	r2, [r7, #4]
 2137 0028 1A64     		str	r2, [r3, #64]
1249:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     switch (p_tcb->TaskState) {
 2138              		.loc 1 1249 0
 2139 002a FB68     		ldr	r3, [r7, #12]
 2140 002c 93F83630 		ldrb	r3, [r3, #54]	@ zero_extendqisi2
 2141 0030 072B     		cmp	r3, #7
 2142 0032 20D8     		bhi	.L176
 2143 0034 01A2     		adr	r2, .L172
 2144 0036 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2145 003a 00BF     		.p2align 2
 2146              	.L172:
 2147 003c 77000000 		.word	.L176+1
 2148 0040 77000000 		.word	.L176+1
 2149 0044 5D000000 		.word	.L173+1
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 61


 2150 0048 5D000000 		.word	.L173+1
 2151 004c 77000000 		.word	.L176+1
 2152 0050 77000000 		.word	.L176+1
 2153 0054 6D000000 		.word	.L174+1
 2154 0058 6D000000 		.word	.L174+1
 2155              		.p2align 1
 2156              	.L173:
1250:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         case OS_TASK_STATE_RDY:
1251:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         case OS_TASK_STATE_DLY:
1252:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         case OS_TASK_STATE_DLY_SUSPENDED:
1253:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         case OS_TASK_STATE_SUSPENDED:
1254:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              break;
1255:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
1256:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         case OS_TASK_STATE_PEND:
1257:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         case OS_TASK_STATE_PEND_TIMEOUT:
1258:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              OS_TaskRdy(p_tcb);
 2157              		.loc 1 1258 0
 2158 005c F868     		ldr	r0, [r7, #12]
 2159 005e FFF7FEFF 		bl	OS_TaskRdy
1259:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              p_tcb->TaskState = OS_TASK_STATE_RDY;
 2160              		.loc 1 1259 0
 2161 0062 FB68     		ldr	r3, [r7, #12]
 2162 0064 0022     		movs	r2, #0
 2163 0066 83F83620 		strb	r2, [r3, #54]
1260:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              break;
 2164              		.loc 1 1260 0
 2165 006a 05E0     		b	.L175
 2166              	.L174:
1261:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
1262:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         case OS_TASK_STATE_PEND_SUSPENDED:
1263:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         case OS_TASK_STATE_PEND_TIMEOUT_SUSPENDED:
1264:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              p_tcb->TaskState = OS_TASK_STATE_SUSPENDED;
 2167              		.loc 1 1264 0
 2168 006c FB68     		ldr	r3, [r7, #12]
 2169 006e 0422     		movs	r2, #4
 2170 0070 83F83620 		strb	r2, [r3, #54]
1265:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              break;
 2171              		.loc 1 1265 0
 2172 0074 00E0     		b	.L175
 2173              	.L176:
1266:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** 
1267:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****         default:
1268:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****              break;
 2174              		.loc 1 1268 0
 2175 0076 00BF     		nop
 2176              	.L175:
1269:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     }
1270:..\..\..\..\..\..\uCOS-III\Source/os_flag.c ****     OS_PendListRemove(p_tcb);
 2177              		.loc 1 1270 0
 2178 0078 F868     		ldr	r0, [r7, #12]
 2179 007a FFF7FEFF 		bl	OS_PendListRemove
1271:..\..\..\..\..\..\uCOS-III\Source/os_flag.c **** }
 2180              		.loc 1 1271 0
 2181 007e 00BF     		nop
 2182 0080 1037     		adds	r7, r7, #16
 2183              		.cfi_def_cfa_offset 8
 2184 0082 BD46     		mov	sp, r7
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 62


 2185              		.cfi_def_cfa_register 13
 2186              		@ sp needed
 2187 0084 80BD     		pop	{r7, pc}
 2188              		.cfi_endproc
 2189              	.LFE12:
 2190              		.size	OS_FlagTaskRdy, .-OS_FlagTaskRdy
 2191 0086 00BF     		.text
 2192              	.Letext0:
 2193              		.file 2 "..\\..\\..\\..\\..\\..\\uC-CPU\\ARM-Cortex-M3\\GNU/cpu.h"
 2194              		.file 3 "..\\..\\..\\..\\..\\..\\uC-CPU/cpu_core.h"
 2195              		.file 4 "..\\..\\..\\..\\..\\..\\uCOS-III\\Source/os_type.h"
 2196              		.file 5 "..\\..\\..\\..\\..\\..\\uCOS-III\\Source/os.h"
 2197              		.section	.debug_info,"",%progbits
 2198              	.Ldebug_info0:
 2199 0000 6F110000 		.4byte	0x116f
 2200 0004 0400     		.2byte	0x4
 2201 0006 00000000 		.4byte	.Ldebug_abbrev0
 2202 000a 04       		.byte	0x4
 2203 000b 01       		.uleb128 0x1
 2204 000c 7E020000 		.4byte	.LASF321
 2205 0010 0C       		.byte	0xc
 2206 0011 6B0A0000 		.4byte	.LASF322
 2207 0015 04090000 		.4byte	.LASF323
 2208 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2209 001d 00000000 		.4byte	0
 2210 0021 00000000 		.4byte	.Ldebug_line0
 2211 0025 02       		.uleb128 0x2
 2212 0026 69070000 		.4byte	.LASF0
 2213 002a 02       		.byte	0x2
 2214 002b 76       		.byte	0x76
 2215 002c 30000000 		.4byte	0x30
 2216 0030 03       		.uleb128 0x3
 2217 0031 01       		.byte	0x1
 2218 0032 08       		.byte	0x8
 2219 0033 F3080000 		.4byte	.LASF2
 2220 0037 02       		.uleb128 0x2
 2221 0038 4E100000 		.4byte	.LASF1
 2222 003c 02       		.byte	0x2
 2223 003d 77       		.byte	0x77
 2224 003e 42000000 		.4byte	0x42
 2225 0042 03       		.uleb128 0x3
 2226 0043 01       		.byte	0x1
 2227 0044 08       		.byte	0x8
 2228 0045 96100000 		.4byte	.LASF3
 2229 0049 02       		.uleb128 0x2
 2230 004a 48060000 		.4byte	.LASF4
 2231 004e 02       		.byte	0x2
 2232 004f 78       		.byte	0x78
 2233 0050 42000000 		.4byte	0x42
 2234 0054 03       		.uleb128 0x3
 2235 0055 01       		.byte	0x1
 2236 0056 06       		.byte	0x6
 2237 0057 FE110000 		.4byte	.LASF5
 2238 005b 02       		.uleb128 0x2
 2239 005c 330B0000 		.4byte	.LASF6
 2240 0060 02       		.byte	0x2
 2241 0061 7A       		.byte	0x7a
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 63


 2242 0062 66000000 		.4byte	0x66
 2243 0066 03       		.uleb128 0x3
 2244 0067 02       		.byte	0x2
 2245 0068 07       		.byte	0x7
 2246 0069 24120000 		.4byte	.LASF7
 2247 006d 03       		.uleb128 0x3
 2248 006e 02       		.byte	0x2
 2249 006f 05       		.byte	0x5
 2250 0070 1D0E0000 		.4byte	.LASF8
 2251 0074 02       		.uleb128 0x2
 2252 0075 BF010000 		.4byte	.LASF9
 2253 0079 02       		.byte	0x2
 2254 007a 7C       		.byte	0x7c
 2255 007b 7F000000 		.4byte	0x7f
 2256 007f 03       		.uleb128 0x3
 2257 0080 04       		.byte	0x4
 2258 0081 07       		.byte	0x7
 2259 0082 800F0000 		.4byte	.LASF10
 2260 0086 04       		.uleb128 0x4
 2261 0087 04       		.byte	0x4
 2262 0088 05       		.byte	0x5
 2263 0089 696E7400 		.ascii	"int\000"
 2264 008d 03       		.uleb128 0x3
 2265 008e 08       		.byte	0x8
 2266 008f 07       		.byte	0x7
 2267 0090 96050000 		.4byte	.LASF11
 2268 0094 03       		.uleb128 0x3
 2269 0095 08       		.byte	0x8
 2270 0096 05       		.byte	0x5
 2271 0097 A90A0000 		.4byte	.LASF12
 2272 009b 03       		.uleb128 0x3
 2273 009c 04       		.byte	0x4
 2274 009d 04       		.byte	0x4
 2275 009e E8040000 		.4byte	.LASF13
 2276 00a2 03       		.uleb128 0x3
 2277 00a3 08       		.byte	0x8
 2278 00a4 04       		.byte	0x4
 2279 00a5 AD120000 		.4byte	.LASF14
 2280 00a9 05       		.uleb128 0x5
 2281 00aa 04       		.byte	0x4
 2282 00ab AF000000 		.4byte	0xaf
 2283 00af 06       		.uleb128 0x6
 2284 00b0 BA000000 		.4byte	0xba
 2285 00b4 07       		.uleb128 0x7
 2286 00b5 BA000000 		.4byte	0xba
 2287 00b9 00       		.byte	0
 2288 00ba 08       		.uleb128 0x8
 2289 00bb 04       		.byte	0x4
 2290 00bc 02       		.uleb128 0x2
 2291 00bd 08100000 		.4byte	.LASF15
 2292 00c1 02       		.byte	0x2
 2293 00c2 B5       		.byte	0xb5
 2294 00c3 74000000 		.4byte	0x74
 2295 00c7 02       		.uleb128 0x2
 2296 00c8 23140000 		.4byte	.LASF16
 2297 00cc 02       		.byte	0x2
 2298 00cd D9       		.byte	0xd9
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 64


 2299 00ce 74000000 		.4byte	0x74
 2300 00d2 02       		.uleb128 0x2
 2301 00d3 89070000 		.4byte	.LASF17
 2302 00d7 02       		.byte	0x2
 2303 00d8 DA       		.byte	0xda
 2304 00d9 BC000000 		.4byte	0xbc
 2305 00dd 09       		.uleb128 0x9
 2306 00de 9F090000 		.4byte	.LASF18
 2307 00e2 02       		.byte	0x2
 2308 00e3 2901     		.2byte	0x129
 2309 00e5 74000000 		.4byte	0x74
 2310 00e9 02       		.uleb128 0x2
 2311 00ea F70B0000 		.4byte	.LASF19
 2312 00ee 03       		.byte	0x3
 2313 00ef C4       		.byte	0xc4
 2314 00f0 74000000 		.4byte	0x74
 2315 00f4 02       		.uleb128 0x2
 2316 00f5 A20A0000 		.4byte	.LASF20
 2317 00f9 03       		.byte	0x3
 2318 00fa C7       		.byte	0xc7
 2319 00fb E9000000 		.4byte	0xe9
 2320 00ff 02       		.uleb128 0x2
 2321 0100 95010000 		.4byte	.LASF21
 2322 0104 04       		.byte	0x4
 2323 0105 30       		.byte	0x30
 2324 0106 5B000000 		.4byte	0x5b
 2325 010a 02       		.uleb128 0x2
 2326 010b 22000000 		.4byte	.LASF22
 2327 010f 04       		.byte	0x4
 2328 0110 34       		.byte	0x34
 2329 0111 74000000 		.4byte	0x74
 2330 0115 02       		.uleb128 0x2
 2331 0116 5A100000 		.4byte	.LASF23
 2332 011a 04       		.byte	0x4
 2333 011b 36       		.byte	0x36
 2334 011c 74000000 		.4byte	0x74
 2335 0120 02       		.uleb128 0x2
 2336 0121 41120000 		.4byte	.LASF24
 2337 0125 04       		.byte	0x4
 2338 0126 38       		.byte	0x38
 2339 0127 74000000 		.4byte	0x74
 2340 012b 02       		.uleb128 0x2
 2341 012c A2070000 		.4byte	.LASF25
 2342 0130 04       		.byte	0x4
 2343 0131 3F       		.byte	0x3f
 2344 0132 5B000000 		.4byte	0x5b
 2345 0136 02       		.uleb128 0x2
 2346 0137 2E070000 		.4byte	.LASF26
 2347 013b 04       		.byte	0x4
 2348 013c 40       		.byte	0x40
 2349 013d 5B000000 		.4byte	0x5b
 2350 0141 02       		.uleb128 0x2
 2351 0142 B00E0000 		.4byte	.LASF27
 2352 0146 04       		.byte	0x4
 2353 0147 42       		.byte	0x42
 2354 0148 49000000 		.4byte	0x49
 2355 014c 02       		.uleb128 0x2
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 65


 2356 014d 73020000 		.4byte	.LASF28
 2357 0151 04       		.byte	0x4
 2358 0152 44       		.byte	0x44
 2359 0153 5B000000 		.4byte	0x5b
 2360 0157 02       		.uleb128 0x2
 2361 0158 F8080000 		.4byte	.LASF29
 2362 015c 04       		.byte	0x4
 2363 015d 45       		.byte	0x45
 2364 015e 74000000 		.4byte	0x74
 2365 0162 02       		.uleb128 0x2
 2366 0163 EA100000 		.4byte	.LASF30
 2367 0167 04       		.byte	0x4
 2368 0168 47       		.byte	0x47
 2369 0169 5B000000 		.4byte	0x5b
 2370 016d 02       		.uleb128 0x2
 2371 016e E0040000 		.4byte	.LASF31
 2372 0172 04       		.byte	0x4
 2373 0173 49       		.byte	0x49
 2374 0174 49000000 		.4byte	0x49
 2375 0178 02       		.uleb128 0x2
 2376 0179 B0060000 		.4byte	.LASF32
 2377 017d 04       		.byte	0x4
 2378 017e 4F       		.byte	0x4f
 2379 017f 74000000 		.4byte	0x74
 2380 0183 02       		.uleb128 0x2
 2381 0184 230C0000 		.4byte	.LASF33
 2382 0188 04       		.byte	0x4
 2383 0189 52       		.byte	0x52
 2384 018a 74000000 		.4byte	0x74
 2385 018e 02       		.uleb128 0x2
 2386 018f D9100000 		.4byte	.LASF34
 2387 0193 04       		.byte	0x4
 2388 0194 54       		.byte	0x54
 2389 0195 49000000 		.4byte	0x49
 2390 0199 02       		.uleb128 0x2
 2391 019a E6060000 		.4byte	.LASF35
 2392 019e 04       		.byte	0x4
 2393 019f 56       		.byte	0x56
 2394 01a0 49000000 		.4byte	0x49
 2395 01a4 02       		.uleb128 0x2
 2396 01a5 AE0B0000 		.4byte	.LASF36
 2397 01a9 04       		.byte	0x4
 2398 01aa 58       		.byte	0x58
 2399 01ab 74000000 		.4byte	0x74
 2400 01af 0A       		.uleb128 0xa
 2401 01b0 4D010000 		.4byte	.LASF324
 2402 01b4 02       		.byte	0x2
 2403 01b5 66000000 		.4byte	0x66
 2404 01b9 05       		.byte	0x5
 2405 01ba A501     		.2byte	0x1a5
 2406 01bc 27060000 		.4byte	0x627
 2407 01c0 0B       		.uleb128 0xb
 2408 01c1 6A120000 		.4byte	.LASF37
 2409 01c5 00       		.byte	0
 2410 01c6 0C       		.uleb128 0xc
 2411 01c7 5B000000 		.4byte	.LASF38
 2412 01cb 1027     		.2byte	0x2710
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 66


 2413 01cd 0C       		.uleb128 0xc
 2414 01ce 87030000 		.4byte	.LASF39
 2415 01d2 1127     		.2byte	0x2711
 2416 01d4 0C       		.uleb128 0xc
 2417 01d5 64000000 		.4byte	.LASF40
 2418 01d9 F82A     		.2byte	0x2af8
 2419 01db 0C       		.uleb128 0xc
 2420 01dc 6D000000 		.4byte	.LASF41
 2421 01e0 E02E     		.2byte	0x2ee0
 2422 01e2 0C       		.uleb128 0xc
 2423 01e3 83010000 		.4byte	.LASF42
 2424 01e7 E12E     		.2byte	0x2ee1
 2425 01e9 0C       		.uleb128 0xc
 2426 01ea 76000000 		.4byte	.LASF43
 2427 01ee C832     		.2byte	0x32c8
 2428 01f0 0C       		.uleb128 0xc
 2429 01f1 C3080000 		.4byte	.LASF44
 2430 01f5 C932     		.2byte	0x32c9
 2431 01f7 0C       		.uleb128 0xc
 2432 01f8 7F000000 		.4byte	.LASF45
 2433 01fc B036     		.2byte	0x36b0
 2434 01fe 0C       		.uleb128 0xc
 2435 01ff 88000000 		.4byte	.LASF46
 2436 0203 983A     		.2byte	0x3a98
 2437 0205 0C       		.uleb128 0xc
 2438 0206 10120000 		.4byte	.LASF47
 2439 020a 993A     		.2byte	0x3a99
 2440 020c 0C       		.uleb128 0xc
 2441 020d 24080000 		.4byte	.LASF48
 2442 0211 FD3A     		.2byte	0x3afd
 2443 0213 0C       		.uleb128 0xc
 2444 0214 CE0F0000 		.4byte	.LASF49
 2445 0218 FE3A     		.2byte	0x3afe
 2446 021a 0C       		.uleb128 0xc
 2447 021b C10A0000 		.4byte	.LASF50
 2448 021f FF3A     		.2byte	0x3aff
 2449 0221 0C       		.uleb128 0xc
 2450 0222 97120000 		.4byte	.LASF51
 2451 0226 003B     		.2byte	0x3b00
 2452 0228 0C       		.uleb128 0xc
 2453 0229 91000000 		.4byte	.LASF52
 2454 022d 803E     		.2byte	0x3e80
 2455 022f 0C       		.uleb128 0xc
 2456 0230 9A000000 		.4byte	.LASF53
 2457 0234 6842     		.2byte	0x4268
 2458 0236 0C       		.uleb128 0xc
 2459 0237 A3000000 		.4byte	.LASF54
 2460 023b 5046     		.2byte	0x4650
 2461 023d 0C       		.uleb128 0xc
 2462 023e 79040000 		.4byte	.LASF55
 2463 0242 5146     		.2byte	0x4651
 2464 0244 0C       		.uleb128 0xc
 2465 0245 50030000 		.4byte	.LASF56
 2466 0249 5246     		.2byte	0x4652
 2467 024b 0C       		.uleb128 0xc
 2468 024c 44040000 		.4byte	.LASF57
 2469 0250 5346     		.2byte	0x4653
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 67


 2470 0252 0C       		.uleb128 0xc
 2471 0253 71010000 		.4byte	.LASF58
 2472 0257 5446     		.2byte	0x4654
 2473 0259 0C       		.uleb128 0xc
 2474 025a 85110000 		.4byte	.LASF59
 2475 025e 5546     		.2byte	0x4655
 2476 0260 0C       		.uleb128 0xc
 2477 0261 E80C0000 		.4byte	.LASF60
 2478 0265 5646     		.2byte	0x4656
 2479 0267 0C       		.uleb128 0xc
 2480 0268 AC000000 		.4byte	.LASF61
 2481 026c 384A     		.2byte	0x4a38
 2482 026e 0C       		.uleb128 0xc
 2483 026f B5000000 		.4byte	.LASF62
 2484 0273 204E     		.2byte	0x4e20
 2485 0275 0C       		.uleb128 0xc
 2486 0276 BE000000 		.4byte	.LASF63
 2487 027a 0852     		.2byte	0x5208
 2488 027c 0C       		.uleb128 0xc
 2489 027d ED0D0000 		.4byte	.LASF64
 2490 0281 0952     		.2byte	0x5209
 2491 0283 0C       		.uleb128 0xc
 2492 0284 C7000000 		.4byte	.LASF65
 2493 0288 F055     		.2byte	0x55f0
 2494 028a 0C       		.uleb128 0xc
 2495 028b FD100000 		.4byte	.LASF66
 2496 028f B956     		.2byte	0x56b9
 2497 0291 0C       		.uleb128 0xc
 2498 0292 B60B0000 		.4byte	.LASF67
 2499 0296 BA56     		.2byte	0x56ba
 2500 0298 0C       		.uleb128 0xc
 2501 0299 CD0D0000 		.4byte	.LASF68
 2502 029d BB56     		.2byte	0x56bb
 2503 029f 0C       		.uleb128 0xc
 2504 02a0 4C080000 		.4byte	.LASF69
 2505 02a4 BC56     		.2byte	0x56bc
 2506 02a6 0C       		.uleb128 0xc
 2507 02a7 620B0000 		.4byte	.LASF70
 2508 02ab BD56     		.2byte	0x56bd
 2509 02ad 0C       		.uleb128 0xc
 2510 02ae B40D0000 		.4byte	.LASF71
 2511 02b2 BE56     		.2byte	0x56be
 2512 02b4 0C       		.uleb128 0xc
 2513 02b5 DE0B0000 		.4byte	.LASF72
 2514 02b9 BF56     		.2byte	0x56bf
 2515 02bb 0C       		.uleb128 0xc
 2516 02bc 29050000 		.4byte	.LASF73
 2517 02c0 C056     		.2byte	0x56c0
 2518 02c2 0C       		.uleb128 0xc
 2519 02c3 29130000 		.4byte	.LASF74
 2520 02c7 C156     		.2byte	0x56c1
 2521 02c9 0C       		.uleb128 0xc
 2522 02ca 0B140000 		.4byte	.LASF75
 2523 02ce C256     		.2byte	0x56c2
 2524 02d0 0C       		.uleb128 0xc
 2525 02d1 320E0000 		.4byte	.LASF76
 2526 02d5 1D57     		.2byte	0x571d
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 68


 2527 02d7 0C       		.uleb128 0xc
 2528 02d8 970E0000 		.4byte	.LASF77
 2529 02dc 1E57     		.2byte	0x571e
 2530 02de 0C       		.uleb128 0xc
 2531 02df 17070000 		.4byte	.LASF78
 2532 02e3 8157     		.2byte	0x5781
 2533 02e5 0C       		.uleb128 0xc
 2534 02e6 950F0000 		.4byte	.LASF79
 2535 02ea 8257     		.2byte	0x5782
 2536 02ec 0C       		.uleb128 0xc
 2537 02ed B6030000 		.4byte	.LASF80
 2538 02f1 8357     		.2byte	0x5783
 2539 02f3 0C       		.uleb128 0xc
 2540 02f4 D0000000 		.4byte	.LASF81
 2541 02f8 D859     		.2byte	0x59d8
 2542 02fa 0C       		.uleb128 0xc
 2543 02fb CC060000 		.4byte	.LASF82
 2544 02ff D959     		.2byte	0x59d9
 2545 0301 0C       		.uleb128 0xc
 2546 0302 03050000 		.4byte	.LASF83
 2547 0306 DA59     		.2byte	0x59da
 2548 0308 0C       		.uleb128 0xc
 2549 0309 D9000000 		.4byte	.LASF84
 2550 030d C05D     		.2byte	0x5dc0
 2551 030f 0C       		.uleb128 0xc
 2552 0310 10040000 		.4byte	.LASF85
 2553 0314 C15D     		.2byte	0x5dc1
 2554 0316 0C       		.uleb128 0xc
 2555 0317 5C0A0000 		.4byte	.LASF86
 2556 031b C25D     		.2byte	0x5dc2
 2557 031d 0C       		.uleb128 0xc
 2558 031e 7A0B0000 		.4byte	.LASF87
 2559 0322 C35D     		.2byte	0x5dc3
 2560 0324 0C       		.uleb128 0xc
 2561 0325 0E0F0000 		.4byte	.LASF88
 2562 0329 C45D     		.2byte	0x5dc4
 2563 032b 0C       		.uleb128 0xc
 2564 032c 8C090000 		.4byte	.LASF89
 2565 0330 255E     		.2byte	0x5e25
 2566 0332 0C       		.uleb128 0xc
 2567 0333 650D0000 		.4byte	.LASF90
 2568 0337 895E     		.2byte	0x5e89
 2569 0339 0C       		.uleb128 0xc
 2570 033a AD070000 		.4byte	.LASF91
 2571 033e 8A5E     		.2byte	0x5e8a
 2572 0340 0C       		.uleb128 0xc
 2573 0341 E2000000 		.4byte	.LASF92
 2574 0345 A861     		.2byte	0x61a8
 2575 0347 0C       		.uleb128 0xc
 2576 0348 B4120000 		.4byte	.LASF93
 2577 034c A961     		.2byte	0x61a9
 2578 034e 0C       		.uleb128 0xc
 2579 034f F20F0000 		.4byte	.LASF94
 2580 0353 AA61     		.2byte	0x61aa
 2581 0355 0C       		.uleb128 0xc
 2582 0356 690F0000 		.4byte	.LASF95
 2583 035a AB61     		.2byte	0x61ab
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 69


 2584 035c 0C       		.uleb128 0xc
 2585 035d 1C0B0000 		.4byte	.LASF96
 2586 0361 AC61     		.2byte	0x61ac
 2587 0363 0C       		.uleb128 0xc
 2588 0364 F3120000 		.4byte	.LASF97
 2589 0368 AD61     		.2byte	0x61ad
 2590 036a 0C       		.uleb128 0xc
 2591 036b 32110000 		.4byte	.LASF98
 2592 036f AE61     		.2byte	0x61ae
 2593 0371 0C       		.uleb128 0xc
 2594 0372 60020000 		.4byte	.LASF99
 2595 0376 AF61     		.2byte	0x61af
 2596 0378 0C       		.uleb128 0xc
 2597 0379 16020000 		.4byte	.LASF100
 2598 037d B061     		.2byte	0x61b0
 2599 037f 0C       		.uleb128 0xc
 2600 0380 EE040000 		.4byte	.LASF101
 2601 0384 0D62     		.2byte	0x620d
 2602 0386 0C       		.uleb128 0xc
 2603 0387 11100000 		.4byte	.LASF102
 2604 038b 0E62     		.2byte	0x620e
 2605 038d 0C       		.uleb128 0xc
 2606 038e F0130000 		.4byte	.LASF103
 2607 0392 7162     		.2byte	0x6271
 2608 0394 0C       		.uleb128 0xc
 2609 0395 E7120000 		.4byte	.LASF104
 2610 0399 7262     		.2byte	0x6272
 2611 039b 0C       		.uleb128 0xc
 2612 039c 07000000 		.4byte	.LASF105
 2613 03a0 7362     		.2byte	0x6273
 2614 03a2 0C       		.uleb128 0xc
 2615 03a3 350D0000 		.4byte	.LASF106
 2616 03a7 D562     		.2byte	0x62d5
 2617 03a9 0C       		.uleb128 0xc
 2618 03aa EB000000 		.4byte	.LASF107
 2619 03ae 9065     		.2byte	0x6590
 2620 03b0 0C       		.uleb128 0xc
 2621 03b1 77110000 		.4byte	.LASF108
 2622 03b5 9165     		.2byte	0x6591
 2623 03b7 0C       		.uleb128 0xc
 2624 03b8 80060000 		.4byte	.LASF109
 2625 03bc 9265     		.2byte	0x6592
 2626 03be 0C       		.uleb128 0xc
 2627 03bf D2080000 		.4byte	.LASF110
 2628 03c3 9365     		.2byte	0x6593
 2629 03c5 0C       		.uleb128 0xc
 2630 03c6 F10A0000 		.4byte	.LASF111
 2631 03ca 9465     		.2byte	0x6594
 2632 03cc 0C       		.uleb128 0xc
 2633 03cd F4000000 		.4byte	.LASF112
 2634 03d1 7869     		.2byte	0x6978
 2635 03d3 0C       		.uleb128 0xc
 2636 03d4 8E0B0000 		.4byte	.LASF113
 2637 03d8 7969     		.2byte	0x6979
 2638 03da 0C       		.uleb128 0xc
 2639 03db 9F0D0000 		.4byte	.LASF114
 2640 03df 7A69     		.2byte	0x697a
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 70


 2641 03e1 0C       		.uleb128 0xc
 2642 03e2 3E0B0000 		.4byte	.LASF115
 2643 03e6 7B69     		.2byte	0x697b
 2644 03e8 0C       		.uleb128 0xc
 2645 03e9 FD000000 		.4byte	.LASF116
 2646 03ed 606D     		.2byte	0x6d60
 2647 03ef 0C       		.uleb128 0xc
 2648 03f0 B3090000 		.4byte	.LASF117
 2649 03f4 616D     		.2byte	0x6d61
 2650 03f6 0C       		.uleb128 0xc
 2651 03f7 AD080000 		.4byte	.LASF118
 2652 03fb 626D     		.2byte	0x6d62
 2653 03fd 0C       		.uleb128 0xc
 2654 03fe 83120000 		.4byte	.LASF119
 2655 0402 636D     		.2byte	0x6d63
 2656 0404 0C       		.uleb128 0xc
 2657 0405 CF120000 		.4byte	.LASF120
 2658 0409 646D     		.2byte	0x6d64
 2659 040b 0C       		.uleb128 0xc
 2660 040c 480E0000 		.4byte	.LASF121
 2661 0410 656D     		.2byte	0x6d65
 2662 0412 0C       		.uleb128 0xc
 2663 0413 79130000 		.4byte	.LASF122
 2664 0417 C56D     		.2byte	0x6dc5
 2665 0419 0C       		.uleb128 0xc
 2666 041a 63130000 		.4byte	.LASF123
 2667 041e C66D     		.2byte	0x6dc6
 2668 0420 0C       		.uleb128 0xc
 2669 0421 4A020000 		.4byte	.LASF124
 2670 0425 296E     		.2byte	0x6e29
 2671 0427 0C       		.uleb128 0xc
 2672 0428 F2090000 		.4byte	.LASF125
 2673 042c 2A6E     		.2byte	0x6e2a
 2674 042e 0C       		.uleb128 0xc
 2675 042f 0C080000 		.4byte	.LASF126
 2676 0433 2B6E     		.2byte	0x6e2b
 2677 0435 0C       		.uleb128 0xc
 2678 0436 B10F0000 		.4byte	.LASF127
 2679 043a 2C6E     		.2byte	0x6e2c
 2680 043c 0C       		.uleb128 0xc
 2681 043d 480D0000 		.4byte	.LASF128
 2682 0441 2D6E     		.2byte	0x6e2d
 2683 0443 0C       		.uleb128 0xc
 2684 0444 13110000 		.4byte	.LASF129
 2685 0448 2E6E     		.2byte	0x6e2e
 2686 044a 0C       		.uleb128 0xc
 2687 044b E3010000 		.4byte	.LASF130
 2688 044f 2F6E     		.2byte	0x6e2f
 2689 0451 0C       		.uleb128 0xc
 2690 0452 6B100000 		.4byte	.LASF131
 2691 0456 306E     		.2byte	0x6e30
 2692 0458 0C       		.uleb128 0xc
 2693 0459 35100000 		.4byte	.LASF132
 2694 045d 316E     		.2byte	0x6e31
 2695 045f 0C       		.uleb128 0xc
 2696 0460 06010000 		.4byte	.LASF133
 2697 0464 4871     		.2byte	0x7148
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 71


 2698 0466 0C       		.uleb128 0xc
 2699 0467 2E020000 		.4byte	.LASF134
 2700 046b 4971     		.2byte	0x7149
 2701 046d 0C       		.uleb128 0xc
 2702 046e 72070000 		.4byte	.LASF135
 2703 0472 4A71     		.2byte	0x714a
 2704 0474 0C       		.uleb128 0xc
 2705 0475 D0110000 		.4byte	.LASF136
 2706 0479 4B71     		.2byte	0x714b
 2707 047b 0C       		.uleb128 0xc
 2708 047c 88130000 		.4byte	.LASF137
 2709 0480 4C71     		.2byte	0x714c
 2710 0482 0C       		.uleb128 0xc
 2711 0483 09060000 		.4byte	.LASF138
 2712 0487 4D71     		.2byte	0x714d
 2713 0489 0C       		.uleb128 0xc
 2714 048a 150D0000 		.4byte	.LASF139
 2715 048e 4E71     		.2byte	0x714e
 2716 0490 0C       		.uleb128 0xc
 2717 0491 940C0000 		.4byte	.LASF140
 2718 0495 4F71     		.2byte	0x714f
 2719 0497 0C       		.uleb128 0xc
 2720 0498 C60B0000 		.4byte	.LASF141
 2721 049c 5071     		.2byte	0x7150
 2722 049e 0C       		.uleb128 0xc
 2723 049f 31030000 		.4byte	.LASF142
 2724 04a3 5171     		.2byte	0x7151
 2725 04a5 0C       		.uleb128 0xc
 2726 04a6 6D0C0000 		.4byte	.LASF143
 2727 04aa 5271     		.2byte	0x7152
 2728 04ac 0C       		.uleb128 0xc
 2729 04ad 0C030000 		.4byte	.LASF144
 2730 04b1 5371     		.2byte	0x7153
 2731 04b3 0C       		.uleb128 0xc
 2732 04b4 A4100000 		.4byte	.LASF145
 2733 04b8 5471     		.2byte	0x7154
 2734 04ba 0C       		.uleb128 0xc
 2735 04bb FF010000 		.4byte	.LASF146
 2736 04bf 5571     		.2byte	0x7155
 2737 04c1 0C       		.uleb128 0xc
 2738 04c2 C2040000 		.4byte	.LASF147
 2739 04c6 5671     		.2byte	0x7156
 2740 04c8 0C       		.uleb128 0xc
 2741 04c9 E10E0000 		.4byte	.LASF148
 2742 04cd 5771     		.2byte	0x7157
 2743 04cf 0C       		.uleb128 0xc
 2744 04d0 AD050000 		.4byte	.LASF149
 2745 04d4 5871     		.2byte	0x7158
 2746 04d6 0C       		.uleb128 0xc
 2747 04d7 050E0000 		.4byte	.LASF150
 2748 04db 5971     		.2byte	0x7159
 2749 04dd 0C       		.uleb128 0xc
 2750 04de 41130000 		.4byte	.LASF151
 2751 04e2 5A71     		.2byte	0x715a
 2752 04e4 0C       		.uleb128 0xc
 2753 04e5 2B040000 		.4byte	.LASF152
 2754 04e9 5B71     		.2byte	0x715b
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 72


 2755 04eb 0C       		.uleb128 0xc
 2756 04ec E9050000 		.4byte	.LASF153
 2757 04f0 5C71     		.2byte	0x715c
 2758 04f2 0C       		.uleb128 0xc
 2759 04f3 99030000 		.4byte	.LASF154
 2760 04f7 5D71     		.2byte	0x715d
 2761 04f9 0C       		.uleb128 0xc
 2762 04fa C50C0000 		.4byte	.LASF155
 2763 04fe 5E71     		.2byte	0x715e
 2764 0500 0C       		.uleb128 0xc
 2765 0501 73030000 		.4byte	.LASF156
 2766 0505 5F71     		.2byte	0x715f
 2767 0507 0C       		.uleb128 0xc
 2768 0508 5A060000 		.4byte	.LASF157
 2769 050c AD71     		.2byte	0x71ad
 2770 050e 0C       		.uleb128 0xc
 2771 050f 80050000 		.4byte	.LASF158
 2772 0513 C071     		.2byte	0x71c0
 2773 0515 0C       		.uleb128 0xc
 2774 0516 060D0000 		.4byte	.LASF159
 2775 051a C171     		.2byte	0x71c1
 2776 051c 0C       		.uleb128 0xc
 2777 051d 51120000 		.4byte	.LASF160
 2778 0521 C271     		.2byte	0x71c2
 2779 0523 0C       		.uleb128 0xc
 2780 0524 7A090000 		.4byte	.LASF161
 2781 0528 C371     		.2byte	0x71c3
 2782 052a 0C       		.uleb128 0xc
 2783 052b FA060000 		.4byte	.LASF162
 2784 052f C471     		.2byte	0x71c4
 2785 0531 0C       		.uleb128 0xc
 2786 0532 D7130000 		.4byte	.LASF163
 2787 0536 1172     		.2byte	0x7211
 2788 0538 0C       		.uleb128 0xc
 2789 0539 7F0E0000 		.4byte	.LASF164
 2790 053d 1272     		.2byte	0x7212
 2791 053f 0C       		.uleb128 0xc
 2792 0540 A2010000 		.4byte	.LASF165
 2793 0544 1372     		.2byte	0x7213
 2794 0546 0C       		.uleb128 0xc
 2795 0547 4A0C0000 		.4byte	.LASF166
 2796 054b 1472     		.2byte	0x7214
 2797 054d 0C       		.uleb128 0xc
 2798 054e 21100000 		.4byte	.LASF167
 2799 0552 7572     		.2byte	0x7275
 2800 0554 0C       		.uleb128 0xc
 2801 0555 BC130000 		.4byte	.LASF168
 2802 0559 7672     		.2byte	0x7276
 2803 055b 0C       		.uleb128 0xc
 2804 055c 9D130000 		.4byte	.LASF169
 2805 0560 7772     		.2byte	0x7277
 2806 0562 0C       		.uleb128 0xc
 2807 0563 3A070000 		.4byte	.LASF170
 2808 0567 7872     		.2byte	0x7278
 2809 0569 0C       		.uleb128 0xc
 2810 056a 3F000000 		.4byte	.LASF171
 2811 056e 7972     		.2byte	0x7279
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 73


 2812 0570 0C       		.uleb128 0xc
 2813 0571 9E110000 		.4byte	.LASF172
 2814 0575 7A72     		.2byte	0x727a
 2815 0577 0C       		.uleb128 0xc
 2816 0578 8F060000 		.4byte	.LASF173
 2817 057c 7B72     		.2byte	0x727b
 2818 057e 0C       		.uleb128 0xc
 2819 057f 160A0000 		.4byte	.LASF174
 2820 0583 7C72     		.2byte	0x727c
 2821 0585 0C       		.uleb128 0xc
 2822 0586 8B0D0000 		.4byte	.LASF175
 2823 058a 7D72     		.2byte	0x727d
 2824 058c 0C       		.uleb128 0xc
 2825 058d E2070000 		.4byte	.LASF176
 2826 0591 7E72     		.2byte	0x727e
 2827 0593 0C       		.uleb128 0xc
 2828 0594 CA100000 		.4byte	.LASF177
 2829 0598 D972     		.2byte	0x72d9
 2830 059a 0C       		.uleb128 0xc
 2831 059b 61050000 		.4byte	.LASF178
 2832 059f 3D73     		.2byte	0x733d
 2833 05a1 0C       		.uleb128 0xc
 2834 05a2 95080000 		.4byte	.LASF179
 2835 05a6 3E73     		.2byte	0x733e
 2836 05a8 0C       		.uleb128 0xc
 2837 05a9 A2040000 		.4byte	.LASF180
 2838 05ad 3F73     		.2byte	0x733f
 2839 05af 0C       		.uleb128 0xc
 2840 05b0 33010000 		.4byte	.LASF181
 2841 05b4 4073     		.2byte	0x7340
 2842 05b6 0C       		.uleb128 0xc
 2843 05b7 D7030000 		.4byte	.LASF182
 2844 05bb 4173     		.2byte	0x7341
 2845 05bd 0C       		.uleb128 0xc
 2846 05be C9050000 		.4byte	.LASF183
 2847 05c2 4273     		.2byte	0x7342
 2848 05c4 0C       		.uleb128 0xc
 2849 05c5 30000000 		.4byte	.LASF184
 2850 05c9 4373     		.2byte	0x7343
 2851 05cb 0C       		.uleb128 0xc
 2852 05cc 4A050000 		.4byte	.LASF185
 2853 05d0 4473     		.2byte	0x7344
 2854 05d2 0C       		.uleb128 0xc
 2855 05d3 54070000 		.4byte	.LASF186
 2856 05d7 4573     		.2byte	0x7345
 2857 05d9 0C       		.uleb128 0xc
 2858 05da A80C0000 		.4byte	.LASF187
 2859 05de 4673     		.2byte	0x7346
 2860 05e0 0C       		.uleb128 0xc
 2861 05e1 21060000 		.4byte	.LASF188
 2862 05e5 4773     		.2byte	0x7347
 2863 05e7 0C       		.uleb128 0xc
 2864 05e8 2E0C0000 		.4byte	.LASF189
 2865 05ec 4873     		.2byte	0x7348
 2866 05ee 0C       		.uleb128 0xc
 2867 05ef 83100000 		.4byte	.LASF190
 2868 05f3 4973     		.2byte	0x7349
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 74


 2869 05f5 0C       		.uleb128 0xc
 2870 05f6 0F010000 		.4byte	.LASF191
 2871 05fa 3075     		.2byte	0x7530
 2872 05fc 0C       		.uleb128 0xc
 2873 05fd 18010000 		.4byte	.LASF192
 2874 0601 1879     		.2byte	0x7918
 2875 0603 0C       		.uleb128 0xc
 2876 0604 21010000 		.4byte	.LASF193
 2877 0608 007D     		.2byte	0x7d00
 2878 060a 0C       		.uleb128 0xc
 2879 060b 2A010000 		.4byte	.LASF194
 2880 060f E880     		.2byte	0x80e8
 2881 0611 0C       		.uleb128 0xc
 2882 0612 29110000 		.4byte	.LASF195
 2883 0616 D084     		.2byte	0x84d0
 2884 0618 0C       		.uleb128 0xc
 2885 0619 4B0A0000 		.4byte	.LASF196
 2886 061d D184     		.2byte	0x84d1
 2887 061f 0C       		.uleb128 0xc
 2888 0620 42110000 		.4byte	.LASF197
 2889 0624 B888     		.2byte	0x88b8
 2890 0626 00       		.byte	0
 2891 0627 09       		.uleb128 0x9
 2892 0628 1B000000 		.4byte	.LASF198
 2893 062c 05       		.byte	0x5
 2894 062d 7202     		.2byte	0x272
 2895 062f AF010000 		.4byte	0x1af
 2896 0633 09       		.uleb128 0x9
 2897 0634 57130000 		.4byte	.LASF199
 2898 0638 05       		.byte	0x5
 2899 0639 7E02     		.2byte	0x27e
 2900 063b 3F060000 		.4byte	0x63f
 2901 063f 0D       		.uleb128 0xd
 2902 0640 65010000 		.4byte	.LASF208
 2903 0644 28       		.byte	0x28
 2904 0645 05       		.byte	0x5
 2905 0646 1403     		.2byte	0x314
 2906 0648 B4060000 		.4byte	0x6b4
 2907 064c 0E       		.uleb128 0xe
 2908 064d 460A0000 		.4byte	.LASF200
 2909 0651 05       		.byte	0x5
 2910 0652 1603     		.2byte	0x316
 2911 0654 57010000 		.4byte	0x157
 2912 0658 00       		.byte	0
 2913 0659 0E       		.uleb128 0xe
 2914 065a 2A0A0000 		.4byte	.LASF201
 2915 065e 05       		.byte	0x5
 2916 065f 1703     		.2byte	0x317
 2917 0661 970B0000 		.4byte	0xb97
 2918 0665 04       		.byte	0x4
 2919 0666 0E       		.uleb128 0xe
 2920 0667 050F0000 		.4byte	.LASF202
 2921 066b 05       		.byte	0x5
 2922 066c 1803     		.2byte	0x318
 2923 066e DC0A0000 		.4byte	0xadc
 2924 0672 08       		.byte	0x8
 2925 0673 0E       		.uleb128 0xe
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 75


 2926 0674 45030000 		.4byte	.LASF203
 2927 0678 05       		.byte	0x5
 2928 0679 1A03     		.2byte	0x31a
 2929 067b 9D0B0000 		.4byte	0xb9d
 2930 067f 14       		.byte	0x14
 2931 0680 0E       		.uleb128 0xe
 2932 0681 5D030000 		.4byte	.LASF204
 2933 0685 05       		.byte	0x5
 2934 0686 1B03     		.2byte	0x31b
 2935 0688 9D0B0000 		.4byte	0xb9d
 2936 068c 18       		.byte	0x18
 2937 068d 0E       		.uleb128 0xe
 2938 068e 58110000 		.4byte	.LASF205
 2939 0692 05       		.byte	0x5
 2940 0693 1C03     		.2byte	0x31c
 2941 0695 970B0000 		.4byte	0xb97
 2942 0699 1C       		.byte	0x1c
 2943 069a 0E       		.uleb128 0xe
 2944 069b DA040000 		.4byte	.LASF206
 2945 069f 05       		.byte	0x5
 2946 06a0 1F03     		.2byte	0x31f
 2947 06a2 20010000 		.4byte	0x120
 2948 06a6 20       		.byte	0x20
 2949 06a7 0F       		.uleb128 0xf
 2950 06a8 545300   		.ascii	"TS\000"
 2951 06ab 05       		.byte	0x5
 2952 06ac 2003     		.2byte	0x320
 2953 06ae F4000000 		.4byte	0xf4
 2954 06b2 24       		.byte	0x24
 2955 06b3 00       		.byte	0
 2956 06b4 09       		.uleb128 0x9
 2957 06b5 87080000 		.4byte	.LASF207
 2958 06b9 05       		.byte	0x5
 2959 06ba 8202     		.2byte	0x282
 2960 06bc C0060000 		.4byte	0x6c0
 2961 06c0 0D       		.uleb128 0xd
 2962 06c1 53060000 		.4byte	.LASF209
 2963 06c5 10       		.byte	0x10
 2964 06c6 05       		.byte	0x5
 2965 06c7 4003     		.2byte	0x340
 2966 06c9 02070000 		.4byte	0x702
 2967 06cd 0E       		.uleb128 0xe
 2968 06ce 5D0D0000 		.4byte	.LASF210
 2969 06d2 05       		.byte	0x5
 2970 06d3 4103     		.2byte	0x341
 2971 06d5 A30B0000 		.4byte	0xba3
 2972 06d9 00       		.byte	0
 2973 06da 0E       		.uleb128 0xe
 2974 06db 4A120000 		.4byte	.LASF211
 2975 06df 05       		.byte	0x5
 2976 06e0 4203     		.2byte	0x342
 2977 06e2 BA000000 		.4byte	0xba
 2978 06e6 04       		.byte	0x4
 2979 06e7 0E       		.uleb128 0xe
 2980 06e8 8D0F0000 		.4byte	.LASF212
 2981 06ec 05       		.byte	0x5
 2982 06ed 4303     		.2byte	0x343
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 76


 2983 06ef 36010000 		.4byte	0x136
 2984 06f3 08       		.byte	0x8
 2985 06f4 0E       		.uleb128 0xe
 2986 06f5 0A120000 		.4byte	.LASF213
 2987 06f9 05       		.byte	0x5
 2988 06fa 4403     		.2byte	0x344
 2989 06fc F4000000 		.4byte	0xf4
 2990 0700 0C       		.byte	0xc
 2991 0701 00       		.byte	0
 2992 0702 09       		.uleb128 0x9
 2993 0703 3D0A0000 		.4byte	.LASF214
 2994 0707 05       		.byte	0x5
 2995 0708 8402     		.2byte	0x284
 2996 070a 0E070000 		.4byte	0x70e
 2997 070e 0D       		.uleb128 0xd
 2998 070f 02140000 		.4byte	.LASF215
 2999 0713 10       		.byte	0x10
 3000 0714 05       		.byte	0x5
 3001 0715 5303     		.2byte	0x353
 3002 0717 5D070000 		.4byte	0x75d
 3003 071b 0E       		.uleb128 0xe
 3004 071c 460F0000 		.4byte	.LASF216
 3005 0720 05       		.byte	0x5
 3006 0721 5403     		.2byte	0x354
 3007 0723 A30B0000 		.4byte	0xba3
 3008 0727 00       		.byte	0
 3009 0728 0E       		.uleb128 0xe
 3010 0729 63110000 		.4byte	.LASF217
 3011 072d 05       		.byte	0x5
 3012 072e 5503     		.2byte	0x355
 3013 0730 A30B0000 		.4byte	0xba3
 3014 0734 04       		.byte	0x4
 3015 0735 0E       		.uleb128 0xe
 3016 0736 D3070000 		.4byte	.LASF218
 3017 073a 05       		.byte	0x5
 3018 073b 5603     		.2byte	0x356
 3019 073d 2B010000 		.4byte	0x12b
 3020 0741 08       		.byte	0x8
 3021 0742 0E       		.uleb128 0xe
 3022 0743 5A010000 		.4byte	.LASF219
 3023 0747 05       		.byte	0x5
 3024 0748 5703     		.2byte	0x357
 3025 074a 2B010000 		.4byte	0x12b
 3026 074e 0A       		.byte	0xa
 3027 074f 0E       		.uleb128 0xe
 3028 0750 0E130000 		.4byte	.LASF220
 3029 0754 05       		.byte	0x5
 3030 0755 5803     		.2byte	0x358
 3031 0757 2B010000 		.4byte	0x12b
 3032 075b 0C       		.byte	0xc
 3033 075c 00       		.byte	0
 3034 075d 09       		.uleb128 0x9
 3035 075e F1100000 		.4byte	.LASF221
 3036 0762 05       		.byte	0x5
 3037 0763 8E02     		.2byte	0x28e
 3038 0765 A9000000 		.4byte	0xa9
 3039 0769 09       		.uleb128 0x9
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 77


 3040 076a 64100000 		.4byte	.LASF222
 3041 076e 05       		.byte	0x5
 3042 076f 9002     		.2byte	0x290
 3043 0771 75070000 		.4byte	0x775
 3044 0775 0D       		.uleb128 0xd
 3045 0776 00000000 		.4byte	.LASF223
 3046 077a C0       		.byte	0xc0
 3047 077b 05       		.byte	0x5
 3048 077c AB03     		.2byte	0x3ab
 3049 077e 190A0000 		.4byte	0xa19
 3050 0782 0E       		.uleb128 0xe
 3051 0783 D60A0000 		.4byte	.LASF224
 3052 0787 05       		.byte	0x5
 3053 0788 AC03     		.2byte	0x3ac
 3054 078a A90B0000 		.4byte	0xba9
 3055 078e 00       		.byte	0
 3056 078f 0E       		.uleb128 0xe
 3057 0790 E20F0000 		.4byte	.LASF225
 3058 0794 05       		.byte	0x5
 3059 0795 AE03     		.2byte	0x3ae
 3060 0797 BA000000 		.4byte	0xba
 3061 079b 04       		.byte	0x4
 3062 079c 0E       		.uleb128 0xe
 3063 079d 0B0C0000 		.4byte	.LASF226
 3064 07a1 05       		.byte	0x5
 3065 07a2 B003     		.2byte	0x3b0
 3066 07a4 A90B0000 		.4byte	0xba9
 3067 07a8 08       		.byte	0x8
 3068 07a9 0E       		.uleb128 0xe
 3069 07aa 5D0D0000 		.4byte	.LASF210
 3070 07ae 05       		.byte	0x5
 3071 07af B203     		.2byte	0x3b2
 3072 07b1 850B0000 		.4byte	0xb85
 3073 07b5 0C       		.byte	0xc
 3074 07b6 0E       		.uleb128 0xe
 3075 07b7 EB080000 		.4byte	.LASF227
 3076 07bb 05       		.byte	0x5
 3077 07bc B303     		.2byte	0x3b3
 3078 07be 850B0000 		.4byte	0xb85
 3079 07c2 10       		.byte	0x10
 3080 07c3 0E       		.uleb128 0xe
 3081 07c4 610C0000 		.4byte	.LASF228
 3082 07c8 05       		.byte	0x5
 3083 07c9 B503     		.2byte	0x3b5
 3084 07cb 850B0000 		.4byte	0xb85
 3085 07cf 14       		.byte	0x14
 3086 07d0 0E       		.uleb128 0xe
 3087 07d1 F7070000 		.4byte	.LASF229
 3088 07d5 05       		.byte	0x5
 3089 07d6 B603     		.2byte	0x3b6
 3090 07d8 850B0000 		.4byte	0xb85
 3091 07dc 18       		.byte	0x18
 3092 07dd 0E       		.uleb128 0xe
 3093 07de 4B110000 		.4byte	.LASF230
 3094 07e2 05       		.byte	0x5
 3095 07e3 B803     		.2byte	0x3b8
 3096 07e5 AF0B0000 		.4byte	0xbaf
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 78


 3097 07e9 1C       		.byte	0x1c
 3098 07ea 0E       		.uleb128 0xe
 3099 07eb 2A0A0000 		.4byte	.LASF201
 3100 07ef 05       		.byte	0x5
 3101 07f0 BA03     		.2byte	0x3ba
 3102 07f2 970B0000 		.4byte	0xb97
 3103 07f6 20       		.byte	0x20
 3104 07f7 0E       		.uleb128 0xe
 3105 07f8 75060000 		.4byte	.LASF231
 3106 07fc 05       		.byte	0x5
 3107 07fd BC03     		.2byte	0x3bc
 3108 07ff A90B0000 		.4byte	0xba9
 3109 0803 24       		.byte	0x24
 3110 0804 0E       		.uleb128 0xe
 3111 0805 E4090000 		.4byte	.LASF232
 3112 0809 05       		.byte	0x5
 3113 080a C203     		.2byte	0x3c2
 3114 080c 5D070000 		.4byte	0x75d
 3115 0810 28       		.byte	0x28
 3116 0811 0E       		.uleb128 0xe
 3117 0812 6A110000 		.4byte	.LASF233
 3118 0816 05       		.byte	0x5
 3119 0817 C303     		.2byte	0x3c3
 3120 0819 BA000000 		.4byte	0xba
 3121 081d 2C       		.byte	0x2c
 3122 081e 0E       		.uleb128 0xe
 3123 081f 1E0F0000 		.4byte	.LASF234
 3124 0823 05       		.byte	0x5
 3125 0824 C503     		.2byte	0x3c5
 3126 0826 8B0B0000 		.4byte	0xb8b
 3127 082a 30       		.byte	0x30
 3128 082b 0E       		.uleb128 0xe
 3129 082c F0030000 		.4byte	.LASF235
 3130 0830 05       		.byte	0x5
 3131 0831 C603     		.2byte	0x3c6
 3132 0833 8E010000 		.4byte	0x18e
 3133 0837 34       		.byte	0x34
 3134 0838 0E       		.uleb128 0xe
 3135 0839 320A0000 		.4byte	.LASF236
 3136 083d 05       		.byte	0x5
 3137 083e C703     		.2byte	0x3c7
 3138 0840 99010000 		.4byte	0x199
 3139 0844 35       		.byte	0x35
 3140 0845 0E       		.uleb128 0xe
 3141 0846 F0060000 		.4byte	.LASF237
 3142 084a 05       		.byte	0x5
 3143 084b C903     		.2byte	0x3c9
 3144 084d 8E010000 		.4byte	0x18e
 3145 0851 36       		.byte	0x36
 3146 0852 0E       		.uleb128 0xe
 3147 0853 A8120000 		.4byte	.LASF238
 3148 0857 05       		.byte	0x5
 3149 0858 CA03     		.2byte	0x3ca
 3150 085a 6D010000 		.4byte	0x16d
 3151 085e 37       		.byte	0x37
 3152 085f 0E       		.uleb128 0xe
 3153 0860 6D060000 		.4byte	.LASF239
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 79


 3154 0864 05       		.byte	0x5
 3155 0865 CB03     		.2byte	0x3cb
 3156 0867 D2000000 		.4byte	0xd2
 3157 086b 38       		.byte	0x38
 3158 086c 0F       		.uleb128 0xf
 3159 086d 4F707400 		.ascii	"Opt\000"
 3160 0871 05       		.byte	0x5
 3161 0872 CC03     		.2byte	0x3cc
 3162 0874 62010000 		.4byte	0x162
 3163 0878 3C       		.byte	0x3c
 3164 0879 0E       		.uleb128 0xe
 3165 087a F7030000 		.4byte	.LASF240
 3166 087e 05       		.byte	0x5
 3167 087f CE03     		.2byte	0x3ce
 3168 0881 4C010000 		.4byte	0x14c
 3169 0885 3E       		.byte	0x3e
 3170 0886 0F       		.uleb128 0xf
 3171 0887 545300   		.ascii	"TS\000"
 3172 088a 05       		.byte	0x5
 3173 088b D003     		.2byte	0x3d0
 3174 088d F4000000 		.4byte	0xf4
 3175 0891 40       		.byte	0x40
 3176 0892 0E       		.uleb128 0xe
 3177 0893 3F0F0000 		.4byte	.LASF241
 3178 0897 05       		.byte	0x5
 3179 0898 D203     		.2byte	0x3d2
 3180 089a 83010000 		.4byte	0x183
 3181 089e 44       		.byte	0x44
 3182 089f 0E       		.uleb128 0xe
 3183 08a0 C7070000 		.4byte	.LASF242
 3184 08a4 05       		.byte	0x5
 3185 08a5 D503     		.2byte	0x3d5
 3186 08a7 A4010000 		.4byte	0x1a4
 3187 08ab 48       		.byte	0x48
 3188 08ac 0E       		.uleb128 0xe
 3189 08ad 56040000 		.4byte	.LASF243
 3190 08b1 05       		.byte	0x5
 3191 08b2 D603     		.2byte	0x3d6
 3192 08b4 A4010000 		.4byte	0x1a4
 3193 08b8 4C       		.byte	0x4c
 3194 08b9 0E       		.uleb128 0xe
 3195 08ba 4C0F0000 		.4byte	.LASF244
 3196 08be 05       		.byte	0x5
 3197 08bf D703     		.2byte	0x3d7
 3198 08c1 A4010000 		.4byte	0x1a4
 3199 08c5 50       		.byte	0x50
 3200 08c6 0E       		.uleb128 0xe
 3201 08c7 B1130000 		.4byte	.LASF245
 3202 08cb 05       		.byte	0x5
 3203 08cc D903     		.2byte	0x3d9
 3204 08ce A4010000 		.4byte	0x1a4
 3205 08d2 54       		.byte	0x54
 3206 08d3 0E       		.uleb128 0xe
 3207 08d4 D8060000 		.4byte	.LASF246
 3208 08d8 05       		.byte	0x5
 3209 08d9 DA03     		.2byte	0x3da
 3210 08db A4010000 		.4byte	0x1a4
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 80


 3211 08df 58       		.byte	0x58
 3212 08e0 0E       		.uleb128 0xe
 3213 08e1 4A120000 		.4byte	.LASF211
 3214 08e5 05       		.byte	0x5
 3215 08e6 DD03     		.2byte	0x3dd
 3216 08e8 BA000000 		.4byte	0xba
 3217 08ec 5C       		.byte	0x5c
 3218 08ed 0E       		.uleb128 0xe
 3219 08ee 8D0F0000 		.4byte	.LASF212
 3220 08f2 05       		.byte	0x5
 3221 08f3 DE03     		.2byte	0x3de
 3222 08f5 36010000 		.4byte	0x136
 3223 08f9 60       		.byte	0x60
 3224 08fa 0E       		.uleb128 0xe
 3225 08fb D3090000 		.4byte	.LASF247
 3226 08ff 05       		.byte	0x5
 3227 0900 E203     		.2byte	0x3e2
 3228 0902 02070000 		.4byte	0x702
 3229 0906 64       		.byte	0x64
 3230 0907 0E       		.uleb128 0xe
 3231 0908 7A080000 		.4byte	.LASF248
 3232 090c 05       		.byte	0x5
 3233 090d E403     		.2byte	0x3e4
 3234 090f F4000000 		.4byte	0xf4
 3235 0913 74       		.byte	0x74
 3236 0914 0E       		.uleb128 0xe
 3237 0915 6A080000 		.4byte	.LASF249
 3238 0919 05       		.byte	0x5
 3239 091a E503     		.2byte	0x3e5
 3240 091c F4000000 		.4byte	0xf4
 3241 0920 78       		.byte	0x78
 3242 0921 0E       		.uleb128 0xe
 3243 0922 72130000 		.4byte	.LASF250
 3244 0926 05       		.byte	0x5
 3245 0927 EA03     		.2byte	0x3ea
 3246 0929 B50B0000 		.4byte	0xbb5
 3247 092d 7C       		.byte	0x7c
 3248 092e 0E       		.uleb128 0xe
 3249 092f 98040000 		.4byte	.LASF251
 3250 0933 05       		.byte	0x5
 3251 0934 EE03     		.2byte	0x3ee
 3252 0936 20010000 		.4byte	0x120
 3253 093a 80       		.byte	0x80
 3254 093b 0E       		.uleb128 0xe
 3255 093c 03080000 		.4byte	.LASF252
 3256 0940 05       		.byte	0x5
 3257 0941 EF03     		.2byte	0x3ef
 3258 0943 20010000 		.4byte	0x120
 3259 0947 84       		.byte	0x84
 3260 0948 0E       		.uleb128 0xe
 3261 0949 F6010000 		.4byte	.LASF253
 3262 094d 05       		.byte	0x5
 3263 094e F003     		.2byte	0x3f0
 3264 0950 62010000 		.4byte	0x162
 3265 0954 88       		.byte	0x88
 3266 0955 0E       		.uleb128 0xe
 3267 0956 000C0000 		.4byte	.LASF254
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 81


 3268 095a 05       		.byte	0x5
 3269 095b F403     		.2byte	0x3f4
 3270 095d 41010000 		.4byte	0x141
 3271 0961 8A       		.byte	0x8a
 3272 0962 0E       		.uleb128 0xe
 3273 0963 C6120000 		.4byte	.LASF255
 3274 0967 05       		.byte	0x5
 3275 0968 F803     		.2byte	0x3f8
 3276 096a FF000000 		.4byte	0xff
 3277 096e 8C       		.byte	0x8c
 3278 096f 0E       		.uleb128 0xe
 3279 0970 F90E0000 		.4byte	.LASF256
 3280 0974 05       		.byte	0x5
 3281 0975 F903     		.2byte	0x3f9
 3282 0977 FF000000 		.4byte	0xff
 3283 097b 8E       		.byte	0x8e
 3284 097c 0E       		.uleb128 0xe
 3285 097d B9040000 		.4byte	.LASF257
 3286 0981 05       		.byte	0x5
 3287 0982 FA03     		.2byte	0x3fa
 3288 0984 0A010000 		.4byte	0x10a
 3289 0988 90       		.byte	0x90
 3290 0989 0E       		.uleb128 0xe
 3291 098a 170C0000 		.4byte	.LASF258
 3292 098e 05       		.byte	0x5
 3293 098f FB03     		.2byte	0x3fb
 3294 0991 F4000000 		.4byte	0xf4
 3295 0995 94       		.byte	0x94
 3296 0996 0E       		.uleb128 0xe
 3297 0997 FF0A0000 		.4byte	.LASF259
 3298 099b 05       		.byte	0x5
 3299 099c FC03     		.2byte	0x3fc
 3300 099e F4000000 		.4byte	0xf4
 3301 09a2 98       		.byte	0x98
 3302 09a3 0E       		.uleb128 0xe
 3303 09a4 BF0E0000 		.4byte	.LASF260
 3304 09a8 05       		.byte	0x5
 3305 09a9 FD03     		.2byte	0x3fd
 3306 09ab 15010000 		.4byte	0x115
 3307 09af 9C       		.byte	0x9c
 3308 09b0 0E       		.uleb128 0xe
 3309 09b1 6F0E0000 		.4byte	.LASF261
 3310 09b5 05       		.byte	0x5
 3311 09b6 FE03     		.2byte	0x3fe
 3312 09b8 15010000 		.4byte	0x115
 3313 09bc A0       		.byte	0xa0
 3314 09bd 0E       		.uleb128 0xe
 3315 09be 290D0000 		.4byte	.LASF262
 3316 09c2 05       		.byte	0x5
 3317 09c3 0004     		.2byte	0x400
 3318 09c5 F4000000 		.4byte	0xf4
 3319 09c9 A4       		.byte	0xa4
 3320 09ca 0E       		.uleb128 0xe
 3321 09cb 600E0000 		.4byte	.LASF263
 3322 09cf 05       		.byte	0x5
 3323 09d0 0104     		.2byte	0x401
 3324 09d2 F4000000 		.4byte	0xf4
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 82


 3325 09d6 A8       		.byte	0xa8
 3326 09d7 0E       		.uleb128 0xe
 3327 09d8 C1050000 		.4byte	.LASF264
 3328 09dc 05       		.byte	0x5
 3329 09dd 0504     		.2byte	0x405
 3330 09df D2000000 		.4byte	0xd2
 3331 09e3 AC       		.byte	0xac
 3332 09e4 0E       		.uleb128 0xe
 3333 09e5 BF070000 		.4byte	.LASF265
 3334 09e9 05       		.byte	0x5
 3335 09ea 0604     		.2byte	0x406
 3336 09ec D2000000 		.4byte	0xd2
 3337 09f0 B0       		.byte	0xb0
 3338 09f1 0E       		.uleb128 0xe
 3339 09f2 45030000 		.4byte	.LASF203
 3340 09f6 05       		.byte	0x5
 3341 09f7 1104     		.2byte	0x411
 3342 09f9 850B0000 		.4byte	0xb85
 3343 09fd B4       		.byte	0xb4
 3344 09fe 0E       		.uleb128 0xe
 3345 09ff 5D030000 		.4byte	.LASF204
 3346 0a03 05       		.byte	0x5
 3347 0a04 1204     		.2byte	0x412
 3348 0a06 850B0000 		.4byte	0xb85
 3349 0a0a B8       		.byte	0xb8
 3350 0a0b 0E       		.uleb128 0xe
 3351 0a0c 58110000 		.4byte	.LASF205
 3352 0a10 05       		.byte	0x5
 3353 0a11 1304     		.2byte	0x413
 3354 0a13 970B0000 		.4byte	0xb97
 3355 0a17 BC       		.byte	0xbc
 3356 0a18 00       		.byte	0
 3357 0a19 09       		.uleb128 0x9
 3358 0a1a 1B050000 		.4byte	.LASF266
 3359 0a1e 05       		.byte	0x5
 3360 0a1f 9E02     		.2byte	0x29e
 3361 0a21 250A0000 		.4byte	0xa25
 3362 0a25 0D       		.uleb128 0xd
 3363 0a26 DD0A0000 		.4byte	.LASF267
 3364 0a2a 08       		.byte	0x8
 3365 0a2b 05       		.byte	0x5
 3366 0a2c 1E04     		.2byte	0x41e
 3367 0a2e 5A0A0000 		.4byte	0xa5a
 3368 0a32 0E       		.uleb128 0xe
 3369 0a33 A80F0000 		.4byte	.LASF268
 3370 0a37 05       		.byte	0x5
 3371 0a38 1F04     		.2byte	0x41f
 3372 0a3a 850B0000 		.4byte	0xb85
 3373 0a3e 00       		.byte	0
 3374 0a3f 0E       		.uleb128 0xe
 3375 0a40 5A010000 		.4byte	.LASF219
 3376 0a44 05       		.byte	0x5
 3377 0a45 2004     		.2byte	0x420
 3378 0a47 4C010000 		.4byte	0x14c
 3379 0a4b 04       		.byte	0x4
 3380 0a4c 0E       		.uleb128 0xe
 3381 0a4d 0E130000 		.4byte	.LASF220
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 83


 3382 0a51 05       		.byte	0x5
 3383 0a52 2104     		.2byte	0x421
 3384 0a54 4C010000 		.4byte	0x14c
 3385 0a58 06       		.byte	0x6
 3386 0a59 00       		.byte	0
 3387 0a5a 09       		.uleb128 0x9
 3388 0a5b DC050000 		.4byte	.LASF269
 3389 0a5f 05       		.byte	0x5
 3390 0a60 A502     		.2byte	0x2a5
 3391 0a62 660A0000 		.4byte	0xa66
 3392 0a66 0D       		.uleb128 0xd
 3393 0a67 76120000 		.4byte	.LASF270
 3394 0a6b 20       		.byte	0x20
 3395 0a6c 05       		.byte	0x5
 3396 0a6d DD02     		.2byte	0x2dd
 3397 0a6f DC0A0000 		.4byte	0xadc
 3398 0a73 0E       		.uleb128 0xe
 3399 0a74 EB080000 		.4byte	.LASF227
 3400 0a78 05       		.byte	0x5
 3401 0a79 DE02     		.2byte	0x2de
 3402 0a7b 8B0B0000 		.4byte	0xb8b
 3403 0a7f 00       		.byte	0
 3404 0a80 0E       		.uleb128 0xe
 3405 0a81 5D0D0000 		.4byte	.LASF210
 3406 0a85 05       		.byte	0x5
 3407 0a86 DF02     		.2byte	0x2df
 3408 0a88 8B0B0000 		.4byte	0xb8b
 3409 0a8c 04       		.byte	0x4
 3410 0a8d 0E       		.uleb128 0xe
 3411 0a8e 150B0000 		.4byte	.LASF271
 3412 0a92 05       		.byte	0x5
 3413 0a93 E002     		.2byte	0x2e0
 3414 0a95 850B0000 		.4byte	0xb85
 3415 0a99 08       		.byte	0x8
 3416 0a9a 0E       		.uleb128 0xe
 3417 0a9b 03130000 		.4byte	.LASF272
 3418 0a9f 05       		.byte	0x5
 3419 0aa0 E102     		.2byte	0x2e1
 3420 0aa2 910B0000 		.4byte	0xb91
 3421 0aa6 0C       		.byte	0xc
 3422 0aa7 0E       		.uleb128 0xe
 3423 0aa8 DE0C0000 		.4byte	.LASF273
 3424 0aac 05       		.byte	0x5
 3425 0aad E202     		.2byte	0x2e2
 3426 0aaf 910B0000 		.4byte	0xb91
 3427 0ab3 10       		.byte	0x10
 3428 0ab4 0E       		.uleb128 0xe
 3429 0ab5 63040000 		.4byte	.LASF274
 3430 0ab9 05       		.byte	0x5
 3431 0aba E302     		.2byte	0x2e3
 3432 0abc BA000000 		.4byte	0xba
 3433 0ac0 14       		.byte	0x14
 3434 0ac1 0E       		.uleb128 0xe
 3435 0ac2 270E0000 		.4byte	.LASF275
 3436 0ac6 05       		.byte	0x5
 3437 0ac7 E402     		.2byte	0x2e4
 3438 0ac9 36010000 		.4byte	0x136
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 84


 3439 0acd 18       		.byte	0x18
 3440 0ace 0E       		.uleb128 0xe
 3441 0acf E70D0000 		.4byte	.LASF276
 3442 0ad3 05       		.byte	0x5
 3443 0ad4 E502     		.2byte	0x2e5
 3444 0ad6 F4000000 		.4byte	0xf4
 3445 0ada 1C       		.byte	0x1c
 3446 0adb 00       		.byte	0
 3447 0adc 09       		.uleb128 0x9
 3448 0add E0110000 		.4byte	.LASF277
 3449 0ae1 05       		.byte	0x5
 3450 0ae2 A602     		.2byte	0x2a6
 3451 0ae4 E80A0000 		.4byte	0xae8
 3452 0ae8 0D       		.uleb128 0xd
 3453 0ae9 1C130000 		.4byte	.LASF278
 3454 0aed 0C       		.byte	0xc
 3455 0aee 05       		.byte	0x5
 3456 0aef E902     		.2byte	0x2e9
 3457 0af1 1D0B0000 		.4byte	0xb1d
 3458 0af5 0E       		.uleb128 0xe
 3459 0af6 570F0000 		.4byte	.LASF279
 3460 0afa 05       		.byte	0x5
 3461 0afb EA02     		.2byte	0x2ea
 3462 0afd 8B0B0000 		.4byte	0xb8b
 3463 0b01 00       		.byte	0
 3464 0b02 0E       		.uleb128 0xe
 3465 0b03 23040000 		.4byte	.LASF280
 3466 0b07 05       		.byte	0x5
 3467 0b08 EB02     		.2byte	0x2eb
 3468 0b0a 8B0B0000 		.4byte	0xb8b
 3469 0b0e 04       		.byte	0x4
 3470 0b0f 0E       		.uleb128 0xe
 3471 0b10 5A010000 		.4byte	.LASF219
 3472 0b14 05       		.byte	0x5
 3473 0b15 EC02     		.2byte	0x2ec
 3474 0b17 4C010000 		.4byte	0x14c
 3475 0b1b 08       		.byte	0x8
 3476 0b1c 00       		.byte	0
 3477 0b1d 09       		.uleb128 0x9
 3478 0b1e CB0E0000 		.4byte	.LASF281
 3479 0b22 05       		.byte	0x5
 3480 0b23 A702     		.2byte	0x2a7
 3481 0b25 290B0000 		.4byte	0xb29
 3482 0b29 0D       		.uleb128 0xd
 3483 0b2a 6D040000 		.4byte	.LASF282
 3484 0b2e 20       		.byte	0x20
 3485 0b2f 05       		.byte	0x5
 3486 0b30 FF02     		.2byte	0x2ff
 3487 0b32 850B0000 		.4byte	0xb85
 3488 0b36 0E       		.uleb128 0xe
 3489 0b37 460A0000 		.4byte	.LASF200
 3490 0b3b 05       		.byte	0x5
 3491 0b3c 0003     		.2byte	0x300
 3492 0b3e 57010000 		.4byte	0x157
 3493 0b42 00       		.byte	0
 3494 0b43 0E       		.uleb128 0xe
 3495 0b44 2A0A0000 		.4byte	.LASF201
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 85


 3496 0b48 05       		.byte	0x5
 3497 0b49 0103     		.2byte	0x301
 3498 0b4b 970B0000 		.4byte	0xb97
 3499 0b4f 04       		.byte	0x4
 3500 0b50 0E       		.uleb128 0xe
 3501 0b51 050F0000 		.4byte	.LASF202
 3502 0b55 05       		.byte	0x5
 3503 0b56 0203     		.2byte	0x302
 3504 0b58 DC0A0000 		.4byte	0xadc
 3505 0b5c 08       		.byte	0x8
 3506 0b5d 0E       		.uleb128 0xe
 3507 0b5e 45030000 		.4byte	.LASF203
 3508 0b62 05       		.byte	0x5
 3509 0b63 0403     		.2byte	0x304
 3510 0b65 BA000000 		.4byte	0xba
 3511 0b69 14       		.byte	0x14
 3512 0b6a 0E       		.uleb128 0xe
 3513 0b6b 5D030000 		.4byte	.LASF204
 3514 0b6f 05       		.byte	0x5
 3515 0b70 0503     		.2byte	0x305
 3516 0b72 BA000000 		.4byte	0xba
 3517 0b76 18       		.byte	0x18
 3518 0b77 0E       		.uleb128 0xe
 3519 0b78 58110000 		.4byte	.LASF205
 3520 0b7c 05       		.byte	0x5
 3521 0b7d 0603     		.2byte	0x306
 3522 0b7f 970B0000 		.4byte	0xb97
 3523 0b83 1C       		.byte	0x1c
 3524 0b84 00       		.byte	0
 3525 0b85 05       		.uleb128 0x5
 3526 0b86 04       		.byte	0x4
 3527 0b87 69070000 		.4byte	0x769
 3528 0b8b 05       		.uleb128 0x5
 3529 0b8c 04       		.byte	0x4
 3530 0b8d 5A0A0000 		.4byte	0xa5a
 3531 0b91 05       		.uleb128 0x5
 3532 0b92 04       		.byte	0x4
 3533 0b93 1D0B0000 		.4byte	0xb1d
 3534 0b97 05       		.uleb128 0x5
 3535 0b98 04       		.byte	0x4
 3536 0b99 25000000 		.4byte	0x25
 3537 0b9d 05       		.uleb128 0x5
 3538 0b9e 04       		.byte	0x4
 3539 0b9f 33060000 		.4byte	0x633
 3540 0ba3 05       		.uleb128 0x5
 3541 0ba4 04       		.byte	0x4
 3542 0ba5 B4060000 		.4byte	0x6b4
 3543 0ba9 05       		.uleb128 0x5
 3544 0baa 04       		.byte	0x4
 3545 0bab C7000000 		.4byte	0xc7
 3546 0baf 05       		.uleb128 0x5
 3547 0bb0 04       		.byte	0x4
 3548 0bb1 190A0000 		.4byte	0xa19
 3549 0bb5 10       		.uleb128 0x10
 3550 0bb6 78010000 		.4byte	0x178
 3551 0bba C50B0000 		.4byte	0xbc5
 3552 0bbe 11       		.uleb128 0x11
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 86


 3553 0bbf C50B0000 		.4byte	0xbc5
 3554 0bc3 00       		.byte	0
 3555 0bc4 00       		.byte	0
 3556 0bc5 03       		.uleb128 0x3
 3557 0bc6 04       		.byte	0x4
 3558 0bc7 07       		.byte	0x7
 3559 0bc8 E90F0000 		.4byte	.LASF283
 3560 0bcc 12       		.uleb128 0x12
 3561 0bcd CA010000 		.4byte	.LASF305
 3562 0bd1 01       		.byte	0x1
 3563 0bd2 46       		.byte	0x46
 3564 0bd3 00000000 		.4byte	.LFB0
 3565 0bd7 8C000000 		.4byte	.LFE0-.LFB0
 3566 0bdb 01       		.uleb128 0x1
 3567 0bdc 9C       		.byte	0x9c
 3568 0bdd 280C0000 		.4byte	0xc28
 3569 0be1 13       		.uleb128 0x13
 3570 0be2 0A040000 		.4byte	.LASF284
 3571 0be6 01       		.byte	0x1
 3572 0be7 46       		.byte	0x46
 3573 0be8 9D0B0000 		.4byte	0xb9d
 3574 0bec 02       		.uleb128 0x2
 3575 0bed 91       		.byte	0x91
 3576 0bee 6C       		.sleb128 -20
 3577 0bef 13       		.uleb128 0x13
 3578 0bf0 8E080000 		.4byte	.LASF285
 3579 0bf4 01       		.byte	0x1
 3580 0bf5 47       		.byte	0x47
 3581 0bf6 970B0000 		.4byte	0xb97
 3582 0bfa 02       		.uleb128 0x2
 3583 0bfb 91       		.byte	0x91
 3584 0bfc 68       		.sleb128 -24
 3585 0bfd 13       		.uleb128 0x13
 3586 0bfe 54010000 		.4byte	.LASF286
 3587 0c02 01       		.byte	0x1
 3588 0c03 48       		.byte	0x48
 3589 0c04 20010000 		.4byte	0x120
 3590 0c08 02       		.uleb128 0x2
 3591 0c09 91       		.byte	0x91
 3592 0c0a 64       		.sleb128 -28
 3593 0c0b 13       		.uleb128 0x13
 3594 0c0c 64080000 		.4byte	.LASF287
 3595 0c10 01       		.byte	0x1
 3596 0c11 49       		.byte	0x49
 3597 0c12 280C0000 		.4byte	0xc28
 3598 0c16 02       		.uleb128 0x2
 3599 0c17 91       		.byte	0x91
 3600 0c18 60       		.sleb128 -32
 3601 0c19 14       		.uleb128 0x14
 3602 0c1a 43050000 		.4byte	.LASF288
 3603 0c1e 01       		.byte	0x1
 3604 0c1f 4B       		.byte	0x4b
 3605 0c20 DD000000 		.4byte	0xdd
 3606 0c24 02       		.uleb128 0x2
 3607 0c25 91       		.byte	0x91
 3608 0c26 74       		.sleb128 -12
 3609 0c27 00       		.byte	0
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 87


 3610 0c28 05       		.uleb128 0x5
 3611 0c29 04       		.byte	0x4
 3612 0c2a 27060000 		.4byte	0x627
 3613 0c2e 15       		.uleb128 0x15
 3614 0c2f B70A0000 		.4byte	.LASF293
 3615 0c33 01       		.byte	0x1
 3616 0c34 9C       		.byte	0x9c
 3617 0c35 4C010000 		.4byte	0x14c
 3618 0c39 00000000 		.4byte	.LFB1
 3619 0c3d 24010000 		.4byte	.LFE1-.LFB1
 3620 0c41 01       		.uleb128 0x1
 3621 0c42 9C       		.byte	0x9c
 3622 0c43 D30C0000 		.4byte	0xcd3
 3623 0c47 13       		.uleb128 0x13
 3624 0c48 0A040000 		.4byte	.LASF284
 3625 0c4c 01       		.byte	0x1
 3626 0c4d 9C       		.byte	0x9c
 3627 0c4e 9D0B0000 		.4byte	0xb9d
 3628 0c52 02       		.uleb128 0x2
 3629 0c53 91       		.byte	0x91
 3630 0c54 54       		.sleb128 -44
 3631 0c55 16       		.uleb128 0x16
 3632 0c56 6F707400 		.ascii	"opt\000"
 3633 0c5a 01       		.byte	0x1
 3634 0c5b 9D       		.byte	0x9d
 3635 0c5c 62010000 		.4byte	0x162
 3636 0c60 02       		.uleb128 0x2
 3637 0c61 91       		.byte	0x91
 3638 0c62 52       		.sleb128 -46
 3639 0c63 13       		.uleb128 0x13
 3640 0c64 64080000 		.4byte	.LASF287
 3641 0c68 01       		.byte	0x1
 3642 0c69 9E       		.byte	0x9e
 3643 0c6a 280C0000 		.4byte	0xc28
 3644 0c6e 02       		.uleb128 0x2
 3645 0c6f 91       		.byte	0x91
 3646 0c70 4C       		.sleb128 -52
 3647 0c71 17       		.uleb128 0x17
 3648 0c72 636E7400 		.ascii	"cnt\000"
 3649 0c76 01       		.byte	0x1
 3650 0c77 A0       		.byte	0xa0
 3651 0c78 4C010000 		.4byte	0x14c
 3652 0c7c 02       		.uleb128 0x2
 3653 0c7d 91       		.byte	0x91
 3654 0c7e 76       		.sleb128 -10
 3655 0c7f 14       		.uleb128 0x14
 3656 0c80 A40B0000 		.4byte	.LASF289
 3657 0c84 01       		.byte	0x1
 3658 0c85 A1       		.byte	0xa1
 3659 0c86 4C010000 		.4byte	0x14c
 3660 0c8a 02       		.uleb128 0x2
 3661 0c8b 91       		.byte	0x91
 3662 0c8c 6A       		.sleb128 -22
 3663 0c8d 14       		.uleb128 0x14
 3664 0c8e DF080000 		.4byte	.LASF290
 3665 0c92 01       		.byte	0x1
 3666 0c93 A2       		.byte	0xa2
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 88


 3667 0c94 8B0B0000 		.4byte	0xb8b
 3668 0c98 02       		.uleb128 0x2
 3669 0c99 91       		.byte	0x91
 3670 0c9a 60       		.sleb128 -32
 3671 0c9b 14       		.uleb128 0x14
 3672 0c9c CB030000 		.4byte	.LASF291
 3673 0ca0 01       		.byte	0x1
 3674 0ca1 A3       		.byte	0xa3
 3675 0ca2 D30C0000 		.4byte	0xcd3
 3676 0ca6 02       		.uleb128 0x2
 3677 0ca7 91       		.byte	0x91
 3678 0ca8 6C       		.sleb128 -20
 3679 0ca9 14       		.uleb128 0x14
 3680 0caa EB0A0000 		.4byte	.LASF292
 3681 0cae 01       		.byte	0x1
 3682 0caf A4       		.byte	0xa4
 3683 0cb0 850B0000 		.4byte	0xb85
 3684 0cb4 02       		.uleb128 0x2
 3685 0cb5 91       		.byte	0x91
 3686 0cb6 5C       		.sleb128 -36
 3687 0cb7 17       		.uleb128 0x17
 3688 0cb8 747300   		.ascii	"ts\000"
 3689 0cbb 01       		.byte	0x1
 3690 0cbc A5       		.byte	0xa5
 3691 0cbd F4000000 		.4byte	0xf4
 3692 0cc1 02       		.uleb128 0x2
 3693 0cc2 91       		.byte	0x91
 3694 0cc3 64       		.sleb128 -28
 3695 0cc4 14       		.uleb128 0x14
 3696 0cc5 43050000 		.4byte	.LASF288
 3697 0cc9 01       		.byte	0x1
 3698 0cca A6       		.byte	0xa6
 3699 0ccb DD000000 		.4byte	0xdd
 3700 0ccf 02       		.uleb128 0x2
 3701 0cd0 91       		.byte	0x91
 3702 0cd1 70       		.sleb128 -16
 3703 0cd2 00       		.byte	0
 3704 0cd3 05       		.uleb128 0x5
 3705 0cd4 04       		.byte	0x4
 3706 0cd5 DC0A0000 		.4byte	0xadc
 3707 0cd9 18       		.uleb128 0x18
 3708 0cda 970A0000 		.4byte	.LASF294
 3709 0cde 01       		.byte	0x1
 3710 0cdf 3B01     		.2byte	0x13b
 3711 0ce1 20010000 		.4byte	0x120
 3712 0ce5 00000000 		.4byte	.LFB2
 3713 0ce9 14050000 		.4byte	.LFE2-.LFB2
 3714 0ced 01       		.uleb128 0x1
 3715 0cee 9C       		.byte	0x9c
 3716 0cef 9B0D0000 		.4byte	0xd9b
 3717 0cf3 19       		.uleb128 0x19
 3718 0cf4 0A040000 		.4byte	.LASF284
 3719 0cf8 01       		.byte	0x1
 3720 0cf9 3B01     		.2byte	0x13b
 3721 0cfb 9D0B0000 		.4byte	0xb9d
 3722 0cff 02       		.uleb128 0x2
 3723 0d00 91       		.byte	0x91
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 89


 3724 0d01 44       		.sleb128 -60
 3725 0d02 19       		.uleb128 0x19
 3726 0d03 54010000 		.4byte	.LASF286
 3727 0d07 01       		.byte	0x1
 3728 0d08 3C01     		.2byte	0x13c
 3729 0d0a 20010000 		.4byte	0x120
 3730 0d0e 02       		.uleb128 0x2
 3731 0d0f 91       		.byte	0x91
 3732 0d10 40       		.sleb128 -64
 3733 0d11 19       		.uleb128 0x19
 3734 0d12 E2100000 		.4byte	.LASF295
 3735 0d16 01       		.byte	0x1
 3736 0d17 3D01     		.2byte	0x13d
 3737 0d19 A4010000 		.4byte	0x1a4
 3738 0d1d 03       		.uleb128 0x3
 3739 0d1e 91       		.byte	0x91
 3740 0d1f BC7F     		.sleb128 -68
 3741 0d21 1A       		.uleb128 0x1a
 3742 0d22 6F707400 		.ascii	"opt\000"
 3743 0d26 01       		.byte	0x1
 3744 0d27 3E01     		.2byte	0x13e
 3745 0d29 62010000 		.4byte	0x162
 3746 0d2d 03       		.uleb128 0x3
 3747 0d2e 91       		.byte	0x91
 3748 0d2f BA7F     		.sleb128 -70
 3749 0d31 19       		.uleb128 0x19
 3750 0d32 C00C0000 		.4byte	.LASF296
 3751 0d36 01       		.byte	0x1
 3752 0d37 3F01     		.2byte	0x13f
 3753 0d39 9B0D0000 		.4byte	0xd9b
 3754 0d3d 02       		.uleb128 0x2
 3755 0d3e 91       		.byte	0x91
 3756 0d3f 00       		.sleb128 0
 3757 0d40 19       		.uleb128 0x19
 3758 0d41 64080000 		.4byte	.LASF287
 3759 0d45 01       		.byte	0x1
 3760 0d46 4001     		.2byte	0x140
 3761 0d48 280C0000 		.4byte	0xc28
 3762 0d4c 02       		.uleb128 0x2
 3763 0d4d 91       		.byte	0x91
 3764 0d4e 04       		.sleb128 4
 3765 0d4f 1B       		.uleb128 0x1b
 3766 0d50 5A0B0000 		.4byte	.LASF297
 3767 0d54 01       		.byte	0x1
 3768 0d55 4201     		.2byte	0x142
 3769 0d57 37000000 		.4byte	0x37
 3770 0d5b 02       		.uleb128 0x2
 3771 0d5c 91       		.byte	0x91
 3772 0d5d 77       		.sleb128 -9
 3773 0d5e 1B       		.uleb128 0x1b
 3774 0d5f 5F0F0000 		.4byte	.LASF298
 3775 0d63 01       		.byte	0x1
 3776 0d64 4301     		.2byte	0x143
 3777 0d66 20010000 		.4byte	0x120
 3778 0d6a 02       		.uleb128 0x2
 3779 0d6b 91       		.byte	0x91
 3780 0d6c 68       		.sleb128 -24
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 90


 3781 0d6d 1B       		.uleb128 0x1b
 3782 0d6e B1030000 		.4byte	.LASF299
 3783 0d72 01       		.byte	0x1
 3784 0d73 4401     		.2byte	0x144
 3785 0d75 62010000 		.4byte	0x162
 3786 0d79 02       		.uleb128 0x2
 3787 0d7a 91       		.byte	0x91
 3788 0d7b 6E       		.sleb128 -18
 3789 0d7c 1B       		.uleb128 0x1b
 3790 0d7d 0B0B0000 		.4byte	.LASF300
 3791 0d81 01       		.byte	0x1
 3792 0d82 4501     		.2byte	0x145
 3793 0d84 5A0A0000 		.4byte	0xa5a
 3794 0d88 02       		.uleb128 0x2
 3795 0d89 91       		.byte	0x91
 3796 0d8a 48       		.sleb128 -56
 3797 0d8b 1B       		.uleb128 0x1b
 3798 0d8c 43050000 		.4byte	.LASF288
 3799 0d90 01       		.byte	0x1
 3800 0d91 4601     		.2byte	0x146
 3801 0d93 DD000000 		.4byte	0xdd
 3802 0d97 02       		.uleb128 0x2
 3803 0d98 91       		.byte	0x91
 3804 0d99 70       		.sleb128 -16
 3805 0d9a 00       		.byte	0
 3806 0d9b 05       		.uleb128 0x5
 3807 0d9c 04       		.byte	0x4
 3808 0d9d F4000000 		.4byte	0xf4
 3809 0da1 18       		.uleb128 0x18
 3810 0da2 38060000 		.4byte	.LASF301
 3811 0da6 01       		.byte	0x1
 3812 0da7 8A02     		.2byte	0x28a
 3813 0da9 4C010000 		.4byte	0x14c
 3814 0dad 00000000 		.4byte	.LFB3
 3815 0db1 EC000000 		.4byte	.LFE3-.LFB3
 3816 0db5 01       		.uleb128 0x1
 3817 0db6 9C       		.byte	0x9c
 3818 0db7 330E0000 		.4byte	0xe33
 3819 0dbb 19       		.uleb128 0x19
 3820 0dbc 0A040000 		.4byte	.LASF284
 3821 0dc0 01       		.byte	0x1
 3822 0dc1 8A02     		.2byte	0x28a
 3823 0dc3 9D0B0000 		.4byte	0xb9d
 3824 0dc7 02       		.uleb128 0x2
 3825 0dc8 91       		.byte	0x91
 3826 0dc9 5C       		.sleb128 -36
 3827 0dca 1A       		.uleb128 0x1a
 3828 0dcb 6F707400 		.ascii	"opt\000"
 3829 0dcf 01       		.byte	0x1
 3830 0dd0 8B02     		.2byte	0x28b
 3831 0dd2 62010000 		.4byte	0x162
 3832 0dd6 02       		.uleb128 0x2
 3833 0dd7 91       		.byte	0x91
 3834 0dd8 5A       		.sleb128 -38
 3835 0dd9 19       		.uleb128 0x19
 3836 0dda 64080000 		.4byte	.LASF287
 3837 0dde 01       		.byte	0x1
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 91


 3838 0ddf 8C02     		.2byte	0x28c
 3839 0de1 280C0000 		.4byte	0xc28
 3840 0de5 02       		.uleb128 0x2
 3841 0de6 91       		.byte	0x91
 3842 0de7 54       		.sleb128 -44
 3843 0de8 1B       		.uleb128 0x1b
 3844 0de9 CB030000 		.4byte	.LASF291
 3845 0ded 01       		.byte	0x1
 3846 0dee 8E02     		.2byte	0x28e
 3847 0df0 D30C0000 		.4byte	0xcd3
 3848 0df4 02       		.uleb128 0x2
 3849 0df5 91       		.byte	0x91
 3850 0df6 6C       		.sleb128 -20
 3851 0df7 1B       		.uleb128 0x1b
 3852 0df8 EB0A0000 		.4byte	.LASF292
 3853 0dfc 01       		.byte	0x1
 3854 0dfd 8F02     		.2byte	0x28f
 3855 0dff 850B0000 		.4byte	0xb85
 3856 0e03 02       		.uleb128 0x2
 3857 0e04 91       		.byte	0x91
 3858 0e05 64       		.sleb128 -28
 3859 0e06 1C       		.uleb128 0x1c
 3860 0e07 747300   		.ascii	"ts\000"
 3861 0e0a 01       		.byte	0x1
 3862 0e0b 9002     		.2byte	0x290
 3863 0e0d F4000000 		.4byte	0xf4
 3864 0e11 02       		.uleb128 0x2
 3865 0e12 91       		.byte	0x91
 3866 0e13 68       		.sleb128 -24
 3867 0e14 1B       		.uleb128 0x1b
 3868 0e15 A40B0000 		.4byte	.LASF289
 3869 0e19 01       		.byte	0x1
 3870 0e1a 9102     		.2byte	0x291
 3871 0e1c 4C010000 		.4byte	0x14c
 3872 0e20 02       		.uleb128 0x2
 3873 0e21 91       		.byte	0x91
 3874 0e22 76       		.sleb128 -10
 3875 0e23 1B       		.uleb128 0x1b
 3876 0e24 43050000 		.4byte	.LASF288
 3877 0e28 01       		.byte	0x1
 3878 0e29 9202     		.2byte	0x292
 3879 0e2b DD000000 		.4byte	0xdd
 3880 0e2f 02       		.uleb128 0x2
 3881 0e30 91       		.byte	0x91
 3882 0e31 70       		.sleb128 -16
 3883 0e32 00       		.byte	0
 3884 0e33 18       		.uleb128 0x18
 3885 0e34 BA110000 		.4byte	.LASF302
 3886 0e38 01       		.byte	0x1
 3887 0e39 EE02     		.2byte	0x2ee
 3888 0e3b 20010000 		.4byte	0x120
 3889 0e3f 00000000 		.4byte	.LFB4
 3890 0e43 50000000 		.4byte	.LFE4-.LFB4
 3891 0e47 01       		.uleb128 0x1
 3892 0e48 9C       		.byte	0x9c
 3893 0e49 7B0E0000 		.4byte	0xe7b
 3894 0e4d 19       		.uleb128 0x19
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 92


 3895 0e4e 64080000 		.4byte	.LASF287
 3896 0e52 01       		.byte	0x1
 3897 0e53 EE02     		.2byte	0x2ee
 3898 0e55 280C0000 		.4byte	0xc28
 3899 0e59 02       		.uleb128 0x2
 3900 0e5a 91       		.byte	0x91
 3901 0e5b 6C       		.sleb128 -20
 3902 0e5c 1B       		.uleb128 0x1b
 3903 0e5d 54010000 		.4byte	.LASF286
 3904 0e61 01       		.byte	0x1
 3905 0e62 F002     		.2byte	0x2f0
 3906 0e64 20010000 		.4byte	0x120
 3907 0e68 02       		.uleb128 0x2
 3908 0e69 91       		.byte	0x91
 3909 0e6a 70       		.sleb128 -16
 3910 0e6b 1B       		.uleb128 0x1b
 3911 0e6c 43050000 		.4byte	.LASF288
 3912 0e70 01       		.byte	0x1
 3913 0e71 F102     		.2byte	0x2f1
 3914 0e73 DD000000 		.4byte	0xdd
 3915 0e77 02       		.uleb128 0x2
 3916 0e78 91       		.byte	0x91
 3917 0e79 74       		.sleb128 -12
 3918 0e7a 00       		.byte	0
 3919 0e7b 18       		.uleb128 0x18
 3920 0e7c 68030000 		.4byte	.LASF303
 3921 0e80 01       		.byte	0x1
 3922 0e81 3403     		.2byte	0x334
 3923 0e83 20010000 		.4byte	0x120
 3924 0e87 00000000 		.4byte	.LFB5
 3925 0e8b 64000000 		.4byte	.LFE5-.LFB5
 3926 0e8f 01       		.uleb128 0x1
 3927 0e90 9C       		.byte	0x9c
 3928 0e91 EF0E0000 		.4byte	0xeef
 3929 0e95 19       		.uleb128 0x19
 3930 0e96 0A040000 		.4byte	.LASF284
 3931 0e9a 01       		.byte	0x1
 3932 0e9b 3403     		.2byte	0x334
 3933 0e9d 9D0B0000 		.4byte	0xb9d
 3934 0ea1 02       		.uleb128 0x2
 3935 0ea2 91       		.byte	0x91
 3936 0ea3 6C       		.sleb128 -20
 3937 0ea4 19       		.uleb128 0x19
 3938 0ea5 54010000 		.4byte	.LASF286
 3939 0ea9 01       		.byte	0x1
 3940 0eaa 3503     		.2byte	0x335
 3941 0eac 20010000 		.4byte	0x120
 3942 0eb0 02       		.uleb128 0x2
 3943 0eb1 91       		.byte	0x91
 3944 0eb2 68       		.sleb128 -24
 3945 0eb3 1A       		.uleb128 0x1a
 3946 0eb4 6F707400 		.ascii	"opt\000"
 3947 0eb8 01       		.byte	0x1
 3948 0eb9 3603     		.2byte	0x336
 3949 0ebb 62010000 		.4byte	0x162
 3950 0ebf 02       		.uleb128 0x2
 3951 0ec0 91       		.byte	0x91
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 93


 3952 0ec1 66       		.sleb128 -26
 3953 0ec2 19       		.uleb128 0x19
 3954 0ec3 64080000 		.4byte	.LASF287
 3955 0ec7 01       		.byte	0x1
 3956 0ec8 3703     		.2byte	0x337
 3957 0eca 280C0000 		.4byte	0xc28
 3958 0ece 02       		.uleb128 0x2
 3959 0ecf 91       		.byte	0x91
 3960 0ed0 60       		.sleb128 -32
 3961 0ed1 1B       		.uleb128 0x1b
 3962 0ed2 D70E0000 		.4byte	.LASF304
 3963 0ed6 01       		.byte	0x1
 3964 0ed7 3903     		.2byte	0x339
 3965 0ed9 20010000 		.4byte	0x120
 3966 0edd 02       		.uleb128 0x2
 3967 0ede 91       		.byte	0x91
 3968 0edf 70       		.sleb128 -16
 3969 0ee0 1C       		.uleb128 0x1c
 3970 0ee1 747300   		.ascii	"ts\000"
 3971 0ee4 01       		.byte	0x1
 3972 0ee5 3A03     		.2byte	0x33a
 3973 0ee7 F4000000 		.4byte	0xf4
 3974 0eeb 02       		.uleb128 0x2
 3975 0eec 91       		.byte	0x91
 3976 0eed 74       		.sleb128 -12
 3977 0eee 00       		.byte	0
 3978 0eef 1D       		.uleb128 0x1d
 3979 0ef0 A6090000 		.4byte	.LASF306
 3980 0ef4 01       		.byte	0x1
 3981 0ef5 9B03     		.2byte	0x39b
 3982 0ef7 00000000 		.4byte	.LFB6
 3983 0efb 44000000 		.4byte	.LFE6-.LFB6
 3984 0eff 01       		.uleb128 0x1
 3985 0f00 9C       		.byte	0x9c
 3986 0f01 510F0000 		.4byte	0xf51
 3987 0f05 19       		.uleb128 0x19
 3988 0f06 DF080000 		.4byte	.LASF290
 3989 0f0a 01       		.byte	0x1
 3990 0f0b 9B03     		.2byte	0x39b
 3991 0f0d 8B0B0000 		.4byte	0xb8b
 3992 0f11 02       		.uleb128 0x2
 3993 0f12 91       		.byte	0x91
 3994 0f13 74       		.sleb128 -12
 3995 0f14 19       		.uleb128 0x19
 3996 0f15 0A040000 		.4byte	.LASF284
 3997 0f19 01       		.byte	0x1
 3998 0f1a 9C03     		.2byte	0x39c
 3999 0f1c 9D0B0000 		.4byte	0xb9d
 4000 0f20 02       		.uleb128 0x2
 4001 0f21 91       		.byte	0x91
 4002 0f22 70       		.sleb128 -16
 4003 0f23 19       		.uleb128 0x19
 4004 0f24 54010000 		.4byte	.LASF286
 4005 0f28 01       		.byte	0x1
 4006 0f29 9D03     		.2byte	0x39d
 4007 0f2b 20010000 		.4byte	0x120
 4008 0f2f 02       		.uleb128 0x2
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 94


 4009 0f30 91       		.byte	0x91
 4010 0f31 6C       		.sleb128 -20
 4011 0f32 1A       		.uleb128 0x1a
 4012 0f33 6F707400 		.ascii	"opt\000"
 4013 0f37 01       		.byte	0x1
 4014 0f38 9E03     		.2byte	0x39e
 4015 0f3a 62010000 		.4byte	0x162
 4016 0f3e 02       		.uleb128 0x2
 4017 0f3f 91       		.byte	0x91
 4018 0f40 6A       		.sleb128 -22
 4019 0f41 19       		.uleb128 0x19
 4020 0f42 E2100000 		.4byte	.LASF295
 4021 0f46 01       		.byte	0x1
 4022 0f47 9F03     		.2byte	0x39f
 4023 0f49 A4010000 		.4byte	0x1a4
 4024 0f4d 02       		.uleb128 0x2
 4025 0f4e 91       		.byte	0x91
 4026 0f4f 00       		.sleb128 0
 4027 0f50 00       		.byte	0
 4028 0f51 1D       		.uleb128 0x1d
 4029 0f52 26030000 		.4byte	.LASF307
 4030 0f56 01       		.byte	0x1
 4031 0f57 BC03     		.2byte	0x3bc
 4032 0f59 00000000 		.4byte	.LFB7
 4033 0f5d 38000000 		.4byte	.LFE7-.LFB7
 4034 0f61 01       		.uleb128 0x1
 4035 0f62 9C       		.byte	0x9c
 4036 0f63 860F0000 		.4byte	0xf86
 4037 0f67 19       		.uleb128 0x19
 4038 0f68 0A040000 		.4byte	.LASF284
 4039 0f6c 01       		.byte	0x1
 4040 0f6d BC03     		.2byte	0x3bc
 4041 0f6f 9D0B0000 		.4byte	0xb9d
 4042 0f73 02       		.uleb128 0x2
 4043 0f74 91       		.byte	0x91
 4044 0f75 6C       		.sleb128 -20
 4045 0f76 1B       		.uleb128 0x1b
 4046 0f77 CB030000 		.4byte	.LASF291
 4047 0f7b 01       		.byte	0x1
 4048 0f7c BE03     		.2byte	0x3be
 4049 0f7e D30C0000 		.4byte	0xcd3
 4050 0f82 02       		.uleb128 0x2
 4051 0f83 91       		.byte	0x91
 4052 0f84 74       		.sleb128 -12
 4053 0f85 00       		.byte	0
 4054 0f86 1E       		.uleb128 0x1e
 4055 0f87 96070000 		.4byte	.LASF308
 4056 0f8b 01       		.byte	0x1
 4057 0f8c DB03     		.2byte	0x3db
 4058 0f8e 00000000 		.4byte	.LFB8
 4059 0f92 2C000000 		.4byte	.LFE8-.LFB8
 4060 0f96 01       		.uleb128 0x1
 4061 0f97 9C       		.byte	0x9c
 4062 0f98 AC0F0000 		.4byte	0xfac
 4063 0f9c 19       		.uleb128 0x19
 4064 0f9d 64080000 		.4byte	.LASF287
 4065 0fa1 01       		.byte	0x1
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 95


 4066 0fa2 DB03     		.2byte	0x3db
 4067 0fa4 280C0000 		.4byte	0xc28
 4068 0fa8 02       		.uleb128 0x2
 4069 0fa9 91       		.byte	0x91
 4070 0faa 74       		.sleb128 -12
 4071 0fab 00       		.byte	0
 4072 0fac 1E       		.uleb128 0x1e
 4073 0fad 2D0F0000 		.4byte	.LASF309
 4074 0fb1 01       		.byte	0x1
 4075 0fb2 FD03     		.2byte	0x3fd
 4076 0fb4 00000000 		.4byte	.LFB9
 4077 0fb8 4C000000 		.4byte	.LFE9-.LFB9
 4078 0fbc 01       		.uleb128 0x1
 4079 0fbd 9C       		.byte	0x9c
 4080 0fbe D20F0000 		.4byte	0xfd2
 4081 0fc2 19       		.uleb128 0x19
 4082 0fc3 0A040000 		.4byte	.LASF284
 4083 0fc7 01       		.byte	0x1
 4084 0fc8 FD03     		.2byte	0x3fd
 4085 0fca 9D0B0000 		.4byte	0xb9d
 4086 0fce 02       		.uleb128 0x2
 4087 0fcf 91       		.byte	0x91
 4088 0fd0 74       		.sleb128 -12
 4089 0fd1 00       		.byte	0
 4090 0fd2 1E       		.uleb128 0x1e
 4091 0fd3 B7060000 		.4byte	.LASF310
 4092 0fd7 01       		.byte	0x1
 4093 0fd8 0C04     		.2byte	0x40c
 4094 0fda 00000000 		.4byte	.LFB10
 4095 0fde 70000000 		.4byte	.LFE10-.LFB10
 4096 0fe2 01       		.uleb128 0x1
 4097 0fe3 9C       		.byte	0x9c
 4098 0fe4 16100000 		.4byte	0x1016
 4099 0fe8 19       		.uleb128 0x19
 4100 0fe9 0A040000 		.4byte	.LASF284
 4101 0fed 01       		.byte	0x1
 4102 0fee 0C04     		.2byte	0x40c
 4103 0ff0 9D0B0000 		.4byte	0xb9d
 4104 0ff4 02       		.uleb128 0x2
 4105 0ff5 91       		.byte	0x91
 4106 0ff6 6C       		.sleb128 -20
 4107 0ff7 1B       		.uleb128 0x1b
 4108 0ff8 75050000 		.4byte	.LASF311
 4109 0ffc 01       		.byte	0x1
 4110 0ffd 0E04     		.2byte	0x40e
 4111 0fff 9D0B0000 		.4byte	0xb9d
 4112 1003 02       		.uleb128 0x2
 4113 1004 91       		.byte	0x91
 4114 1005 70       		.sleb128 -16
 4115 1006 1B       		.uleb128 0x1b
 4116 1007 0B0A0000 		.4byte	.LASF312
 4117 100b 01       		.byte	0x1
 4118 100c 0F04     		.2byte	0x40f
 4119 100e 9D0B0000 		.4byte	0xb9d
 4120 1012 02       		.uleb128 0x2
 4121 1013 91       		.byte	0x91
 4122 1014 74       		.sleb128 -12
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 96


 4123 1015 00       		.byte	0
 4124 1016 18       		.uleb128 0x18
 4125 1017 D8090000 		.4byte	.LASF313
 4126 101b 01       		.byte	0x1
 4127 101c 5504     		.2byte	0x455
 4128 101e 20010000 		.4byte	0x120
 4129 1022 00000000 		.4byte	.LFB11
 4130 1026 E2010000 		.4byte	.LFE11-.LFB11
 4131 102a 01       		.uleb128 0x1
 4132 102b 9C       		.byte	0x9c
 4133 102c F3100000 		.4byte	0x10f3
 4134 1030 19       		.uleb128 0x19
 4135 1031 0A040000 		.4byte	.LASF284
 4136 1035 01       		.byte	0x1
 4137 1036 5504     		.2byte	0x455
 4138 1038 9D0B0000 		.4byte	0xb9d
 4139 103c 02       		.uleb128 0x2
 4140 103d 91       		.byte	0x91
 4141 103e 54       		.sleb128 -44
 4142 103f 19       		.uleb128 0x19
 4143 1040 54010000 		.4byte	.LASF286
 4144 1044 01       		.byte	0x1
 4145 1045 5604     		.2byte	0x456
 4146 1047 20010000 		.4byte	0x120
 4147 104b 02       		.uleb128 0x2
 4148 104c 91       		.byte	0x91
 4149 104d 50       		.sleb128 -48
 4150 104e 1A       		.uleb128 0x1a
 4151 104f 6F707400 		.ascii	"opt\000"
 4152 1053 01       		.byte	0x1
 4153 1054 5704     		.2byte	0x457
 4154 1056 62010000 		.4byte	0x162
 4155 105a 02       		.uleb128 0x2
 4156 105b 91       		.byte	0x91
 4157 105c 4E       		.sleb128 -50
 4158 105d 1A       		.uleb128 0x1a
 4159 105e 747300   		.ascii	"ts\000"
 4160 1061 01       		.byte	0x1
 4161 1062 5804     		.2byte	0x458
 4162 1064 F4000000 		.4byte	0xf4
 4163 1068 02       		.uleb128 0x2
 4164 1069 91       		.byte	0x91
 4165 106a 48       		.sleb128 -56
 4166 106b 19       		.uleb128 0x19
 4167 106c 64080000 		.4byte	.LASF287
 4168 1070 01       		.byte	0x1
 4169 1071 5904     		.2byte	0x459
 4170 1073 280C0000 		.4byte	0xc28
 4171 1077 02       		.uleb128 0x2
 4172 1078 91       		.byte	0x91
 4173 1079 00       		.sleb128 0
 4174 107a 1B       		.uleb128 0x1b
 4175 107b D70E0000 		.4byte	.LASF304
 4176 107f 01       		.byte	0x1
 4177 1080 5B04     		.2byte	0x45b
 4178 1082 20010000 		.4byte	0x120
 4179 1086 02       		.uleb128 0x2
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 97


 4180 1087 91       		.byte	0x91
 4181 1088 58       		.sleb128 -40
 4182 1089 1B       		.uleb128 0x1b
 4183 108a 5F0F0000 		.4byte	.LASF298
 4184 108e 01       		.byte	0x1
 4185 108f 5C04     		.2byte	0x45c
 4186 1091 20010000 		.4byte	0x120
 4187 1095 02       		.uleb128 0x2
 4188 1096 91       		.byte	0x91
 4189 1097 5C       		.sleb128 -36
 4190 1098 1B       		.uleb128 0x1b
 4191 1099 B1030000 		.4byte	.LASF299
 4192 109d 01       		.byte	0x1
 4193 109e 5D04     		.2byte	0x45d
 4194 10a0 62010000 		.4byte	0x162
 4195 10a4 02       		.uleb128 0x2
 4196 10a5 91       		.byte	0x91
 4197 10a6 62       		.sleb128 -30
 4198 10a7 1B       		.uleb128 0x1b
 4199 10a8 DF080000 		.4byte	.LASF290
 4200 10ac 01       		.byte	0x1
 4201 10ad 5E04     		.2byte	0x45e
 4202 10af 8B0B0000 		.4byte	0xb8b
 4203 10b3 02       		.uleb128 0x2
 4204 10b4 91       		.byte	0x91
 4205 10b5 74       		.sleb128 -12
 4206 10b6 1B       		.uleb128 0x1b
 4207 10b7 830C0000 		.4byte	.LASF314
 4208 10bb 01       		.byte	0x1
 4209 10bc 5F04     		.2byte	0x45f
 4210 10be 8B0B0000 		.4byte	0xb8b
 4211 10c2 02       		.uleb128 0x2
 4212 10c3 91       		.byte	0x91
 4213 10c4 64       		.sleb128 -28
 4214 10c5 1B       		.uleb128 0x1b
 4215 10c6 CB030000 		.4byte	.LASF291
 4216 10ca 01       		.byte	0x1
 4217 10cb 6004     		.2byte	0x460
 4218 10cd D30C0000 		.4byte	0xcd3
 4219 10d1 02       		.uleb128 0x2
 4220 10d2 91       		.byte	0x91
 4221 10d3 68       		.sleb128 -24
 4222 10d4 1B       		.uleb128 0x1b
 4223 10d5 EB0A0000 		.4byte	.LASF292
 4224 10d9 01       		.byte	0x1
 4225 10da 6104     		.2byte	0x461
 4226 10dc 850B0000 		.4byte	0xb85
 4227 10e0 02       		.uleb128 0x2
 4228 10e1 91       		.byte	0x91
 4229 10e2 70       		.sleb128 -16
 4230 10e3 1B       		.uleb128 0x1b
 4231 10e4 43050000 		.4byte	.LASF288
 4232 10e8 01       		.byte	0x1
 4233 10e9 6204     		.2byte	0x462
 4234 10eb DD000000 		.4byte	0xdd
 4235 10ef 02       		.uleb128 0x2
 4236 10f0 91       		.byte	0x91
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 98


 4237 10f1 6C       		.sleb128 -20
 4238 10f2 00       		.byte	0
 4239 10f3 1D       		.uleb128 0x1d
 4240 10f4 3D080000 		.4byte	.LASF315
 4241 10f8 01       		.byte	0x1
 4242 10f9 D904     		.2byte	0x4d9
 4243 10fb 00000000 		.4byte	.LFB12
 4244 10ff 86000000 		.4byte	.LFE12-.LFB12
 4245 1103 01       		.uleb128 0x1
 4246 1104 9C       		.byte	0x9c
 4247 1105 36110000 		.4byte	0x1136
 4248 1109 19       		.uleb128 0x19
 4249 110a EB0A0000 		.4byte	.LASF292
 4250 110e 01       		.byte	0x1
 4251 110f D904     		.2byte	0x4d9
 4252 1111 850B0000 		.4byte	0xb85
 4253 1115 02       		.uleb128 0x2
 4254 1116 91       		.byte	0x91
 4255 1117 74       		.sleb128 -12
 4256 1118 19       		.uleb128 0x19
 4257 1119 5F0F0000 		.4byte	.LASF298
 4258 111d 01       		.byte	0x1
 4259 111e DA04     		.2byte	0x4da
 4260 1120 20010000 		.4byte	0x120
 4261 1124 02       		.uleb128 0x2
 4262 1125 91       		.byte	0x91
 4263 1126 70       		.sleb128 -16
 4264 1127 1A       		.uleb128 0x1a
 4265 1128 747300   		.ascii	"ts\000"
 4266 112b 01       		.byte	0x1
 4267 112c DB04     		.2byte	0x4db
 4268 112e F4000000 		.4byte	0xf4
 4269 1132 02       		.uleb128 0x2
 4270 1133 91       		.byte	0x91
 4271 1134 6C       		.sleb128 -20
 4272 1135 00       		.byte	0
 4273 1136 1F       		.uleb128 0x1f
 4274 1137 7B0D0000 		.4byte	.LASF316
 4275 113b 05       		.byte	0x5
 4276 113c 5F04     		.2byte	0x45f
 4277 113e 41010000 		.4byte	0x141
 4278 1142 1F       		.uleb128 0x1f
 4279 1143 ED110000 		.4byte	.LASF317
 4280 1147 05       		.byte	0x5
 4281 1148 7504     		.2byte	0x475
 4282 114a 9D0B0000 		.4byte	0xb9d
 4283 114e 1F       		.uleb128 0x1f
 4284 114f 37120000 		.4byte	.LASF318
 4285 1153 05       		.byte	0x5
 4286 1154 7704     		.2byte	0x477
 4287 1156 4C010000 		.4byte	0x14c
 4288 115a 1F       		.uleb128 0x1f
 4289 115b B4100000 		.4byte	.LASF319
 4290 115f 05       		.byte	0x5
 4291 1160 AD04     		.2byte	0x4ad
 4292 1162 41010000 		.4byte	0x141
 4293 1166 1F       		.uleb128 0x1f
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 99


 4294 1167 D7010000 		.4byte	.LASF320
 4295 116b 05       		.byte	0x5
 4296 116c E504     		.2byte	0x4e5
 4297 116e 850B0000 		.4byte	0xb85
 4298 1172 00       		.byte	0
 4299              		.section	.debug_abbrev,"",%progbits
 4300              	.Ldebug_abbrev0:
 4301 0000 01       		.uleb128 0x1
 4302 0001 11       		.uleb128 0x11
 4303 0002 01       		.byte	0x1
 4304 0003 25       		.uleb128 0x25
 4305 0004 0E       		.uleb128 0xe
 4306 0005 13       		.uleb128 0x13
 4307 0006 0B       		.uleb128 0xb
 4308 0007 03       		.uleb128 0x3
 4309 0008 0E       		.uleb128 0xe
 4310 0009 1B       		.uleb128 0x1b
 4311 000a 0E       		.uleb128 0xe
 4312 000b 55       		.uleb128 0x55
 4313 000c 17       		.uleb128 0x17
 4314 000d 11       		.uleb128 0x11
 4315 000e 01       		.uleb128 0x1
 4316 000f 10       		.uleb128 0x10
 4317 0010 17       		.uleb128 0x17
 4318 0011 00       		.byte	0
 4319 0012 00       		.byte	0
 4320 0013 02       		.uleb128 0x2
 4321 0014 16       		.uleb128 0x16
 4322 0015 00       		.byte	0
 4323 0016 03       		.uleb128 0x3
 4324 0017 0E       		.uleb128 0xe
 4325 0018 3A       		.uleb128 0x3a
 4326 0019 0B       		.uleb128 0xb
 4327 001a 3B       		.uleb128 0x3b
 4328 001b 0B       		.uleb128 0xb
 4329 001c 49       		.uleb128 0x49
 4330 001d 13       		.uleb128 0x13
 4331 001e 00       		.byte	0
 4332 001f 00       		.byte	0
 4333 0020 03       		.uleb128 0x3
 4334 0021 24       		.uleb128 0x24
 4335 0022 00       		.byte	0
 4336 0023 0B       		.uleb128 0xb
 4337 0024 0B       		.uleb128 0xb
 4338 0025 3E       		.uleb128 0x3e
 4339 0026 0B       		.uleb128 0xb
 4340 0027 03       		.uleb128 0x3
 4341 0028 0E       		.uleb128 0xe
 4342 0029 00       		.byte	0
 4343 002a 00       		.byte	0
 4344 002b 04       		.uleb128 0x4
 4345 002c 24       		.uleb128 0x24
 4346 002d 00       		.byte	0
 4347 002e 0B       		.uleb128 0xb
 4348 002f 0B       		.uleb128 0xb
 4349 0030 3E       		.uleb128 0x3e
 4350 0031 0B       		.uleb128 0xb
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 100


 4351 0032 03       		.uleb128 0x3
 4352 0033 08       		.uleb128 0x8
 4353 0034 00       		.byte	0
 4354 0035 00       		.byte	0
 4355 0036 05       		.uleb128 0x5
 4356 0037 0F       		.uleb128 0xf
 4357 0038 00       		.byte	0
 4358 0039 0B       		.uleb128 0xb
 4359 003a 0B       		.uleb128 0xb
 4360 003b 49       		.uleb128 0x49
 4361 003c 13       		.uleb128 0x13
 4362 003d 00       		.byte	0
 4363 003e 00       		.byte	0
 4364 003f 06       		.uleb128 0x6
 4365 0040 15       		.uleb128 0x15
 4366 0041 01       		.byte	0x1
 4367 0042 27       		.uleb128 0x27
 4368 0043 19       		.uleb128 0x19
 4369 0044 01       		.uleb128 0x1
 4370 0045 13       		.uleb128 0x13
 4371 0046 00       		.byte	0
 4372 0047 00       		.byte	0
 4373 0048 07       		.uleb128 0x7
 4374 0049 05       		.uleb128 0x5
 4375 004a 00       		.byte	0
 4376 004b 49       		.uleb128 0x49
 4377 004c 13       		.uleb128 0x13
 4378 004d 00       		.byte	0
 4379 004e 00       		.byte	0
 4380 004f 08       		.uleb128 0x8
 4381 0050 0F       		.uleb128 0xf
 4382 0051 00       		.byte	0
 4383 0052 0B       		.uleb128 0xb
 4384 0053 0B       		.uleb128 0xb
 4385 0054 00       		.byte	0
 4386 0055 00       		.byte	0
 4387 0056 09       		.uleb128 0x9
 4388 0057 16       		.uleb128 0x16
 4389 0058 00       		.byte	0
 4390 0059 03       		.uleb128 0x3
 4391 005a 0E       		.uleb128 0xe
 4392 005b 3A       		.uleb128 0x3a
 4393 005c 0B       		.uleb128 0xb
 4394 005d 3B       		.uleb128 0x3b
 4395 005e 05       		.uleb128 0x5
 4396 005f 49       		.uleb128 0x49
 4397 0060 13       		.uleb128 0x13
 4398 0061 00       		.byte	0
 4399 0062 00       		.byte	0
 4400 0063 0A       		.uleb128 0xa
 4401 0064 04       		.uleb128 0x4
 4402 0065 01       		.byte	0x1
 4403 0066 03       		.uleb128 0x3
 4404 0067 0E       		.uleb128 0xe
 4405 0068 0B       		.uleb128 0xb
 4406 0069 0B       		.uleb128 0xb
 4407 006a 49       		.uleb128 0x49
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 101


 4408 006b 13       		.uleb128 0x13
 4409 006c 3A       		.uleb128 0x3a
 4410 006d 0B       		.uleb128 0xb
 4411 006e 3B       		.uleb128 0x3b
 4412 006f 05       		.uleb128 0x5
 4413 0070 01       		.uleb128 0x1
 4414 0071 13       		.uleb128 0x13
 4415 0072 00       		.byte	0
 4416 0073 00       		.byte	0
 4417 0074 0B       		.uleb128 0xb
 4418 0075 28       		.uleb128 0x28
 4419 0076 00       		.byte	0
 4420 0077 03       		.uleb128 0x3
 4421 0078 0E       		.uleb128 0xe
 4422 0079 1C       		.uleb128 0x1c
 4423 007a 0B       		.uleb128 0xb
 4424 007b 00       		.byte	0
 4425 007c 00       		.byte	0
 4426 007d 0C       		.uleb128 0xc
 4427 007e 28       		.uleb128 0x28
 4428 007f 00       		.byte	0
 4429 0080 03       		.uleb128 0x3
 4430 0081 0E       		.uleb128 0xe
 4431 0082 1C       		.uleb128 0x1c
 4432 0083 05       		.uleb128 0x5
 4433 0084 00       		.byte	0
 4434 0085 00       		.byte	0
 4435 0086 0D       		.uleb128 0xd
 4436 0087 13       		.uleb128 0x13
 4437 0088 01       		.byte	0x1
 4438 0089 03       		.uleb128 0x3
 4439 008a 0E       		.uleb128 0xe
 4440 008b 0B       		.uleb128 0xb
 4441 008c 0B       		.uleb128 0xb
 4442 008d 3A       		.uleb128 0x3a
 4443 008e 0B       		.uleb128 0xb
 4444 008f 3B       		.uleb128 0x3b
 4445 0090 05       		.uleb128 0x5
 4446 0091 01       		.uleb128 0x1
 4447 0092 13       		.uleb128 0x13
 4448 0093 00       		.byte	0
 4449 0094 00       		.byte	0
 4450 0095 0E       		.uleb128 0xe
 4451 0096 0D       		.uleb128 0xd
 4452 0097 00       		.byte	0
 4453 0098 03       		.uleb128 0x3
 4454 0099 0E       		.uleb128 0xe
 4455 009a 3A       		.uleb128 0x3a
 4456 009b 0B       		.uleb128 0xb
 4457 009c 3B       		.uleb128 0x3b
 4458 009d 05       		.uleb128 0x5
 4459 009e 49       		.uleb128 0x49
 4460 009f 13       		.uleb128 0x13
 4461 00a0 38       		.uleb128 0x38
 4462 00a1 0B       		.uleb128 0xb
 4463 00a2 00       		.byte	0
 4464 00a3 00       		.byte	0
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 102


 4465 00a4 0F       		.uleb128 0xf
 4466 00a5 0D       		.uleb128 0xd
 4467 00a6 00       		.byte	0
 4468 00a7 03       		.uleb128 0x3
 4469 00a8 08       		.uleb128 0x8
 4470 00a9 3A       		.uleb128 0x3a
 4471 00aa 0B       		.uleb128 0xb
 4472 00ab 3B       		.uleb128 0x3b
 4473 00ac 05       		.uleb128 0x5
 4474 00ad 49       		.uleb128 0x49
 4475 00ae 13       		.uleb128 0x13
 4476 00af 38       		.uleb128 0x38
 4477 00b0 0B       		.uleb128 0xb
 4478 00b1 00       		.byte	0
 4479 00b2 00       		.byte	0
 4480 00b3 10       		.uleb128 0x10
 4481 00b4 01       		.uleb128 0x1
 4482 00b5 01       		.byte	0x1
 4483 00b6 49       		.uleb128 0x49
 4484 00b7 13       		.uleb128 0x13
 4485 00b8 01       		.uleb128 0x1
 4486 00b9 13       		.uleb128 0x13
 4487 00ba 00       		.byte	0
 4488 00bb 00       		.byte	0
 4489 00bc 11       		.uleb128 0x11
 4490 00bd 21       		.uleb128 0x21
 4491 00be 00       		.byte	0
 4492 00bf 49       		.uleb128 0x49
 4493 00c0 13       		.uleb128 0x13
 4494 00c1 2F       		.uleb128 0x2f
 4495 00c2 0B       		.uleb128 0xb
 4496 00c3 00       		.byte	0
 4497 00c4 00       		.byte	0
 4498 00c5 12       		.uleb128 0x12
 4499 00c6 2E       		.uleb128 0x2e
 4500 00c7 01       		.byte	0x1
 4501 00c8 3F       		.uleb128 0x3f
 4502 00c9 19       		.uleb128 0x19
 4503 00ca 03       		.uleb128 0x3
 4504 00cb 0E       		.uleb128 0xe
 4505 00cc 3A       		.uleb128 0x3a
 4506 00cd 0B       		.uleb128 0xb
 4507 00ce 3B       		.uleb128 0x3b
 4508 00cf 0B       		.uleb128 0xb
 4509 00d0 27       		.uleb128 0x27
 4510 00d1 19       		.uleb128 0x19
 4511 00d2 11       		.uleb128 0x11
 4512 00d3 01       		.uleb128 0x1
 4513 00d4 12       		.uleb128 0x12
 4514 00d5 06       		.uleb128 0x6
 4515 00d6 40       		.uleb128 0x40
 4516 00d7 18       		.uleb128 0x18
 4517 00d8 9642     		.uleb128 0x2116
 4518 00da 19       		.uleb128 0x19
 4519 00db 01       		.uleb128 0x1
 4520 00dc 13       		.uleb128 0x13
 4521 00dd 00       		.byte	0
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 103


 4522 00de 00       		.byte	0
 4523 00df 13       		.uleb128 0x13
 4524 00e0 05       		.uleb128 0x5
 4525 00e1 00       		.byte	0
 4526 00e2 03       		.uleb128 0x3
 4527 00e3 0E       		.uleb128 0xe
 4528 00e4 3A       		.uleb128 0x3a
 4529 00e5 0B       		.uleb128 0xb
 4530 00e6 3B       		.uleb128 0x3b
 4531 00e7 0B       		.uleb128 0xb
 4532 00e8 49       		.uleb128 0x49
 4533 00e9 13       		.uleb128 0x13
 4534 00ea 02       		.uleb128 0x2
 4535 00eb 18       		.uleb128 0x18
 4536 00ec 00       		.byte	0
 4537 00ed 00       		.byte	0
 4538 00ee 14       		.uleb128 0x14
 4539 00ef 34       		.uleb128 0x34
 4540 00f0 00       		.byte	0
 4541 00f1 03       		.uleb128 0x3
 4542 00f2 0E       		.uleb128 0xe
 4543 00f3 3A       		.uleb128 0x3a
 4544 00f4 0B       		.uleb128 0xb
 4545 00f5 3B       		.uleb128 0x3b
 4546 00f6 0B       		.uleb128 0xb
 4547 00f7 49       		.uleb128 0x49
 4548 00f8 13       		.uleb128 0x13
 4549 00f9 02       		.uleb128 0x2
 4550 00fa 18       		.uleb128 0x18
 4551 00fb 00       		.byte	0
 4552 00fc 00       		.byte	0
 4553 00fd 15       		.uleb128 0x15
 4554 00fe 2E       		.uleb128 0x2e
 4555 00ff 01       		.byte	0x1
 4556 0100 3F       		.uleb128 0x3f
 4557 0101 19       		.uleb128 0x19
 4558 0102 03       		.uleb128 0x3
 4559 0103 0E       		.uleb128 0xe
 4560 0104 3A       		.uleb128 0x3a
 4561 0105 0B       		.uleb128 0xb
 4562 0106 3B       		.uleb128 0x3b
 4563 0107 0B       		.uleb128 0xb
 4564 0108 27       		.uleb128 0x27
 4565 0109 19       		.uleb128 0x19
 4566 010a 49       		.uleb128 0x49
 4567 010b 13       		.uleb128 0x13
 4568 010c 11       		.uleb128 0x11
 4569 010d 01       		.uleb128 0x1
 4570 010e 12       		.uleb128 0x12
 4571 010f 06       		.uleb128 0x6
 4572 0110 40       		.uleb128 0x40
 4573 0111 18       		.uleb128 0x18
 4574 0112 9642     		.uleb128 0x2116
 4575 0114 19       		.uleb128 0x19
 4576 0115 01       		.uleb128 0x1
 4577 0116 13       		.uleb128 0x13
 4578 0117 00       		.byte	0
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 104


 4579 0118 00       		.byte	0
 4580 0119 16       		.uleb128 0x16
 4581 011a 05       		.uleb128 0x5
 4582 011b 00       		.byte	0
 4583 011c 03       		.uleb128 0x3
 4584 011d 08       		.uleb128 0x8
 4585 011e 3A       		.uleb128 0x3a
 4586 011f 0B       		.uleb128 0xb
 4587 0120 3B       		.uleb128 0x3b
 4588 0121 0B       		.uleb128 0xb
 4589 0122 49       		.uleb128 0x49
 4590 0123 13       		.uleb128 0x13
 4591 0124 02       		.uleb128 0x2
 4592 0125 18       		.uleb128 0x18
 4593 0126 00       		.byte	0
 4594 0127 00       		.byte	0
 4595 0128 17       		.uleb128 0x17
 4596 0129 34       		.uleb128 0x34
 4597 012a 00       		.byte	0
 4598 012b 03       		.uleb128 0x3
 4599 012c 08       		.uleb128 0x8
 4600 012d 3A       		.uleb128 0x3a
 4601 012e 0B       		.uleb128 0xb
 4602 012f 3B       		.uleb128 0x3b
 4603 0130 0B       		.uleb128 0xb
 4604 0131 49       		.uleb128 0x49
 4605 0132 13       		.uleb128 0x13
 4606 0133 02       		.uleb128 0x2
 4607 0134 18       		.uleb128 0x18
 4608 0135 00       		.byte	0
 4609 0136 00       		.byte	0
 4610 0137 18       		.uleb128 0x18
 4611 0138 2E       		.uleb128 0x2e
 4612 0139 01       		.byte	0x1
 4613 013a 3F       		.uleb128 0x3f
 4614 013b 19       		.uleb128 0x19
 4615 013c 03       		.uleb128 0x3
 4616 013d 0E       		.uleb128 0xe
 4617 013e 3A       		.uleb128 0x3a
 4618 013f 0B       		.uleb128 0xb
 4619 0140 3B       		.uleb128 0x3b
 4620 0141 05       		.uleb128 0x5
 4621 0142 27       		.uleb128 0x27
 4622 0143 19       		.uleb128 0x19
 4623 0144 49       		.uleb128 0x49
 4624 0145 13       		.uleb128 0x13
 4625 0146 11       		.uleb128 0x11
 4626 0147 01       		.uleb128 0x1
 4627 0148 12       		.uleb128 0x12
 4628 0149 06       		.uleb128 0x6
 4629 014a 40       		.uleb128 0x40
 4630 014b 18       		.uleb128 0x18
 4631 014c 9642     		.uleb128 0x2116
 4632 014e 19       		.uleb128 0x19
 4633 014f 01       		.uleb128 0x1
 4634 0150 13       		.uleb128 0x13
 4635 0151 00       		.byte	0
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 105


 4636 0152 00       		.byte	0
 4637 0153 19       		.uleb128 0x19
 4638 0154 05       		.uleb128 0x5
 4639 0155 00       		.byte	0
 4640 0156 03       		.uleb128 0x3
 4641 0157 0E       		.uleb128 0xe
 4642 0158 3A       		.uleb128 0x3a
 4643 0159 0B       		.uleb128 0xb
 4644 015a 3B       		.uleb128 0x3b
 4645 015b 05       		.uleb128 0x5
 4646 015c 49       		.uleb128 0x49
 4647 015d 13       		.uleb128 0x13
 4648 015e 02       		.uleb128 0x2
 4649 015f 18       		.uleb128 0x18
 4650 0160 00       		.byte	0
 4651 0161 00       		.byte	0
 4652 0162 1A       		.uleb128 0x1a
 4653 0163 05       		.uleb128 0x5
 4654 0164 00       		.byte	0
 4655 0165 03       		.uleb128 0x3
 4656 0166 08       		.uleb128 0x8
 4657 0167 3A       		.uleb128 0x3a
 4658 0168 0B       		.uleb128 0xb
 4659 0169 3B       		.uleb128 0x3b
 4660 016a 05       		.uleb128 0x5
 4661 016b 49       		.uleb128 0x49
 4662 016c 13       		.uleb128 0x13
 4663 016d 02       		.uleb128 0x2
 4664 016e 18       		.uleb128 0x18
 4665 016f 00       		.byte	0
 4666 0170 00       		.byte	0
 4667 0171 1B       		.uleb128 0x1b
 4668 0172 34       		.uleb128 0x34
 4669 0173 00       		.byte	0
 4670 0174 03       		.uleb128 0x3
 4671 0175 0E       		.uleb128 0xe
 4672 0176 3A       		.uleb128 0x3a
 4673 0177 0B       		.uleb128 0xb
 4674 0178 3B       		.uleb128 0x3b
 4675 0179 05       		.uleb128 0x5
 4676 017a 49       		.uleb128 0x49
 4677 017b 13       		.uleb128 0x13
 4678 017c 02       		.uleb128 0x2
 4679 017d 18       		.uleb128 0x18
 4680 017e 00       		.byte	0
 4681 017f 00       		.byte	0
 4682 0180 1C       		.uleb128 0x1c
 4683 0181 34       		.uleb128 0x34
 4684 0182 00       		.byte	0
 4685 0183 03       		.uleb128 0x3
 4686 0184 08       		.uleb128 0x8
 4687 0185 3A       		.uleb128 0x3a
 4688 0186 0B       		.uleb128 0xb
 4689 0187 3B       		.uleb128 0x3b
 4690 0188 05       		.uleb128 0x5
 4691 0189 49       		.uleb128 0x49
 4692 018a 13       		.uleb128 0x13
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 106


 4693 018b 02       		.uleb128 0x2
 4694 018c 18       		.uleb128 0x18
 4695 018d 00       		.byte	0
 4696 018e 00       		.byte	0
 4697 018f 1D       		.uleb128 0x1d
 4698 0190 2E       		.uleb128 0x2e
 4699 0191 01       		.byte	0x1
 4700 0192 3F       		.uleb128 0x3f
 4701 0193 19       		.uleb128 0x19
 4702 0194 03       		.uleb128 0x3
 4703 0195 0E       		.uleb128 0xe
 4704 0196 3A       		.uleb128 0x3a
 4705 0197 0B       		.uleb128 0xb
 4706 0198 3B       		.uleb128 0x3b
 4707 0199 05       		.uleb128 0x5
 4708 019a 27       		.uleb128 0x27
 4709 019b 19       		.uleb128 0x19
 4710 019c 11       		.uleb128 0x11
 4711 019d 01       		.uleb128 0x1
 4712 019e 12       		.uleb128 0x12
 4713 019f 06       		.uleb128 0x6
 4714 01a0 40       		.uleb128 0x40
 4715 01a1 18       		.uleb128 0x18
 4716 01a2 9642     		.uleb128 0x2116
 4717 01a4 19       		.uleb128 0x19
 4718 01a5 01       		.uleb128 0x1
 4719 01a6 13       		.uleb128 0x13
 4720 01a7 00       		.byte	0
 4721 01a8 00       		.byte	0
 4722 01a9 1E       		.uleb128 0x1e
 4723 01aa 2E       		.uleb128 0x2e
 4724 01ab 01       		.byte	0x1
 4725 01ac 3F       		.uleb128 0x3f
 4726 01ad 19       		.uleb128 0x19
 4727 01ae 03       		.uleb128 0x3
 4728 01af 0E       		.uleb128 0xe
 4729 01b0 3A       		.uleb128 0x3a
 4730 01b1 0B       		.uleb128 0xb
 4731 01b2 3B       		.uleb128 0x3b
 4732 01b3 05       		.uleb128 0x5
 4733 01b4 27       		.uleb128 0x27
 4734 01b5 19       		.uleb128 0x19
 4735 01b6 11       		.uleb128 0x11
 4736 01b7 01       		.uleb128 0x1
 4737 01b8 12       		.uleb128 0x12
 4738 01b9 06       		.uleb128 0x6
 4739 01ba 40       		.uleb128 0x40
 4740 01bb 18       		.uleb128 0x18
 4741 01bc 9742     		.uleb128 0x2117
 4742 01be 19       		.uleb128 0x19
 4743 01bf 01       		.uleb128 0x1
 4744 01c0 13       		.uleb128 0x13
 4745 01c1 00       		.byte	0
 4746 01c2 00       		.byte	0
 4747 01c3 1F       		.uleb128 0x1f
 4748 01c4 34       		.uleb128 0x34
 4749 01c5 00       		.byte	0
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 107


 4750 01c6 03       		.uleb128 0x3
 4751 01c7 0E       		.uleb128 0xe
 4752 01c8 3A       		.uleb128 0x3a
 4753 01c9 0B       		.uleb128 0xb
 4754 01ca 3B       		.uleb128 0x3b
 4755 01cb 05       		.uleb128 0x5
 4756 01cc 49       		.uleb128 0x49
 4757 01cd 13       		.uleb128 0x13
 4758 01ce 3F       		.uleb128 0x3f
 4759 01cf 19       		.uleb128 0x19
 4760 01d0 3C       		.uleb128 0x3c
 4761 01d1 19       		.uleb128 0x19
 4762 01d2 00       		.byte	0
 4763 01d3 00       		.byte	0
 4764 01d4 00       		.byte	0
 4765              		.section	.debug_aranges,"",%progbits
 4766 0000 7C000000 		.4byte	0x7c
 4767 0004 0200     		.2byte	0x2
 4768 0006 00000000 		.4byte	.Ldebug_info0
 4769 000a 04       		.byte	0x4
 4770 000b 00       		.byte	0
 4771 000c 0000     		.2byte	0
 4772 000e 0000     		.2byte	0
 4773 0010 00000000 		.4byte	.LFB0
 4774 0014 8C000000 		.4byte	.LFE0-.LFB0
 4775 0018 00000000 		.4byte	.LFB1
 4776 001c 24010000 		.4byte	.LFE1-.LFB1
 4777 0020 00000000 		.4byte	.LFB2
 4778 0024 14050000 		.4byte	.LFE2-.LFB2
 4779 0028 00000000 		.4byte	.LFB3
 4780 002c EC000000 		.4byte	.LFE3-.LFB3
 4781 0030 00000000 		.4byte	.LFB4
 4782 0034 50000000 		.4byte	.LFE4-.LFB4
 4783 0038 00000000 		.4byte	.LFB5
 4784 003c 64000000 		.4byte	.LFE5-.LFB5
 4785 0040 00000000 		.4byte	.LFB6
 4786 0044 44000000 		.4byte	.LFE6-.LFB6
 4787 0048 00000000 		.4byte	.LFB7
 4788 004c 38000000 		.4byte	.LFE7-.LFB7
 4789 0050 00000000 		.4byte	.LFB8
 4790 0054 2C000000 		.4byte	.LFE8-.LFB8
 4791 0058 00000000 		.4byte	.LFB9
 4792 005c 4C000000 		.4byte	.LFE9-.LFB9
 4793 0060 00000000 		.4byte	.LFB10
 4794 0064 70000000 		.4byte	.LFE10-.LFB10
 4795 0068 00000000 		.4byte	.LFB11
 4796 006c E2010000 		.4byte	.LFE11-.LFB11
 4797 0070 00000000 		.4byte	.LFB12
 4798 0074 86000000 		.4byte	.LFE12-.LFB12
 4799 0078 00000000 		.4byte	0
 4800 007c 00000000 		.4byte	0
 4801              		.section	.debug_ranges,"",%progbits
 4802              	.Ldebug_ranges0:
 4803 0000 00000000 		.4byte	.LFB0
 4804 0004 8C000000 		.4byte	.LFE0
 4805 0008 00000000 		.4byte	.LFB1
 4806 000c 24010000 		.4byte	.LFE1
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 108


 4807 0010 00000000 		.4byte	.LFB2
 4808 0014 14050000 		.4byte	.LFE2
 4809 0018 00000000 		.4byte	.LFB3
 4810 001c EC000000 		.4byte	.LFE3
 4811 0020 00000000 		.4byte	.LFB4
 4812 0024 50000000 		.4byte	.LFE4
 4813 0028 00000000 		.4byte	.LFB5
 4814 002c 64000000 		.4byte	.LFE5
 4815 0030 00000000 		.4byte	.LFB6
 4816 0034 44000000 		.4byte	.LFE6
 4817 0038 00000000 		.4byte	.LFB7
 4818 003c 38000000 		.4byte	.LFE7
 4819 0040 00000000 		.4byte	.LFB8
 4820 0044 2C000000 		.4byte	.LFE8
 4821 0048 00000000 		.4byte	.LFB9
 4822 004c 4C000000 		.4byte	.LFE9
 4823 0050 00000000 		.4byte	.LFB10
 4824 0054 70000000 		.4byte	.LFE10
 4825 0058 00000000 		.4byte	.LFB11
 4826 005c E2010000 		.4byte	.LFE11
 4827 0060 00000000 		.4byte	.LFB12
 4828 0064 86000000 		.4byte	.LFE12
 4829 0068 00000000 		.4byte	0
 4830 006c 00000000 		.4byte	0
 4831              		.section	.debug_line,"",%progbits
 4832              	.Ldebug_line0:
 4833 0000 42030000 		.section	.debug_str,"MS",%progbits,1
 4833      0200B200 
 4833      00000201 
 4833      FB0E0D00 
 4833      01010101 
 4834              	.LASF223:
 4835 0000 6F735F74 		.ascii	"os_tcb\000"
 4835      636200
 4836              	.LASF105:
 4837 0007 4F535F45 		.ascii	"OS_ERR_PRIO_INVALID\000"
 4837      52525F50 
 4837      52494F5F 
 4837      494E5641 
 4837      4C494400 
 4838              	.LASF198:
 4839 001b 4F535F45 		.ascii	"OS_ERR\000"
 4839      525200
 4840              	.LASF22:
 4841 0022 4F535F43 		.ascii	"OS_CTX_SW_CTR\000"
 4841      54585F53 
 4841      575F4354 
 4841      5200
 4842              	.LASF184:
 4843 0030 4F535F45 		.ascii	"OS_ERR_TMR_ISR\000"
 4843      52525F54 
 4843      4D525F49 
 4843      535200
 4844              	.LASF171:
 4845 003f 4F535F45 		.ascii	"OS_ERR_TIME_INVALID_MINUTES\000"
 4845      52525F54 
 4845      494D455F 
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 109


 4845      494E5641 
 4845      4C49445F 
 4846              	.LASF38:
 4847 005b 4F535F45 		.ascii	"OS_ERR_A\000"
 4847      52525F41 
 4847      00
 4848              	.LASF40:
 4849 0064 4F535F45 		.ascii	"OS_ERR_B\000"
 4849      52525F42 
 4849      00
 4850              	.LASF41:
 4851 006d 4F535F45 		.ascii	"OS_ERR_C\000"
 4851      52525F43 
 4851      00
 4852              	.LASF43:
 4853 0076 4F535F45 		.ascii	"OS_ERR_D\000"
 4853      52525F44 
 4853      00
 4854              	.LASF45:
 4855 007f 4F535F45 		.ascii	"OS_ERR_E\000"
 4855      52525F45 
 4855      00
 4856              	.LASF46:
 4857 0088 4F535F45 		.ascii	"OS_ERR_F\000"
 4857      52525F46 
 4857      00
 4858              	.LASF52:
 4859 0091 4F535F45 		.ascii	"OS_ERR_G\000"
 4859      52525F47 
 4859      00
 4860              	.LASF53:
 4861 009a 4F535F45 		.ascii	"OS_ERR_H\000"
 4861      52525F48 
 4861      00
 4862              	.LASF54:
 4863 00a3 4F535F45 		.ascii	"OS_ERR_I\000"
 4863      52525F49 
 4863      00
 4864              	.LASF61:
 4865 00ac 4F535F45 		.ascii	"OS_ERR_J\000"
 4865      52525F4A 
 4865      00
 4866              	.LASF62:
 4867 00b5 4F535F45 		.ascii	"OS_ERR_K\000"
 4867      52525F4B 
 4867      00
 4868              	.LASF63:
 4869 00be 4F535F45 		.ascii	"OS_ERR_L\000"
 4869      52525F4C 
 4869      00
 4870              	.LASF65:
 4871 00c7 4F535F45 		.ascii	"OS_ERR_M\000"
 4871      52525F4D 
 4871      00
 4872              	.LASF81:
 4873 00d0 4F535F45 		.ascii	"OS_ERR_N\000"
 4873      52525F4E 
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 110


 4873      00
 4874              	.LASF84:
 4875 00d9 4F535F45 		.ascii	"OS_ERR_O\000"
 4875      52525F4F 
 4875      00
 4876              	.LASF92:
 4877 00e2 4F535F45 		.ascii	"OS_ERR_P\000"
 4877      52525F50 
 4877      00
 4878              	.LASF107:
 4879 00eb 4F535F45 		.ascii	"OS_ERR_Q\000"
 4879      52525F51 
 4879      00
 4880              	.LASF112:
 4881 00f4 4F535F45 		.ascii	"OS_ERR_R\000"
 4881      52525F52 
 4881      00
 4882              	.LASF116:
 4883 00fd 4F535F45 		.ascii	"OS_ERR_S\000"
 4883      52525F53 
 4883      00
 4884              	.LASF133:
 4885 0106 4F535F45 		.ascii	"OS_ERR_T\000"
 4885      52525F54 
 4885      00
 4886              	.LASF191:
 4887 010f 4F535F45 		.ascii	"OS_ERR_U\000"
 4887      52525F55 
 4887      00
 4888              	.LASF192:
 4889 0118 4F535F45 		.ascii	"OS_ERR_V\000"
 4889      52525F56 
 4889      00
 4890              	.LASF193:
 4891 0121 4F535F45 		.ascii	"OS_ERR_W\000"
 4891      52525F57 
 4891      00
 4892              	.LASF194:
 4893 012a 4F535F45 		.ascii	"OS_ERR_X\000"
 4893      52525F58 
 4893      00
 4894              	.LASF181:
 4895 0133 4F535F45 		.ascii	"OS_ERR_TMR_INVALID_PERIOD\000"
 4895      52525F54 
 4895      4D525F49 
 4895      4E56414C 
 4895      49445F50 
 4896              	.LASF324:
 4897 014d 6F735F65 		.ascii	"os_err\000"
 4897      727200
 4898              	.LASF286:
 4899 0154 666C6167 		.ascii	"flags\000"
 4899      7300
 4900              	.LASF219:
 4901 015a 4E627245 		.ascii	"NbrEntries\000"
 4901      6E747269 
 4901      657300
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 111


 4902              	.LASF208:
 4903 0165 6F735F66 		.ascii	"os_flag_grp\000"
 4903      6C61675F 
 4903      67727000 
 4904              	.LASF58:
 4905 0171 4F535F45 		.ascii	"OS_ERR_INT_Q_SIZE\000"
 4905      52525F49 
 4905      4E545F51 
 4905      5F53495A 
 4905      4500
 4906              	.LASF42:
 4907 0183 4F535F45 		.ascii	"OS_ERR_CREATE_ISR\000"
 4907      52525F43 
 4907      52454154 
 4907      455F4953 
 4907      5200
 4908              	.LASF21:
 4909 0195 4F535F43 		.ascii	"OS_CPU_USAGE\000"
 4909      50555F55 
 4909      53414745 
 4909      00
 4910              	.LASF165:
 4911 01a2 4F535F45 		.ascii	"OS_ERR_TICK_STK_SIZE_INVALID\000"
 4911      52525F54 
 4911      49434B5F 
 4911      53544B5F 
 4911      53495A45 
 4912              	.LASF9:
 4913 01bf 4350555F 		.ascii	"CPU_INT32U\000"
 4913      494E5433 
 4913      325500
 4914              	.LASF305:
 4915 01ca 4F53466C 		.ascii	"OSFlagCreate\000"
 4915      61674372 
 4915      65617465 
 4915      00
 4916              	.LASF320:
 4917 01d7 4F535443 		.ascii	"OSTCBCurPtr\000"
 4917      42437572 
 4917      50747200 
 4918              	.LASF130:
 4919 01e3 4F535F45 		.ascii	"OS_ERR_STK_INVALID\000"
 4919      52525F53 
 4919      544B5F49 
 4919      4E56414C 
 4919      494400
 4920              	.LASF253:
 4921 01f6 466C6167 		.ascii	"FlagsOpt\000"
 4921      734F7074 
 4921      00
 4922              	.LASF146:
 4923 01ff 4F535F45 		.ascii	"OS_ERR_TASK_RESUME_ISR\000"
 4923      52525F54 
 4923      41534B5F 
 4923      52455355 
 4923      4D455F49 
 4924              	.LASF100:
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 112


 4925 0216 4F535F45 		.ascii	"OS_ERR_PEND_WOULD_BLOCK\000"
 4925      52525F50 
 4925      454E445F 
 4925      574F554C 
 4925      445F424C 
 4926              	.LASF134:
 4927 022e 4F535F45 		.ascii	"OS_ERR_TASK_CHANGE_PRIO_ISR\000"
 4927      52525F54 
 4927      41534B5F 
 4927      4348414E 
 4927      47455F50 
 4928              	.LASF124:
 4929 024a 4F535F45 		.ascii	"OS_ERR_STAT_RESET_ISR\000"
 4929      52525F53 
 4929      5441545F 
 4929      52455345 
 4929      545F4953 
 4930              	.LASF99:
 4931 0260 4F535F45 		.ascii	"OS_ERR_PEND_LOCKED\000"
 4931      52525F50 
 4931      454E445F 
 4931      4C4F434B 
 4931      454400
 4932              	.LASF28:
 4933 0273 4F535F4F 		.ascii	"OS_OBJ_QTY\000"
 4933      424A5F51 
 4933      545900
 4934              	.LASF321:
 4935 027e 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4935      43313120 
 4935      352E342E 
 4935      31203230 
 4935      31363036 
 4936 02b1 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 4936      20726576 
 4936      6973696F 
 4936      6E203233 
 4936      37373135 
 4937 02e4 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 4937      66756E63 
 4937      74696F6E 
 4937      2D736563 
 4937      74696F6E 
 4938              	.LASF144:
 4939 030c 4F535F45 		.ascii	"OS_ERR_TASK_NOT_SUSPENDED\000"
 4939      52525F54 
 4939      41534B5F 
 4939      4E4F545F 
 4939      53555350 
 4940              	.LASF307:
 4941 0326 4F535F46 		.ascii	"OS_FlagClr\000"
 4941      6C616743 
 4941      6C7200
 4942              	.LASF142:
 4943 0331 4F535F45 		.ascii	"OS_ERR_TASK_NOT_DLY\000"
 4943      52525F54 
 4943      41534B5F 
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 113


 4943      4E4F545F 
 4943      444C5900 
 4944              	.LASF203:
 4945 0345 44626750 		.ascii	"DbgPrevPtr\000"
 4945      72657650 
 4945      747200
 4946              	.LASF56:
 4947 0350 4F535F45 		.ascii	"OS_ERR_INT_Q\000"
 4947      52525F49 
 4947      4E545F51 
 4947      00
 4948              	.LASF204:
 4949 035d 4462674E 		.ascii	"DbgNextPtr\000"
 4949      65787450 
 4949      747200
 4950              	.LASF303:
 4951 0368 4F53466C 		.ascii	"OSFlagPost\000"
 4951      6167506F 
 4951      737400
 4952              	.LASF156:
 4953 0373 4F535F45 		.ascii	"OS_ERR_TASK_WAITING\000"
 4953      52525F54 
 4953      41534B5F 
 4953      57414954 
 4953      494E4700 
 4954              	.LASF39:
 4955 0387 4F535F45 		.ascii	"OS_ERR_ACCEPT_ISR\000"
 4955      52525F41 
 4955      43434550 
 4955      545F4953 
 4955      5200
 4956              	.LASF154:
 4957 0399 4F535F45 		.ascii	"OS_ERR_TASK_SUSPEND_ISR\000"
 4957      52525F54 
 4957      41534B5F 
 4957      53555350 
 4957      454E445F 
 4958              	.LASF299:
 4959 03b1 6D6F6465 		.ascii	"mode\000"
 4959      00
 4960              	.LASF80:
 4961 03b6 4F535F45 		.ascii	"OS_ERR_MUTEX_NESTING\000"
 4961      52525F4D 
 4961      55544558 
 4961      5F4E4553 
 4961      54494E47 
 4962              	.LASF291:
 4963 03cb 705F7065 		.ascii	"p_pend_list\000"
 4963      6E645F6C 
 4963      69737400 
 4964              	.LASF182:
 4965 03d7 4F535F45 		.ascii	"OS_ERR_TMR_INVALID_STATE\000"
 4965      52525F54 
 4965      4D525F49 
 4965      4E56414C 
 4965      49445F53 
 4966              	.LASF235:
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 114


 4967 03f0 50656E64 		.ascii	"PendOn\000"
 4967      4F6E00
 4968              	.LASF240:
 4969 03f7 50656E64 		.ascii	"PendDataTblEntries\000"
 4969      44617461 
 4969      54626C45 
 4969      6E747269 
 4969      657300
 4970              	.LASF284:
 4971 040a 705F6772 		.ascii	"p_grp\000"
 4971      7000
 4972              	.LASF85:
 4973 0410 4F535F45 		.ascii	"OS_ERR_OBJ_CREATED\000"
 4973      52525F4F 
 4973      424A5F43 
 4973      52454154 
 4973      454400
 4974              	.LASF280:
 4975 0423 5461696C 		.ascii	"TailPtr\000"
 4975      50747200 
 4976              	.LASF152:
 4977 042b 4F535F45 		.ascii	"OS_ERR_TASK_SUSPEND_IDLE\000"
 4977      52525F54 
 4977      41534B5F 
 4977      53555350 
 4977      454E445F 
 4978              	.LASF57:
 4979 0444 4F535F45 		.ascii	"OS_ERR_INT_Q_FULL\000"
 4979      52525F49 
 4979      4E545F51 
 4979      5F46554C 
 4979      4C00
 4980              	.LASF243:
 4981 0456 5469636B 		.ascii	"TickCtrMatch\000"
 4981      4374724D 
 4981      61746368 
 4981      00
 4982              	.LASF274:
 4983 0463 5264794D 		.ascii	"RdyMsgPtr\000"
 4983      73675074 
 4983      7200
 4984              	.LASF282:
 4985 046d 6F735F70 		.ascii	"os_pend_obj\000"
 4985      656E645F 
 4985      6F626A00 
 4986              	.LASF55:
 4987 0479 4F535F45 		.ascii	"OS_ERR_ILLEGAL_CREATE_RUN_TIME\000"
 4987      52525F49 
 4987      4C4C4547 
 4987      414C5F43 
 4987      52454154 
 4988              	.LASF251:
 4989 0498 466C6167 		.ascii	"FlagsPend\000"
 4989      7350656E 
 4989      6400
 4990              	.LASF180:
 4991 04a2 4F535F45 		.ascii	"OS_ERR_TMR_INVALID_DLY\000"
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 115


 4991      52525F54 
 4991      4D525F49 
 4991      4E56414C 
 4991      49445F44 
 4992              	.LASF257:
 4993 04b9 43747853 		.ascii	"CtxSwCtr\000"
 4993      77437472 
 4993      00
 4994              	.LASF147:
 4995 04c2 4F535F45 		.ascii	"OS_ERR_TASK_RESUME_PRIO\000"
 4995      52525F54 
 4995      41534B5F 
 4995      52455355 
 4995      4D455F50 
 4996              	.LASF206:
 4997 04da 466C6167 		.ascii	"Flags\000"
 4997      7300
 4998              	.LASF31:
 4999 04e0 4F535F50 		.ascii	"OS_PRIO\000"
 4999      52494F00 
 5000              	.LASF13:
 5001 04e8 666C6F61 		.ascii	"float\000"
 5001      7400
 5002              	.LASF101:
 5003 04ee 4F535F45 		.ascii	"OS_ERR_POST_NULL_PTR\000"
 5003      52525F50 
 5003      4F53545F 
 5003      4E554C4C 
 5003      5F505452 
 5004              	.LASF83:
 5005 0503 4F535F45 		.ascii	"OS_ERR_NO_MORE_ID_AVAIL\000"
 5005      52525F4E 
 5005      4F5F4D4F 
 5005      52455F49 
 5005      445F4156 
 5006              	.LASF266:
 5007 051b 4F535F54 		.ascii	"OS_TICK_SPOKE\000"
 5007      49434B5F 
 5007      53504F4B 
 5007      4500
 5008              	.LASF73:
 5009 0529 4F535F45 		.ascii	"OS_ERR_MEM_INVALID_P_DATA\000"
 5009      52525F4D 
 5009      454D5F49 
 5009      4E56414C 
 5009      49445F50 
 5010              	.LASF288:
 5011 0543 6370755F 		.ascii	"cpu_sr\000"
 5011      737200
 5012              	.LASF185:
 5013 054a 4F535F45 		.ascii	"OS_ERR_TMR_NO_CALLBACK\000"
 5013      52525F54 
 5013      4D525F4E 
 5013      4F5F4341 
 5013      4C4C4241 
 5014              	.LASF178:
 5015 0561 4F535F45 		.ascii	"OS_ERR_TMR_INACTIVE\000"
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 116


 5015      52525F54 
 5015      4D525F49 
 5015      4E414354 
 5015      49564500 
 5016              	.LASF311:
 5017 0575 705F6772 		.ascii	"p_grp_next\000"
 5017      705F6E65 
 5017      787400
 5018              	.LASF158:
 5019 0580 4F535F45 		.ascii	"OS_ERR_TLS_ID_INVALID\000"
 5019      52525F54 
 5019      4C535F49 
 5019      445F494E 
 5019      56414C49 
 5020              	.LASF11:
 5021 0596 6C6F6E67 		.ascii	"long long unsigned int\000"
 5021      206C6F6E 
 5021      6720756E 
 5021      7369676E 
 5021      65642069 
 5022              	.LASF149:
 5023 05ad 4F535F45 		.ascii	"OS_ERR_TASK_RUNNING\000"
 5023      52525F54 
 5023      41534B5F 
 5023      52554E4E 
 5023      494E4700 
 5024              	.LASF264:
 5025 05c1 53746B55 		.ascii	"StkUsed\000"
 5025      73656400 
 5026              	.LASF183:
 5027 05c9 4F535F45 		.ascii	"OS_ERR_TMR_INVALID\000"
 5027      52525F54 
 5027      4D525F49 
 5027      4E56414C 
 5027      494400
 5028              	.LASF269:
 5029 05dc 4F535F50 		.ascii	"OS_PEND_DATA\000"
 5029      454E445F 
 5029      44415441 
 5029      00
 5030              	.LASF153:
 5031 05e9 4F535F45 		.ascii	"OS_ERR_TASK_SUSPEND_INT_HANDLER\000"
 5031      52525F54 
 5031      41534B5F 
 5031      53555350 
 5031      454E445F 
 5032              	.LASF138:
 5033 0609 4F535F45 		.ascii	"OS_ERR_TASK_DEL_INVALID\000"
 5033      52525F54 
 5033      41534B5F 
 5033      44454C5F 
 5033      494E5641 
 5034              	.LASF188:
 5035 0621 4F535F45 		.ascii	"OS_ERR_TMR_STK_INVALID\000"
 5035      52525F54 
 5035      4D525F53 
 5035      544B5F49 
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 117


 5035      4E56414C 
 5036              	.LASF301:
 5037 0638 4F53466C 		.ascii	"OSFlagPendAbort\000"
 5037      61675065 
 5037      6E644162 
 5037      6F727400 
 5038              	.LASF4:
 5039 0648 4350555F 		.ascii	"CPU_INT08U\000"
 5039      494E5430 
 5039      385500
 5040              	.LASF209:
 5041 0653 6F735F6D 		.ascii	"os_msg\000"
 5041      736700
 5042              	.LASF157:
 5043 065a 4F535F45 		.ascii	"OS_ERR_TCB_INVALID\000"
 5043      52525F54 
 5043      43425F49 
 5043      4E56414C 
 5043      494400
 5044              	.LASF239:
 5045 066d 53746B53 		.ascii	"StkSize\000"
 5045      697A6500 
 5046              	.LASF231:
 5047 0675 53746B42 		.ascii	"StkBasePtr\000"
 5047      61736550 
 5047      747200
 5048              	.LASF109:
 5049 0680 4F535F45 		.ascii	"OS_ERR_Q_EMPTY\000"
 5049      52525F51 
 5049      5F454D50 
 5049      545900
 5050              	.LASF173:
 5051 068f 4F535F45 		.ascii	"OS_ERR_TIME_INVALID_MILLISECONDS\000"
 5051      52525F54 
 5051      494D455F 
 5051      494E5641 
 5051      4C49445F 
 5052              	.LASF32:
 5053 06b0 4F535F52 		.ascii	"OS_REG\000"
 5053      454700
 5054              	.LASF310:
 5055 06b7 4F535F46 		.ascii	"OS_FlagDbgListRemove\000"
 5055      6C616744 
 5055      62674C69 
 5055      73745265 
 5055      6D6F7665 
 5056              	.LASF82:
 5057 06cc 4F535F45 		.ascii	"OS_ERR_NAME\000"
 5057      52525F4E 
 5057      414D4500 
 5058              	.LASF246:
 5059 06d8 54696D65 		.ascii	"TimeQuantaCtr\000"
 5059      5175616E 
 5059      74614374 
 5059      7200
 5060              	.LASF35:
 5061 06e6 4F535F53 		.ascii	"OS_STATUS\000"
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 118


 5061      54415455 
 5061      5300
 5062              	.LASF237:
 5063 06f0 5461736B 		.ascii	"TaskState\000"
 5063      53746174 
 5063      6500
 5064              	.LASF162:
 5065 06fa 4F535F45 		.ascii	"OS_ERR_TLS_DESTRUCT_ASSIGNED\000"
 5065      52525F54 
 5065      4C535F44 
 5065      45535452 
 5065      5543545F 
 5066              	.LASF78:
 5067 0717 4F535F45 		.ascii	"OS_ERR_MUTEX_NOT_OWNER\000"
 5067      52525F4D 
 5067      55544558 
 5067      5F4E4F54 
 5067      5F4F574E 
 5068              	.LASF26:
 5069 072e 4F535F4D 		.ascii	"OS_MSG_SIZE\000"
 5069      53475F53 
 5069      495A4500 
 5070              	.LASF170:
 5071 073a 4F535F45 		.ascii	"OS_ERR_TIME_INVALID_HOURS\000"
 5071      52525F54 
 5071      494D455F 
 5071      494E5641 
 5071      4C49445F 
 5072              	.LASF186:
 5073 0754 4F535F45 		.ascii	"OS_ERR_TMR_NON_AVAIL\000"
 5073      52525F54 
 5073      4D525F4E 
 5073      4F4E5F41 
 5073      5641494C 
 5074              	.LASF0:
 5075 0769 4350555F 		.ascii	"CPU_CHAR\000"
 5075      43484152 
 5075      00
 5076              	.LASF135:
 5077 0772 4F535F45 		.ascii	"OS_ERR_TASK_CREATE_ISR\000"
 5077      52525F54 
 5077      41534B5F 
 5077      43524541 
 5077      54455F49 
 5078              	.LASF17:
 5079 0789 4350555F 		.ascii	"CPU_STK_SIZE\000"
 5079      53544B5F 
 5079      53495A45 
 5079      00
 5080              	.LASF308:
 5081 0796 4F535F46 		.ascii	"OS_FlagInit\000"
 5081      6C616749 
 5081      6E697400 
 5082              	.LASF25:
 5083 07a2 4F535F4D 		.ascii	"OS_MSG_QTY\000"
 5083      53475F51 
 5083      545900
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 119


 5084              	.LASF91:
 5085 07ad 4F535F45 		.ascii	"OS_ERR_OS_RUNNING\000"
 5085      52525F4F 
 5085      535F5255 
 5085      4E4E494E 
 5085      4700
 5086              	.LASF265:
 5087 07bf 53746B46 		.ascii	"StkFree\000"
 5087      72656500 
 5088              	.LASF242:
 5089 07c7 5469636B 		.ascii	"TickCtrPrev\000"
 5089      43747250 
 5089      72657600 
 5090              	.LASF218:
 5091 07d3 4E627245 		.ascii	"NbrEntriesSize\000"
 5091      6E747269 
 5091      65735369 
 5091      7A6500
 5092              	.LASF176:
 5093 07e2 4F535F45 		.ascii	"OS_ERR_TIME_ZERO_DLY\000"
 5093      52525F54 
 5093      494D455F 
 5093      5A45524F 
 5093      5F444C59 
 5094              	.LASF229:
 5095 07f7 5469636B 		.ascii	"TickPrevPtr\000"
 5095      50726576 
 5095      50747200 
 5096              	.LASF252:
 5097 0803 466C6167 		.ascii	"FlagsRdy\000"
 5097      73526479 
 5097      00
 5098              	.LASF126:
 5099 080c 4F535F45 		.ascii	"OS_ERR_STAT_STK_INVALID\000"
 5099      52525F53 
 5099      5441545F 
 5099      53544B5F 
 5099      494E5641 
 5100              	.LASF48:
 5101 0824 4F535F45 		.ascii	"OS_ERR_FLAG_GRP_DEPLETED\000"
 5101      52525F46 
 5101      4C41475F 
 5101      4752505F 
 5101      4445504C 
 5102              	.LASF315:
 5103 083d 4F535F46 		.ascii	"OS_FlagTaskRdy\000"
 5103      6C616754 
 5103      61736B52 
 5103      647900
 5104              	.LASF69:
 5105 084c 4F535F45 		.ascii	"OS_ERR_MEM_INVALID_BLKS\000"
 5105      52525F4D 
 5105      454D5F49 
 5105      4E56414C 
 5105      49445F42 
 5106              	.LASF287:
 5107 0864 705F6572 		.ascii	"p_err\000"
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 120


 5107      7200
 5108              	.LASF249:
 5109 086a 4D736751 		.ascii	"MsgQPendTimeMax\000"
 5109      50656E64 
 5109      54696D65 
 5109      4D617800 
 5110              	.LASF248:
 5111 087a 4D736751 		.ascii	"MsgQPendTime\000"
 5111      50656E64 
 5111      54696D65 
 5111      00
 5112              	.LASF207:
 5113 0887 4F535F4D 		.ascii	"OS_MSG\000"
 5113      534700
 5114              	.LASF285:
 5115 088e 705F6E61 		.ascii	"p_name\000"
 5115      6D6500
 5116              	.LASF179:
 5117 0895 4F535F45 		.ascii	"OS_ERR_TMR_INVALID_DEST\000"
 5117      52525F54 
 5117      4D525F49 
 5117      4E56414C 
 5117      49445F44 
 5118              	.LASF118:
 5119 08ad 4F535F45 		.ascii	"OS_ERR_SCHED_LOCK_ISR\000"
 5119      52525F53 
 5119      43484544 
 5119      5F4C4F43 
 5119      4B5F4953 
 5120              	.LASF44:
 5121 08c3 4F535F45 		.ascii	"OS_ERR_DEL_ISR\000"
 5121      52525F44 
 5121      454C5F49 
 5121      535200
 5122              	.LASF110:
 5123 08d2 4F535F45 		.ascii	"OS_ERR_Q_MAX\000"
 5123      52525F51 
 5123      5F4D4158 
 5123      00
 5124              	.LASF290:
 5125 08df 705F7065 		.ascii	"p_pend_data\000"
 5125      6E645F64 
 5125      61746100 
 5126              	.LASF227:
 5127 08eb 50726576 		.ascii	"PrevPtr\000"
 5127      50747200 
 5128              	.LASF2:
 5129 08f3 63686172 		.ascii	"char\000"
 5129      00
 5130              	.LASF29:
 5131 08f8 4F535F4F 		.ascii	"OS_OBJ_TYPE\000"
 5131      424A5F54 
 5131      59504500 
 5132              	.LASF323:
 5133 0904 483A5C42 		.ascii	"H:\\BCC722-RTOS-moinho\\UCoS\\Micrium_2\\Software\\"
 5133      43433732 
 5133      322D5254 
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 121


 5133      4F532D6D 
 5133      6F696E68 
 5134 0932 4576616C 		.ascii	"EvalBoards\\Cypress\\CY8CKIT-050\\PSoC\\uCOS-III-Pr"
 5134      426F6172 
 5134      64735C43 
 5134      79707265 
 5134      73735C43 
 5135 0961 6F62655C 		.ascii	"obe\\uCOS-III-Probe.cydsn\000"
 5135      75434F53 
 5135      2D494949 
 5135      2D50726F 
 5135      62652E63 
 5136              	.LASF161:
 5137 097a 4F535F45 		.ascii	"OS_ERR_TLS_NOT_EN\000"
 5137      52525F54 
 5137      4C535F4E 
 5137      4F545F45 
 5137      4E00
 5138              	.LASF89:
 5139 098c 4F535F45 		.ascii	"OS_ERR_OPT_INVALID\000"
 5139      52525F4F 
 5139      50545F49 
 5139      4E56414C 
 5139      494400
 5140              	.LASF18:
 5141 099f 4350555F 		.ascii	"CPU_SR\000"
 5141      535200
 5142              	.LASF306:
 5143 09a6 4F535F46 		.ascii	"OS_FlagBlock\000"
 5143      6C616742 
 5143      6C6F636B 
 5143      00
 5144              	.LASF117:
 5145 09b3 4F535F45 		.ascii	"OS_ERR_SCHED_INVALID_TIME_SLICE\000"
 5145      52525F53 
 5145      43484544 
 5145      5F494E56 
 5145      414C4944 
 5146              	.LASF247:
 5147 09d3 4D736751 		.ascii	"MsgQ\000"
 5147      00
 5148              	.LASF313:
 5149 09d8 4F535F46 		.ascii	"OS_FlagPost\000"
 5149      6C616750 
 5149      6F737400 
 5150              	.LASF232:
 5151 09e4 5461736B 		.ascii	"TaskEntryAddr\000"
 5151      456E7472 
 5151      79416464 
 5151      7200
 5152              	.LASF125:
 5153 09f2 4F535F45 		.ascii	"OS_ERR_STAT_PRIO_INVALID\000"
 5153      52525F53 
 5153      5441545F 
 5153      5052494F 
 5153      5F494E56 
 5154              	.LASF312:
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 122


 5155 0a0b 705F6772 		.ascii	"p_grp_prev\000"
 5155      705F7072 
 5155      657600
 5156              	.LASF174:
 5157 0a16 4F535F45 		.ascii	"OS_ERR_TIME_NOT_DLY\000"
 5157      52525F54 
 5157      494D455F 
 5157      4E4F545F 
 5157      444C5900 
 5158              	.LASF201:
 5159 0a2a 4E616D65 		.ascii	"NamePtr\000"
 5159      50747200 
 5160              	.LASF236:
 5161 0a32 50656E64 		.ascii	"PendStatus\000"
 5161      53746174 
 5161      757300
 5162              	.LASF214:
 5163 0a3d 4F535F4D 		.ascii	"OS_MSG_Q\000"
 5163      53475F51 
 5163      00
 5164              	.LASF200:
 5165 0a46 54797065 		.ascii	"Type\000"
 5165      00
 5166              	.LASF196:
 5167 0a4b 4F535F45 		.ascii	"OS_ERR_YIELD_ISR\000"
 5167      52525F59 
 5167      49454C44 
 5167      5F495352 
 5167      00
 5168              	.LASF86:
 5169 0a5c 4F535F45 		.ascii	"OS_ERR_OBJ_DEL\000"
 5169      52525F4F 
 5169      424A5F44 
 5169      454C00
 5170              	.LASF322:
 5171 0a6b 2E2E5C2E 		.ascii	"..\\..\\..\\..\\..\\..\\uCOS-III\\Source\\os_flag.c"
 5171      2E5C2E2E 
 5171      5C2E2E5C 
 5171      2E2E5C2E 
 5171      2E5C7543 
 5172 0a96 00       		.ascii	"\000"
 5173              	.LASF294:
 5174 0a97 4F53466C 		.ascii	"OSFlagPend\000"
 5174      61675065 
 5174      6E6400
 5175              	.LASF20:
 5176 0aa2 4350555F 		.ascii	"CPU_TS\000"
 5176      545300
 5177              	.LASF12:
 5178 0aa9 6C6F6E67 		.ascii	"long long int\000"
 5178      206C6F6E 
 5178      6720696E 
 5178      7400
 5179              	.LASF293:
 5180 0ab7 4F53466C 		.ascii	"OSFlagDel\000"
 5180      61674465 
 5180      6C00
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 123


 5181              	.LASF50:
 5182 0ac1 4F535F45 		.ascii	"OS_ERR_FLAG_PEND_OPT\000"
 5182      52525F46 
 5182      4C41475F 
 5182      50454E44 
 5182      5F4F5054 
 5183              	.LASF224:
 5184 0ad6 53746B50 		.ascii	"StkPtr\000"
 5184      747200
 5185              	.LASF267:
 5186 0add 6F735F74 		.ascii	"os_tick_spoke\000"
 5186      69636B5F 
 5186      73706F6B 
 5186      6500
 5187              	.LASF292:
 5188 0aeb 705F7463 		.ascii	"p_tcb\000"
 5188      6200
 5189              	.LASF111:
 5190 0af1 4F535F45 		.ascii	"OS_ERR_Q_SIZE\000"
 5190      52525F51 
 5190      5F53495A 
 5190      4500
 5191              	.LASF259:
 5192 0aff 4379636C 		.ascii	"CyclesStart\000"
 5192      65735374 
 5192      61727400 
 5193              	.LASF300:
 5194 0b0b 70656E64 		.ascii	"pend_data\000"
 5194      5F646174 
 5194      6100
 5195              	.LASF271:
 5196 0b15 54434250 		.ascii	"TCBPtr\000"
 5196      747200
 5197              	.LASF96:
 5198 0b1c 4F535F45 		.ascii	"OS_ERR_PEND_ABORT_SELF\000"
 5198      52525F50 
 5198      454E445F 
 5198      41424F52 
 5198      545F5345 
 5199              	.LASF6:
 5200 0b33 4350555F 		.ascii	"CPU_INT16U\000"
 5200      494E5431 
 5200      365500
 5201              	.LASF115:
 5202 0b3e 4F535F45 		.ascii	"OS_ERR_ROUND_ROBIN_DISABLED\000"
 5202      52525F52 
 5202      4F554E44 
 5202      5F524F42 
 5202      494E5F44 
 5203              	.LASF297:
 5204 0b5a 636F6E73 		.ascii	"consume\000"
 5204      756D6500 
 5205              	.LASF70:
 5206 0b62 4F535F45 		.ascii	"OS_ERR_MEM_INVALID_PART\000"
 5206      52525F4D 
 5206      454D5F49 
 5206      4E56414C 
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 124


 5206      49445F50 
 5207              	.LASF87:
 5208 0b7a 4F535F45 		.ascii	"OS_ERR_OBJ_PTR_NULL\000"
 5208      52525F4F 
 5208      424A5F50 
 5208      54525F4E 
 5208      554C4C00 
 5209              	.LASF113:
 5210 0b8e 4F535F45 		.ascii	"OS_ERR_REG_ID_INVALID\000"
 5210      52525F52 
 5210      45475F49 
 5210      445F494E 
 5210      56414C49 
 5211              	.LASF289:
 5212 0ba4 6E62725F 		.ascii	"nbr_tasks\000"
 5212      7461736B 
 5212      7300
 5213              	.LASF36:
 5214 0bae 4F535F54 		.ascii	"OS_TICK\000"
 5214      49434B00 
 5215              	.LASF67:
 5216 0bb6 4F535F45 		.ascii	"OS_ERR_MEM_FULL\000"
 5216      52525F4D 
 5216      454D5F46 
 5216      554C4C00 
 5217              	.LASF141:
 5218 0bc6 4F535F45 		.ascii	"OS_ERR_TASK_NO_MORE_TCB\000"
 5218      52525F54 
 5218      41534B5F 
 5218      4E4F5F4D 
 5218      4F52455F 
 5219              	.LASF72:
 5220 0bde 4F535F45 		.ascii	"OS_ERR_MEM_INVALID_P_MEM\000"
 5220      52525F4D 
 5220      454D5F49 
 5220      4E56414C 
 5220      49445F50 
 5221              	.LASF19:
 5222 0bf7 4350555F 		.ascii	"CPU_TS32\000"
 5222      54533332 
 5222      00
 5223              	.LASF254:
 5224 0c00 53757370 		.ascii	"SuspendCtr\000"
 5224      656E6443 
 5224      747200
 5225              	.LASF226:
 5226 0c0b 53746B4C 		.ascii	"StkLimitPtr\000"
 5226      696D6974 
 5226      50747200 
 5227              	.LASF258:
 5228 0c17 4379636C 		.ascii	"CyclesDelta\000"
 5228      65734465 
 5228      6C746100 
 5229              	.LASF33:
 5230 0c23 4F535F53 		.ascii	"OS_SEM_CTR\000"
 5230      454D5F43 
 5230      545200
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 125


 5231              	.LASF189:
 5232 0c2e 4F535F45 		.ascii	"OS_ERR_TMR_STK_SIZE_INVALID\000"
 5232      52525F54 
 5232      4D525F53 
 5232      544B5F53 
 5232      495A455F 
 5233              	.LASF166:
 5234 0c4a 4F535F45 		.ascii	"OS_ERR_TICK_WHEEL_SIZE\000"
 5234      52525F54 
 5234      49434B5F 
 5234      57484545 
 5234      4C5F5349 
 5235              	.LASF228:
 5236 0c61 5469636B 		.ascii	"TickNextPtr\000"
 5236      4E657874 
 5236      50747200 
 5237              	.LASF143:
 5238 0c6d 4F535F45 		.ascii	"OS_ERR_TASK_NOT_EXIST\000"
 5238      52525F54 
 5238      41534B5F 
 5238      4E4F545F 
 5238      45584953 
 5239              	.LASF314:
 5240 0c83 705F7065 		.ascii	"p_pend_data_next\000"
 5240      6E645F64 
 5240      6174615F 
 5240      6E657874 
 5240      00
 5241              	.LASF140:
 5242 0c94 4F535F45 		.ascii	"OS_ERR_TASK_INVALID\000"
 5242      52525F54 
 5242      41534B5F 
 5242      494E5641 
 5242      4C494400 
 5243              	.LASF187:
 5244 0ca8 4F535F45 		.ascii	"OS_ERR_TMR_PRIO_INVALID\000"
 5244      52525F54 
 5244      4D525F50 
 5244      52494F5F 
 5244      494E5641 
 5245              	.LASF296:
 5246 0cc0 705F7473 		.ascii	"p_ts\000"
 5246      00
 5247              	.LASF155:
 5248 0cc5 4F535F45 		.ascii	"OS_ERR_TASK_SUSPEND_PRIO\000"
 5248      52525F54 
 5248      41534B5F 
 5248      53555350 
 5248      454E445F 
 5249              	.LASF273:
 5250 0cde 5264794F 		.ascii	"RdyObjPtr\000"
 5250      626A5074 
 5250      7200
 5251              	.LASF60:
 5252 0ce8 4F535F45 		.ascii	"OS_ERR_INT_Q_STK_SIZE_INVALID\000"
 5252      52525F49 
 5252      4E545F51 
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 126


 5252      5F53544B 
 5252      5F53495A 
 5253              	.LASF159:
 5254 0d06 4F535F45 		.ascii	"OS_ERR_TLS_ISR\000"
 5254      52525F54 
 5254      4C535F49 
 5254      535200
 5255              	.LASF139:
 5256 0d15 4F535F45 		.ascii	"OS_ERR_TASK_DEL_ISR\000"
 5256      52525F54 
 5256      41534B5F 
 5256      44454C5F 
 5256      49535200 
 5257              	.LASF262:
 5258 0d29 53656D50 		.ascii	"SemPendTime\000"
 5258      656E6454 
 5258      696D6500 
 5259              	.LASF106:
 5260 0d35 4F535F45 		.ascii	"OS_ERR_PTR_INVALID\000"
 5260      52525F50 
 5260      54525F49 
 5260      4E56414C 
 5260      494400
 5261              	.LASF128:
 5262 0d48 4F535F45 		.ascii	"OS_ERR_STATE_INVALID\000"
 5262      52525F53 
 5262      54415445 
 5262      5F494E56 
 5262      414C4944 
 5263              	.LASF210:
 5264 0d5d 4E657874 		.ascii	"NextPtr\000"
 5264      50747200 
 5265              	.LASF90:
 5266 0d65 4F535F45 		.ascii	"OS_ERR_OS_NOT_RUNNING\000"
 5266      52525F4F 
 5266      535F4E4F 
 5266      545F5255 
 5266      4E4E494E 
 5267              	.LASF316:
 5268 0d7b 4F53496E 		.ascii	"OSIntNestingCtr\000"
 5268      744E6573 
 5268      74696E67 
 5268      43747200 
 5269              	.LASF175:
 5270 0d8b 4F535F45 		.ascii	"OS_ERR_TIME_SET_ISR\000"
 5270      52525F54 
 5270      494D455F 
 5270      5345545F 
 5270      49535200 
 5271              	.LASF114:
 5272 0d9f 4F535F45 		.ascii	"OS_ERR_ROUND_ROBIN_1\000"
 5272      52525F52 
 5272      4F554E44 
 5272      5F524F42 
 5272      494E5F31 
 5273              	.LASF71:
 5274 0db4 4F535F45 		.ascii	"OS_ERR_MEM_INVALID_P_BLK\000"
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 127


 5274      52525F4D 
 5274      454D5F49 
 5274      4E56414C 
 5274      49445F50 
 5275              	.LASF68:
 5276 0dcd 4F535F45 		.ascii	"OS_ERR_MEM_INVALID_P_ADDR\000"
 5276      52525F4D 
 5276      454D5F49 
 5276      4E56414C 
 5276      49445F50 
 5277              	.LASF276:
 5278 0de7 52647954 		.ascii	"RdyTS\000"
 5278      5300
 5279              	.LASF64:
 5280 0ded 4F535F45 		.ascii	"OS_ERR_LOCK_NESTING_OVF\000"
 5280      52525F4C 
 5280      4F434B5F 
 5280      4E455354 
 5280      494E475F 
 5281              	.LASF150:
 5282 0e05 4F535F45 		.ascii	"OS_ERR_TASK_STK_CHK_ISR\000"
 5282      52525F54 
 5282      41534B5F 
 5282      53544B5F 
 5282      43484B5F 
 5283              	.LASF8:
 5284 0e1d 73686F72 		.ascii	"short int\000"
 5284      7420696E 
 5284      7400
 5285              	.LASF275:
 5286 0e27 5264794D 		.ascii	"RdyMsgSize\000"
 5286      73675369 
 5286      7A6500
 5287              	.LASF76:
 5288 0e32 4F535F45 		.ascii	"OS_ERR_MSG_POOL_EMPTY\000"
 5288      52525F4D 
 5288      53475F50 
 5288      4F4F4C5F 
 5288      454D5054 
 5289              	.LASF121:
 5290 0e48 4F535F45 		.ascii	"OS_ERR_SCHED_UNLOCK_ISR\000"
 5290      52525F53 
 5290      43484544 
 5290      5F554E4C 
 5290      4F434B5F 
 5291              	.LASF263:
 5292 0e60 53656D50 		.ascii	"SemPendTimeMax\000"
 5292      656E6454 
 5292      696D654D 
 5292      617800
 5293              	.LASF261:
 5294 0e6f 4379636C 		.ascii	"CyclesTotalPrev\000"
 5294      6573546F 
 5294      74616C50 
 5294      72657600 
 5295              	.LASF164:
 5296 0e7f 4F535F45 		.ascii	"OS_ERR_TICK_STK_INVALID\000"
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 128


 5296      52525F54 
 5296      49434B5F 
 5296      53544B5F 
 5296      494E5641 
 5297              	.LASF77:
 5298 0e97 4F535F45 		.ascii	"OS_ERR_MSG_POOL_NULL_PTR\000"
 5298      52525F4D 
 5298      53475F50 
 5298      4F4F4C5F 
 5298      4E554C4C 
 5299              	.LASF27:
 5300 0eb0 4F535F4E 		.ascii	"OS_NESTING_CTR\000"
 5300      45535449 
 5300      4E475F43 
 5300      545200
 5301              	.LASF260:
 5302 0ebf 4379636C 		.ascii	"CyclesTotal\000"
 5302      6573546F 
 5302      74616C00 
 5303              	.LASF281:
 5304 0ecb 4F535F50 		.ascii	"OS_PEND_OBJ\000"
 5304      454E445F 
 5304      4F424A00 
 5305              	.LASF304:
 5306 0ed7 666C6167 		.ascii	"flags_cur\000"
 5306      735F6375 
 5306      7200
 5307              	.LASF148:
 5308 0ee1 4F535F45 		.ascii	"OS_ERR_TASK_RESUME_SELF\000"
 5308      52525F54 
 5308      41534B5F 
 5308      52455355 
 5308      4D455F53 
 5309              	.LASF256:
 5310 0ef9 43505555 		.ascii	"CPUUsageMax\000"
 5310      73616765 
 5310      4D617800 
 5311              	.LASF202:
 5312 0f05 50656E64 		.ascii	"PendList\000"
 5312      4C697374 
 5312      00
 5313              	.LASF88:
 5314 0f0e 4F535F45 		.ascii	"OS_ERR_OBJ_TYPE\000"
 5314      52525F4F 
 5314      424A5F54 
 5314      59504500 
 5315              	.LASF234:
 5316 0f1e 50656E64 		.ascii	"PendDataTblPtr\000"
 5316      44617461 
 5316      54626C50 
 5316      747200
 5317              	.LASF309:
 5318 0f2d 4F535F46 		.ascii	"OS_FlagDbgListAdd\000"
 5318      6C616744 
 5318      62674C69 
 5318      73744164 
 5318      6400
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 129


 5319              	.LASF241:
 5320 0f3f 53656D43 		.ascii	"SemCtr\000"
 5320      747200
 5321              	.LASF216:
 5322 0f46 496E5074 		.ascii	"InPtr\000"
 5322      7200
 5323              	.LASF244:
 5324 0f4c 5469636B 		.ascii	"TickRemain\000"
 5324      52656D61 
 5324      696E00
 5325              	.LASF279:
 5326 0f57 48656164 		.ascii	"HeadPtr\000"
 5326      50747200 
 5327              	.LASF298:
 5328 0f5f 666C6167 		.ascii	"flags_rdy\000"
 5328      735F7264 
 5328      7900
 5329              	.LASF95:
 5330 0f69 4F535F45 		.ascii	"OS_ERR_PEND_ABORT_NONE\000"
 5330      52525F50 
 5330      454E445F 
 5330      41424F52 
 5330      545F4E4F 
 5331              	.LASF10:
 5332 0f80 756E7369 		.ascii	"unsigned int\000"
 5332      676E6564 
 5332      20696E74 
 5332      00
 5333              	.LASF212:
 5334 0f8d 4D736753 		.ascii	"MsgSize\000"
 5334      697A6500 
 5335              	.LASF79:
 5336 0f95 4F535F45 		.ascii	"OS_ERR_MUTEX_OWNER\000"
 5336      52525F4D 
 5336      55544558 
 5336      5F4F574E 
 5336      455200
 5337              	.LASF268:
 5338 0fa8 46697273 		.ascii	"FirstPtr\000"
 5338      74507472 
 5338      00
 5339              	.LASF127:
 5340 0fb1 4F535F45 		.ascii	"OS_ERR_STAT_STK_SIZE_INVALID\000"
 5340      52525F53 
 5340      5441545F 
 5340      53544B5F 
 5340      53495A45 
 5341              	.LASF49:
 5342 0fce 4F535F45 		.ascii	"OS_ERR_FLAG_NOT_RDY\000"
 5342      52525F46 
 5342      4C41475F 
 5342      4E4F545F 
 5342      52445900 
 5343              	.LASF225:
 5344 0fe2 45787450 		.ascii	"ExtPtr\000"
 5344      747200
 5345              	.LASF283:
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 130


 5346 0fe9 73697A65 		.ascii	"sizetype\000"
 5346      74797065 
 5346      00
 5347              	.LASF94:
 5348 0ff2 4F535F45 		.ascii	"OS_ERR_PEND_ABORT_ISR\000"
 5348      52525F50 
 5348      454E445F 
 5348      41424F52 
 5348      545F4953 
 5349              	.LASF15:
 5350 1008 4350555F 		.ascii	"CPU_ADDR\000"
 5350      41444452 
 5350      00
 5351              	.LASF102:
 5352 1011 4F535F45 		.ascii	"OS_ERR_POST_ISR\000"
 5352      52525F50 
 5352      4F53545F 
 5352      49535200 
 5353              	.LASF167:
 5354 1021 4F535F45 		.ascii	"OS_ERR_TIME_DLY_ISR\000"
 5354      52525F54 
 5354      494D455F 
 5354      444C595F 
 5354      49535200 
 5355              	.LASF132:
 5356 1035 4F535F45 		.ascii	"OS_ERR_STK_LIMIT_INVALID\000"
 5356      52525F53 
 5356      544B5F4C 
 5356      494D4954 
 5356      5F494E56 
 5357              	.LASF1:
 5358 104e 4350555F 		.ascii	"CPU_BOOLEAN\000"
 5358      424F4F4C 
 5358      45414E00 
 5359              	.LASF23:
 5360 105a 4F535F43 		.ascii	"OS_CYCLES\000"
 5360      59434C45 
 5360      5300
 5361              	.LASF222:
 5362 1064 4F535F54 		.ascii	"OS_TCB\000"
 5362      434200
 5363              	.LASF131:
 5364 106b 4F535F45 		.ascii	"OS_ERR_STK_SIZE_INVALID\000"
 5364      52525F53 
 5364      544B5F53 
 5364      495A455F 
 5364      494E5641 
 5365              	.LASF190:
 5366 1083 4F535F45 		.ascii	"OS_ERR_TMR_STOPPED\000"
 5366      52525F54 
 5366      4D525F53 
 5366      544F5050 
 5366      454400
 5367              	.LASF3:
 5368 1096 756E7369 		.ascii	"unsigned char\000"
 5368      676E6564 
 5368      20636861 
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 131


 5368      7200
 5369              	.LASF145:
 5370 10a4 4F535F45 		.ascii	"OS_ERR_TASK_OPT\000"
 5370      52525F54 
 5370      41534B5F 
 5370      4F505400 
 5371              	.LASF319:
 5372 10b4 4F535363 		.ascii	"OSSchedLockNestingCtr\000"
 5372      6865644C 
 5372      6F636B4E 
 5372      65737469 
 5372      6E674374 
 5373              	.LASF177:
 5374 10ca 4F535F45 		.ascii	"OS_ERR_TIMEOUT\000"
 5374      52525F54 
 5374      494D454F 
 5374      555400
 5375              	.LASF34:
 5376 10d9 4F535F53 		.ascii	"OS_STATE\000"
 5376      54415445 
 5376      00
 5377              	.LASF295:
 5378 10e2 74696D65 		.ascii	"timeout\000"
 5378      6F757400 
 5379              	.LASF30:
 5380 10ea 4F535F4F 		.ascii	"OS_OPT\000"
 5380      505400
 5381              	.LASF221:
 5382 10f1 4F535F54 		.ascii	"OS_TASK_PTR\000"
 5382      41534B5F 
 5382      50545200 
 5383              	.LASF66:
 5384 10fd 4F535F45 		.ascii	"OS_ERR_MEM_CREATE_ISR\000"
 5384      52525F4D 
 5384      454D5F43 
 5384      52454154 
 5384      455F4953 
 5385              	.LASF129:
 5386 1113 4F535F45 		.ascii	"OS_ERR_STATUS_INVALID\000"
 5386      52525F53 
 5386      54415455 
 5386      535F494E 
 5386      56414C49 
 5387              	.LASF195:
 5388 1129 4F535F45 		.ascii	"OS_ERR_Y\000"
 5388      52525F59 
 5388      00
 5389              	.LASF98:
 5390 1132 4F535F45 		.ascii	"OS_ERR_PEND_ISR\000"
 5390      52525F50 
 5390      454E445F 
 5390      49535200 
 5391              	.LASF197:
 5392 1142 4F535F45 		.ascii	"OS_ERR_Z\000"
 5392      52525F5A 
 5392      00
 5393              	.LASF230:
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 132


 5394 114b 5469636B 		.ascii	"TickSpokePtr\000"
 5394      53706F6B 
 5394      65507472 
 5394      00
 5395              	.LASF205:
 5396 1158 4462674E 		.ascii	"DbgNamePtr\000"
 5396      616D6550 
 5396      747200
 5397              	.LASF217:
 5398 1163 4F757450 		.ascii	"OutPtr\000"
 5398      747200
 5399              	.LASF233:
 5400 116a 5461736B 		.ascii	"TaskEntryArg\000"
 5400      456E7472 
 5400      79417267 
 5400      00
 5401              	.LASF108:
 5402 1177 4F535F45 		.ascii	"OS_ERR_Q_FULL\000"
 5402      52525F51 
 5402      5F46554C 
 5402      4C00
 5403              	.LASF59:
 5404 1185 4F535F45 		.ascii	"OS_ERR_INT_Q_STK_INVALID\000"
 5404      52525F49 
 5404      4E545F51 
 5404      5F53544B 
 5404      5F494E56 
 5405              	.LASF172:
 5406 119e 4F535F45 		.ascii	"OS_ERR_TIME_INVALID_SECONDS\000"
 5406      52525F54 
 5406      494D455F 
 5406      494E5641 
 5406      4C49445F 
 5407              	.LASF302:
 5408 11ba 4F53466C 		.ascii	"OSFlagPendGetFlagsRdy\000"
 5408      61675065 
 5408      6E644765 
 5408      74466C61 
 5408      67735264 
 5409              	.LASF136:
 5410 11d0 4F535F45 		.ascii	"OS_ERR_TASK_DEL\000"
 5410      52525F54 
 5410      41534B5F 
 5410      44454C00 
 5411              	.LASF277:
 5412 11e0 4F535F50 		.ascii	"OS_PEND_LIST\000"
 5412      454E445F 
 5412      4C495354 
 5412      00
 5413              	.LASF317:
 5414 11ed 4F53466C 		.ascii	"OSFlagDbgListPtr\000"
 5414      61674462 
 5414      674C6973 
 5414      74507472 
 5414      00
 5415              	.LASF5:
 5416 11fe 7369676E 		.ascii	"signed char\000"
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 133


 5416      65642063 
 5416      68617200 
 5417              	.LASF213:
 5418 120a 4D736754 		.ascii	"MsgTS\000"
 5418      5300
 5419              	.LASF47:
 5420 1210 4F535F45 		.ascii	"OS_ERR_FATAL_RETURN\000"
 5420      52525F46 
 5420      4154414C 
 5420      5F524554 
 5420      55524E00 
 5421              	.LASF7:
 5422 1224 73686F72 		.ascii	"short unsigned int\000"
 5422      7420756E 
 5422      7369676E 
 5422      65642069 
 5422      6E7400
 5423              	.LASF318:
 5424 1237 4F53466C 		.ascii	"OSFlagQty\000"
 5424      61675174 
 5424      7900
 5425              	.LASF24:
 5426 1241 4F535F46 		.ascii	"OS_FLAGS\000"
 5426      4C414753 
 5426      00
 5427              	.LASF211:
 5428 124a 4D736750 		.ascii	"MsgPtr\000"
 5428      747200
 5429              	.LASF160:
 5430 1251 4F535F45 		.ascii	"OS_ERR_TLS_NO_MORE_AVAIL\000"
 5430      52525F54 
 5430      4C535F4E 
 5430      4F5F4D4F 
 5430      52455F41 
 5431              	.LASF37:
 5432 126a 4F535F45 		.ascii	"OS_ERR_NONE\000"
 5432      52525F4E 
 5432      4F4E4500 
 5433              	.LASF270:
 5434 1276 6F735F70 		.ascii	"os_pend_data\000"
 5434      656E645F 
 5434      64617461 
 5434      00
 5435              	.LASF119:
 5436 1283 4F535F45 		.ascii	"OS_ERR_SCHED_LOCKED\000"
 5436      52525F53 
 5436      43484544 
 5436      5F4C4F43 
 5436      4B454400 
 5437              	.LASF51:
 5438 1297 4F535F45 		.ascii	"OS_ERR_FLUSH_ISR\000"
 5438      52525F46 
 5438      4C555348 
 5438      5F495352 
 5438      00
 5439              	.LASF238:
 5440 12a8 5072696F 		.ascii	"Prio\000"
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 134


 5440      00
 5441              	.LASF14:
 5442 12ad 646F7562 		.ascii	"double\000"
 5442      6C6500
 5443              	.LASF93:
 5444 12b4 4F535F45 		.ascii	"OS_ERR_PEND_ABORT\000"
 5444      52525F50 
 5444      454E445F 
 5444      41424F52 
 5444      5400
 5445              	.LASF255:
 5446 12c6 43505555 		.ascii	"CPUUsage\000"
 5446      73616765 
 5446      00
 5447              	.LASF120:
 5448 12cf 4F535F45 		.ascii	"OS_ERR_SCHED_NOT_LOCKED\000"
 5448      52525F53 
 5448      43484544 
 5448      5F4E4F54 
 5448      5F4C4F43 
 5449              	.LASF104:
 5450 12e7 4F535F45 		.ascii	"OS_ERR_PRIO\000"
 5450      52525F50 
 5450      52494F00 
 5451              	.LASF97:
 5452 12f3 4F535F45 		.ascii	"OS_ERR_PEND_DEL\000"
 5452      52525F50 
 5452      454E445F 
 5452      44454C00 
 5453              	.LASF272:
 5454 1303 50656E64 		.ascii	"PendObjPtr\000"
 5454      4F626A50 
 5454      747200
 5455              	.LASF220:
 5456 130e 4E627245 		.ascii	"NbrEntriesMax\000"
 5456      6E747269 
 5456      65734D61 
 5456      7800
 5457              	.LASF278:
 5458 131c 6F735F70 		.ascii	"os_pend_list\000"
 5458      656E645F 
 5458      6C697374 
 5458      00
 5459              	.LASF74:
 5460 1329 4F535F45 		.ascii	"OS_ERR_MEM_INVALID_SIZE\000"
 5460      52525F4D 
 5460      454D5F49 
 5460      4E56414C 
 5460      49445F53 
 5461              	.LASF151:
 5462 1341 4F535F45 		.ascii	"OS_ERR_TASK_SUSPENDED\000"
 5462      52525F54 
 5462      41534B5F 
 5462      53555350 
 5462      454E4445 
 5463              	.LASF199:
 5464 1357 4F535F46 		.ascii	"OS_FLAG_GRP\000"
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 135


 5464      4C41475F 
 5464      47525000 
 5465              	.LASF123:
 5466 1363 4F535F45 		.ascii	"OS_ERR_SET_ISR\000"
 5466      52525F53 
 5466      45545F49 
 5466      535200
 5467              	.LASF250:
 5468 1372 52656754 		.ascii	"RegTbl\000"
 5468      626C00
 5469              	.LASF122:
 5470 1379 4F535F45 		.ascii	"OS_ERR_SEM_OVF\000"
 5470      52525F53 
 5470      454D5F4F 
 5470      564600
 5471              	.LASF137:
 5472 1388 4F535F45 		.ascii	"OS_ERR_TASK_DEL_IDLE\000"
 5472      52525F54 
 5472      41534B5F 
 5472      44454C5F 
 5472      49444C45 
 5473              	.LASF169:
 5474 139d 4F535F45 		.ascii	"OS_ERR_TIME_GET_ISR\000"
 5474      52525F54 
 5474      494D455F 
 5474      4745545F 
 5474      49535200 
 5475              	.LASF245:
 5476 13b1 54696D65 		.ascii	"TimeQuanta\000"
 5476      5175616E 
 5476      746100
 5477              	.LASF168:
 5478 13bc 4F535F45 		.ascii	"OS_ERR_TIME_DLY_RESUME_ISR\000"
 5478      52525F54 
 5478      494D455F 
 5478      444C595F 
 5478      52455355 
 5479              	.LASF163:
 5480 13d7 4F535F45 		.ascii	"OS_ERR_TICK_PRIO_INVALID\000"
 5480      52525F54 
 5480      49434B5F 
 5480      5052494F 
 5480      5F494E56 
 5481              	.LASF103:
 5482 13f0 4F535F45 		.ascii	"OS_ERR_PRIO_EXIST\000"
 5482      52525F50 
 5482      52494F5F 
 5482      45584953 
 5482      5400
 5483              	.LASF215:
 5484 1402 6F735F6D 		.ascii	"os_msg_q\000"
 5484      73675F71 
 5484      00
 5485              	.LASF75:
 5486 140b 4F535F45 		.ascii	"OS_ERR_MEM_NO_FREE_BLKS\000"
 5486      52525F4D 
 5486      454D5F4E 
ARM GAS  C:\Users\alex\AppData\Local\Temp\cc9CNbDG.s 			page 136


 5486      4F5F4652 
 5486      45455F42 
 5487              	.LASF16:
 5488 1423 4350555F 		.ascii	"CPU_STK\000"
 5488      53544B00 
 5489              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
