ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 18, 4
  12              		.thumb
  13              		.file	"os_task.c"
  14              		.section	.debug_abbrev,"",%progbits
  15              	.Ldebug_abbrev0:
  16              		.section	.debug_info,"",%progbits
  17              	.Ldebug_info0:
  18              		.section	.debug_line,"",%progbits
  19              	.Ldebug_line0:
  20 0000 B0050000 		.text
  20      0200D600 
  20      00000201 
  20      FB0E0D00 
  20      01010101 
  21              	.Ltext0:
  22              		.cfi_sections	.debug_frame
  23              		.section	.text.OSTaskChangePrio,"ax",%progbits
  24              		.align	2
  25              		.global	OSTaskChangePrio
  26              		.thumb
  27              		.thumb_func
  28              		.type	OSTaskChangePrio, %function
  29              	OSTaskChangePrio:
  30              	.LFB0:
  31              		.file 1 "C:\\Micrium\\Software\\uCOS-III\\Source\\os_task.c"
   1:C:\Micrium\Software\uCOS-III\Source\os_task.c **** /*
   2:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
   3:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                                      uC/OS-III
   4:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                                 The Real-Time Kernel
   5:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
   6:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                  (c) Copyright 2009-2012; Micrium, Inc.; Weston, FL
   7:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                           All rights reserved.  Protected by international copyright laws.
   8:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
   9:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                                   TASK MANAGEMENT
  10:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
  11:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * File    : OS_TASK.C
  12:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * By      : JJL
  13:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Version : V3.03.01
  14:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
  15:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * LICENSING TERMS:
  16:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * ---------------
  17:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *           uC/OS-III is provided in source form for FREE short-term evaluation, for educational us
  18:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *           for peaceful research.  If you plan or intend to use uC/OS-III in a commercial applicat
  19:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *           product then, you need to contact Micrium to properly license uC/OS-III for its use in 
  20:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *           application/product.   We provide ALL the source code for your convenience and to help 
  21:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *           experience uC/OS-III.  The fact that the source is provided does NOT mean that you can 
  22:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *           it commercially without paying a licensing fee.
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 2


  23:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
  24:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *           Knowledge of the source code may NOT be used to develop a similar product.
  25:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
  26:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *           Please help us continue to provide the embedded community with the finest software avai
  27:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *           Your honesty is greatly appreciated.
  28:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
  29:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *           You can contact us at www.micrium.com, or by phone at +1 (954) 217-2036.
  30:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
  31:C:\Micrium\Software\uCOS-III\Source\os_task.c **** */
  32:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
  33:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #define  MICRIUM_SOURCE
  34:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #include <os.h>
  35:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
  36:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #ifdef VSC_INCLUDE_SOURCE_FILE_NAMES
  37:C:\Micrium\Software\uCOS-III\Source\os_task.c **** const  CPU_CHAR  *os_task__c = "$Id: $";
  38:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
  39:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
  40:C:\Micrium\Software\uCOS-III\Source\os_task.c **** /*
  41:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
  42:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                                CHANGE PRIORITY OF A TASK
  43:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
  44:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Description: This function allows you to change the priority of a task dynamically.  Note that th
  45:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              priority MUST be available.
  46:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
  47:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Arguments  : p_tcb      is the TCB of the tack to change the priority for
  48:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
  49:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              prio_new   is the new priority
  50:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
  51:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              p_err      is a pointer to an error code returned by this function:
  52:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
  53:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             OS_ERR_NONE                 is the call was successful
  54:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             OS_ERR_PRIO_INVALID         if the priority you specify is higher tha
  55:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                                         (i.e. >= (OS_CFG_PRIO_MAX-1))
  56:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             OS_ERR_STATE_INVALID        if the task is in an invalid state
  57:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             OS_ERR_TASK_CHANGE_PRIO_ISR if you tried to change the task's priorit
  58:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
  59:C:\Micrium\Software\uCOS-III\Source\os_task.c **** */
  60:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
  61:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_TASK_CHANGE_PRIO_EN > 0u
  62:C:\Micrium\Software\uCOS-III\Source\os_task.c **** void  OSTaskChangePrio (OS_TCB   *p_tcb,
  63:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                         OS_PRIO   prio_new,
  64:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                         OS_ERR   *p_err)
  65:C:\Micrium\Software\uCOS-III\Source\os_task.c **** {
  32              		.loc 1 65 0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 24
  35              		@ frame_needed = 1, uses_anonymous_args = 0
  36 0000 80B5     		push	{r7, lr}
  37              	.LCFI0:
  38              		.cfi_def_cfa_offset 8
  39 0002 86B0     		sub	sp, sp, #24
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 32
  42 0004 00AF     		add	r7, sp, #0
  43              		.cfi_offset 14, -4
  44              		.cfi_offset 7, -8
  45              	.LCFI2:
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 3


  46              		.cfi_def_cfa_register 7
  47 0006 F860     		str	r0, [r7, #12]
  48 0008 0B46     		mov	r3, r1
  49 000a 7A60     		str	r2, [r7, #4]
  50 000c FB72     		strb	r3, [r7, #11]
  66:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_BOOLEAN   self;
  67:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_SR_ALLOC();
  51              		.loc 1 67 0
  52 000e 4FF00003 		mov	r3, #0
  53 0012 7B61     		str	r3, [r7, #20]
  68:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
  69:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
  70:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
  71:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #ifdef OS_SAFETY_CRITICAL
  72:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (p_err == (OS_ERR *)0) {
  73:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
  74:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return;
  75:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
  76:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
  77:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
  78:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_CALLED_FROM_ISR_CHK_EN > 0u
  79:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (OSIntNestingCtr > (OS_NESTING_CTR)0) {              /* ---------- CANNOT CREATE A TASK FROM
  54              		.loc 1 79 0
  55 0014 40F20003 		movw	r3, #:lower16:OSIntNestingCtr
  56 0018 C0F20003 		movt	r3, #:upper16:OSIntNestingCtr
  57 001c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
  58 001e 002B     		cmp	r3, #0
  59 0020 04D0     		beq	.L2
  80:C:\Micrium\Software\uCOS-III\Source\os_task.c ****        *p_err = OS_ERR_TASK_CHANGE_PRIO_ISR;
  60              		.loc 1 80 0
  61 0022 7B68     		ldr	r3, [r7, #4]
  62 0024 47F24912 		movw	r2, #29001
  63 0028 1A80     		strh	r2, [r3, #0]	@ movhi
  81:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return;
  64              		.loc 1 81 0
  65 002a 84E0     		b	.L17
  66              	.L2:
  82:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
  83:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
  84:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
  85:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_ISR_POST_DEFERRED_EN > 0u
  86:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (prio_new == 0) {                                    /* Cannot set to IntQueue Task priority
  87:C:\Micrium\Software\uCOS-III\Source\os_task.c ****        *p_err = OS_ERR_PRIO_INVALID;
  88:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return;
  89:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
  90:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
  91:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
  92:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (prio_new >= (OS_CFG_PRIO_MAX - 1u)) {               /* Cannot set to Idle Task priority    
  67              		.loc 1 92 0
  68 002c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
  69 002e 062B     		cmp	r3, #6
  70 0030 04D9     		bls	.L4
  93:C:\Micrium\Software\uCOS-III\Source\os_task.c ****        *p_err = OS_ERR_PRIO_INVALID;
  71              		.loc 1 93 0
  72 0032 7B68     		ldr	r3, [r7, #4]
  73 0034 46F27322 		movw	r2, #25203
  74 0038 1A80     		strh	r2, [r3, #0]	@ movhi
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 4


  94:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return;
  75              		.loc 1 94 0
  76 003a 7CE0     		b	.L17
  77              	.L4:
  95:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
  96:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
  97:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (p_tcb == (OS_TCB *)0) {                             /* See if want to change priority of 's
  78              		.loc 1 97 0
  79 003c FB68     		ldr	r3, [r7, #12]
  80 003e 002B     		cmp	r3, #0
  81 0040 10D1     		bne	.L5
  98:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         CPU_CRITICAL_ENTER();
  82              		.loc 1 98 0
  83 0042 FFF7FEFF 		bl	CPU_SR_Save
  84 0046 0346     		mov	r3, r0
  85 0048 7B61     		str	r3, [r7, #20]
  99:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         p_tcb = OSTCBCurPtr;
  86              		.loc 1 99 0
  87 004a 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
  88 004e C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
  89 0052 1B68     		ldr	r3, [r3, #0]
  90 0054 FB60     		str	r3, [r7, #12]
 100:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         CPU_CRITICAL_EXIT();
  91              		.loc 1 100 0
  92 0056 7869     		ldr	r0, [r7, #20]
  93 0058 FFF7FEFF 		bl	CPU_SR_Restore
 101:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         self  = DEF_TRUE;
  94              		.loc 1 101 0
  95 005c 4FF00103 		mov	r3, #1
  96 0060 FB74     		strb	r3, [r7, #19]
  97 0062 02E0     		b	.L6
  98              	.L5:
 102:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     } else {
 103:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         self  = DEF_FALSE;
  99              		.loc 1 103 0
 100 0064 4FF00003 		mov	r3, #0
 101 0068 FB74     		strb	r3, [r7, #19]
 102              	.L6:
 104:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
 105:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 106:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OS_CRITICAL_ENTER();
 103              		.loc 1 106 0
 104 006a FFF7FEFF 		bl	CPU_SR_Save
 105 006e 0346     		mov	r3, r0
 106 0070 7B61     		str	r3, [r7, #20]
 107:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     switch (p_tcb->TaskState) {
 107              		.loc 1 107 0
 108 0072 FB68     		ldr	r3, [r7, #12]
 109 0074 93F83630 		ldrb	r3, [r3, #54]	@ zero_extendqisi2
 110 0078 072B     		cmp	r3, #7
 111 007a 4AD8     		bhi	.L7
 112 007c 4FF00102 		mov	r2, #1
 113 0080 02FA03F3 		lsl	r3, r2, r3
 114 0084 03F0CC02 		and	r2, r3, #204
 115 0088 002A     		cmp	r2, #0
 116 008a 24D1     		bne	.L10
 117 008c 03F03202 		and	r2, r3, #50
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 5


 118 0090 002A     		cmp	r2, #0
 119 0092 1BD1     		bne	.L9
 120 0094 03F00103 		and	r3, r3, #1
 121 0098 002B     		cmp	r3, #0
 122 009a 3AD0     		beq	.L7
 123              	.L8:
 108:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_TASK_STATE_RDY:
 109:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              OS_RdyListRemove(p_tcb);                       /* Remove from current priority        
 124              		.loc 1 109 0
 125 009c F868     		ldr	r0, [r7, #12]
 126 009e FFF7FEFF 		bl	OS_RdyListRemove
 110:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              p_tcb->Prio = prio_new;                        /* Set new task priority               
 127              		.loc 1 110 0
 128 00a2 FB68     		ldr	r3, [r7, #12]
 129 00a4 FA7A     		ldrb	r2, [r7, #11]
 130 00a6 83F83720 		strb	r2, [r3, #55]
 111:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              OS_PrioInsert(p_tcb->Prio);
 131              		.loc 1 111 0
 132 00aa FB68     		ldr	r3, [r7, #12]
 133 00ac 93F83730 		ldrb	r3, [r3, #55]	@ zero_extendqisi2
 134 00b0 1846     		mov	r0, r3
 135 00b2 FFF7FEFF 		bl	OS_PrioInsert
 112:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              if (self == DEF_TRUE) {
 136              		.loc 1 112 0
 137 00b6 FB7C     		ldrb	r3, [r7, #19]	@ zero_extendqisi2
 138 00b8 012B     		cmp	r3, #1
 139 00ba 03D1     		bne	.L11
 113:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  OS_RdyListInsertHead(p_tcb);
 140              		.loc 1 113 0
 141 00bc F868     		ldr	r0, [r7, #12]
 142 00be FFF7FEFF 		bl	OS_RdyListInsertHead
 114:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              } else {
 115:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  OS_RdyListInsertTail(p_tcb);
 116:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              }
 117:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              break;
 143              		.loc 1 117 0
 144 00c2 2FE0     		b	.L13
 145              	.L11:
 146              		.loc 1 115 0
 147 00c4 F868     		ldr	r0, [r7, #12]
 148 00c6 FFF7FEFF 		bl	OS_RdyListInsertTail
 149              		.loc 1 117 0
 150 00ca 2BE0     		b	.L13
 151              	.L9:
 118:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 119:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_TASK_STATE_DLY:                             /* Nothing to do except change the prio
 120:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_TASK_STATE_SUSPENDED:
 121:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_TASK_STATE_DLY_SUSPENDED:
 122:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              p_tcb->Prio = prio_new;                        /* Set new task priority               
 152              		.loc 1 122 0
 153 00cc FB68     		ldr	r3, [r7, #12]
 154 00ce FA7A     		ldrb	r2, [r7, #11]
 155 00d0 83F83720 		strb	r2, [r3, #55]
 123:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              break;
 156              		.loc 1 123 0
 157 00d4 26E0     		b	.L13
 158              	.L10:
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 6


 124:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 125:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_TASK_STATE_PEND:
 126:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_TASK_STATE_PEND_TIMEOUT:
 127:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_TASK_STATE_PEND_SUSPENDED:
 128:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_TASK_STATE_PEND_TIMEOUT_SUSPENDED:
 129:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              switch (p_tcb->PendOn) {                       /* What to do depends on what we are pe
 159              		.loc 1 129 0
 160 00d6 FB68     		ldr	r3, [r7, #12]
 161 00d8 93F83430 		ldrb	r3, [r3, #52]	@ zero_extendqisi2
 162 00dc 072B     		cmp	r3, #7
 163 00de 20D8     		bhi	.L18
 164 00e0 4FF00102 		mov	r2, #1
 165 00e4 02FA03F3 		lsl	r3, r2, r3
 166 00e8 03F08602 		and	r2, r3, #134
 167 00ec 002A     		cmp	r2, #0
 168 00ee 04D1     		bne	.L15
 169 00f0 03F07803 		and	r3, r3, #120
 170 00f4 002B     		cmp	r3, #0
 171 00f6 06D1     		bne	.L16
 130:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  case OS_TASK_PEND_ON_TASK_Q:               /* Nothing to do except change the prio
 131:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  case OS_TASK_PEND_ON_TASK_SEM:
 132:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  case OS_TASK_PEND_ON_FLAG:
 133:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                       p_tcb->Prio = prio_new;               /* Set new task priority               
 134:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                       break;
 135:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 136:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  case OS_TASK_PEND_ON_MUTEX:
 137:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  case OS_TASK_PEND_ON_MULTI:
 138:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  case OS_TASK_PEND_ON_Q:
 139:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  case OS_TASK_PEND_ON_SEM:
 140:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                       OS_PendListChangePrio(p_tcb,
 141:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                                             prio_new);
 142:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                       break;
 143:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 144:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  default:
 145:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                       break;
 146:C:\Micrium\Software\uCOS-III\Source\os_task.c ****             }
 147:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              break;
 172              		.loc 1 147 0
 173 00f8 14E0     		b	.L13
 174              	.L15:
 175              		.loc 1 133 0
 176 00fa FB68     		ldr	r3, [r7, #12]
 177 00fc FA7A     		ldrb	r2, [r7, #11]
 178 00fe 83F83720 		strb	r2, [r3, #55]
 179              		.loc 1 134 0
 180 0102 00BF     		nop
 181              		.loc 1 147 0
 182 0104 0EE0     		b	.L13
 183              	.L16:
 184              		.loc 1 140 0
 185 0106 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 186 0108 F868     		ldr	r0, [r7, #12]
 187 010a 1946     		mov	r1, r3
 188 010c FFF7FEFF 		bl	OS_PendListChangePrio
 189              		.loc 1 147 0
 190 0110 08E0     		b	.L13
 191              	.L7:
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 7


 148:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 149:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         default:
 150:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              OS_CRITICAL_EXIT();
 192              		.loc 1 150 0
 193 0112 7869     		ldr	r0, [r7, #20]
 194 0114 FFF7FEFF 		bl	CPU_SR_Restore
 151:C:\Micrium\Software\uCOS-III\Source\os_task.c ****             *p_err = OS_ERR_STATE_INVALID;
 195              		.loc 1 151 0
 196 0118 7B68     		ldr	r3, [r7, #4]
 197 011a 46F62D62 		movw	r2, #28205
 198 011e 1A80     		strh	r2, [r3, #0]	@ movhi
 152:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              return;
 199              		.loc 1 152 0
 200 0120 09E0     		b	.L17
 201              	.L18:
 202              		.loc 1 147 0
 203 0122 00BF     		nop
 204              	.L13:
 153:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
 154:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 155:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OS_CRITICAL_EXIT_NO_SCHED();
 205              		.loc 1 155 0
 206 0124 7869     		ldr	r0, [r7, #20]
 207 0126 FFF7FEFF 		bl	CPU_SR_Restore
 156:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 157:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OSSched();                                              /* Run highest priority task ready     
 208              		.loc 1 157 0
 209 012a FFF7FEFF 		bl	OSSched
 158:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 159:C:\Micrium\Software\uCOS-III\Source\os_task.c ****    *p_err = OS_ERR_NONE;
 210              		.loc 1 159 0
 211 012e 7B68     		ldr	r3, [r7, #4]
 212 0130 4FF00002 		mov	r2, #0
 213 0134 1A80     		strh	r2, [r3, #0]	@ movhi
 214              	.L17:
 160:C:\Micrium\Software\uCOS-III\Source\os_task.c **** }
 215              		.loc 1 160 0
 216 0136 07F11807 		add	r7, r7, #24
 217 013a BD46     		mov	sp, r7
 218 013c 80BD     		pop	{r7, pc}
 219              		.cfi_endproc
 220              	.LFE0:
 221              		.size	OSTaskChangePrio, .-OSTaskChangePrio
 222 013e 00BF     		.section	.text.OSTaskCreate,"ax",%progbits
 223              		.align	2
 224              		.global	OSTaskCreate
 225              		.thumb
 226              		.thumb_func
 227              		.type	OSTaskCreate, %function
 228              	OSTaskCreate:
 229              	.LFB1:
 161:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
 162:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 163:C:\Micrium\Software\uCOS-III\Source\os_task.c **** /*$PAGE*/
 164:C:\Micrium\Software\uCOS-III\Source\os_task.c **** /*
 165:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
 166:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                                    CREATE A TASK
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 8


 167:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 168:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Description: This function is used to have uC/OS-III manage the execution of a task.  Tasks can e
 169:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              prior to the start of multitasking or by a running task.  A task cannot be created b
 170:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 171:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Arguments  : p_tcb          is a pointer to the task's TCB
 172:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 173:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              p_name         is a pointer to an ASCII string to provide a name to the task.
 174:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 175:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              p_task         is a pointer to the task's code
 176:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 177:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              p_arg          is a pointer to an optional data area which can be used to pass param
 178:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             the task when the task first executes.  Where the task is concerned i
 179:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             it was invoked and passed the argument 'p_arg' as follows:
 180:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 181:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                 void Task (void *p_arg)
 182:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                 {
 183:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                     for (;;) {
 184:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                         Task code;
 185:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                     }
 186:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                 }
 187:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 188:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              prio           is the task's priority.  A unique priority MUST be assigned to each t
 189:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             lower the number, the higher the priority.
 190:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 191:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              p_stk_base     is a pointer to the base address of the stack (i.e. low address).
 192:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 193:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              stk_limit      is the number of stack elements to set as 'watermark' limit for the s
 194:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             represents the number of CPU_STK entries left before the stack is ful
 195:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             specifying 10% of the 'stk_size' value indicates that the stack limit
 196:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             when the stack reaches 90% full.
 197:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 198:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              stk_size       is the size of the stack in number of elements.  If CPU_STK is set to
 199:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             'stk_size' corresponds to the number of bytes available.  If CPU_STK 
 200:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             CPU_INT16U, 'stk_size' contains the number of 16-bit entries availabl
 201:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             CPU_STK is set to CPU_INT32U, 'stk_size' contains the number of 32-bi
 202:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             available on the stack.
 203:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 204:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              q_size         is the maximum number of messages that can be sent to the task
 205:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 206:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              time_quanta    amount of time (in ticks) for time slice when round-robin between tas
 207:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             the default.
 208:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 209:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              p_ext          is a pointer to a user supplied memory location which is used as a TC
 210:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             For example, this user memory can hold the contents of floating-point
 211:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             during a context switch, the time each task takes to execute, the num
 212:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             the task has been switched-in, etc.
 213:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 214:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              opt            contains additional information (or options) about the behavior of th
 215:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             See OS_OPT_TASK_xxx in OS.H.  Current choices are:
 216:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 217:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                 OS_OPT_TASK_NONE            No option selected
 218:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                 OS_OPT_TASK_STK_CHK         Stack checking to be allowed for the 
 219:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                 OS_OPT_TASK_STK_CLR         Clear the stack when the task is crea
 220:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                 OS_OPT_TASK_SAVE_FP         If the CPU has floating-point registe
 221:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                                             during a context switch.
 222:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                 OS_OPT_TASK_NO_TLS          If the caller doesn't want or need TL
 223:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                                             Storage) support for the task.  If yo
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 9


 224:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                                             option, TLS will be supported by defa
 225:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 226:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              p_err          is a pointer to an error code that will be set during this call.  The
 227:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             to by 'p_err' can be:
 228:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 229:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                 OS_ERR_NONE                    if the function was successful.
 230:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                 OS_ERR_ILLEGAL_CREATE_RUN_TIME if you are trying to create the ta
 231:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                                                   OSSafetyCriticalStart().
 232:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                 OS_ERR_NAME                    if 'p_name' is a NULL pointer
 233:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                 OS_ERR_PRIO_INVALID            if the priority you specify is hig
 234:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                                                   allowed (i.e. >= OS_CFG_PRIO_MA
 235:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                                                if OS_CFG_ISR_POST_DEFERRED_EN is 
 236:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                                                   to use priority 0 which is rese
 237:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                 OS_ERR_STK_INVALID             if you specified a NULL pointer fo
 238:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                 OS_ERR_STK_SIZE_INVALID        if you specified zero for the 'stk
 239:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                 OS_ERR_STK_LIMIT_INVALID       if you specified a 'stk_limit' gre
 240:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                                                   to 'stk_size'
 241:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                 OS_ERR_TASK_CREATE_ISR         if you tried to create a task from
 242:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                 OS_ERR_TASK_INVALID            if you specified a NULL pointer fo
 243:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                 OS_ERR_TCB_INVALID             if you specified a NULL pointer fo
 244:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 245:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Returns    : A pointer to the TCB of the task created.  This pointer must be used as an ID (i.e h
 246:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
 247:C:\Micrium\Software\uCOS-III\Source\os_task.c **** */
 248:C:\Micrium\Software\uCOS-III\Source\os_task.c **** /*$PAGE*/
 249:C:\Micrium\Software\uCOS-III\Source\os_task.c **** void  OSTaskCreate (OS_TCB        *p_tcb,
 250:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     CPU_CHAR      *p_name,
 251:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     OS_TASK_PTR    p_task,
 252:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     void          *p_arg,
 253:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     OS_PRIO        prio,
 254:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     CPU_STK       *p_stk_base,
 255:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     CPU_STK_SIZE   stk_limit,
 256:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     CPU_STK_SIZE   stk_size,
 257:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     OS_MSG_QTY     q_size,
 258:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     OS_TICK        time_quanta,
 259:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     void          *p_ext,
 260:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     OS_OPT         opt,
 261:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     OS_ERR        *p_err)
 262:C:\Micrium\Software\uCOS-III\Source\os_task.c **** {
 230              		.loc 1 262 0
 231              		.cfi_startproc
 232              		@ args = 36, pretend = 0, frame = 40
 233              		@ frame_needed = 1, uses_anonymous_args = 0
 234 0000 80B5     		push	{r7, lr}
 235              	.LCFI3:
 236              		.cfi_def_cfa_offset 8
 237 0002 8CB0     		sub	sp, sp, #48
 238              	.LCFI4:
 239              		.cfi_def_cfa_offset 56
 240 0004 02AF     		add	r7, sp, #8
 241              		.cfi_offset 14, -4
 242              		.cfi_offset 7, -8
 243              	.LCFI5:
 244              		.cfi_def_cfa 7, 48
 245 0006 F860     		str	r0, [r7, #12]
 246 0008 B960     		str	r1, [r7, #8]
 247 000a 7A60     		str	r2, [r7, #4]
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 10


 248 000c 3B60     		str	r3, [r7, #0]
 263:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_STK_SIZE   i;
 264:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_TASK_REG_TBL_SIZE > 0u
 265:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OS_REG_ID      reg_nbr;
 266:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
 267:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if defined(OS_CFG_TLS_TBL_SIZE) && (OS_CFG_TLS_TBL_SIZE > 0u)
 268:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OS_TLS_ID      id;
 269:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
 270:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 271:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_STK       *p_sp;
 272:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_STK       *p_stk_limit;
 273:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_SR_ALLOC();
 249              		.loc 1 273 0
 250 000e 4FF00003 		mov	r3, #0
 251 0012 7B62     		str	r3, [r7, #36]
 274:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 275:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 276:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 277:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #ifdef OS_SAFETY_CRITICAL
 278:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (p_err == (OS_ERR *)0) {
 279:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 280:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return;
 281:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
 282:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
 283:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 284:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #ifdef OS_SAFETY_CRITICAL_IEC61508
 285:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (OSSafetyCriticalStartFlag == DEF_TRUE) {
 286:C:\Micrium\Software\uCOS-III\Source\os_task.c ****        *p_err = OS_ERR_ILLEGAL_CREATE_RUN_TIME;
 287:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return;
 288:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
 289:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
 290:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 291:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_CALLED_FROM_ISR_CHK_EN > 0u
 292:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (OSIntNestingCtr > (OS_NESTING_CTR)0) {              /* ---------- CANNOT CREATE A TASK FROM
 252              		.loc 1 292 0
 253 0014 40F20003 		movw	r3, #:lower16:OSIntNestingCtr
 254 0018 C0F20003 		movt	r3, #:upper16:OSIntNestingCtr
 255 001c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 256 001e 002B     		cmp	r3, #0
 257 0020 04D0     		beq	.L20
 293:C:\Micrium\Software\uCOS-III\Source\os_task.c ****        *p_err = OS_ERR_TASK_CREATE_ISR;
 258              		.loc 1 293 0
 259 0022 3B6D     		ldr	r3, [r7, #80]
 260 0024 47F24A12 		movw	r2, #29002
 261 0028 1A80     		strh	r2, [r3, #0]	@ movhi
 294:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return;
 262              		.loc 1 294 0
 263 002a 03E1     		b	.L37
 264              	.L20:
 295:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
 296:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
 297:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 298:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_ARG_CHK_EN > 0u                                  /* ---------------- VALIDATE ARGUMENTS 
 299:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (p_tcb == (OS_TCB *)0) {                             /* User must supply a valid OS_TCB     
 265              		.loc 1 299 0
 266 002c FB68     		ldr	r3, [r7, #12]
 267 002e 002B     		cmp	r3, #0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 11


 268 0030 04D1     		bne	.L22
 300:C:\Micrium\Software\uCOS-III\Source\os_task.c ****        *p_err = OS_ERR_TCB_INVALID;
 269              		.loc 1 300 0
 270 0032 3B6D     		ldr	r3, [r7, #80]
 271 0034 47F2AD12 		movw	r2, #29101
 272 0038 1A80     		strh	r2, [r3, #0]	@ movhi
 301:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return;
 273              		.loc 1 301 0
 274 003a FBE0     		b	.L37
 275              	.L22:
 302:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
 303:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (p_task == (OS_TASK_PTR)0) {                         /* User must supply a valid task       
 276              		.loc 1 303 0
 277 003c 7B68     		ldr	r3, [r7, #4]
 278 003e 002B     		cmp	r3, #0
 279 0040 04D1     		bne	.L23
 304:C:\Micrium\Software\uCOS-III\Source\os_task.c ****        *p_err = OS_ERR_TASK_INVALID;
 280              		.loc 1 304 0
 281 0042 3B6D     		ldr	r3, [r7, #80]
 282 0044 47F24F12 		movw	r2, #29007
 283 0048 1A80     		strh	r2, [r3, #0]	@ movhi
 305:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return;
 284              		.loc 1 305 0
 285 004a F3E0     		b	.L37
 286              	.L23:
 306:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
 307:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (p_stk_base == (CPU_STK *)0) {                       /* User must supply a valid stack base 
 287              		.loc 1 307 0
 288 004c 7B6B     		ldr	r3, [r7, #52]
 289 004e 002B     		cmp	r3, #0
 290 0050 04D1     		bne	.L24
 308:C:\Micrium\Software\uCOS-III\Source\os_task.c ****        *p_err = OS_ERR_STK_INVALID;
 291              		.loc 1 308 0
 292 0052 3B6D     		ldr	r3, [r7, #80]
 293 0054 46F62F62 		movw	r2, #28207
 294 0058 1A80     		strh	r2, [r3, #0]	@ movhi
 309:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return;
 295              		.loc 1 309 0
 296 005a EBE0     		b	.L37
 297              	.L24:
 310:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
 311:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (stk_size < OSCfg_StkSizeMin) {                      /* User must supply a valid minimum sta
 298              		.loc 1 311 0
 299 005c 40F20003 		movw	r3, #:lower16:OSCfg_StkSizeMin
 300 0060 C0F20003 		movt	r3, #:upper16:OSCfg_StkSizeMin
 301 0064 1B68     		ldr	r3, [r3, #0]
 302 0066 FA6B     		ldr	r2, [r7, #60]
 303 0068 9A42     		cmp	r2, r3
 304 006a 04D2     		bcs	.L25
 312:C:\Micrium\Software\uCOS-III\Source\os_task.c ****        *p_err = OS_ERR_STK_SIZE_INVALID;
 305              		.loc 1 312 0
 306 006c 3B6D     		ldr	r3, [r7, #80]
 307 006e 46F63062 		movw	r2, #28208
 308 0072 1A80     		strh	r2, [r3, #0]	@ movhi
 313:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return;
 309              		.loc 1 313 0
 310 0074 DEE0     		b	.L37
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 12


 311              	.L25:
 314:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
 315:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (stk_limit >= stk_size) {                            /* User must supply a valid stack limit
 312              		.loc 1 315 0
 313 0076 BA6B     		ldr	r2, [r7, #56]
 314 0078 FB6B     		ldr	r3, [r7, #60]
 315 007a 9A42     		cmp	r2, r3
 316 007c 04D3     		bcc	.L26
 316:C:\Micrium\Software\uCOS-III\Source\os_task.c ****        *p_err = OS_ERR_STK_LIMIT_INVALID;
 317              		.loc 1 316 0
 318 007e 3B6D     		ldr	r3, [r7, #80]
 319 0080 46F63162 		movw	r2, #28209
 320 0084 1A80     		strh	r2, [r3, #0]	@ movhi
 317:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return;
 321              		.loc 1 317 0
 322 0086 D5E0     		b	.L37
 323              	.L26:
 318:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
 319:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (prio >= OS_CFG_PRIO_MAX) {                          /* Priority must be within 0 and OS_CFG
 324              		.loc 1 319 0
 325 0088 97F83030 		ldrb	r3, [r7, #48]	@ zero_extendqisi2
 326 008c 072B     		cmp	r3, #7
 327 008e 04D9     		bls	.L27
 320:C:\Micrium\Software\uCOS-III\Source\os_task.c ****        *p_err = OS_ERR_PRIO_INVALID;
 328              		.loc 1 320 0
 329 0090 3B6D     		ldr	r3, [r7, #80]
 330 0092 46F27322 		movw	r2, #25203
 331 0096 1A80     		strh	r2, [r3, #0]	@ movhi
 321:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return;
 332              		.loc 1 321 0
 333 0098 CCE0     		b	.L37
 334              	.L27:
 322:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
 323:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
 324:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 325:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_ISR_POST_DEFERRED_EN > 0u
 326:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (prio == (OS_PRIO)0) {
 327:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         if (p_tcb != &OSIntQTaskTCB) {
 328:C:\Micrium\Software\uCOS-III\Source\os_task.c ****            *p_err = OS_ERR_PRIO_INVALID;                    /* Not allowed to use priority 0       
 329:C:\Micrium\Software\uCOS-III\Source\os_task.c ****             return;
 330:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         }
 331:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
 332:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
 333:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 334:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (prio == (OS_CFG_PRIO_MAX - 1u)) {
 335              		.loc 1 334 0
 336 009a 97F83030 		ldrb	r3, [r7, #48]	@ zero_extendqisi2
 337 009e 072B     		cmp	r3, #7
 338 00a0 0BD1     		bne	.L28
 335:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         if (p_tcb != &OSIdleTaskTCB) {
 339              		.loc 1 335 0
 340 00a2 FA68     		ldr	r2, [r7, #12]
 341 00a4 40F20003 		movw	r3, #:lower16:OSIdleTaskTCB
 342 00a8 C0F20003 		movt	r3, #:upper16:OSIdleTaskTCB
 343 00ac 9A42     		cmp	r2, r3
 344 00ae 04D0     		beq	.L28
 336:C:\Micrium\Software\uCOS-III\Source\os_task.c ****            *p_err = OS_ERR_PRIO_INVALID;                    /* Not allowed to use same priority as 
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 13


 345              		.loc 1 336 0
 346 00b0 3B6D     		ldr	r3, [r7, #80]
 347 00b2 46F27322 		movw	r2, #25203
 348 00b6 1A80     		strh	r2, [r3, #0]	@ movhi
 337:C:\Micrium\Software\uCOS-III\Source\os_task.c ****             return;
 349              		.loc 1 337 0
 350 00b8 BCE0     		b	.L37
 351              	.L28:
 338:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         }
 339:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
 340:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 341:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OS_TaskInitTCB(p_tcb);                                  /* Initialize the TCB to default values
 352              		.loc 1 341 0
 353 00ba F868     		ldr	r0, [r7, #12]
 354 00bc FFF7FEFF 		bl	OS_TaskInitTCB
 342:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 343:C:\Micrium\Software\uCOS-III\Source\os_task.c ****    *p_err = OS_ERR_NONE;
 355              		.loc 1 343 0
 356 00c0 3B6D     		ldr	r3, [r7, #80]
 357 00c2 4FF00002 		mov	r2, #0
 358 00c6 1A80     		strh	r2, [r3, #0]	@ movhi
 344:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                                                             /* --------------- CLEAR THE TASK'S STA
 345:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if ((opt & OS_OPT_TASK_STK_CHK) != (OS_OPT)0) {         /* See if stack checking has been enabl
 359              		.loc 1 345 0
 360 00c8 B7F84C30 		ldrh	r3, [r7, #76]
 361 00cc 03F00103 		and	r3, r3, #1
 362 00d0 DBB2     		uxtb	r3, r3
 363 00d2 002B     		cmp	r3, #0
 364 00d4 1BD0     		beq	.L29
 346:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         if ((opt & OS_OPT_TASK_STK_CLR) != (OS_OPT)0) {     /* See if stack needs to be cleared    
 365              		.loc 1 346 0
 366 00d6 B7F84C30 		ldrh	r3, [r7, #76]
 367 00da 03F00203 		and	r3, r3, #2
 368 00de 002B     		cmp	r3, #0
 369 00e0 15D0     		beq	.L29
 347:C:\Micrium\Software\uCOS-III\Source\os_task.c ****             p_sp = p_stk_base;
 370              		.loc 1 347 0
 371 00e2 7B6B     		ldr	r3, [r7, #52]
 372 00e4 FB61     		str	r3, [r7, #28]
 348:C:\Micrium\Software\uCOS-III\Source\os_task.c ****             for (i = 0u; i < stk_size; i++) {               /* Stack grows from HIGH to LOW memory 
 373              		.loc 1 348 0
 374 00e6 4FF00003 		mov	r3, #0
 375 00ea 7B61     		str	r3, [r7, #20]
 376 00ec 0BE0     		b	.L30
 377              	.L31:
 349:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                *p_sp = (CPU_STK)0;                          /* Clear from bottom of stack and up!  
 378              		.loc 1 349 0
 379 00ee FB69     		ldr	r3, [r7, #28]
 380 00f0 4FF00002 		mov	r2, #0
 381 00f4 1A60     		str	r2, [r3, #0]
 350:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                 p_sp++;
 382              		.loc 1 350 0
 383 00f6 FB69     		ldr	r3, [r7, #28]
 384 00f8 03F10403 		add	r3, r3, #4
 385 00fc FB61     		str	r3, [r7, #28]
 386              		.loc 1 348 0
 387 00fe 7B69     		ldr	r3, [r7, #20]
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 14


 388 0100 03F10103 		add	r3, r3, #1
 389 0104 7B61     		str	r3, [r7, #20]
 390              	.L30:
 391 0106 7A69     		ldr	r2, [r7, #20]
 392 0108 FB6B     		ldr	r3, [r7, #60]
 393 010a 9A42     		cmp	r2, r3
 394 010c EFD3     		bcc	.L31
 395              	.L29:
 351:C:\Micrium\Software\uCOS-III\Source\os_task.c ****             }
 352:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         }
 353:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
 354:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                                                             /* ------- INITIALIZE THE STACK FRAME O
 355:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if (CPU_CFG_STK_GROWTH == CPU_STK_GROWTH_HI_TO_LO)
 356:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_stk_limit = p_stk_base + stk_limit;
 396              		.loc 1 356 0
 397 010e BB6B     		ldr	r3, [r7, #56]
 398 0110 4FEA8303 		lsl	r3, r3, #2
 399 0114 7A6B     		ldr	r2, [r7, #52]
 400 0116 1344     		add	r3, r2, r3
 401 0118 3B62     		str	r3, [r7, #32]
 357:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #else
 358:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_stk_limit = p_stk_base + (stk_size - 1u) - stk_limit;
 359:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
 360:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 361:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_sp = OSTaskStkInit(p_task,
 402              		.loc 1 361 0
 403 011a FB6B     		ldr	r3, [r7, #60]
 404 011c 0093     		str	r3, [sp, #0]
 405 011e B7F84C30 		ldrh	r3, [r7, #76]
 406 0122 0193     		str	r3, [sp, #4]
 407 0124 7868     		ldr	r0, [r7, #4]
 408 0126 3968     		ldr	r1, [r7, #0]
 409 0128 7A6B     		ldr	r2, [r7, #52]
 410 012a 3B6A     		ldr	r3, [r7, #32]
 411 012c FFF7FEFF 		bl	OSTaskStkInit
 412 0130 0346     		mov	r3, r0
 413 0132 FB61     		str	r3, [r7, #28]
 362:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                          p_arg,
 363:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                          p_stk_base,
 364:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                          p_stk_limit,
 365:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                          stk_size,
 366:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                          opt);
 367:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 368:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                                                             /* -------------- INITIALIZE THE TCB FI
 369:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->TaskEntryAddr = p_task;                          /* Save task entry point address       
 414              		.loc 1 369 0
 415 0134 FB68     		ldr	r3, [r7, #12]
 416 0136 7A68     		ldr	r2, [r7, #4]
 417 0138 9A62     		str	r2, [r3, #40]
 370:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->TaskEntryArg  = p_arg;                           /* Save task entry argument            
 418              		.loc 1 370 0
 419 013a FB68     		ldr	r3, [r7, #12]
 420 013c 3A68     		ldr	r2, [r7, #0]
 421 013e DA62     		str	r2, [r3, #44]
 371:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 372:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->NamePtr       = p_name;                          /* Save task name                      
 422              		.loc 1 372 0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 15


 423 0140 FB68     		ldr	r3, [r7, #12]
 424 0142 BA68     		ldr	r2, [r7, #8]
 425 0144 1A62     		str	r2, [r3, #32]
 373:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 374:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->Prio          = prio;                            /* Save the task's priority            
 426              		.loc 1 374 0
 427 0146 FB68     		ldr	r3, [r7, #12]
 428 0148 97F83020 		ldrb	r2, [r7, #48]
 429 014c 83F83720 		strb	r2, [r3, #55]
 375:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 376:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->StkPtr        = p_sp;                            /* Save the new top-of-stack pointer   
 430              		.loc 1 376 0
 431 0150 FB68     		ldr	r3, [r7, #12]
 432 0152 FA69     		ldr	r2, [r7, #28]
 433 0154 1A60     		str	r2, [r3, #0]
 377:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->StkLimitPtr   = p_stk_limit;                     /* Save the stack limit pointer        
 434              		.loc 1 377 0
 435 0156 FB68     		ldr	r3, [r7, #12]
 436 0158 3A6A     		ldr	r2, [r7, #32]
 437 015a 9A60     		str	r2, [r3, #8]
 378:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 379:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->TimeQuanta    = time_quanta;                     /* Save the #ticks for time slice (0 me
 438              		.loc 1 379 0
 439 015c FB68     		ldr	r3, [r7, #12]
 440 015e 7A6C     		ldr	r2, [r7, #68]
 441 0160 5A65     		str	r2, [r3, #84]
 380:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_SCHED_ROUND_ROBIN_EN > 0u
 381:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (time_quanta == (OS_TICK)0) {
 442              		.loc 1 381 0
 443 0162 7B6C     		ldr	r3, [r7, #68]
 444 0164 002B     		cmp	r3, #0
 445 0166 07D1     		bne	.L32
 382:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         p_tcb->TimeQuantaCtr = OSSchedRoundRobinDfltTimeQuanta;
 446              		.loc 1 382 0
 447 0168 40F20003 		movw	r3, #:lower16:OSSchedRoundRobinDfltTimeQuanta
 448 016c C0F20003 		movt	r3, #:upper16:OSSchedRoundRobinDfltTimeQuanta
 449 0170 1A68     		ldr	r2, [r3, #0]
 450 0172 FB68     		ldr	r3, [r7, #12]
 451 0174 9A65     		str	r2, [r3, #88]
 452 0176 02E0     		b	.L33
 453              	.L32:
 383:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     } else {
 384:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         p_tcb->TimeQuantaCtr = time_quanta;
 454              		.loc 1 384 0
 455 0178 FB68     		ldr	r3, [r7, #12]
 456 017a 7A6C     		ldr	r2, [r7, #68]
 457 017c 9A65     		str	r2, [r3, #88]
 458              	.L33:
 385:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
 386:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
 387:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->ExtPtr        = p_ext;                           /* Save pointer to TCB extension       
 459              		.loc 1 387 0
 460 017e FB68     		ldr	r3, [r7, #12]
 461 0180 BA6C     		ldr	r2, [r7, #72]
 462 0182 5A60     		str	r2, [r3, #4]
 388:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->StkBasePtr    = p_stk_base;                      /* Save pointer to the base address of 
 463              		.loc 1 388 0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 16


 464 0184 FB68     		ldr	r3, [r7, #12]
 465 0186 7A6B     		ldr	r2, [r7, #52]
 466 0188 5A62     		str	r2, [r3, #36]
 389:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->StkSize       = stk_size;                        /* Save the stack size (in number of CP
 467              		.loc 1 389 0
 468 018a FB68     		ldr	r3, [r7, #12]
 469 018c FA6B     		ldr	r2, [r7, #60]
 470 018e 9A63     		str	r2, [r3, #56]
 390:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->Opt           = opt;                             /* Save task options                   
 471              		.loc 1 390 0
 472 0190 FB68     		ldr	r3, [r7, #12]
 473 0192 B7F84C20 		ldrh	r2, [r7, #76]	@ movhi
 474 0196 9A87     		strh	r2, [r3, #60]	@ movhi
 391:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 392:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_TASK_REG_TBL_SIZE > 0u
 393:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     for (reg_nbr = 0u; reg_nbr < OS_CFG_TASK_REG_TBL_SIZE; reg_nbr++) {
 475              		.loc 1 393 0
 476 0198 4FF00003 		mov	r3, #0
 477 019c FB76     		strb	r3, [r7, #27]
 478 019e 0DE0     		b	.L34
 479              	.L35:
 394:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         p_tcb->RegTbl[reg_nbr] = (OS_REG)0;
 480              		.loc 1 394 0
 481 01a0 FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 482 01a2 FA68     		ldr	r2, [r7, #12]
 483 01a4 03F11E03 		add	r3, r3, #30
 484 01a8 4FEA8303 		lsl	r3, r3, #2
 485 01ac 1344     		add	r3, r3, r2
 486 01ae 4FF00002 		mov	r2, #0
 487 01b2 5A60     		str	r2, [r3, #4]
 488              		.loc 1 393 0
 489 01b4 FB7E     		ldrb	r3, [r7, #27]
 490 01b6 03F10103 		add	r3, r3, #1
 491 01ba FB76     		strb	r3, [r7, #27]
 492              	.L34:
 493 01bc FB7E     		ldrb	r3, [r7, #27]	@ zero_extendqisi2
 494 01be 002B     		cmp	r3, #0
 495 01c0 EED0     		beq	.L35
 395:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
 396:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
 397:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 398:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_TASK_Q_EN > 0u
 399:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OS_MsgQInit(&p_tcb->MsgQ,                               /* Initialize the task's message queue 
 496              		.loc 1 399 0
 497 01c2 FB68     		ldr	r3, [r7, #12]
 498 01c4 03F16402 		add	r2, r3, #100
 499 01c8 B7F84030 		ldrh	r3, [r7, #64]
 500 01cc 1046     		mov	r0, r2
 501 01ce 1946     		mov	r1, r3
 502 01d0 FFF7FEFF 		bl	OS_MsgQInit
 400:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                 q_size);
 401:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #else
 402:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     (void)&q_size;
 403:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
 404:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 405:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OSTaskCreateHook(p_tcb);                                /* Call user defined hook              
 503              		.loc 1 405 0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 17


 504 01d4 F868     		ldr	r0, [r7, #12]
 505 01d6 FFF7FEFF 		bl	OSTaskCreateHook
 406:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 407:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if defined(OS_CFG_TLS_TBL_SIZE) && (OS_CFG_TLS_TBL_SIZE > 0u)
 408:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     for (id = 0u; id < OS_CFG_TLS_TBL_SIZE; id++) {
 409:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         p_tcb->TLS_Tbl[id] = (OS_TLS)0;
 410:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
 411:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OS_TLS_TaskCreate(p_tcb);                               /* Call TLS hook                       
 412:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
 413:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                                                             /* --------------- ADD TASK TO READY LI
 414:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OS_CRITICAL_ENTER();
 506              		.loc 1 414 0
 507 01da FFF7FEFF 		bl	CPU_SR_Save
 508 01de 0346     		mov	r3, r0
 509 01e0 7B62     		str	r3, [r7, #36]
 415:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OS_PrioInsert(p_tcb->Prio);
 510              		.loc 1 415 0
 511 01e2 FB68     		ldr	r3, [r7, #12]
 512 01e4 93F83730 		ldrb	r3, [r3, #55]	@ zero_extendqisi2
 513 01e8 1846     		mov	r0, r3
 514 01ea FFF7FEFF 		bl	OS_PrioInsert
 416:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OS_RdyListInsertTail(p_tcb);
 515              		.loc 1 416 0
 516 01ee F868     		ldr	r0, [r7, #12]
 517 01f0 FFF7FEFF 		bl	OS_RdyListInsertTail
 417:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 418:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_DBG_EN > 0u
 419:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OS_TaskDbgListAdd(p_tcb);
 518              		.loc 1 419 0
 519 01f4 F868     		ldr	r0, [r7, #12]
 520 01f6 FFF7FEFF 		bl	OS_TaskDbgListAdd
 420:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
 421:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 422:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OSTaskQty++;                                            /* Increment the #tasks counter        
 521              		.loc 1 422 0
 522 01fa 40F20003 		movw	r3, #:lower16:OSTaskQty
 523 01fe C0F20003 		movt	r3, #:upper16:OSTaskQty
 524 0202 1B88     		ldrh	r3, [r3, #0]
 525 0204 03F10103 		add	r3, r3, #1
 526 0208 9AB2     		uxth	r2, r3
 527 020a 40F20003 		movw	r3, #:lower16:OSTaskQty
 528 020e C0F20003 		movt	r3, #:upper16:OSTaskQty
 529 0212 1A80     		strh	r2, [r3, #0]	@ movhi
 423:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 424:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (OSRunning != OS_STATE_OS_RUNNING) {                 /* Return if multitasking has not start
 530              		.loc 1 424 0
 531 0214 40F20003 		movw	r3, #:lower16:OSRunning
 532 0218 C0F20003 		movt	r3, #:upper16:OSRunning
 533 021c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 534 021e 012B     		cmp	r3, #1
 535 0220 03D0     		beq	.L36
 425:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         OS_CRITICAL_EXIT();
 536              		.loc 1 425 0
 537 0222 786A     		ldr	r0, [r7, #36]
 538 0224 FFF7FEFF 		bl	CPU_SR_Restore
 426:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return;
 539              		.loc 1 426 0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 18


 540 0228 04E0     		b	.L37
 541              	.L36:
 427:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
 428:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 429:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OS_CRITICAL_EXIT_NO_SCHED();
 542              		.loc 1 429 0
 543 022a 786A     		ldr	r0, [r7, #36]
 544 022c FFF7FEFF 		bl	CPU_SR_Restore
 430:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 431:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OSSched();
 545              		.loc 1 431 0
 546 0230 FFF7FEFF 		bl	OSSched
 547              	.L37:
 432:C:\Micrium\Software\uCOS-III\Source\os_task.c **** }
 548              		.loc 1 432 0
 549 0234 07F12807 		add	r7, r7, #40
 550 0238 BD46     		mov	sp, r7
 551 023a 80BD     		pop	{r7, pc}
 552              		.cfi_endproc
 553              	.LFE1:
 554              		.size	OSTaskCreate, .-OSTaskCreate
 555              		.section	.text.OSTaskDel,"ax",%progbits
 556              		.align	2
 557              		.global	OSTaskDel
 558              		.thumb
 559              		.thumb_func
 560              		.type	OSTaskDel, %function
 561              	OSTaskDel:
 562              	.LFB2:
 433:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 434:C:\Micrium\Software\uCOS-III\Source\os_task.c **** /*$PAGE*/
 435:C:\Micrium\Software\uCOS-III\Source\os_task.c **** /*
 436:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
 437:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                                     DELETE A TASK
 438:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 439:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Description: This function allows you to delete a task.  The calling task can delete itself by sp
 440:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              pointer for 'p_tcb'.  The deleted task is returned to the dormant state and can be r
 441:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              creating the deleted task again.
 442:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 443:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Arguments  : p_tcb      is the TCB of the tack to delete
 444:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 445:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              p_err      is a pointer to an error code returned by this function:
 446:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 447:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             OS_ERR_NONE                  if the call is successful
 448:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             OS_ERR_STATE_INVALID         if the state of the task is invalid
 449:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             OS_ERR_TASK_DEL_IDLE         if you attempted to delete uC/OS-III's i
 450:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             OS_ERR_TASK_DEL_INVALID      if you attempted to delete uC/OS-III's I
 451:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             OS_ERR_TASK_DEL_ISR          if you tried to delete a task from an IS
 452:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 453:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Note(s)    : 1) 'p_err' gets set to OS_ERR_NONE before OSSched() to allow the returned error code
 454:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                 for a task that is deleting itself. In this case, 'p_err' MUST point to a global 
 455:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                 accessed by another task.
 456:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
 457:C:\Micrium\Software\uCOS-III\Source\os_task.c **** */
 458:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 459:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_TASK_DEL_EN > 0u
 460:C:\Micrium\Software\uCOS-III\Source\os_task.c **** void  OSTaskDel (OS_TCB  *p_tcb,
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 19


 461:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  OS_ERR  *p_err)
 462:C:\Micrium\Software\uCOS-III\Source\os_task.c **** {
 563              		.loc 1 462 0
 564              		.cfi_startproc
 565              		@ args = 0, pretend = 0, frame = 16
 566              		@ frame_needed = 1, uses_anonymous_args = 0
 567 0000 80B5     		push	{r7, lr}
 568              	.LCFI6:
 569              		.cfi_def_cfa_offset 8
 570 0002 84B0     		sub	sp, sp, #16
 571              	.LCFI7:
 572              		.cfi_def_cfa_offset 24
 573 0004 00AF     		add	r7, sp, #0
 574              		.cfi_offset 14, -4
 575              		.cfi_offset 7, -8
 576              	.LCFI8:
 577              		.cfi_def_cfa_register 7
 578 0006 7860     		str	r0, [r7, #4]
 579 0008 3960     		str	r1, [r7, #0]
 463:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_SR_ALLOC();
 580              		.loc 1 463 0
 581 000a 4FF00003 		mov	r3, #0
 582 000e FB60     		str	r3, [r7, #12]
 464:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 465:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 466:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 467:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #ifdef OS_SAFETY_CRITICAL
 468:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (p_err == (OS_ERR *)0) {
 469:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 470:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return;
 471:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
 472:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
 473:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 474:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_CALLED_FROM_ISR_CHK_EN > 0u
 475:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (OSIntNestingCtr > (OS_NESTING_CTR)0) {              /* See if trying to delete from ISR    
 583              		.loc 1 475 0
 584 0010 40F20003 		movw	r3, #:lower16:OSIntNestingCtr
 585 0014 C0F20003 		movt	r3, #:upper16:OSIntNestingCtr
 586 0018 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 587 001a 002B     		cmp	r3, #0
 588 001c 04D0     		beq	.L39
 476:C:\Micrium\Software\uCOS-III\Source\os_task.c ****        *p_err = OS_ERR_TASK_DEL_ISR;
 589              		.loc 1 476 0
 590 001e 3B68     		ldr	r3, [r7, #0]
 591 0020 47F24E12 		movw	r2, #29006
 592 0024 1A80     		strh	r2, [r3, #0]	@ movhi
 477:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return;
 593              		.loc 1 477 0
 594 0026 8FE0     		b	.L53
 595              	.L39:
 478:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
 479:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
 480:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 481:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (p_tcb == &OSIdleTaskTCB) {                          /* Not allowed to delete the idle task 
 596              		.loc 1 481 0
 597 0028 7A68     		ldr	r2, [r7, #4]
 598 002a 40F20003 		movw	r3, #:lower16:OSIdleTaskTCB
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 20


 599 002e C0F20003 		movt	r3, #:upper16:OSIdleTaskTCB
 600 0032 9A42     		cmp	r2, r3
 601 0034 04D1     		bne	.L41
 482:C:\Micrium\Software\uCOS-III\Source\os_task.c ****        *p_err = OS_ERR_TASK_DEL_IDLE;
 602              		.loc 1 482 0
 603 0036 3B68     		ldr	r3, [r7, #0]
 604 0038 47F24C12 		movw	r2, #29004
 605 003c 1A80     		strh	r2, [r3, #0]	@ movhi
 483:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return;
 606              		.loc 1 483 0
 607 003e 83E0     		b	.L53
 608              	.L41:
 484:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
 485:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 486:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_ISR_POST_DEFERRED_EN > 0u
 487:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (p_tcb == &OSIntQTaskTCB) {                          /* Cannot delete the ISR handler task  
 488:C:\Micrium\Software\uCOS-III\Source\os_task.c ****        *p_err = OS_ERR_TASK_DEL_INVALID;
 489:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return;
 490:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
 491:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
 492:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 493:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (p_tcb == (OS_TCB *)0) {                             /* Delete 'Self'?                      
 609              		.loc 1 493 0
 610 0040 7B68     		ldr	r3, [r7, #4]
 611 0042 002B     		cmp	r3, #0
 612 0044 0CD1     		bne	.L42
 494:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         CPU_CRITICAL_ENTER();
 613              		.loc 1 494 0
 614 0046 FFF7FEFF 		bl	CPU_SR_Save
 615 004a 0346     		mov	r3, r0
 616 004c FB60     		str	r3, [r7, #12]
 495:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         p_tcb  = OSTCBCurPtr;                               /* Yes.                                
 617              		.loc 1 495 0
 618 004e 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 619 0052 C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 620 0056 1B68     		ldr	r3, [r3, #0]
 621 0058 7B60     		str	r3, [r7, #4]
 496:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         CPU_CRITICAL_EXIT();
 622              		.loc 1 496 0
 623 005a F868     		ldr	r0, [r7, #12]
 624 005c FFF7FEFF 		bl	CPU_SR_Restore
 625              	.L42:
 497:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
 498:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 499:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OS_CRITICAL_ENTER();
 626              		.loc 1 499 0
 627 0060 FFF7FEFF 		bl	CPU_SR_Save
 628 0064 0346     		mov	r3, r0
 629 0066 FB60     		str	r3, [r7, #12]
 500:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     switch (p_tcb->TaskState) {
 630              		.loc 1 500 0
 631 0068 7B68     		ldr	r3, [r7, #4]
 632 006a 93F83630 		ldrb	r3, [r3, #54]	@ zero_extendqisi2
 633 006e 072B     		cmp	r3, #7
 634 0070 35D8     		bhi	.L43
 635 0072 01A2     		adr	r2, .L48
 636 0074 52F823F0 		ldr	pc, [r2, r3, lsl #2]
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 21


 637              		.align	2
 638              	.L48:
 639 0078 99000000 		.word	.L44+1
 640 007c A1000000 		.word	.L45+1
 641 0080 A9000000 		.word	.L46+1
 642 0084 A9000000 		.word	.L46+1
 643 0088 EF000000 		.word	.L54+1
 644 008c A1000000 		.word	.L45+1
 645 0090 A9000000 		.word	.L46+1
 646 0094 A9000000 		.word	.L46+1
 647              	.L44:
 501:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_TASK_STATE_RDY:
 502:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              OS_RdyListRemove(p_tcb);
 648              		.loc 1 502 0
 649 0098 7868     		ldr	r0, [r7, #4]
 650 009a FFF7FEFF 		bl	OS_RdyListRemove
 503:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              break;
 651              		.loc 1 503 0
 652 009e 29E0     		b	.L49
 653              	.L45:
 504:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 505:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_TASK_STATE_SUSPENDED:
 506:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              break;
 507:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 508:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_TASK_STATE_DLY:                             /* Task is only delayed, not on any wai
 509:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_TASK_STATE_DLY_SUSPENDED:
 510:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              OS_TickListRemove(p_tcb);
 654              		.loc 1 510 0
 655 00a0 7868     		ldr	r0, [r7, #4]
 656 00a2 FFF7FEFF 		bl	OS_TickListRemove
 511:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              break;
 657              		.loc 1 511 0
 658 00a6 25E0     		b	.L49
 659              	.L46:
 512:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 513:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_TASK_STATE_PEND:
 514:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_TASK_STATE_PEND_SUSPENDED:
 515:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_TASK_STATE_PEND_TIMEOUT:
 516:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_TASK_STATE_PEND_TIMEOUT_SUSPENDED:
 517:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              OS_TickListRemove(p_tcb);
 660              		.loc 1 517 0
 661 00a8 7868     		ldr	r0, [r7, #4]
 662 00aa FFF7FEFF 		bl	OS_TickListRemove
 518:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              switch (p_tcb->PendOn) {                       /* See what we are pending on          
 663              		.loc 1 518 0
 664 00ae 7B68     		ldr	r3, [r7, #4]
 665 00b0 93F83430 		ldrb	r3, [r3, #52]	@ zero_extendqisi2
 666 00b4 072B     		cmp	r3, #7
 667 00b6 1CD8     		bhi	.L55
 668 00b8 4FF00102 		mov	r2, #1
 669 00bc 02FA03F3 		lsl	r3, r2, r3
 670 00c0 03F08502 		and	r2, r3, #133
 671 00c4 002A     		cmp	r2, #0
 672 00c6 04D1     		bne	.L51
 673 00c8 03F07A03 		and	r3, r3, #122
 674 00cc 002B     		cmp	r3, #0
 675 00ce 02D1     		bne	.L52
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 22


 519:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  case OS_TASK_PEND_ON_NOTHING:
 520:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  case OS_TASK_PEND_ON_TASK_Q:               /* There is no wait list for these two 
 521:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  case OS_TASK_PEND_ON_TASK_SEM:
 522:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                       break;
 523:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 524:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  case OS_TASK_PEND_ON_FLAG:                 /* Remove from wait list               
 525:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  case OS_TASK_PEND_ON_MULTI:
 526:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  case OS_TASK_PEND_ON_MUTEX:
 527:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  case OS_TASK_PEND_ON_Q:
 528:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  case OS_TASK_PEND_ON_SEM:
 529:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                       OS_PendListRemove(p_tcb);
 530:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                       break;
 531:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 532:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  default:
 533:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                       break;
 534:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              }
 535:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              break;
 676              		.loc 1 535 0
 677 00d0 10E0     		b	.L49
 678              	.L51:
 679              		.loc 1 522 0
 680 00d2 00BF     		nop
 681              		.loc 1 535 0
 682 00d4 0EE0     		b	.L49
 683              	.L52:
 684              		.loc 1 529 0
 685 00d6 7868     		ldr	r0, [r7, #4]
 686 00d8 FFF7FEFF 		bl	OS_PendListRemove
 687              		.loc 1 535 0
 688 00dc 0AE0     		b	.L49
 689              	.L43:
 536:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 537:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         default:
 538:C:\Micrium\Software\uCOS-III\Source\os_task.c ****             OS_CRITICAL_EXIT();
 690              		.loc 1 538 0
 691 00de F868     		ldr	r0, [r7, #12]
 692 00e0 FFF7FEFF 		bl	CPU_SR_Restore
 539:C:\Micrium\Software\uCOS-III\Source\os_task.c ****            *p_err = OS_ERR_STATE_INVALID;
 693              		.loc 1 539 0
 694 00e4 3B68     		ldr	r3, [r7, #0]
 695 00e6 46F62D62 		movw	r2, #28205
 696 00ea 1A80     		strh	r2, [r3, #0]	@ movhi
 540:C:\Micrium\Software\uCOS-III\Source\os_task.c ****             return;
 697              		.loc 1 540 0
 698 00ec 2CE0     		b	.L53
 699              	.L54:
 700              		.loc 1 506 0
 701 00ee 00BF     		nop
 702 00f0 00E0     		b	.L49
 703              	.L55:
 704              		.loc 1 535 0
 705 00f2 00BF     		nop
 706              	.L49:
 541:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
 542:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 543:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_TASK_Q_EN > 0u
 544:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     (void)OS_MsgQFreeAll(&p_tcb->MsgQ);                     /* Free task's message queue messages  
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 23


 707              		.loc 1 544 0
 708 00f4 7B68     		ldr	r3, [r7, #4]
 709 00f6 03F16403 		add	r3, r3, #100
 710 00fa 1846     		mov	r0, r3
 711 00fc FFF7FEFF 		bl	OS_MsgQFreeAll
 545:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
 546:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 547:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OSTaskDelHook(p_tcb);                                   /* Call user defined hook              
 712              		.loc 1 547 0
 713 0100 7868     		ldr	r0, [r7, #4]
 714 0102 FFF7FEFF 		bl	OSTaskDelHook
 548:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 549:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if defined(OS_CFG_TLS_TBL_SIZE) && (OS_CFG_TLS_TBL_SIZE > 0u)
 550:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OS_TLS_TaskDel(p_tcb);                                  /* Call TLS hook                       
 551:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
 552:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 553:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_DBG_EN > 0u
 554:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OS_TaskDbgListRemove(p_tcb);
 715              		.loc 1 554 0
 716 0106 7868     		ldr	r0, [r7, #4]
 717 0108 FFF7FEFF 		bl	OS_TaskDbgListRemove
 555:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
 556:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OSTaskQty--;                                            /* One less task being managed         
 718              		.loc 1 556 0
 719 010c 40F20003 		movw	r3, #:lower16:OSTaskQty
 720 0110 C0F20003 		movt	r3, #:upper16:OSTaskQty
 721 0114 1B88     		ldrh	r3, [r3, #0]
 722 0116 03F1FF33 		add	r3, r3, #-1
 723 011a 9AB2     		uxth	r2, r3
 724 011c 40F20003 		movw	r3, #:lower16:OSTaskQty
 725 0120 C0F20003 		movt	r3, #:upper16:OSTaskQty
 726 0124 1A80     		strh	r2, [r3, #0]	@ movhi
 557:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 558:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OS_TaskInitTCB(p_tcb);                                  /* Initialize the TCB to default values
 727              		.loc 1 558 0
 728 0126 7868     		ldr	r0, [r7, #4]
 729 0128 FFF7FEFF 		bl	OS_TaskInitTCB
 559:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->TaskState = (OS_STATE)OS_TASK_STATE_DEL;         /* Indicate that the task was deleted  
 730              		.loc 1 559 0
 731 012c 7B68     		ldr	r3, [r7, #4]
 732 012e 4FF0FF32 		mov	r2, #-1
 733 0132 83F83620 		strb	r2, [r3, #54]
 560:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 561:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OS_CRITICAL_EXIT_NO_SCHED();
 734              		.loc 1 561 0
 735 0136 F868     		ldr	r0, [r7, #12]
 736 0138 FFF7FEFF 		bl	CPU_SR_Restore
 562:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 563:C:\Micrium\Software\uCOS-III\Source\os_task.c ****    *p_err = OS_ERR_NONE;                                    /* See Note #1.                        
 737              		.loc 1 563 0
 738 013c 3B68     		ldr	r3, [r7, #0]
 739 013e 4FF00002 		mov	r2, #0
 740 0142 1A80     		strh	r2, [r3, #0]	@ movhi
 564:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 565:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OSSched();                                              /* Find new highest priority task      
 741              		.loc 1 565 0
 742 0144 FFF7FEFF 		bl	OSSched
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 24


 743              	.L53:
 566:C:\Micrium\Software\uCOS-III\Source\os_task.c **** }
 744              		.loc 1 566 0
 745 0148 07F11007 		add	r7, r7, #16
 746 014c BD46     		mov	sp, r7
 747 014e 80BD     		pop	{r7, pc}
 748              		.cfi_endproc
 749              	.LFE2:
 750              		.size	OSTaskDel, .-OSTaskDel
 751              		.section	.text.OSTaskQFlush,"ax",%progbits
 752              		.align	2
 753              		.global	OSTaskQFlush
 754              		.thumb
 755              		.thumb_func
 756              		.type	OSTaskQFlush, %function
 757              	OSTaskQFlush:
 758              	.LFB3:
 567:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
 568:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 569:C:\Micrium\Software\uCOS-III\Source\os_task.c **** /*$PAGE*/
 570:C:\Micrium\Software\uCOS-III\Source\os_task.c **** /*
 571:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
 572:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                                    FLUSH TASK's QUEUE
 573:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 574:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Description: This function is used to flush the task's internal message queue.
 575:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 576:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Arguments  : p_tcb       is a pointer to the task's OS_TCB.  Specifying a NULL pointer indicates 
 577:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                          flush the message queue of the calling task.
 578:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 579:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              p_err       is a pointer to a variable that will contain an error code returned by t
 580:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 581:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                              OS_ERR_NONE           upon success
 582:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                              OS_ERR_FLUSH_ISR      if you called this function from an ISR
 583:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 584:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Returns     : The number of entries freed from the queue
 585:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 586:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Note(s)     : 1) You should use this function with great care because, when to flush the queue, y
 587:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                  references to what the queue entries are pointing to and thus, you could cause '
 588:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                  other words, the data you are pointing to that's being referenced by the queue e
 589:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                  likely, need to be de-allocated (i.e. freed).
 590:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
 591:C:\Micrium\Software\uCOS-III\Source\os_task.c **** */
 592:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 593:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_TASK_Q_EN > 0u
 594:C:\Micrium\Software\uCOS-III\Source\os_task.c **** OS_MSG_QTY  OSTaskQFlush (OS_TCB  *p_tcb,
 595:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                           OS_ERR  *p_err)
 596:C:\Micrium\Software\uCOS-III\Source\os_task.c **** {
 759              		.loc 1 596 0
 760              		.cfi_startproc
 761              		@ args = 0, pretend = 0, frame = 16
 762              		@ frame_needed = 1, uses_anonymous_args = 0
 763 0000 80B5     		push	{r7, lr}
 764              	.LCFI9:
 765              		.cfi_def_cfa_offset 8
 766 0002 84B0     		sub	sp, sp, #16
 767              	.LCFI10:
 768              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 25


 769 0004 00AF     		add	r7, sp, #0
 770              		.cfi_offset 14, -4
 771              		.cfi_offset 7, -8
 772              	.LCFI11:
 773              		.cfi_def_cfa_register 7
 774 0006 7860     		str	r0, [r7, #4]
 775 0008 3960     		str	r1, [r7, #0]
 597:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OS_MSG_QTY  entries;
 598:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_SR_ALLOC();
 776              		.loc 1 598 0
 777 000a 4FF00003 		mov	r3, #0
 778 000e FB60     		str	r3, [r7, #12]
 599:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 600:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 601:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 602:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #ifdef OS_SAFETY_CRITICAL
 603:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (p_err == (OS_ERR *)0) {
 604:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 605:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return ((OS_MSG_QTY)0);
 606:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
 607:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
 608:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 609:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_CALLED_FROM_ISR_CHK_EN > 0u
 610:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (OSIntNestingCtr > (OS_NESTING_CTR)0) {              /* Can't flush a message queue from an 
 779              		.loc 1 610 0
 780 0010 40F20003 		movw	r3, #:lower16:OSIntNestingCtr
 781 0014 C0F20003 		movt	r3, #:upper16:OSIntNestingCtr
 782 0018 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 783 001a 002B     		cmp	r3, #0
 784 001c 06D0     		beq	.L57
 611:C:\Micrium\Software\uCOS-III\Source\os_task.c ****        *p_err = OS_ERR_FLUSH_ISR;
 785              		.loc 1 611 0
 786 001e 3B68     		ldr	r3, [r7, #0]
 787 0020 4FF46C52 		mov	r2, #15104
 788 0024 1A80     		strh	r2, [r3, #0]	@ movhi
 612:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return ((OS_MSG_QTY)0);
 789              		.loc 1 612 0
 790 0026 4FF00003 		mov	r3, #0
 791 002a 23E0     		b	.L58
 792              	.L57:
 613:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
 614:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
 615:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 616:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (p_tcb == (OS_TCB *)0) {                             /* Flush message queue of calling task?
 793              		.loc 1 616 0
 794 002c 7B68     		ldr	r3, [r7, #4]
 795 002e 002B     		cmp	r3, #0
 796 0030 0CD1     		bne	.L59
 617:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         CPU_CRITICAL_ENTER();
 797              		.loc 1 617 0
 798 0032 FFF7FEFF 		bl	CPU_SR_Save
 799 0036 0346     		mov	r3, r0
 800 0038 FB60     		str	r3, [r7, #12]
 618:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         p_tcb = OSTCBCurPtr;
 801              		.loc 1 618 0
 802 003a 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 803 003e C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 26


 804 0042 1B68     		ldr	r3, [r3, #0]
 805 0044 7B60     		str	r3, [r7, #4]
 619:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         CPU_CRITICAL_EXIT();
 806              		.loc 1 619 0
 807 0046 F868     		ldr	r0, [r7, #12]
 808 0048 FFF7FEFF 		bl	CPU_SR_Restore
 809              	.L59:
 620:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
 621:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 622:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OS_CRITICAL_ENTER();
 810              		.loc 1 622 0
 811 004c FFF7FEFF 		bl	CPU_SR_Save
 812 0050 0346     		mov	r3, r0
 813 0052 FB60     		str	r3, [r7, #12]
 623:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     entries = OS_MsgQFreeAll(&p_tcb->MsgQ);                 /* Return all OS_MSGs to the OS_MSG poo
 814              		.loc 1 623 0
 815 0054 7B68     		ldr	r3, [r7, #4]
 816 0056 03F16403 		add	r3, r3, #100
 817 005a 1846     		mov	r0, r3
 818 005c FFF7FEFF 		bl	OS_MsgQFreeAll
 819 0060 0346     		mov	r3, r0
 820 0062 7B81     		strh	r3, [r7, #10]	@ movhi
 624:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OS_CRITICAL_EXIT();
 821              		.loc 1 624 0
 822 0064 F868     		ldr	r0, [r7, #12]
 823 0066 FFF7FEFF 		bl	CPU_SR_Restore
 625:C:\Micrium\Software\uCOS-III\Source\os_task.c ****    *p_err   = OS_ERR_NONE;
 824              		.loc 1 625 0
 825 006a 3B68     		ldr	r3, [r7, #0]
 826 006c 4FF00002 		mov	r2, #0
 827 0070 1A80     		strh	r2, [r3, #0]	@ movhi
 626:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     return (entries);
 828              		.loc 1 626 0
 829 0072 7B89     		ldrh	r3, [r7, #10]
 830              	.L58:
 627:C:\Micrium\Software\uCOS-III\Source\os_task.c **** }
 831              		.loc 1 627 0
 832 0074 1846     		mov	r0, r3
 833 0076 07F11007 		add	r7, r7, #16
 834 007a BD46     		mov	sp, r7
 835 007c 80BD     		pop	{r7, pc}
 836              		.cfi_endproc
 837              	.LFE3:
 838              		.size	OSTaskQFlush, .-OSTaskQFlush
 839 007e 00BF     		.section	.text.OSTaskQPend,"ax",%progbits
 840              		.align	2
 841              		.global	OSTaskQPend
 842              		.thumb
 843              		.thumb_func
 844              		.type	OSTaskQPend, %function
 845              	OSTaskQPend:
 846              	.LFB4:
 628:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
 629:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 630:C:\Micrium\Software\uCOS-III\Source\os_task.c **** /*$PAGE*/
 631:C:\Micrium\Software\uCOS-III\Source\os_task.c **** /*
 632:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 27


 633:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                                  WAIT FOR A MESSAGE
 634:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 635:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Description: This function causes the current task to wait for a message to be posted to it.
 636:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 637:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Arguments  : timeout       is an optional timeout period (in clock ticks).  If non-zero, your tas
 638:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                            message to arrive up to the amount of time specified by this argument.
 639:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                            If you specify 0, however, your task will wait forever or, until a mes
 640:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 641:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              opt           determines whether the user wants to block if the task's queue is empt
 642:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 643:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                OS_OPT_PEND_BLOCKING
 644:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                OS_OPT_PEND_NON_BLOCKING
 645:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 646:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              p_msg_size    is a pointer to a variable that will receive the size of the message
 647:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 648:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              p_ts          is a pointer to a variable that will receive the timestamp of when the
 649:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                            received.  If you pass a NULL pointer (i.e. (CPU_TS *)0) then you will
 650:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                            timestamp.  In other words, passing a NULL pointer is valid and indica
 651:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                            need the timestamp.
 652:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 653:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              p_err         is a pointer to where an error message will be deposited.  Possible er
 654:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                            messages are:
 655:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 656:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                OS_ERR_NONE               The call was successful and your task re
 657:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                OS_ERR_PEND_ABORT
 658:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                OS_ERR_PEND_ISR           If you called this function from an ISR 
 659:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                OS_ERR_PEND_WOULD_BLOCK   If you specified non-blocking but the qu
 660:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                OS_ERR_Q_EMPTY
 661:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                OS_ERR_SCHED_LOCKED       If the scheduler is locked
 662:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                OS_ERR_TIMEOUT            A message was not received within the sp
 663:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                                          would lead to a suspension.
 664:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 665:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Returns    : A pointer to the message received or a NULL pointer upon error.
 666:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 667:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Note(s)    : 1) It is possible to receive NULL pointers when there are no errors.
 668:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
 669:C:\Micrium\Software\uCOS-III\Source\os_task.c **** */
 670:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 671:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_TASK_Q_EN > 0u
 672:C:\Micrium\Software\uCOS-III\Source\os_task.c **** void  *OSTaskQPend (OS_TICK       timeout,
 673:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     OS_OPT        opt,
 674:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     OS_MSG_SIZE  *p_msg_size,
 675:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     CPU_TS       *p_ts,
 676:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     OS_ERR       *p_err)
 677:C:\Micrium\Software\uCOS-III\Source\os_task.c **** {
 847              		.loc 1 677 0
 848              		.cfi_startproc
 849              		@ args = 4, pretend = 0, frame = 32
 850              		@ frame_needed = 1, uses_anonymous_args = 0
 851 0000 90B5     		push	{r4, r7, lr}
 852              	.LCFI12:
 853              		.cfi_def_cfa_offset 12
 854 0002 89B0     		sub	sp, sp, #36
 855              	.LCFI13:
 856              		.cfi_def_cfa_offset 48
 857 0004 00AF     		add	r7, sp, #0
 858              		.cfi_offset 14, -4
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 28


 859              		.cfi_offset 7, -8
 860              		.cfi_offset 4, -12
 861              	.LCFI14:
 862              		.cfi_def_cfa_register 7
 863 0006 F860     		str	r0, [r7, #12]
 864 0008 7A60     		str	r2, [r7, #4]
 865 000a 3B60     		str	r3, [r7, #0]
 866 000c 0B46     		mov	r3, r1	@ movhi
 867 000e 7B81     		strh	r3, [r7, #10]	@ movhi
 678:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OS_MSG_Q     *p_msg_q;
 679:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     void         *p_void;
 680:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_SR_ALLOC();
 868              		.loc 1 680 0
 869 0010 4FF00003 		mov	r3, #0
 870 0014 FB61     		str	r3, [r7, #28]
 681:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 682:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 683:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 684:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #ifdef OS_SAFETY_CRITICAL
 685:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (p_err == (OS_ERR *)0) {
 686:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 687:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return ((void *)0);
 688:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
 689:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
 690:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 691:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_CALLED_FROM_ISR_CHK_EN > 0u
 692:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (OSIntNestingCtr > (OS_NESTING_CTR)0) {              /* Can't Pend from an ISR              
 871              		.loc 1 692 0
 872 0016 40F20003 		movw	r3, #:lower16:OSIntNestingCtr
 873 001a C0F20003 		movt	r3, #:upper16:OSIntNestingCtr
 874 001e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 875 0020 002B     		cmp	r3, #0
 876 0022 06D0     		beq	.L62
 693:C:\Micrium\Software\uCOS-III\Source\os_task.c ****        *p_err = OS_ERR_PEND_ISR;
 877              		.loc 1 693 0
 878 0024 3B6B     		ldr	r3, [r7, #48]
 879 0026 46F2AE12 		movw	r2, #25006
 880 002a 1A80     		strh	r2, [r3, #0]	@ movhi
 694:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return ((void *)0);
 881              		.loc 1 694 0
 882 002c 4FF00003 		mov	r3, #0
 883 0030 1AE1     		b	.L63
 884              	.L62:
 695:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
 696:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
 697:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 698:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_ARG_CHK_EN > 0u                                  /* ---------------- VALIDATE ARGUMENTS 
 699:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (p_msg_size == (OS_MSG_SIZE *)0) {                   /* User must supply a valid destination
 885              		.loc 1 699 0
 886 0032 7B68     		ldr	r3, [r7, #4]
 887 0034 002B     		cmp	r3, #0
 888 0036 06D1     		bne	.L64
 700:C:\Micrium\Software\uCOS-III\Source\os_task.c ****        *p_err = OS_ERR_PTR_INVALID;
 889              		.loc 1 700 0
 890 0038 3B6B     		ldr	r3, [r7, #48]
 891 003a 46F2D522 		movw	r2, #25301
 892 003e 1A80     		strh	r2, [r3, #0]	@ movhi
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 29


 701:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return ((void *)0);
 893              		.loc 1 701 0
 894 0040 4FF00003 		mov	r3, #0
 895 0044 10E1     		b	.L63
 896              	.L64:
 702:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
 703:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     switch (opt) {                                          /* User must supply a valid option     
 897              		.loc 1 703 0
 898 0046 7B89     		ldrh	r3, [r7, #10]
 899 0048 002B     		cmp	r3, #0
 900 004a 02D0     		beq	.L66
 901 004c B3F5004F 		cmp	r3, #32768
 902 0050 03D1     		bne	.L81
 903              	.L66:
 704:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_OPT_PEND_BLOCKING:
 705:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_OPT_PEND_NON_BLOCKING:
 706:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              break;
 707:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 708:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         default:
 709:C:\Micrium\Software\uCOS-III\Source\os_task.c ****             *p_err = OS_ERR_OPT_INVALID;
 710:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              return ((void *)0);
 711:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
 712:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
 713:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 714:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (p_ts != (CPU_TS *)0) {
 904              		.loc 1 714 0
 905 0052 3B68     		ldr	r3, [r7, #0]
 906 0054 002B     		cmp	r3, #0
 907 0056 07D1     		bne	.L67
 908 0058 0AE0     		b	.L68
 909              	.L81:
 910              		.loc 1 709 0
 911 005a 3B6B     		ldr	r3, [r7, #48]
 912 005c 45F62562 		movw	r2, #24101
 913 0060 1A80     		strh	r2, [r3, #0]	@ movhi
 914              		.loc 1 710 0
 915 0062 4FF00003 		mov	r3, #0
 916 0066 FFE0     		b	.L63
 917              	.L67:
 715:C:\Micrium\Software\uCOS-III\Source\os_task.c ****        *p_ts  = (CPU_TS  )0;                                /* Initialize the returned timestamp   
 918              		.loc 1 715 0
 919 0068 3B68     		ldr	r3, [r7, #0]
 920 006a 4FF00002 		mov	r2, #0
 921 006e 1A60     		str	r2, [r3, #0]
 922              	.L68:
 716:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
 717:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 718:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_CRITICAL_ENTER();
 923              		.loc 1 718 0
 924 0070 FFF7FEFF 		bl	CPU_SR_Save
 925 0074 0346     		mov	r3, r0
 926 0076 FB61     		str	r3, [r7, #28]
 719:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_msg_q = &OSTCBCurPtr->MsgQ;                           /* Any message waiting in the message q
 927              		.loc 1 719 0
 928 0078 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 929 007c C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 930 0080 1B68     		ldr	r3, [r3, #0]
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 30


 931 0082 03F16403 		add	r3, r3, #100
 932 0086 7B61     		str	r3, [r7, #20]
 720:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_void  = OS_MsgQGet(p_msg_q,
 933              		.loc 1 720 0
 934 0088 7869     		ldr	r0, [r7, #20]
 935 008a 7968     		ldr	r1, [r7, #4]
 936 008c 3A68     		ldr	r2, [r7, #0]
 937 008e 3B6B     		ldr	r3, [r7, #48]
 938 0090 FFF7FEFF 		bl	OS_MsgQGet
 939 0094 0346     		mov	r3, r0
 940 0096 BB61     		str	r3, [r7, #24]
 721:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                          p_msg_size,
 722:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                          p_ts,
 723:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                          p_err);
 724:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (*p_err == OS_ERR_NONE) {
 941              		.loc 1 724 0
 942 0098 3B6B     		ldr	r3, [r7, #48]
 943 009a 1B88     		ldrh	r3, [r3, #0]
 944 009c 002B     		cmp	r3, #0
 945 009e 2ED1     		bne	.L69
 725:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_TASK_PROFILE_EN > 0u
 726:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         if (p_ts != (CPU_TS *)0) {
 946              		.loc 1 726 0
 947 00a0 3B68     		ldr	r3, [r7, #0]
 948 00a2 002B     		cmp	r3, #0
 949 00a4 26D0     		beq	.L70
 727:C:\Micrium\Software\uCOS-III\Source\os_task.c ****             OSTCBCurPtr->MsgQPendTime = OS_TS_GET() - *p_ts;
 950              		.loc 1 727 0
 951 00a6 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 952 00aa C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 953 00ae 1C68     		ldr	r4, [r3, #0]
 954 00b0 FFF7FEFF 		bl	CPU_TS_TmrRd
 955 00b4 0246     		mov	r2, r0
 956 00b6 3B68     		ldr	r3, [r7, #0]
 957 00b8 1B68     		ldr	r3, [r3, #0]
 958 00ba C3EB0203 		rsb	r3, r3, r2
 959 00be 6367     		str	r3, [r4, #116]
 728:C:\Micrium\Software\uCOS-III\Source\os_task.c ****             if (OSTCBCurPtr->MsgQPendTimeMax < OSTCBCurPtr->MsgQPendTime) {
 960              		.loc 1 728 0
 961 00c0 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 962 00c4 C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 963 00c8 1B68     		ldr	r3, [r3, #0]
 964 00ca 9A6F     		ldr	r2, [r3, #120]
 965 00cc 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 966 00d0 C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 967 00d4 1B68     		ldr	r3, [r3, #0]
 968 00d6 5B6F     		ldr	r3, [r3, #116]
 969 00d8 9A42     		cmp	r2, r3
 970 00da 0BD2     		bcs	.L70
 729:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                 OSTCBCurPtr->MsgQPendTimeMax = OSTCBCurPtr->MsgQPendTime;
 971              		.loc 1 729 0
 972 00dc 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 973 00e0 C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 974 00e4 1A68     		ldr	r2, [r3, #0]
 975 00e6 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 976 00ea C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 977 00ee 1B68     		ldr	r3, [r3, #0]
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 31


 978 00f0 5B6F     		ldr	r3, [r3, #116]
 979 00f2 9367     		str	r3, [r2, #120]
 980              	.L70:
 730:C:\Micrium\Software\uCOS-III\Source\os_task.c ****             }
 731:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         }
 732:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
 733:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         CPU_CRITICAL_EXIT();
 981              		.loc 1 733 0
 982 00f4 F869     		ldr	r0, [r7, #28]
 983 00f6 FFF7FEFF 		bl	CPU_SR_Restore
 734:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return (p_void);                                    /* Yes, Return oldest message received 
 984              		.loc 1 734 0
 985 00fa BB69     		ldr	r3, [r7, #24]
 986 00fc B4E0     		b	.L63
 987              	.L69:
 735:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
 736:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 737:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if ((opt & OS_OPT_PEND_NON_BLOCKING) != (OS_OPT)0) {    /* Caller wants to block if not availab
 988              		.loc 1 737 0
 989 00fe 7B89     		ldrh	r3, [r7, #10]
 990 0100 1BB2     		sxth	r3, r3
 991 0102 002B     		cmp	r3, #0
 992 0104 09DA     		bge	.L71
 738:C:\Micrium\Software\uCOS-III\Source\os_task.c ****        *p_err = OS_ERR_PEND_WOULD_BLOCK;                    /* No                                  
 993              		.loc 1 738 0
 994 0106 3B6B     		ldr	r3, [r7, #48]
 995 0108 46F2B012 		movw	r2, #25008
 996 010c 1A80     		strh	r2, [r3, #0]	@ movhi
 739:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         CPU_CRITICAL_EXIT();
 997              		.loc 1 739 0
 998 010e F869     		ldr	r0, [r7, #28]
 999 0110 FFF7FEFF 		bl	CPU_SR_Restore
 740:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return ((void *)0);
 1000              		.loc 1 740 0
 1001 0114 4FF00003 		mov	r3, #0
 1002 0118 A6E0     		b	.L63
 1003              	.L71:
 741:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     } else {                                                /* Yes                                 
 742:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         if (OSSchedLockNestingCtr > (OS_NESTING_CTR)0) {    /*     Can't block when the scheduler i
 1004              		.loc 1 742 0
 1005 011a 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 1006 011e C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 1007 0122 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1008 0124 002B     		cmp	r3, #0
 1009 0126 09D0     		beq	.L72
 743:C:\Micrium\Software\uCOS-III\Source\os_task.c ****             CPU_CRITICAL_EXIT();
 1010              		.loc 1 743 0
 1011 0128 F869     		ldr	r0, [r7, #28]
 1012 012a FFF7FEFF 		bl	CPU_SR_Restore
 744:C:\Micrium\Software\uCOS-III\Source\os_task.c ****            *p_err = OS_ERR_SCHED_LOCKED;
 1013              		.loc 1 744 0
 1014 012e 3B6B     		ldr	r3, [r7, #48]
 1015 0130 46F66352 		movw	r2, #28003
 1016 0134 1A80     		strh	r2, [r3, #0]	@ movhi
 745:C:\Micrium\Software\uCOS-III\Source\os_task.c ****             return ((void *)0);
 1017              		.loc 1 745 0
 1018 0136 4FF00003 		mov	r3, #0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 32


 1019 013a 95E0     		b	.L63
 1020              	.L72:
 746:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         }
 747:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
 748:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                                                             /* Lock the scheduler/re-enable interru
 749:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OS_CRITICAL_ENTER_CPU_EXIT();
 750:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OS_Pend((OS_PEND_DATA *)0,                              /* Block task pending on Message       
 1021              		.loc 1 750 0
 1022 013c 4FF00000 		mov	r0, #0
 1023 0140 4FF00001 		mov	r1, #0
 1024 0144 4FF00202 		mov	r2, #2
 1025 0148 FB68     		ldr	r3, [r7, #12]
 1026 014a FFF7FEFF 		bl	OS_Pend
 751:C:\Micrium\Software\uCOS-III\Source\os_task.c ****             (OS_PEND_OBJ  *)0,
 752:C:\Micrium\Software\uCOS-III\Source\os_task.c ****             (OS_STATE      )OS_TASK_PEND_ON_TASK_Q,
 753:C:\Micrium\Software\uCOS-III\Source\os_task.c ****             (OS_TICK       )timeout);
 754:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OS_CRITICAL_EXIT_NO_SCHED();
 1027              		.loc 1 754 0
 1028 014e F869     		ldr	r0, [r7, #28]
 1029 0150 FFF7FEFF 		bl	CPU_SR_Restore
 755:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 756:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OSSched();                                              /* Find the next highest priority task 
 1030              		.loc 1 756 0
 1031 0154 FFF7FEFF 		bl	OSSched
 757:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 758:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_CRITICAL_ENTER();
 1032              		.loc 1 758 0
 1033 0158 FFF7FEFF 		bl	CPU_SR_Save
 1034 015c 0346     		mov	r3, r0
 1035 015e FB61     		str	r3, [r7, #28]
 759:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     switch (OSTCBCurPtr->PendStatus) {
 1036              		.loc 1 759 0
 1037 0160 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 1038 0164 C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 1039 0168 1B68     		ldr	r3, [r3, #0]
 1040 016a 93F83530 		ldrb	r3, [r3, #53]	@ zero_extendqisi2
 1041 016e 002B     		cmp	r3, #0
 1042 0170 02D0     		beq	.L74
 1043 0172 012B     		cmp	r3, #1
 1044 0174 4BD0     		beq	.L75
 1045 0176 5DE0     		b	.L82
 1046              	.L74:
 760:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_STATUS_PEND_OK:                             /* Extract message from TCB (Put there 
 761:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              p_void      = OSTCBCurPtr->MsgPtr;
 1047              		.loc 1 761 0
 1048 0178 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 1049 017c C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 1050 0180 1B68     		ldr	r3, [r3, #0]
 1051 0182 DB6D     		ldr	r3, [r3, #92]
 1052 0184 BB61     		str	r3, [r7, #24]
 762:C:\Micrium\Software\uCOS-III\Source\os_task.c ****             *p_msg_size  = OSTCBCurPtr->MsgSize;
 1053              		.loc 1 762 0
 1054 0186 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 1055 018a C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 1056 018e 1B68     		ldr	r3, [r3, #0]
 1057 0190 B3F86020 		ldrh	r2, [r3, #96]
 1058 0194 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 33


 1059 0196 1A80     		strh	r2, [r3, #0]	@ movhi
 763:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              if (p_ts != (CPU_TS *)0) {
 1060              		.loc 1 763 0
 1061 0198 3B68     		ldr	r3, [r7, #0]
 1062 019a 002B     		cmp	r3, #0
 1063 019c 32D0     		beq	.L76
 764:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                 *p_ts  = OSTCBCurPtr->TS;
 1064              		.loc 1 764 0
 1065 019e 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 1066 01a2 C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 1067 01a6 1B68     		ldr	r3, [r3, #0]
 1068 01a8 1A6C     		ldr	r2, [r3, #64]
 1069 01aa 3B68     		ldr	r3, [r7, #0]
 1070 01ac 1A60     		str	r2, [r3, #0]
 765:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_TASK_PROFILE_EN > 0u
 766:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                 OSTCBCurPtr->MsgQPendTime = OS_TS_GET() - OSTCBCurPtr->TS;
 1071              		.loc 1 766 0
 1072 01ae 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 1073 01b2 C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 1074 01b6 1C68     		ldr	r4, [r3, #0]
 1075 01b8 FFF7FEFF 		bl	CPU_TS_TmrRd
 1076 01bc 0246     		mov	r2, r0
 1077 01be 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 1078 01c2 C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 1079 01c6 1B68     		ldr	r3, [r3, #0]
 1080 01c8 1B6C     		ldr	r3, [r3, #64]
 1081 01ca C3EB0203 		rsb	r3, r3, r2
 1082 01ce 6367     		str	r3, [r4, #116]
 767:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                 if (OSTCBCurPtr->MsgQPendTimeMax < OSTCBCurPtr->MsgQPendTime) {
 1083              		.loc 1 767 0
 1084 01d0 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 1085 01d4 C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 1086 01d8 1B68     		ldr	r3, [r3, #0]
 1087 01da 9A6F     		ldr	r2, [r3, #120]
 1088 01dc 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 1089 01e0 C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 1090 01e4 1B68     		ldr	r3, [r3, #0]
 1091 01e6 5B6F     		ldr	r3, [r3, #116]
 1092 01e8 9A42     		cmp	r2, r3
 1093 01ea 0BD2     		bcs	.L76
 768:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     OSTCBCurPtr->MsgQPendTimeMax = OSTCBCurPtr->MsgQPendTime;
 1094              		.loc 1 768 0
 1095 01ec 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 1096 01f0 C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 1097 01f4 1A68     		ldr	r2, [r3, #0]
 1098 01f6 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 1099 01fa C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 1100 01fe 1B68     		ldr	r3, [r3, #0]
 1101 0200 5B6F     		ldr	r3, [r3, #116]
 1102 0202 9367     		str	r3, [r2, #120]
 1103              	.L76:
 769:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                 }
 770:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
 771:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              }
 772:C:\Micrium\Software\uCOS-III\Source\os_task.c ****             *p_err = OS_ERR_NONE;
 1104              		.loc 1 772 0
 1105 0204 3B6B     		ldr	r3, [r7, #48]
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 34


 1106 0206 4FF00002 		mov	r2, #0
 1107 020a 1A80     		strh	r2, [r3, #0]	@ movhi
 773:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              break;
 1108              		.loc 1 773 0
 1109 020c 28E0     		b	.L77
 1110              	.L75:
 774:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 775:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_STATUS_PEND_ABORT:                          /* Indicate that we aborted            
 776:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              p_void     = (void      *)0;
 1111              		.loc 1 776 0
 1112 020e 4FF00003 		mov	r3, #0
 1113 0212 BB61     		str	r3, [r7, #24]
 777:C:\Micrium\Software\uCOS-III\Source\os_task.c ****             *p_msg_size = (OS_MSG_SIZE)0;
 1114              		.loc 1 777 0
 1115 0214 7B68     		ldr	r3, [r7, #4]
 1116 0216 4FF00002 		mov	r2, #0
 1117 021a 1A80     		strh	r2, [r3, #0]	@ movhi
 778:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              if (p_ts  != (CPU_TS *)0) {
 1118              		.loc 1 778 0
 1119 021c 3B68     		ldr	r3, [r7, #0]
 1120 021e 002B     		cmp	r3, #0
 1121 0220 03D0     		beq	.L78
 779:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                 *p_ts   = (CPU_TS  )0;
 1122              		.loc 1 779 0
 1123 0222 3B68     		ldr	r3, [r7, #0]
 1124 0224 4FF00002 		mov	r2, #0
 1125 0228 1A60     		str	r2, [r3, #0]
 1126              	.L78:
 780:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              }
 781:C:\Micrium\Software\uCOS-III\Source\os_task.c ****             *p_err      =  OS_ERR_PEND_ABORT;
 1127              		.loc 1 781 0
 1128 022a 3B6B     		ldr	r3, [r7, #48]
 1129 022c 46F2A912 		movw	r2, #25001
 1130 0230 1A80     		strh	r2, [r3, #0]	@ movhi
 782:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              break;
 1131              		.loc 1 782 0
 1132 0232 15E0     		b	.L77
 1133              	.L82:
 783:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 784:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_STATUS_PEND_TIMEOUT:                        /* Indicate that we didn't get event wi
 785:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         default:
 786:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              p_void     = (void      *)0;
 1134              		.loc 1 786 0
 1135 0234 4FF00003 		mov	r3, #0
 1136 0238 BB61     		str	r3, [r7, #24]
 787:C:\Micrium\Software\uCOS-III\Source\os_task.c ****             *p_msg_size = (OS_MSG_SIZE)0;
 1137              		.loc 1 787 0
 1138 023a 7B68     		ldr	r3, [r7, #4]
 1139 023c 4FF00002 		mov	r2, #0
 1140 0240 1A80     		strh	r2, [r3, #0]	@ movhi
 788:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              if (p_ts  != (CPU_TS *)0) {
 1141              		.loc 1 788 0
 1142 0242 3B68     		ldr	r3, [r7, #0]
 1143 0244 002B     		cmp	r3, #0
 1144 0246 07D0     		beq	.L79
 789:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                 *p_ts   =  OSTCBCurPtr->TS;
 1145              		.loc 1 789 0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 35


 1146 0248 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 1147 024c C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 1148 0250 1B68     		ldr	r3, [r3, #0]
 1149 0252 1A6C     		ldr	r2, [r3, #64]
 1150 0254 3B68     		ldr	r3, [r7, #0]
 1151 0256 1A60     		str	r2, [r3, #0]
 1152              	.L79:
 790:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              }
 791:C:\Micrium\Software\uCOS-III\Source\os_task.c ****             *p_err      =  OS_ERR_TIMEOUT;
 1153              		.loc 1 791 0
 1154 0258 3B6B     		ldr	r3, [r7, #48]
 1155 025a 47F2D922 		movw	r2, #29401
 1156 025e 1A80     		strh	r2, [r3, #0]	@ movhi
 1157              	.L77:
 792:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              break;
 793:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
 794:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_CRITICAL_EXIT();
 1158              		.loc 1 794 0
 1159 0260 F869     		ldr	r0, [r7, #28]
 1160 0262 FFF7FEFF 		bl	CPU_SR_Restore
 795:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     return (p_void);                                        /* Return received message             
 1161              		.loc 1 795 0
 1162 0266 BB69     		ldr	r3, [r7, #24]
 1163              	.L63:
 796:C:\Micrium\Software\uCOS-III\Source\os_task.c **** }
 1164              		.loc 1 796 0
 1165 0268 1846     		mov	r0, r3
 1166 026a 07F12407 		add	r7, r7, #36
 1167 026e BD46     		mov	sp, r7
 1168 0270 90BD     		pop	{r4, r7, pc}
 1169              		.cfi_endproc
 1170              	.LFE4:
 1171              		.size	OSTaskQPend, .-OSTaskQPend
 1172 0272 00BF     		.section	.text.OSTaskQPendAbort,"ax",%progbits
 1173              		.align	2
 1174              		.global	OSTaskQPendAbort
 1175              		.thumb
 1176              		.thumb_func
 1177              		.type	OSTaskQPendAbort, %function
 1178              	OSTaskQPendAbort:
 1179              	.LFB5:
 797:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
 798:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 799:C:\Micrium\Software\uCOS-III\Source\os_task.c **** /*$PAGE*/
 800:C:\Micrium\Software\uCOS-III\Source\os_task.c **** /*
 801:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
 802:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                              ABORT WAITING FOR A MESSAGE
 803:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 804:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Description: This function aborts & readies the task specified.  This function should be used to 
 805:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              for a message, rather than to normally post the message to the task via OSTaskQPost(
 806:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 807:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Arguments  : p_tcb     is a pointer to the task to pend abort
 808:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 809:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              opt       provides options for this function:
 810:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 811:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                            OS_OPT_POST_NONE         No option specified
 812:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                            OS_OPT_POST_NO_SCHED     Indicates that the scheduler will not be call
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 36


 813:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 814:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              p_err     is a pointer to a variable that will contain an error code returned by thi
 815:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 816:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                            OS_ERR_NONE              If the task was readied and informed of the a
 817:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                            OS_ERR_PEND_ABORT_ISR    If you called this function from an ISR
 818:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                            OS_ERR_PEND_ABORT_NONE   If task was not pending on a message and thus
 819:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                                     abort.
 820:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                            OS_ERR_PEND_ABORT_SELF   If you passed a NULL pointer for 'p_tcb'
 821:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 822:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Returns    : == DEF_FALSE   if task was not waiting for a message, or upon error.
 823:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              == DEF_TRUE    if task was waiting for a message and was readied and informed.
 824:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
 825:C:\Micrium\Software\uCOS-III\Source\os_task.c **** */
 826:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 827:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if (OS_CFG_TASK_Q_EN > 0u) && (OS_CFG_TASK_Q_PEND_ABORT_EN > 0u)
 828:C:\Micrium\Software\uCOS-III\Source\os_task.c **** CPU_BOOLEAN  OSTaskQPendAbort (OS_TCB  *p_tcb,
 829:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                                OS_OPT   opt,
 830:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                                OS_ERR  *p_err)
 831:C:\Micrium\Software\uCOS-III\Source\os_task.c **** {
 1180              		.loc 1 831 0
 1181              		.cfi_startproc
 1182              		@ args = 0, pretend = 0, frame = 24
 1183              		@ frame_needed = 1, uses_anonymous_args = 0
 1184 0000 80B5     		push	{r7, lr}
 1185              	.LCFI15:
 1186              		.cfi_def_cfa_offset 8
 1187 0002 86B0     		sub	sp, sp, #24
 1188              	.LCFI16:
 1189              		.cfi_def_cfa_offset 32
 1190 0004 00AF     		add	r7, sp, #0
 1191              		.cfi_offset 14, -4
 1192              		.cfi_offset 7, -8
 1193              	.LCFI17:
 1194              		.cfi_def_cfa_register 7
 1195 0006 F860     		str	r0, [r7, #12]
 1196 0008 0B46     		mov	r3, r1
 1197 000a 7A60     		str	r2, [r7, #4]
 1198 000c 7B81     		strh	r3, [r7, #10]	@ movhi
 832:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_TS         ts;
 833:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_SR_ALLOC();
 1199              		.loc 1 833 0
 1200 000e 4FF00003 		mov	r3, #0
 1201 0012 7B61     		str	r3, [r7, #20]
 834:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 835:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 836:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 837:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #ifdef OS_SAFETY_CRITICAL
 838:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (p_err == (OS_ERR *)0) {
 839:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 840:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return (DEF_FALSE);
 841:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
 842:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
 843:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 844:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_CALLED_FROM_ISR_CHK_EN > 0u
 845:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (OSIntNestingCtr > (OS_NESTING_CTR)0) {              /* See if called from ISR ...          
 1202              		.loc 1 845 0
 1203 0014 40F20003 		movw	r3, #:lower16:OSIntNestingCtr
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 37


 1204 0018 C0F20003 		movt	r3, #:upper16:OSIntNestingCtr
 1205 001c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1206 001e 002B     		cmp	r3, #0
 1207 0020 06D0     		beq	.L84
 846:C:\Micrium\Software\uCOS-III\Source\os_task.c ****        *p_err = OS_ERR_PEND_ABORT_ISR;                      /* ... can't Pend Abort from an ISR    
 1208              		.loc 1 846 0
 1209 0022 7B68     		ldr	r3, [r7, #4]
 1210 0024 46F2AA12 		movw	r2, #25002
 1211 0028 1A80     		strh	r2, [r3, #0]	@ movhi
 847:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return (DEF_FALSE);
 1212              		.loc 1 847 0
 1213 002a 4FF00003 		mov	r3, #0
 1214 002e 4EE0     		b	.L85
 1215              	.L84:
 848:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
 849:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
 850:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 851:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_ARG_CHK_EN > 0u                                  /* ---------------- VALIDATE ARGUMENTS 
 852:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     switch (opt) {                                          /* User must supply a valid option     
 1216              		.loc 1 852 0
 1217 0030 7B89     		ldrh	r3, [r7, #10]
 1218 0032 002B     		cmp	r3, #0
 1219 0034 02D0     		beq	.L87
 1220 0036 B3F5004F 		cmp	r3, #32768
 1221 003a 07D1     		bne	.L94
 1222              	.L87:
 853:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_OPT_POST_NONE:
 854:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_OPT_POST_NO_SCHED:
 855:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              break;
 856:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 857:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         default:
 858:C:\Micrium\Software\uCOS-III\Source\os_task.c ****             *p_err = OS_ERR_OPT_INVALID;
 859:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              return (DEF_FALSE);
 860:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
 861:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
 862:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 863:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_CRITICAL_ENTER();
 1223              		.loc 1 863 0
 1224 003c FFF7FEFF 		bl	CPU_SR_Save
 1225 0040 0346     		mov	r3, r0
 1226 0042 7B61     		str	r3, [r7, #20]
 864:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_ARG_CHK_EN > 0u
 865:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if ((p_tcb == (OS_TCB *)0) ||                           /* Pend abort self?                    
 1227              		.loc 1 865 0
 1228 0044 FB68     		ldr	r3, [r7, #12]
 1229 0046 002B     		cmp	r3, #0
 1230 0048 0FD0     		beq	.L88
 1231 004a 06E0     		b	.L95
 1232              	.L94:
 1233              		.loc 1 858 0
 1234 004c 7B68     		ldr	r3, [r7, #4]
 1235 004e 45F62562 		movw	r2, #24101
 1236 0052 1A80     		strh	r2, [r3, #0]	@ movhi
 1237              		.loc 1 859 0
 1238 0054 4FF00003 		mov	r3, #0
 1239 0058 39E0     		b	.L85
 1240              	.L95:
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 38


 866:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         (p_tcb == OSTCBCurPtr)) {
 1241              		.loc 1 866 0
 1242 005a 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 1243 005e C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 1244 0062 1B68     		ldr	r3, [r3, #0]
 1245              		.loc 1 865 0
 1246 0064 FA68     		ldr	r2, [r7, #12]
 1247 0066 9A42     		cmp	r2, r3
 1248 0068 09D1     		bne	.L90
 1249              	.L88:
 867:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         CPU_CRITICAL_EXIT();
 1250              		.loc 1 867 0
 1251 006a 7869     		ldr	r0, [r7, #20]
 1252 006c FFF7FEFF 		bl	CPU_SR_Restore
 868:C:\Micrium\Software\uCOS-III\Source\os_task.c ****        *p_err = OS_ERR_PEND_ABORT_SELF;                     /* ... doesn't make sense              
 1253              		.loc 1 868 0
 1254 0070 7B68     		ldr	r3, [r7, #4]
 1255 0072 46F2AC12 		movw	r2, #25004
 1256 0076 1A80     		strh	r2, [r3, #0]	@ movhi
 869:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return (DEF_FALSE);
 1257              		.loc 1 869 0
 1258 0078 4FF00003 		mov	r3, #0
 1259 007c 27E0     		b	.L85
 1260              	.L90:
 870:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
 871:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
 872:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 873:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (p_tcb->PendOn != OS_TASK_PEND_ON_TASK_Q) {          /* Is task waiting for a message?      
 1261              		.loc 1 873 0
 1262 007e FB68     		ldr	r3, [r7, #12]
 1263 0080 93F83430 		ldrb	r3, [r3, #52]	@ zero_extendqisi2
 1264 0084 022B     		cmp	r3, #2
 1265 0086 09D0     		beq	.L91
 874:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         CPU_CRITICAL_EXIT();                                /* No                                  
 1266              		.loc 1 874 0
 1267 0088 7869     		ldr	r0, [r7, #20]
 1268 008a FFF7FEFF 		bl	CPU_SR_Restore
 875:C:\Micrium\Software\uCOS-III\Source\os_task.c ****        *p_err = OS_ERR_PEND_ABORT_NONE;
 1269              		.loc 1 875 0
 1270 008e 7B68     		ldr	r3, [r7, #4]
 1271 0090 46F2AB12 		movw	r2, #25003
 1272 0094 1A80     		strh	r2, [r3, #0]	@ movhi
 876:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return (DEF_FALSE);
 1273              		.loc 1 876 0
 1274 0096 4FF00003 		mov	r3, #0
 1275 009a 18E0     		b	.L85
 1276              	.L91:
 877:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
 878:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 879:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OS_CRITICAL_ENTER_CPU_EXIT();
 880:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     ts = OS_TS_GET();                                       /* Get timestamp of when the abort occu
 1277              		.loc 1 880 0
 1278 009c FFF7FEFF 		bl	CPU_TS_TmrRd
 1279 00a0 0346     		mov	r3, r0
 1280 00a2 3B61     		str	r3, [r7, #16]
 881:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OS_PendAbort((OS_PEND_OBJ *)0,                          /* Abort the pend                      
 1281              		.loc 1 881 0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 39


 1282 00a4 4FF00000 		mov	r0, #0
 1283 00a8 F968     		ldr	r1, [r7, #12]
 1284 00aa 3A69     		ldr	r2, [r7, #16]
 1285 00ac FFF7FEFF 		bl	OS_PendAbort
 882:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  p_tcb,
 883:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  ts);
 884:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OS_CRITICAL_EXIT_NO_SCHED();
 1286              		.loc 1 884 0
 1287 00b0 7869     		ldr	r0, [r7, #20]
 1288 00b2 FFF7FEFF 		bl	CPU_SR_Restore
 885:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if ((opt & OS_OPT_POST_NO_SCHED) == (OS_OPT)0) {
 1289              		.loc 1 885 0
 1290 00b6 7B89     		ldrh	r3, [r7, #10]
 1291 00b8 1BB2     		sxth	r3, r3
 1292 00ba 002B     		cmp	r3, #0
 1293 00bc 01DB     		blt	.L92
 886:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         OSSched();                                          /* Run the scheduler                   
 1294              		.loc 1 886 0
 1295 00be FFF7FEFF 		bl	OSSched
 1296              	.L92:
 887:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
 888:C:\Micrium\Software\uCOS-III\Source\os_task.c ****    *p_err = OS_ERR_NONE;
 1297              		.loc 1 888 0
 1298 00c2 7B68     		ldr	r3, [r7, #4]
 1299 00c4 4FF00002 		mov	r2, #0
 1300 00c8 1A80     		strh	r2, [r3, #0]	@ movhi
 889:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     return (DEF_TRUE);
 1301              		.loc 1 889 0
 1302 00ca 4FF00103 		mov	r3, #1
 1303              	.L85:
 890:C:\Micrium\Software\uCOS-III\Source\os_task.c **** }
 1304              		.loc 1 890 0
 1305 00ce 1846     		mov	r0, r3
 1306 00d0 07F11807 		add	r7, r7, #24
 1307 00d4 BD46     		mov	sp, r7
 1308 00d6 80BD     		pop	{r7, pc}
 1309              		.cfi_endproc
 1310              	.LFE5:
 1311              		.size	OSTaskQPendAbort, .-OSTaskQPendAbort
 1312              		.section	.text.OSTaskQPost,"ax",%progbits
 1313              		.align	2
 1314              		.global	OSTaskQPost
 1315              		.thumb
 1316              		.thumb_func
 1317              		.type	OSTaskQPost, %function
 1318              	OSTaskQPost:
 1319              	.LFB6:
 891:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
 892:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 893:C:\Micrium\Software\uCOS-III\Source\os_task.c **** /*$PAGE*/
 894:C:\Micrium\Software\uCOS-III\Source\os_task.c **** /*
 895:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
 896:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                               POST MESSAGE TO A TASK
 897:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 898:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Description: This function sends a message to a task
 899:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 900:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Arguments  : p_tcb      is a pointer to the TCB of the task receiving a message.  If you specify 
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 40


 901:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                         the message will be posted to the task's queue of the calling task.  In o
 902:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                         posting a message to yourself.
 903:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 904:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              p_void     is a pointer to the message to send.
 905:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 906:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              msg_size   is the size of the message sent (in #bytes)
 907:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 908:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              opt        specifies whether the post will be FIFO or LIFO:
 909:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 910:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             OS_OPT_POST_FIFO       Post at the end   of the queue
 911:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             OS_OPT_POST_LIFO       Post at the front of the queue
 912:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 913:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             OS_OPT_POST_NO_SCHED   Do not run the scheduler after the post
 914:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 915:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                          Note(s): 1) OS_OPT_POST_NO_SCHED can be added with one of the other opti
 916:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 917:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 918:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              p_err      is a pointer to a variable that will hold the error code associated
 919:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                         with the outcome of this call.  Errors can be:
 920:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 921:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             OS_ERR_NONE            The call was successful and the message was se
 922:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             OS_ERR_Q_MAX           If the queue is full
 923:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             OS_ERR_MSG_POOL_EMPTY  If there are no more OS_MSGs available from th
 924:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 925:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Returns    : none
 926:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
 927:C:\Micrium\Software\uCOS-III\Source\os_task.c **** */
 928:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 929:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_TASK_Q_EN > 0u
 930:C:\Micrium\Software\uCOS-III\Source\os_task.c **** void  OSTaskQPost (OS_TCB       *p_tcb,
 931:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                    void         *p_void,
 932:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                    OS_MSG_SIZE   msg_size,
 933:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                    OS_OPT        opt,
 934:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                    OS_ERR       *p_err)
 935:C:\Micrium\Software\uCOS-III\Source\os_task.c **** {
 1320              		.loc 1 935 0
 1321              		.cfi_startproc
 1322              		@ args = 4, pretend = 0, frame = 24
 1323              		@ frame_needed = 1, uses_anonymous_args = 0
 1324 0000 80B5     		push	{r7, lr}
 1325              	.LCFI18:
 1326              		.cfi_def_cfa_offset 8
 1327 0002 88B0     		sub	sp, sp, #32
 1328              	.LCFI19:
 1329              		.cfi_def_cfa_offset 40
 1330 0004 02AF     		add	r7, sp, #8
 1331              		.cfi_offset 14, -4
 1332              		.cfi_offset 7, -8
 1333              	.LCFI20:
 1334              		.cfi_def_cfa 7, 32
 1335 0006 F860     		str	r0, [r7, #12]
 1336 0008 B960     		str	r1, [r7, #8]
 1337 000a FA80     		strh	r2, [r7, #6]	@ movhi
 1338 000c BB80     		strh	r3, [r7, #4]	@ movhi
 936:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_TS   ts;
 937:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 938:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 41


 939:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 940:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #ifdef OS_SAFETY_CRITICAL
 941:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (p_err == (OS_ERR *)0) {
 942:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
 943:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return;
 944:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
 945:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
 946:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 947:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_ARG_CHK_EN > 0u                                  /* ---------------- VALIDATE ARGUMENTS 
 948:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     switch (opt) {                                          /* User must supply a valid option     
 1339              		.loc 1 948 0
 1340 000e BB88     		ldrh	r3, [r7, #4]
 1341 0010 102B     		cmp	r3, #16
 1342 0012 0BD0     		beq	.L98
 1343 0014 102B     		cmp	r3, #16
 1344 0016 02DC     		bgt	.L99
 1345 0018 002B     		cmp	r3, #0
 1346 001a 07D0     		beq	.L98
 1347 001c 15E0     		b	.L97
 1348              	.L99:
 1349 001e B3F5004F 		cmp	r3, #32768
 1350 0022 03D0     		beq	.L98
 1351 0024 48F21002 		movw	r2, #32784
 1352 0028 9342     		cmp	r3, r2
 1353 002a 0ED1     		bne	.L97
 1354              	.L98:
 949:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_OPT_POST_FIFO:
 950:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_OPT_POST_LIFO:
 951:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_OPT_POST_FIFO | OS_OPT_POST_NO_SCHED:
 952:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_OPT_POST_LIFO | OS_OPT_POST_NO_SCHED:
 953:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              break;
 954:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 955:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         default:
 956:C:\Micrium\Software\uCOS-III\Source\os_task.c ****             *p_err = OS_ERR_OPT_INVALID;
 957:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              return;
 958:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
 959:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
 960:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 961:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     ts = OS_TS_GET();                                       /* Get timestamp                       
 1355              		.loc 1 961 0
 1356 002c FFF7FEFF 		bl	CPU_TS_TmrRd
 1357 0030 0346     		mov	r3, r0
 1358 0032 7B61     		str	r3, [r7, #20]
 962:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 963:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_ISR_POST_DEFERRED_EN > 0u
 964:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (OSIntNestingCtr > (OS_NESTING_CTR)0) {
 965:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         OS_IntQPost((OS_OBJ_TYPE)OS_OBJ_TYPE_TASK_MSG,      /* Post to ISR queue                   
 966:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     (void      *)p_tcb,
 967:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     (void      *)p_void,
 968:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     (OS_MSG_SIZE)msg_size,
 969:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     (OS_FLAGS   )0,
 970:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     (OS_OPT     )opt,
 971:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     (CPU_TS     )ts,
 972:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     (OS_ERR    *)p_err);
 973:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return;
 974:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
 975:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 42


 976:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 977:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OS_TaskQPost(p_tcb,
 1359              		.loc 1 977 0
 1360 0034 FA88     		ldrh	r2, [r7, #6]
 1361 0036 BB88     		ldrh	r3, [r7, #4]
 1362 0038 7969     		ldr	r1, [r7, #20]
 1363 003a 0091     		str	r1, [sp, #0]
 1364 003c 396A     		ldr	r1, [r7, #32]
 1365 003e 0191     		str	r1, [sp, #4]
 1366 0040 F868     		ldr	r0, [r7, #12]
 1367 0042 B968     		ldr	r1, [r7, #8]
 1368 0044 FFF7FEFF 		bl	OS_TaskQPost
 1369 0048 04E0     		b	.L101
 1370              	.L97:
 1371              		.loc 1 956 0
 1372 004a 3B6A     		ldr	r3, [r7, #32]
 1373 004c 45F62562 		movw	r2, #24101
 1374 0050 1A80     		strh	r2, [r3, #0]	@ movhi
 1375              		.loc 1 957 0
 1376 0052 00BF     		nop
 1377              	.L101:
 978:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  p_void,
 979:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  msg_size,
 980:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  opt,
 981:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  ts,
 982:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  p_err);
 983:C:\Micrium\Software\uCOS-III\Source\os_task.c **** }
 1378              		.loc 1 983 0
 1379 0054 07F11807 		add	r7, r7, #24
 1380 0058 BD46     		mov	sp, r7
 1381 005a 80BD     		pop	{r7, pc}
 1382              		.cfi_endproc
 1383              	.LFE6:
 1384              		.size	OSTaskQPost, .-OSTaskQPost
 1385              		.section	.text.OSTaskRegGet,"ax",%progbits
 1386              		.align	2
 1387              		.global	OSTaskRegGet
 1388              		.thumb
 1389              		.thumb_func
 1390              		.type	OSTaskRegGet, %function
 1391              	OSTaskRegGet:
 1392              	.LFB7:
 984:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
 985:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
 986:C:\Micrium\Software\uCOS-III\Source\os_task.c **** /*$PAGE*/
 987:C:\Micrium\Software\uCOS-III\Source\os_task.c **** /*
 988:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
 989:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                       GET THE CURRENT VALUE OF A TASK REGISTER
 990:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 991:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Description: This function is called to obtain the current value of a task register.  Task regist
 992:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              specific and can be used to store task specific values such as 'error numbers' (i.e.
 993:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              etc.
 994:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 995:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Arguments  : p_tcb     is a pointer to the OS_TCB of the task you want to read the register from.
 996:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                        NULL pointer then you will get the register of the current task.
 997:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
 998:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              id        is the 'id' of the desired task variable.  Note that the 'id' must be less
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 43


 999:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                        OS_CFG_TASK_REG_TBL_SIZE
1000:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1001:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              p_err     is a pointer to a variable that will hold an error code related to this ca
1002:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1003:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                            OS_ERR_NONE            if the call was successful
1004:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                            OS_ERR_REG_ID_INVALID  if the 'id' is not between 0 and OS_CFG_TASK_RE
1005:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1006:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Returns    : The current value of the task's register or 0 if an error is detected.
1007:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
1008:C:\Micrium\Software\uCOS-III\Source\os_task.c **** */
1009:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1010:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_TASK_REG_TBL_SIZE > 0u
1011:C:\Micrium\Software\uCOS-III\Source\os_task.c **** OS_REG  OSTaskRegGet (OS_TCB     *p_tcb,
1012:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                       OS_REG_ID   id,
1013:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                       OS_ERR     *p_err)
1014:C:\Micrium\Software\uCOS-III\Source\os_task.c **** {
 1393              		.loc 1 1014 0
 1394              		.cfi_startproc
 1395              		@ args = 0, pretend = 0, frame = 24
 1396              		@ frame_needed = 1, uses_anonymous_args = 0
 1397 0000 80B5     		push	{r7, lr}
 1398              	.LCFI21:
 1399              		.cfi_def_cfa_offset 8
 1400 0002 86B0     		sub	sp, sp, #24
 1401              	.LCFI22:
 1402              		.cfi_def_cfa_offset 32
 1403 0004 00AF     		add	r7, sp, #0
 1404              		.cfi_offset 14, -4
 1405              		.cfi_offset 7, -8
 1406              	.LCFI23:
 1407              		.cfi_def_cfa_register 7
 1408 0006 F860     		str	r0, [r7, #12]
 1409 0008 0B46     		mov	r3, r1
 1410 000a 7A60     		str	r2, [r7, #4]
 1411 000c FB72     		strb	r3, [r7, #11]
1015:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OS_REG     value;
1016:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_SR_ALLOC();
 1412              		.loc 1 1016 0
 1413 000e 4FF00003 		mov	r3, #0
 1414 0012 7B61     		str	r3, [r7, #20]
1017:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1018:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1019:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1020:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #ifdef OS_SAFETY_CRITICAL
1021:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (p_err == (OS_ERR *)0) {
1022:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
1023:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return ((OS_REG)0);
1024:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
1025:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
1026:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1027:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_ARG_CHK_EN > 0u
1028:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (id >= OS_CFG_TASK_REG_TBL_SIZE) {
 1415              		.loc 1 1028 0
 1416 0014 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1417 0016 002B     		cmp	r3, #0
 1418 0018 06D0     		beq	.L103
1029:C:\Micrium\Software\uCOS-III\Source\os_task.c ****        *p_err = OS_ERR_REG_ID_INVALID;
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 44


 1419              		.loc 1 1029 0
 1420 001a 7B68     		ldr	r3, [r7, #4]
 1421 001c 46F67912 		movw	r2, #27001
 1422 0020 1A80     		strh	r2, [r3, #0]	@ movhi
1030:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return ((OS_REG)0);
 1423              		.loc 1 1030 0
 1424 0022 4FF00003 		mov	r3, #0
 1425 0026 1DE0     		b	.L104
 1426              	.L103:
1031:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
1032:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
1033:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1034:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_CRITICAL_ENTER();
 1427              		.loc 1 1034 0
 1428 0028 FFF7FEFF 		bl	CPU_SR_Save
 1429 002c 0346     		mov	r3, r0
 1430 002e 7B61     		str	r3, [r7, #20]
1035:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (p_tcb == (OS_TCB *)0) {
 1431              		.loc 1 1035 0
 1432 0030 FB68     		ldr	r3, [r7, #12]
 1433 0032 002B     		cmp	r3, #0
 1434 0034 05D1     		bne	.L105
1036:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         p_tcb = OSTCBCurPtr;
 1435              		.loc 1 1036 0
 1436 0036 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 1437 003a C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 1438 003e 1B68     		ldr	r3, [r3, #0]
 1439 0040 FB60     		str	r3, [r7, #12]
 1440              	.L105:
1037:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
1038:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     value = p_tcb->RegTbl[id];
 1441              		.loc 1 1038 0
 1442 0042 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1443 0044 FA68     		ldr	r2, [r7, #12]
 1444 0046 03F11E03 		add	r3, r3, #30
 1445 004a 4FEA8303 		lsl	r3, r3, #2
 1446 004e 1344     		add	r3, r3, r2
 1447 0050 5B68     		ldr	r3, [r3, #4]
 1448 0052 3B61     		str	r3, [r7, #16]
1039:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_CRITICAL_EXIT();
 1449              		.loc 1 1039 0
 1450 0054 7869     		ldr	r0, [r7, #20]
 1451 0056 FFF7FEFF 		bl	CPU_SR_Restore
1040:C:\Micrium\Software\uCOS-III\Source\os_task.c ****    *p_err = OS_ERR_NONE;
 1452              		.loc 1 1040 0
 1453 005a 7B68     		ldr	r3, [r7, #4]
 1454 005c 4FF00002 		mov	r2, #0
 1455 0060 1A80     		strh	r2, [r3, #0]	@ movhi
1041:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     return ((OS_REG)value);
 1456              		.loc 1 1041 0
 1457 0062 3B69     		ldr	r3, [r7, #16]
 1458              	.L104:
1042:C:\Micrium\Software\uCOS-III\Source\os_task.c **** }
 1459              		.loc 1 1042 0
 1460 0064 1846     		mov	r0, r3
 1461 0066 07F11807 		add	r7, r7, #24
 1462 006a BD46     		mov	sp, r7
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 45


 1463 006c 80BD     		pop	{r7, pc}
 1464              		.cfi_endproc
 1465              	.LFE7:
 1466              		.size	OSTaskRegGet, .-OSTaskRegGet
 1467 006e 00BF     		.section	.text.OSTaskRegGetID,"ax",%progbits
 1468              		.align	2
 1469              		.global	OSTaskRegGetID
 1470              		.thumb
 1471              		.thumb_func
 1472              		.type	OSTaskRegGetID, %function
 1473              	OSTaskRegGetID:
 1474              	.LFB8:
1043:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
1044:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1045:C:\Micrium\Software\uCOS-III\Source\os_task.c **** /*$PAGE*/
1046:C:\Micrium\Software\uCOS-III\Source\os_task.c **** /*
1047:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
1048:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                    ALLOCATE THE NEXT AVAILABLE TASK REGISTER ID
1049:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1050:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Description: This function is called to obtain a task register ID.  This function thus allows tas
1051:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              allocated dynamically instead of statically.
1052:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1053:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Arguments  : p_err       is a pointer to a variable that will hold an error code related to this 
1054:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1055:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                            OS_ERR_NONE               if the call was successful
1056:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                            OS_ERR_NO_MORE_ID_AVAIL   if you are attempting to assign more task re
1057:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                                           have available through OS_CFG_TASK_REG_
1058:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1059:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Returns    : The next available task register 'id' or OS_CFG_TASK_REG_TBL_SIZE if an error is det
1060:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
1061:C:\Micrium\Software\uCOS-III\Source\os_task.c **** */
1062:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1063:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_TASK_REG_TBL_SIZE > 0u
1064:C:\Micrium\Software\uCOS-III\Source\os_task.c **** OS_REG_ID  OSTaskRegGetID (OS_ERR  *p_err)
1065:C:\Micrium\Software\uCOS-III\Source\os_task.c **** {
 1475              		.loc 1 1065 0
 1476              		.cfi_startproc
 1477              		@ args = 0, pretend = 0, frame = 16
 1478              		@ frame_needed = 1, uses_anonymous_args = 0
 1479 0000 80B5     		push	{r7, lr}
 1480              	.LCFI24:
 1481              		.cfi_def_cfa_offset 8
 1482 0002 84B0     		sub	sp, sp, #16
 1483              	.LCFI25:
 1484              		.cfi_def_cfa_offset 24
 1485 0004 00AF     		add	r7, sp, #0
 1486              		.cfi_offset 14, -4
 1487              		.cfi_offset 7, -8
 1488              	.LCFI26:
 1489              		.cfi_def_cfa_register 7
 1490 0006 7860     		str	r0, [r7, #4]
1066:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OS_REG_ID  id;
1067:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_SR_ALLOC();
 1491              		.loc 1 1067 0
 1492 0008 4FF00003 		mov	r3, #0
 1493 000c FB60     		str	r3, [r7, #12]
1068:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 46


1069:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1070:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1071:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #ifdef OS_SAFETY_CRITICAL
1072:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (p_err == (OS_ERR *)0) {
1073:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
1074:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return ((OS_REG_ID)OS_CFG_TASK_REG_TBL_SIZE);
1075:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
1076:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
1077:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1078:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_CRITICAL_ENTER();
 1494              		.loc 1 1078 0
 1495 000e FFF7FEFF 		bl	CPU_SR_Save
 1496 0012 0346     		mov	r3, r0
 1497 0014 FB60     		str	r3, [r7, #12]
1079:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (OSTaskRegNextAvailID >= OS_CFG_TASK_REG_TBL_SIZE) {       /* See if we exceeded the number 
 1498              		.loc 1 1079 0
 1499 0016 40F20003 		movw	r3, #:lower16:OSTaskRegNextAvailID
 1500 001a C0F20003 		movt	r3, #:upper16:OSTaskRegNextAvailID
 1501 001e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1502 0020 002B     		cmp	r3, #0
 1503 0022 09D0     		beq	.L108
1080:C:\Micrium\Software\uCOS-III\Source\os_task.c ****        *p_err = OS_ERR_NO_MORE_ID_AVAIL;                          /* Yes, cannot allocate more task
 1504              		.loc 1 1080 0
 1505 0024 7B68     		ldr	r3, [r7, #4]
 1506 0026 45F6DA12 		movw	r2, #23002
 1507 002a 1A80     		strh	r2, [r3, #0]	@ movhi
1081:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         CPU_CRITICAL_EXIT();
 1508              		.loc 1 1081 0
 1509 002c F868     		ldr	r0, [r7, #12]
 1510 002e FFF7FEFF 		bl	CPU_SR_Restore
1082:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return ((OS_REG_ID)OS_CFG_TASK_REG_TBL_SIZE);
 1511              		.loc 1 1082 0
 1512 0032 4FF00103 		mov	r3, #1
 1513 0036 1AE0     		b	.L109
 1514              	.L108:
1083:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
1084:C:\Micrium\Software\uCOS-III\Source\os_task.c ****      
1085:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     id    = OSTaskRegNextAvailID;								  /* Assign the next available ID                     */
 1515              		.loc 1 1085 0
 1516 0038 40F20003 		movw	r3, #:lower16:OSTaskRegNextAvailID
 1517 003c C0F20003 		movt	r3, #:upper16:OSTaskRegNextAvailID
 1518 0040 1B78     		ldrb	r3, [r3, #0]
 1519 0042 FB72     		strb	r3, [r7, #11]
1086:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OSTaskRegNextAvailID++;										  /* Increment available ID for next request          */
 1520              		.loc 1 1086 0
 1521 0044 40F20003 		movw	r3, #:lower16:OSTaskRegNextAvailID
 1522 0048 C0F20003 		movt	r3, #:upper16:OSTaskRegNextAvailID
 1523 004c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1524 004e 03F10103 		add	r3, r3, #1
 1525 0052 DAB2     		uxtb	r2, r3
 1526 0054 40F20003 		movw	r3, #:lower16:OSTaskRegNextAvailID
 1527 0058 C0F20003 		movt	r3, #:upper16:OSTaskRegNextAvailID
 1528 005c 1A70     		strb	r2, [r3, #0]
1087:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_CRITICAL_EXIT();
 1529              		.loc 1 1087 0
 1530 005e F868     		ldr	r0, [r7, #12]
 1531 0060 FFF7FEFF 		bl	CPU_SR_Restore
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 47


1088:C:\Micrium\Software\uCOS-III\Source\os_task.c ****    *p_err = OS_ERR_NONE;
 1532              		.loc 1 1088 0
 1533 0064 7B68     		ldr	r3, [r7, #4]
 1534 0066 4FF00002 		mov	r2, #0
 1535 006a 1A80     		strh	r2, [r3, #0]	@ movhi
1089:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     return (id);
 1536              		.loc 1 1089 0
 1537 006c FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1538              	.L109:
1090:C:\Micrium\Software\uCOS-III\Source\os_task.c **** }
 1539              		.loc 1 1090 0
 1540 006e 1846     		mov	r0, r3
 1541 0070 07F11007 		add	r7, r7, #16
 1542 0074 BD46     		mov	sp, r7
 1543 0076 80BD     		pop	{r7, pc}
 1544              		.cfi_endproc
 1545              	.LFE8:
 1546              		.size	OSTaskRegGetID, .-OSTaskRegGetID
 1547              		.section	.text.OSTaskRegSet,"ax",%progbits
 1548              		.align	2
 1549              		.global	OSTaskRegSet
 1550              		.thumb
 1551              		.thumb_func
 1552              		.type	OSTaskRegSet, %function
 1553              	OSTaskRegSet:
 1554              	.LFB9:
1091:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
1092:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1093:C:\Micrium\Software\uCOS-III\Source\os_task.c **** /*$PAGE*/
1094:C:\Micrium\Software\uCOS-III\Source\os_task.c **** /*
1095:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
1096:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                       SET THE CURRENT VALUE OF A TASK REGISTER
1097:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1098:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Description: This function is called to change the current value of a task register.  Task regist
1099:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              specific and can be used to store task specific values such as 'error numbers' (i.e.
1100:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              etc.
1101:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1102:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Arguments  : p_tcb     is a pointer to the OS_TCB of the task you want to set the register for.  
1103:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                        pointer then you will change the register of the current task.
1104:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1105:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              id        is the 'id' of the desired task register.  Note that the 'id' must be less
1106:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                        OS_CFG_TASK_REG_TBL_SIZE
1107:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1108:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              value     is the desired value for the task register.
1109:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1110:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              p_err     is a pointer to a variable that will hold an error code related to this ca
1111:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1112:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                            OS_ERR_NONE            if the call was successful
1113:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                            OS_ERR_REG_ID_INVALID  if the 'id' is not between 0 and OS_CFG_TASK_RE
1114:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1115:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Returns    : none
1116:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
1117:C:\Micrium\Software\uCOS-III\Source\os_task.c **** */
1118:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1119:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_TASK_REG_TBL_SIZE > 0u
1120:C:\Micrium\Software\uCOS-III\Source\os_task.c **** void  OSTaskRegSet (OS_TCB     *p_tcb,
1121:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     OS_REG_ID   id,
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 48


1122:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     OS_REG      value,
1123:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     OS_ERR     *p_err)
1124:C:\Micrium\Software\uCOS-III\Source\os_task.c **** {
 1555              		.loc 1 1124 0
 1556              		.cfi_startproc
 1557              		@ args = 0, pretend = 0, frame = 24
 1558              		@ frame_needed = 1, uses_anonymous_args = 0
 1559 0000 80B5     		push	{r7, lr}
 1560              	.LCFI27:
 1561              		.cfi_def_cfa_offset 8
 1562 0002 86B0     		sub	sp, sp, #24
 1563              	.LCFI28:
 1564              		.cfi_def_cfa_offset 32
 1565 0004 00AF     		add	r7, sp, #0
 1566              		.cfi_offset 14, -4
 1567              		.cfi_offset 7, -8
 1568              	.LCFI29:
 1569              		.cfi_def_cfa_register 7
 1570 0006 F860     		str	r0, [r7, #12]
 1571 0008 7A60     		str	r2, [r7, #4]
 1572 000a 3B60     		str	r3, [r7, #0]
 1573 000c 0B46     		mov	r3, r1
 1574 000e FB72     		strb	r3, [r7, #11]
1125:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_SR_ALLOC();
 1575              		.loc 1 1125 0
 1576 0010 4FF00003 		mov	r3, #0
 1577 0014 7B61     		str	r3, [r7, #20]
1126:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1127:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1128:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1129:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #ifdef OS_SAFETY_CRITICAL
1130:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (p_err == (OS_ERR *)0) {
1131:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
1132:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return;
1133:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
1134:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
1135:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1136:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_ARG_CHK_EN > 0u
1137:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (id >= OS_CFG_TASK_REG_TBL_SIZE) {
 1578              		.loc 1 1137 0
 1579 0016 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1580 0018 002B     		cmp	r3, #0
 1581 001a 04D0     		beq	.L112
1138:C:\Micrium\Software\uCOS-III\Source\os_task.c ****        *p_err = OS_ERR_REG_ID_INVALID;
 1582              		.loc 1 1138 0
 1583 001c 3B68     		ldr	r3, [r7, #0]
 1584 001e 46F67912 		movw	r2, #27001
 1585 0022 1A80     		strh	r2, [r3, #0]	@ movhi
1139:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return;
 1586              		.loc 1 1139 0
 1587 0024 1CE0     		b	.L115
 1588              	.L112:
1140:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
1141:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
1142:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1143:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_CRITICAL_ENTER();
 1589              		.loc 1 1143 0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 49


 1590 0026 FFF7FEFF 		bl	CPU_SR_Save
 1591 002a 0346     		mov	r3, r0
 1592 002c 7B61     		str	r3, [r7, #20]
1144:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (p_tcb == (OS_TCB *)0) {
 1593              		.loc 1 1144 0
 1594 002e FB68     		ldr	r3, [r7, #12]
 1595 0030 002B     		cmp	r3, #0
 1596 0032 05D1     		bne	.L114
1145:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         p_tcb = OSTCBCurPtr;
 1597              		.loc 1 1145 0
 1598 0034 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 1599 0038 C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 1600 003c 1B68     		ldr	r3, [r3, #0]
 1601 003e FB60     		str	r3, [r7, #12]
 1602              	.L114:
1146:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
1147:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->RegTbl[id] = value;
 1603              		.loc 1 1147 0
 1604 0040 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 1605 0042 FA68     		ldr	r2, [r7, #12]
 1606 0044 03F11E03 		add	r3, r3, #30
 1607 0048 4FEA8303 		lsl	r3, r3, #2
 1608 004c 1344     		add	r3, r3, r2
 1609 004e 7A68     		ldr	r2, [r7, #4]
 1610 0050 5A60     		str	r2, [r3, #4]
1148:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_CRITICAL_EXIT();
 1611              		.loc 1 1148 0
 1612 0052 7869     		ldr	r0, [r7, #20]
 1613 0054 FFF7FEFF 		bl	CPU_SR_Restore
1149:C:\Micrium\Software\uCOS-III\Source\os_task.c ****    *p_err             = OS_ERR_NONE;
 1614              		.loc 1 1149 0
 1615 0058 3B68     		ldr	r3, [r7, #0]
 1616 005a 4FF00002 		mov	r2, #0
 1617 005e 1A80     		strh	r2, [r3, #0]	@ movhi
 1618              	.L115:
1150:C:\Micrium\Software\uCOS-III\Source\os_task.c **** }
 1619              		.loc 1 1150 0
 1620 0060 07F11807 		add	r7, r7, #24
 1621 0064 BD46     		mov	sp, r7
 1622 0066 80BD     		pop	{r7, pc}
 1623              		.cfi_endproc
 1624              	.LFE9:
 1625              		.size	OSTaskRegSet, .-OSTaskRegSet
 1626              		.section	.text.OSTaskResume,"ax",%progbits
 1627              		.align	2
 1628              		.global	OSTaskResume
 1629              		.thumb
 1630              		.thumb_func
 1631              		.type	OSTaskResume, %function
 1632              	OSTaskResume:
 1633              	.LFB10:
1151:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
1152:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1153:C:\Micrium\Software\uCOS-III\Source\os_task.c **** /*$PAGE*/
1154:C:\Micrium\Software\uCOS-III\Source\os_task.c **** /*
1155:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
1156:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                               RESUME A SUSPENDED TASK
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 50


1157:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1158:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Description: This function is called to resume a previously suspended task.  This is the only cal
1159:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              explicit task suspension.
1160:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1161:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Arguments  : p_tcb      Is a pointer to the task's OS_TCB to resume
1162:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1163:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              p_err      Is a pointer to a variable that will contain an error code returned by th
1164:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1165:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             OS_ERR_NONE                  if the requested task is resumed
1166:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             OS_ERR_STATE_INVALID         if the task is in an invalid state
1167:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             OS_ERR_TASK_RESUME_ISR       if you called this function from an ISR
1168:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             OS_ERR_TASK_RESUME_SELF      You cannot resume 'self'
1169:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             OS_ERR_TASK_NOT_SUSPENDED    if the task to resume has not been suspe
1170:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1171:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Returns    : none
1172:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
1173:C:\Micrium\Software\uCOS-III\Source\os_task.c **** */
1174:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1175:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_TASK_SUSPEND_EN > 0u
1176:C:\Micrium\Software\uCOS-III\Source\os_task.c **** void  OSTaskResume (OS_TCB  *p_tcb,
1177:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     OS_ERR  *p_err)
1178:C:\Micrium\Software\uCOS-III\Source\os_task.c **** {
 1634              		.loc 1 1178 0
 1635              		.cfi_startproc
 1636              		@ args = 0, pretend = 0, frame = 16
 1637              		@ frame_needed = 1, uses_anonymous_args = 0
 1638 0000 80B5     		push	{r7, lr}
 1639              	.LCFI30:
 1640              		.cfi_def_cfa_offset 8
 1641 0002 84B0     		sub	sp, sp, #16
 1642              	.LCFI31:
 1643              		.cfi_def_cfa_offset 24
 1644 0004 00AF     		add	r7, sp, #0
 1645              		.cfi_offset 14, -4
 1646              		.cfi_offset 7, -8
 1647              	.LCFI32:
 1648              		.cfi_def_cfa_register 7
 1649 0006 7860     		str	r0, [r7, #4]
 1650 0008 3960     		str	r1, [r7, #0]
1179:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_SR_ALLOC();
 1651              		.loc 1 1179 0
 1652 000a 4FF00003 		mov	r3, #0
 1653 000e FB60     		str	r3, [r7, #12]
1180:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1181:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1182:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1183:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #ifdef OS_SAFETY_CRITICAL
1184:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (p_err == (OS_ERR *)0) {
1185:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
1186:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return;
1187:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
1188:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
1189:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1190:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if (OS_CFG_ISR_POST_DEFERRED_EN   == 0u) && \
1191:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     (OS_CFG_CALLED_FROM_ISR_CHK_EN >  0u)
1192:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (OSIntNestingCtr > (OS_NESTING_CTR)0) {              /* Not allowed to call from an ISR     
 1654              		.loc 1 1192 0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 51


 1655 0010 40F20003 		movw	r3, #:lower16:OSIntNestingCtr
 1656 0014 C0F20003 		movt	r3, #:upper16:OSIntNestingCtr
 1657 0018 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1658 001a 002B     		cmp	r3, #0
 1659 001c 04D0     		beq	.L117
1193:C:\Micrium\Software\uCOS-III\Source\os_task.c ****        *p_err = OS_ERR_TASK_RESUME_ISR;
 1660              		.loc 1 1193 0
 1661 001e 3B68     		ldr	r3, [r7, #0]
 1662 0020 47F25512 		movw	r2, #29013
 1663 0024 1A80     		strh	r2, [r3, #0]	@ movhi
1194:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return;
 1664              		.loc 1 1194 0
 1665 0026 1DE0     		b	.L121
 1666              	.L117:
1195:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
1196:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
1197:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1198:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1199:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_CRITICAL_ENTER();
 1667              		.loc 1 1199 0
 1668 0028 FFF7FEFF 		bl	CPU_SR_Save
 1669 002c 0346     		mov	r3, r0
 1670 002e FB60     		str	r3, [r7, #12]
1200:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_ARG_CHK_EN > 0u
1201:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if ((p_tcb == (OS_TCB *)0) ||                           /* We cannot resume 'self'             
 1671              		.loc 1 1201 0
 1672 0030 7B68     		ldr	r3, [r7, #4]
 1673 0032 002B     		cmp	r3, #0
 1674 0034 07D0     		beq	.L119
1202:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         (p_tcb == OSTCBCurPtr)) {
 1675              		.loc 1 1202 0
 1676 0036 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 1677 003a C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 1678 003e 1B68     		ldr	r3, [r3, #0]
 1679              		.loc 1 1201 0
 1680 0040 7A68     		ldr	r2, [r7, #4]
 1681 0042 9A42     		cmp	r2, r3
 1682 0044 07D1     		bne	.L120
 1683              	.L119:
1203:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         CPU_CRITICAL_EXIT();
 1684              		.loc 1 1203 0
 1685 0046 F868     		ldr	r0, [r7, #12]
 1686 0048 FFF7FEFF 		bl	CPU_SR_Restore
1204:C:\Micrium\Software\uCOS-III\Source\os_task.c ****        *p_err  = OS_ERR_TASK_RESUME_SELF;
 1687              		.loc 1 1204 0
 1688 004c 3B68     		ldr	r3, [r7, #0]
 1689 004e 47F25712 		movw	r2, #29015
 1690 0052 1A80     		strh	r2, [r3, #0]	@ movhi
1205:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return;
 1691              		.loc 1 1205 0
 1692 0054 06E0     		b	.L121
 1693              	.L120:
1206:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
1207:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
1208:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_CRITICAL_EXIT();
 1694              		.loc 1 1208 0
 1695 0056 F868     		ldr	r0, [r7, #12]
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 52


 1696 0058 FFF7FEFF 		bl	CPU_SR_Restore
1209:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1210:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_ISR_POST_DEFERRED_EN > 0u
1211:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (OSIntNestingCtr > (OS_NESTING_CTR)0) {              /* See if called from an ISR           
1212:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         OS_IntQPost((OS_OBJ_TYPE)OS_OBJ_TYPE_TASK_RESUME,   /* Post to ISR queue                   
1213:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     (void      *)p_tcb,
1214:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     (void      *)0,
1215:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     (OS_MSG_SIZE)0,
1216:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     (OS_FLAGS   )0,
1217:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     (OS_OPT     )0,
1218:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     (CPU_TS     )0,
1219:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     (OS_ERR    *)p_err);
1220:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return;
1221:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
1222:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
1223:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1224:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OS_TaskResume(p_tcb, p_err);
 1697              		.loc 1 1224 0
 1698 005c 7868     		ldr	r0, [r7, #4]
 1699 005e 3968     		ldr	r1, [r7, #0]
 1700 0060 FFF7FEFF 		bl	OS_TaskResume
 1701              	.L121:
1225:C:\Micrium\Software\uCOS-III\Source\os_task.c **** }
 1702              		.loc 1 1225 0
 1703 0064 07F11007 		add	r7, r7, #16
 1704 0068 BD46     		mov	sp, r7
 1705 006a 80BD     		pop	{r7, pc}
 1706              		.cfi_endproc
 1707              	.LFE10:
 1708              		.size	OSTaskResume, .-OSTaskResume
 1709              		.section	.text.OSTaskSemPend,"ax",%progbits
 1710              		.align	2
 1711              		.global	OSTaskSemPend
 1712              		.thumb
 1713              		.thumb_func
 1714              		.type	OSTaskSemPend, %function
 1715              	OSTaskSemPend:
 1716              	.LFB11:
1226:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
1227:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1228:C:\Micrium\Software\uCOS-III\Source\os_task.c **** /*$PAGE*/
1229:C:\Micrium\Software\uCOS-III\Source\os_task.c **** /*
1230:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
1231:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                              WAIT FOR A TASK SEMAPHORE
1232:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1233:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Description: This function is called to block the current task until a signal is sent by another 
1234:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1235:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Arguments  : timeout       is the amount of time you are will to wait for the signal
1236:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1237:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              opt           determines whether the user wants to block if a semaphore post was not
1238:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1239:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                OS_OPT_PEND_BLOCKING
1240:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                OS_OPT_PEND_NON_BLOCKING
1241:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1242:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              p_ts          is a pointer to a variable that will receive the timestamp of when the
1243:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                            or pend aborted.  If you pass a NULL pointer (i.e. (CPU_TS *)0) then y
1244:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                            timestamp.  In other words, passing a NULL pointer is valid and indica
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 53


1245:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                            need the timestamp.
1246:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1247:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              p_err         is a pointer to an error code that will be set by this function
1248:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1249:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                OS_ERR_NONE               The call was successful and your task re
1250:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                OS_ERR_PEND_ABORT
1251:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                OS_ERR_PEND_ISR           If you called this function from an ISR 
1252:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                OS_ERR_PEND_WOULD_BLOCK   If you specified non-blocking but no sig
1253:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                OS_ERR_SCHED_LOCKED       If the scheduler is locked
1254:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                OS_ERR_STATUS_INVALID     If the pend status is invalid
1255:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                OS_ERR_TIMEOUT            A message was not received within the sp
1256:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                                          would lead to a suspension.
1257:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1258:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Returns    : The current count of signals the task received, 0 if none.
1259:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
1260:C:\Micrium\Software\uCOS-III\Source\os_task.c **** */
1261:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1262:C:\Micrium\Software\uCOS-III\Source\os_task.c **** OS_SEM_CTR  OSTaskSemPend (OS_TICK   timeout,
1263:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                            OS_OPT    opt,
1264:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                            CPU_TS   *p_ts,
1265:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                            OS_ERR   *p_err)
1266:C:\Micrium\Software\uCOS-III\Source\os_task.c **** {
 1717              		.loc 1 1266 0
 1718              		.cfi_startproc
 1719              		@ args = 0, pretend = 0, frame = 24
 1720              		@ frame_needed = 1, uses_anonymous_args = 0
 1721 0000 90B5     		push	{r4, r7, lr}
 1722              	.LCFI33:
 1723              		.cfi_def_cfa_offset 12
 1724 0002 87B0     		sub	sp, sp, #28
 1725              	.LCFI34:
 1726              		.cfi_def_cfa_offset 40
 1727 0004 00AF     		add	r7, sp, #0
 1728              		.cfi_offset 14, -4
 1729              		.cfi_offset 7, -8
 1730              		.cfi_offset 4, -12
 1731              	.LCFI35:
 1732              		.cfi_def_cfa_register 7
 1733 0006 F860     		str	r0, [r7, #12]
 1734 0008 7A60     		str	r2, [r7, #4]
 1735 000a 3B60     		str	r3, [r7, #0]
 1736 000c 0B46     		mov	r3, r1	@ movhi
 1737 000e 7B81     		strh	r3, [r7, #10]	@ movhi
1267:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OS_SEM_CTR    ctr;
1268:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_SR_ALLOC();
 1738              		.loc 1 1268 0
 1739 0010 4FF00003 		mov	r3, #0
 1740 0014 7B61     		str	r3, [r7, #20]
1269:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1270:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1271:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1272:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #ifdef OS_SAFETY_CRITICAL
1273:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (p_err == (OS_ERR *)0) {
1274:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
1275:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return ((OS_SEM_CTR)0);
1276:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
1277:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 54


1278:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1279:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_CALLED_FROM_ISR_CHK_EN > 0u
1280:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (OSIntNestingCtr > (OS_NESTING_CTR)0) {              /* Not allowed to call from an ISR     
 1741              		.loc 1 1280 0
 1742 0016 40F20003 		movw	r3, #:lower16:OSIntNestingCtr
 1743 001a C0F20003 		movt	r3, #:upper16:OSIntNestingCtr
 1744 001e 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1745 0020 002B     		cmp	r3, #0
 1746 0022 06D0     		beq	.L123
1281:C:\Micrium\Software\uCOS-III\Source\os_task.c ****        *p_err = OS_ERR_PEND_ISR;
 1747              		.loc 1 1281 0
 1748 0024 3B68     		ldr	r3, [r7, #0]
 1749 0026 46F2AE12 		movw	r2, #25006
 1750 002a 1A80     		strh	r2, [r3, #0]	@ movhi
1282:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return ((OS_SEM_CTR)0);
 1751              		.loc 1 1282 0
 1752 002c 4FF00003 		mov	r3, #0
 1753 0030 1DE1     		b	.L124
 1754              	.L123:
1283:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
1284:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
1285:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1286:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_ARG_CHK_EN > 0u
1287:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     switch (opt) {                                          /* Validate 'opt'                      
 1755              		.loc 1 1287 0
 1756 0032 7B89     		ldrh	r3, [r7, #10]
 1757 0034 002B     		cmp	r3, #0
 1758 0036 02D0     		beq	.L126
 1759 0038 B3F5004F 		cmp	r3, #32768
 1760 003c 03D1     		bne	.L143
 1761              	.L126:
1288:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_OPT_PEND_BLOCKING:
1289:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_OPT_PEND_NON_BLOCKING:
1290:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              break;
1291:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1292:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         default:
1293:C:\Micrium\Software\uCOS-III\Source\os_task.c ****             *p_err = OS_ERR_OPT_INVALID;
1294:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              return ((OS_SEM_CTR)0);
1295:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
1296:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
1297:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1298:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (p_ts != (CPU_TS *)0) {
 1762              		.loc 1 1298 0
 1763 003e 7B68     		ldr	r3, [r7, #4]
 1764 0040 002B     		cmp	r3, #0
 1765 0042 07D1     		bne	.L127
 1766 0044 0AE0     		b	.L128
 1767              	.L143:
 1768              		.loc 1 1293 0
 1769 0046 3B68     		ldr	r3, [r7, #0]
 1770 0048 45F62562 		movw	r2, #24101
 1771 004c 1A80     		strh	r2, [r3, #0]	@ movhi
 1772              		.loc 1 1294 0
 1773 004e 4FF00003 		mov	r3, #0
 1774 0052 0CE1     		b	.L124
 1775              	.L127:
1299:C:\Micrium\Software\uCOS-III\Source\os_task.c ****        *p_ts  = (CPU_TS  )0;                                /* Initialize the returned timestamp   
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 55


 1776              		.loc 1 1299 0
 1777 0054 7B68     		ldr	r3, [r7, #4]
 1778 0056 4FF00002 		mov	r2, #0
 1779 005a 1A60     		str	r2, [r3, #0]
 1780              	.L128:
1300:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
1301:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1302:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_CRITICAL_ENTER();
 1781              		.loc 1 1302 0
 1782 005c FFF7FEFF 		bl	CPU_SR_Save
 1783 0060 0346     		mov	r3, r0
 1784 0062 7B61     		str	r3, [r7, #20]
1303:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (OSTCBCurPtr->SemCtr > (OS_SEM_CTR)0) {              /* See if task already been signaled   
 1785              		.loc 1 1303 0
 1786 0064 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 1787 0068 C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 1788 006c 1B68     		ldr	r3, [r3, #0]
 1789 006e 5B6C     		ldr	r3, [r3, #68]
 1790 0070 002B     		cmp	r3, #0
 1791 0072 53D0     		beq	.L129
1304:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         OSTCBCurPtr->SemCtr--;
 1792              		.loc 1 1304 0
 1793 0074 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 1794 0078 C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 1795 007c 1B68     		ldr	r3, [r3, #0]
 1796 007e 5A6C     		ldr	r2, [r3, #68]
 1797 0080 02F1FF32 		add	r2, r2, #-1
 1798 0084 5A64     		str	r2, [r3, #68]
1305:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         ctr    = OSTCBCurPtr->SemCtr;
 1799              		.loc 1 1305 0
 1800 0086 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 1801 008a C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 1802 008e 1B68     		ldr	r3, [r3, #0]
 1803 0090 5B6C     		ldr	r3, [r3, #68]
 1804 0092 3B61     		str	r3, [r7, #16]
1306:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         if (p_ts != (CPU_TS *)0) {
 1805              		.loc 1 1306 0
 1806 0094 7B68     		ldr	r3, [r7, #4]
 1807 0096 002B     		cmp	r3, #0
 1808 0098 07D0     		beq	.L130
1307:C:\Micrium\Software\uCOS-III\Source\os_task.c ****            *p_ts  = OSTCBCurPtr->TS;
 1809              		.loc 1 1307 0
 1810 009a 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 1811 009e C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 1812 00a2 1B68     		ldr	r3, [r3, #0]
 1813 00a4 1A6C     		ldr	r2, [r3, #64]
 1814 00a6 7B68     		ldr	r3, [r7, #4]
 1815 00a8 1A60     		str	r2, [r3, #0]
 1816              	.L130:
1308:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         }
1309:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_TASK_PROFILE_EN > 0u
1310:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         OSTCBCurPtr->SemPendTime = OS_TS_GET() - OSTCBCurPtr->TS;
 1817              		.loc 1 1310 0
 1818 00aa 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 1819 00ae C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 1820 00b2 1C68     		ldr	r4, [r3, #0]
 1821 00b4 FFF7FEFF 		bl	CPU_TS_TmrRd
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 56


 1822 00b8 0246     		mov	r2, r0
 1823 00ba 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 1824 00be C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 1825 00c2 1B68     		ldr	r3, [r3, #0]
 1826 00c4 1B6C     		ldr	r3, [r3, #64]
 1827 00c6 C3EB0203 		rsb	r3, r3, r2
 1828 00ca C4F8A430 		str	r3, [r4, #164]
1311:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         if (OSTCBCurPtr->SemPendTimeMax < OSTCBCurPtr->SemPendTime) {
 1829              		.loc 1 1311 0
 1830 00ce 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 1831 00d2 C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 1832 00d6 1B68     		ldr	r3, [r3, #0]
 1833 00d8 D3F8A820 		ldr	r2, [r3, #168]
 1834 00dc 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 1835 00e0 C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 1836 00e4 1B68     		ldr	r3, [r3, #0]
 1837 00e6 D3F8A430 		ldr	r3, [r3, #164]
 1838 00ea 9A42     		cmp	r2, r3
 1839 00ec 0DD2     		bcs	.L131
1312:C:\Micrium\Software\uCOS-III\Source\os_task.c ****             OSTCBCurPtr->SemPendTimeMax = OSTCBCurPtr->SemPendTime;
 1840              		.loc 1 1312 0
 1841 00ee 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 1842 00f2 C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 1843 00f6 1A68     		ldr	r2, [r3, #0]
 1844 00f8 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 1845 00fc C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 1846 0100 1B68     		ldr	r3, [r3, #0]
 1847 0102 D3F8A430 		ldr	r3, [r3, #164]
 1848 0106 C2F8A830 		str	r3, [r2, #168]
 1849              	.L131:
1313:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         }
1314:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
1315:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         CPU_CRITICAL_EXIT();
 1850              		.loc 1 1315 0
 1851 010a 7869     		ldr	r0, [r7, #20]
 1852 010c FFF7FEFF 		bl	CPU_SR_Restore
1316:C:\Micrium\Software\uCOS-III\Source\os_task.c ****        *p_err = OS_ERR_NONE;
 1853              		.loc 1 1316 0
 1854 0110 3B68     		ldr	r3, [r7, #0]
 1855 0112 4FF00002 		mov	r2, #0
 1856 0116 1A80     		strh	r2, [r3, #0]	@ movhi
1317:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return (ctr);
 1857              		.loc 1 1317 0
 1858 0118 3B69     		ldr	r3, [r7, #16]
 1859 011a A8E0     		b	.L124
 1860              	.L129:
1318:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
1319:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1320:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if ((opt & OS_OPT_PEND_NON_BLOCKING) != (OS_OPT)0) {    /* Caller wants to block if not availab
 1861              		.loc 1 1320 0
 1862 011c 7B89     		ldrh	r3, [r7, #10]
 1863 011e 1BB2     		sxth	r3, r3
 1864 0120 002B     		cmp	r3, #0
 1865 0122 09DA     		bge	.L132
1321:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         CPU_CRITICAL_EXIT();
 1866              		.loc 1 1321 0
 1867 0124 7869     		ldr	r0, [r7, #20]
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 57


 1868 0126 FFF7FEFF 		bl	CPU_SR_Restore
1322:C:\Micrium\Software\uCOS-III\Source\os_task.c ****        *p_err = OS_ERR_PEND_WOULD_BLOCK;                    /* No                                  
 1869              		.loc 1 1322 0
 1870 012a 3B68     		ldr	r3, [r7, #0]
 1871 012c 46F2B012 		movw	r2, #25008
 1872 0130 1A80     		strh	r2, [r3, #0]	@ movhi
1323:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return ((OS_SEM_CTR)0);
 1873              		.loc 1 1323 0
 1874 0132 4FF00003 		mov	r3, #0
 1875 0136 9AE0     		b	.L124
 1876              	.L132:
1324:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     } else {                                                /* Yes                                 
1325:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         if (OSSchedLockNestingCtr > (OS_NESTING_CTR)0) {    /* Can't pend when the scheduler is loc
 1877              		.loc 1 1325 0
 1878 0138 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 1879 013c C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 1880 0140 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1881 0142 002B     		cmp	r3, #0
 1882 0144 09D0     		beq	.L133
1326:C:\Micrium\Software\uCOS-III\Source\os_task.c ****             CPU_CRITICAL_EXIT();
 1883              		.loc 1 1326 0
 1884 0146 7869     		ldr	r0, [r7, #20]
 1885 0148 FFF7FEFF 		bl	CPU_SR_Restore
1327:C:\Micrium\Software\uCOS-III\Source\os_task.c ****            *p_err = OS_ERR_SCHED_LOCKED;
 1886              		.loc 1 1327 0
 1887 014c 3B68     		ldr	r3, [r7, #0]
 1888 014e 46F66352 		movw	r2, #28003
 1889 0152 1A80     		strh	r2, [r3, #0]	@ movhi
1328:C:\Micrium\Software\uCOS-III\Source\os_task.c ****             return ((OS_SEM_CTR)0);
 1890              		.loc 1 1328 0
 1891 0154 4FF00003 		mov	r3, #0
 1892 0158 89E0     		b	.L124
 1893              	.L133:
1329:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         }
1330:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
1331:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                                                             /* Lock the scheduler/re-enable interru
1332:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OS_CRITICAL_ENTER_CPU_EXIT();                           
1333:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OS_Pend((OS_PEND_DATA *)0,                              /* Block task pending on Signal        
 1894              		.loc 1 1333 0
 1895 015a 4FF00000 		mov	r0, #0
 1896 015e 4FF00001 		mov	r1, #0
 1897 0162 4FF00702 		mov	r2, #7
 1898 0166 FB68     		ldr	r3, [r7, #12]
 1899 0168 FFF7FEFF 		bl	OS_Pend
1334:C:\Micrium\Software\uCOS-III\Source\os_task.c ****             (OS_PEND_OBJ  *)0,
1335:C:\Micrium\Software\uCOS-III\Source\os_task.c ****             (OS_STATE      )OS_TASK_PEND_ON_TASK_SEM,
1336:C:\Micrium\Software\uCOS-III\Source\os_task.c ****             (OS_TICK       )timeout);
1337:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OS_CRITICAL_EXIT_NO_SCHED();
 1900              		.loc 1 1337 0
 1901 016c 7869     		ldr	r0, [r7, #20]
 1902 016e FFF7FEFF 		bl	CPU_SR_Restore
1338:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1339:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OSSched();                                              /* Find next highest priority task read
 1903              		.loc 1 1339 0
 1904 0172 FFF7FEFF 		bl	OSSched
1340:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1341:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_CRITICAL_ENTER();
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 58


 1905              		.loc 1 1341 0
 1906 0176 FFF7FEFF 		bl	CPU_SR_Save
 1907 017a 0346     		mov	r3, r0
 1908 017c 7B61     		str	r3, [r7, #20]
1342:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     switch (OSTCBCurPtr->PendStatus) {                      /* See if we timed-out or aborted      
 1909              		.loc 1 1342 0
 1910 017e 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 1911 0182 C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 1912 0186 1B68     		ldr	r3, [r3, #0]
 1913 0188 93F83530 		ldrb	r3, [r3, #53]	@ zero_extendqisi2
 1914 018c 012B     		cmp	r3, #1
 1915 018e 43D0     		beq	.L136
 1916 0190 032B     		cmp	r3, #3
 1917 0192 51D0     		beq	.L137
 1918 0194 002B     		cmp	r3, #0
 1919 0196 5BD1     		bne	.L144
 1920              	.L135:
1343:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_STATUS_PEND_OK:
1344:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              if (p_ts != (CPU_TS *)0) {
 1921              		.loc 1 1344 0
 1922 0198 7B68     		ldr	r3, [r7, #4]
 1923 019a 002B     		cmp	r3, #0
 1924 019c 37D0     		beq	.L138
1345:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                 *p_ts                    =  OSTCBCurPtr->TS;
 1925              		.loc 1 1345 0
 1926 019e 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 1927 01a2 C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 1928 01a6 1B68     		ldr	r3, [r3, #0]
 1929 01a8 1A6C     		ldr	r2, [r3, #64]
 1930 01aa 7B68     		ldr	r3, [r7, #4]
 1931 01ac 1A60     		str	r2, [r3, #0]
1346:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_TASK_PROFILE_EN > 0u
1347:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                 OSTCBCurPtr->SemPendTime = OS_TS_GET() - OSTCBCurPtr->TS;
 1932              		.loc 1 1347 0
 1933 01ae 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 1934 01b2 C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 1935 01b6 1C68     		ldr	r4, [r3, #0]
 1936 01b8 FFF7FEFF 		bl	CPU_TS_TmrRd
 1937 01bc 0246     		mov	r2, r0
 1938 01be 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 1939 01c2 C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 1940 01c6 1B68     		ldr	r3, [r3, #0]
 1941 01c8 1B6C     		ldr	r3, [r3, #64]
 1942 01ca C3EB0203 		rsb	r3, r3, r2
 1943 01ce C4F8A430 		str	r3, [r4, #164]
1348:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                 if (OSTCBCurPtr->SemPendTimeMax < OSTCBCurPtr->SemPendTime) {
 1944              		.loc 1 1348 0
 1945 01d2 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 1946 01d6 C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 1947 01da 1B68     		ldr	r3, [r3, #0]
 1948 01dc D3F8A820 		ldr	r2, [r3, #168]
 1949 01e0 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 1950 01e4 C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 1951 01e8 1B68     		ldr	r3, [r3, #0]
 1952 01ea D3F8A430 		ldr	r3, [r3, #164]
 1953 01ee 9A42     		cmp	r2, r3
 1954 01f0 0DD2     		bcs	.L138
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 59


1349:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     OSTCBCurPtr->SemPendTimeMax = OSTCBCurPtr->SemPendTime;
 1955              		.loc 1 1349 0
 1956 01f2 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 1957 01f6 C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 1958 01fa 1A68     		ldr	r2, [r3, #0]
 1959 01fc 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 1960 0200 C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 1961 0204 1B68     		ldr	r3, [r3, #0]
 1962 0206 D3F8A430 		ldr	r3, [r3, #164]
 1963 020a C2F8A830 		str	r3, [r2, #168]
 1964              	.L138:
1350:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                 }
1351:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
1352:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              }
1353:C:\Micrium\Software\uCOS-III\Source\os_task.c ****             *p_err = OS_ERR_NONE;
 1965              		.loc 1 1353 0
 1966 020e 3B68     		ldr	r3, [r7, #0]
 1967 0210 4FF00002 		mov	r2, #0
 1968 0214 1A80     		strh	r2, [r3, #0]	@ movhi
1354:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              break;
 1969              		.loc 1 1354 0
 1970 0216 1FE0     		b	.L139
 1971              	.L136:
1355:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1356:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_STATUS_PEND_ABORT:
1357:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              if (p_ts != (CPU_TS *)0) {
 1972              		.loc 1 1357 0
 1973 0218 7B68     		ldr	r3, [r7, #4]
 1974 021a 002B     		cmp	r3, #0
 1975 021c 07D0     		beq	.L140
1358:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                 *p_ts  =  OSTCBCurPtr->TS;
 1976              		.loc 1 1358 0
 1977 021e 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 1978 0222 C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 1979 0226 1B68     		ldr	r3, [r3, #0]
 1980 0228 1A6C     		ldr	r2, [r3, #64]
 1981 022a 7B68     		ldr	r3, [r7, #4]
 1982 022c 1A60     		str	r2, [r3, #0]
 1983              	.L140:
1359:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              }
1360:C:\Micrium\Software\uCOS-III\Source\os_task.c ****             *p_err = OS_ERR_PEND_ABORT;                     /* Indicate that we aborted            
 1984              		.loc 1 1360 0
 1985 022e 3B68     		ldr	r3, [r7, #0]
 1986 0230 46F2A912 		movw	r2, #25001
 1987 0234 1A80     		strh	r2, [r3, #0]	@ movhi
1361:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              break;
 1988              		.loc 1 1361 0
 1989 0236 0FE0     		b	.L139
 1990              	.L137:
1362:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1363:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_STATUS_PEND_TIMEOUT:
1364:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              if (p_ts != (CPU_TS *)0) {
 1991              		.loc 1 1364 0
 1992 0238 7B68     		ldr	r3, [r7, #4]
 1993 023a 002B     		cmp	r3, #0
 1994 023c 03D0     		beq	.L141
1365:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                 *p_ts  = (CPU_TS  )0;
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 60


 1995              		.loc 1 1365 0
 1996 023e 7B68     		ldr	r3, [r7, #4]
 1997 0240 4FF00002 		mov	r2, #0
 1998 0244 1A60     		str	r2, [r3, #0]
 1999              	.L141:
1366:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              }
1367:C:\Micrium\Software\uCOS-III\Source\os_task.c ****             *p_err = OS_ERR_TIMEOUT;                        /* Indicate that we didn't get event wi
 2000              		.loc 1 1367 0
 2001 0246 3B68     		ldr	r3, [r7, #0]
 2002 0248 47F2D922 		movw	r2, #29401
 2003 024c 1A80     		strh	r2, [r3, #0]	@ movhi
1368:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              break;
 2004              		.loc 1 1368 0
 2005 024e 03E0     		b	.L139
 2006              	.L144:
1369:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1370:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         default:
1371:C:\Micrium\Software\uCOS-III\Source\os_task.c ****             *p_err = OS_ERR_STATUS_INVALID;
 2007              		.loc 1 1371 0
 2008 0250 3B68     		ldr	r3, [r7, #0]
 2009 0252 46F62E62 		movw	r2, #28206
 2010 0256 1A80     		strh	r2, [r3, #0]	@ movhi
 2011              	.L139:
1372:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              break;
1373:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
1374:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     ctr = OSTCBCurPtr->SemCtr;
 2012              		.loc 1 1374 0
 2013 0258 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 2014 025c C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 2015 0260 1B68     		ldr	r3, [r3, #0]
 2016 0262 5B6C     		ldr	r3, [r3, #68]
 2017 0264 3B61     		str	r3, [r7, #16]
1375:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_CRITICAL_EXIT();
 2018              		.loc 1 1375 0
 2019 0266 7869     		ldr	r0, [r7, #20]
 2020 0268 FFF7FEFF 		bl	CPU_SR_Restore
1376:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     return (ctr);
 2021              		.loc 1 1376 0
 2022 026c 3B69     		ldr	r3, [r7, #16]
 2023              	.L124:
1377:C:\Micrium\Software\uCOS-III\Source\os_task.c **** }
 2024              		.loc 1 1377 0
 2025 026e 1846     		mov	r0, r3
 2026 0270 07F11C07 		add	r7, r7, #28
 2027 0274 BD46     		mov	sp, r7
 2028 0276 90BD     		pop	{r4, r7, pc}
 2029              		.cfi_endproc
 2030              	.LFE11:
 2031              		.size	OSTaskSemPend, .-OSTaskSemPend
 2032              		.section	.text.OSTaskSemPendAbort,"ax",%progbits
 2033              		.align	2
 2034              		.global	OSTaskSemPendAbort
 2035              		.thumb
 2036              		.thumb_func
 2037              		.type	OSTaskSemPendAbort, %function
 2038              	OSTaskSemPendAbort:
 2039              	.LFB12:
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 61


1378:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1379:C:\Micrium\Software\uCOS-III\Source\os_task.c **** /*$PAGE*/
1380:C:\Micrium\Software\uCOS-III\Source\os_task.c **** /*
1381:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
1382:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                               ABORT WAITING FOR A SIGNAL
1383:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1384:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Description: This function aborts & readies the task specified.  This function should be used to 
1385:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              for a signal, rather than to normally post the signal to the task via OSTaskSemPost(
1386:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1387:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Arguments  : p_tcb     is a pointer to the task to pend abort
1388:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1389:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              opt       provides options for this function:
1390:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1391:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                            OS_OPT_POST_NONE         No option selected
1392:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                            OS_OPT_POST_NO_SCHED     Indicates that the scheduler will not be call
1393:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1394:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              p_err     is a pointer to a variable that will contain an error code returned by thi
1395:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1396:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                            OS_ERR_NONE              If the task was readied and informed of the a
1397:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                            OS_ERR_PEND_ABORT_ISR    If you tried calling this function from an IS
1398:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                            OS_ERR_PEND_ABORT_NONE   If the task was not waiting for a signal
1399:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                            OS_ERR_PEND_ABORT_SELF   If you attempted to pend abort the calling ta
1400:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                                     possible since the calling task cannot be pen
1401:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                                     running.
1402:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1403:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Returns    : == DEF_FALSE   if task was not waiting for a message, or upon error.
1404:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              == DEF_TRUE    if task was waiting for a message and was readied and informed.
1405:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
1406:C:\Micrium\Software\uCOS-III\Source\os_task.c **** */
1407:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1408:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_TASK_SEM_PEND_ABORT_EN > 0u
1409:C:\Micrium\Software\uCOS-III\Source\os_task.c **** CPU_BOOLEAN  OSTaskSemPendAbort (OS_TCB  *p_tcb,
1410:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                                  OS_OPT   opt,
1411:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                                  OS_ERR  *p_err)
1412:C:\Micrium\Software\uCOS-III\Source\os_task.c **** {
 2040              		.loc 1 1412 0
 2041              		.cfi_startproc
 2042              		@ args = 0, pretend = 0, frame = 24
 2043              		@ frame_needed = 1, uses_anonymous_args = 0
 2044 0000 80B5     		push	{r7, lr}
 2045              	.LCFI36:
 2046              		.cfi_def_cfa_offset 8
 2047 0002 86B0     		sub	sp, sp, #24
 2048              	.LCFI37:
 2049              		.cfi_def_cfa_offset 32
 2050 0004 00AF     		add	r7, sp, #0
 2051              		.cfi_offset 14, -4
 2052              		.cfi_offset 7, -8
 2053              	.LCFI38:
 2054              		.cfi_def_cfa_register 7
 2055 0006 F860     		str	r0, [r7, #12]
 2056 0008 0B46     		mov	r3, r1
 2057 000a 7A60     		str	r2, [r7, #4]
 2058 000c 7B81     		strh	r3, [r7, #10]	@ movhi
1413:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_TS         ts;
1414:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_SR_ALLOC();
 2059              		.loc 1 1414 0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 62


 2060 000e 4FF00003 		mov	r3, #0
 2061 0012 7B61     		str	r3, [r7, #20]
1415:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1416:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1417:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1418:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #ifdef OS_SAFETY_CRITICAL
1419:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (p_err == (OS_ERR *)0) {
1420:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
1421:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return (DEF_FALSE);
1422:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
1423:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
1424:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1425:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_CALLED_FROM_ISR_CHK_EN > 0u
1426:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (OSIntNestingCtr > (OS_NESTING_CTR)0) {              /* See if called from ISR ...          
 2062              		.loc 1 1426 0
 2063 0014 40F20003 		movw	r3, #:lower16:OSIntNestingCtr
 2064 0018 C0F20003 		movt	r3, #:upper16:OSIntNestingCtr
 2065 001c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2066 001e 002B     		cmp	r3, #0
 2067 0020 06D0     		beq	.L146
1427:C:\Micrium\Software\uCOS-III\Source\os_task.c ****        *p_err = OS_ERR_PEND_ABORT_ISR;                      /* ... can't Pend Abort from an ISR    
 2068              		.loc 1 1427 0
 2069 0022 7B68     		ldr	r3, [r7, #4]
 2070 0024 46F2AA12 		movw	r2, #25002
 2071 0028 1A80     		strh	r2, [r3, #0]	@ movhi
1428:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return (DEF_FALSE);
 2072              		.loc 1 1428 0
 2073 002a 4FF00003 		mov	r3, #0
 2074 002e 55E0     		b	.L147
 2075              	.L146:
1429:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
1430:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
1431:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1432:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_ARG_CHK_EN > 0u
1433:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     switch (opt) {                                          /* Validate 'opt'                      
 2076              		.loc 1 1433 0
 2077 0030 7B89     		ldrh	r3, [r7, #10]
 2078 0032 002B     		cmp	r3, #0
 2079 0034 02D0     		beq	.L149
 2080 0036 B3F5004F 		cmp	r3, #32768
 2081 003a 07D1     		bne	.L156
 2082              	.L149:
1434:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_OPT_POST_NONE:
1435:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_OPT_POST_NO_SCHED:
1436:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              break;
1437:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1438:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         default:
1439:C:\Micrium\Software\uCOS-III\Source\os_task.c ****             *p_err =  OS_ERR_OPT_INVALID;
1440:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              return (DEF_FALSE);
1441:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
1442:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
1443:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1444:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_CRITICAL_ENTER();
 2083              		.loc 1 1444 0
 2084 003c FFF7FEFF 		bl	CPU_SR_Save
 2085 0040 0346     		mov	r3, r0
 2086 0042 7B61     		str	r3, [r7, #20]
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 63


1445:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if ((p_tcb == (OS_TCB *)0) ||                           /* Pend abort self?                    
 2087              		.loc 1 1445 0
 2088 0044 FB68     		ldr	r3, [r7, #12]
 2089 0046 002B     		cmp	r3, #0
 2090 0048 0FD0     		beq	.L150
 2091 004a 06E0     		b	.L157
 2092              	.L156:
 2093              		.loc 1 1439 0
 2094 004c 7B68     		ldr	r3, [r7, #4]
 2095 004e 45F62562 		movw	r2, #24101
 2096 0052 1A80     		strh	r2, [r3, #0]	@ movhi
 2097              		.loc 1 1440 0
 2098 0054 4FF00003 		mov	r3, #0
 2099 0058 40E0     		b	.L147
 2100              	.L157:
1446:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         (p_tcb == OSTCBCurPtr)) {
 2101              		.loc 1 1446 0
 2102 005a 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 2103 005e C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 2104 0062 1B68     		ldr	r3, [r3, #0]
 2105              		.loc 1 1445 0
 2106 0064 FA68     		ldr	r2, [r7, #12]
 2107 0066 9A42     		cmp	r2, r3
 2108 0068 09D1     		bne	.L152
 2109              	.L150:
1447:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         CPU_CRITICAL_EXIT();                                /* ... doesn't make sense!             
 2110              		.loc 1 1447 0
 2111 006a 7869     		ldr	r0, [r7, #20]
 2112 006c FFF7FEFF 		bl	CPU_SR_Restore
1448:C:\Micrium\Software\uCOS-III\Source\os_task.c ****        *p_err = OS_ERR_PEND_ABORT_SELF;
 2113              		.loc 1 1448 0
 2114 0070 7B68     		ldr	r3, [r7, #4]
 2115 0072 46F2AC12 		movw	r2, #25004
 2116 0076 1A80     		strh	r2, [r3, #0]	@ movhi
1449:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return (DEF_FALSE);
 2117              		.loc 1 1449 0
 2118 0078 4FF00003 		mov	r3, #0
 2119 007c 2EE0     		b	.L147
 2120              	.L152:
1450:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
1451:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1452:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (p_tcb->PendOn != OS_TASK_PEND_ON_TASK_SEM) {        /* Is task waiting for a signal?       
 2121              		.loc 1 1452 0
 2122 007e FB68     		ldr	r3, [r7, #12]
 2123 0080 93F83430 		ldrb	r3, [r3, #52]	@ zero_extendqisi2
 2124 0084 072B     		cmp	r3, #7
 2125 0086 09D0     		beq	.L153
1453:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         CPU_CRITICAL_EXIT();
 2126              		.loc 1 1453 0
 2127 0088 7869     		ldr	r0, [r7, #20]
 2128 008a FFF7FEFF 		bl	CPU_SR_Restore
1454:C:\Micrium\Software\uCOS-III\Source\os_task.c ****        *p_err = OS_ERR_PEND_ABORT_NONE;
 2129              		.loc 1 1454 0
 2130 008e 7B68     		ldr	r3, [r7, #4]
 2131 0090 46F2AB12 		movw	r2, #25003
 2132 0094 1A80     		strh	r2, [r3, #0]	@ movhi
1455:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return (DEF_FALSE);
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 64


 2133              		.loc 1 1455 0
 2134 0096 4FF00003 		mov	r3, #0
 2135 009a 1FE0     		b	.L147
 2136              	.L153:
1456:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
1457:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_CRITICAL_EXIT();
 2137              		.loc 1 1457 0
 2138 009c 7869     		ldr	r0, [r7, #20]
 2139 009e FFF7FEFF 		bl	CPU_SR_Restore
1458:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1459:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OS_CRITICAL_ENTER();
 2140              		.loc 1 1459 0
 2141 00a2 FFF7FEFF 		bl	CPU_SR_Save
 2142 00a6 0346     		mov	r3, r0
 2143 00a8 7B61     		str	r3, [r7, #20]
1460:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     ts = OS_TS_GET();
 2144              		.loc 1 1460 0
 2145 00aa FFF7FEFF 		bl	CPU_TS_TmrRd
 2146 00ae 0346     		mov	r3, r0
 2147 00b0 3B61     		str	r3, [r7, #16]
1461:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OS_PendAbort((OS_PEND_OBJ *)0,
 2148              		.loc 1 1461 0
 2149 00b2 4FF00000 		mov	r0, #0
 2150 00b6 F968     		ldr	r1, [r7, #12]
 2151 00b8 3A69     		ldr	r2, [r7, #16]
 2152 00ba FFF7FEFF 		bl	OS_PendAbort
1462:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  p_tcb,
1463:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  ts);
1464:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OS_CRITICAL_EXIT_NO_SCHED();
 2153              		.loc 1 1464 0
 2154 00be 7869     		ldr	r0, [r7, #20]
 2155 00c0 FFF7FEFF 		bl	CPU_SR_Restore
1465:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if ((opt & OS_OPT_POST_NO_SCHED) == (OS_OPT)0) {
 2156              		.loc 1 1465 0
 2157 00c4 7B89     		ldrh	r3, [r7, #10]
 2158 00c6 1BB2     		sxth	r3, r3
 2159 00c8 002B     		cmp	r3, #0
 2160 00ca 01DB     		blt	.L154
1466:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         OSSched();                                          /* Run the scheduler                   
 2161              		.loc 1 1466 0
 2162 00cc FFF7FEFF 		bl	OSSched
 2163              	.L154:
1467:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
1468:C:\Micrium\Software\uCOS-III\Source\os_task.c ****    *p_err = OS_ERR_NONE;
 2164              		.loc 1 1468 0
 2165 00d0 7B68     		ldr	r3, [r7, #4]
 2166 00d2 4FF00002 		mov	r2, #0
 2167 00d6 1A80     		strh	r2, [r3, #0]	@ movhi
1469:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     return (DEF_TRUE);
 2168              		.loc 1 1469 0
 2169 00d8 4FF00103 		mov	r3, #1
 2170              	.L147:
1470:C:\Micrium\Software\uCOS-III\Source\os_task.c **** }
 2171              		.loc 1 1470 0
 2172 00dc 1846     		mov	r0, r3
 2173 00de 07F11807 		add	r7, r7, #24
 2174 00e2 BD46     		mov	sp, r7
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 65


 2175 00e4 80BD     		pop	{r7, pc}
 2176              		.cfi_endproc
 2177              	.LFE12:
 2178              		.size	OSTaskSemPendAbort, .-OSTaskSemPendAbort
 2179 00e6 00BF     		.section	.text.OSTaskSemPost,"ax",%progbits
 2180              		.align	2
 2181              		.global	OSTaskSemPost
 2182              		.thumb
 2183              		.thumb_func
 2184              		.type	OSTaskSemPost, %function
 2185              	OSTaskSemPost:
 2186              	.LFB13:
1471:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
1472:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1473:C:\Micrium\Software\uCOS-III\Source\os_task.c **** /*$PAGE*/
1474:C:\Micrium\Software\uCOS-III\Source\os_task.c **** /*
1475:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
1476:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                                    SIGNAL A TASK
1477:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1478:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Description: This function is called to signal a task waiting for a signal.
1479:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1480:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Arguments  : p_tcb     is the pointer to the TCB of the task to signal.  A NULL pointer indicates
1481:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                        a signal to yourself.
1482:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1483:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              opt       determines the type of POST performed:
1484:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1485:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             OS_OPT_POST_NONE         No option
1486:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             OS_OPT_POST_NO_SCHED     Do not call the scheduler
1487:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1488:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              p_err     is a pointer to an error code returned by this function:
1489:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1490:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                            OS_ERR_NONE              If the requested task is signaled
1491:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                            OS_ERR_SEM_OVF           If the post would cause the semaphore count t
1492:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1493:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Returns    : The current value of the task's signal counter or 0 if called from an ISR
1494:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
1495:C:\Micrium\Software\uCOS-III\Source\os_task.c **** */
1496:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1497:C:\Micrium\Software\uCOS-III\Source\os_task.c **** OS_SEM_CTR  OSTaskSemPost (OS_TCB  *p_tcb,
1498:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                            OS_OPT   opt,
1499:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                            OS_ERR  *p_err)
1500:C:\Micrium\Software\uCOS-III\Source\os_task.c **** {
 2187              		.loc 1 1500 0
 2188              		.cfi_startproc
 2189              		@ args = 0, pretend = 0, frame = 24
 2190              		@ frame_needed = 1, uses_anonymous_args = 0
 2191 0000 80B5     		push	{r7, lr}
 2192              	.LCFI39:
 2193              		.cfi_def_cfa_offset 8
 2194 0002 86B0     		sub	sp, sp, #24
 2195              	.LCFI40:
 2196              		.cfi_def_cfa_offset 32
 2197 0004 00AF     		add	r7, sp, #0
 2198              		.cfi_offset 14, -4
 2199              		.cfi_offset 7, -8
 2200              	.LCFI41:
 2201              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 66


 2202 0006 F860     		str	r0, [r7, #12]
 2203 0008 0B46     		mov	r3, r1
 2204 000a 7A60     		str	r2, [r7, #4]
 2205 000c 7B81     		strh	r3, [r7, #10]	@ movhi
1501:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OS_SEM_CTR  ctr;
1502:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_TS      ts;
1503:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1504:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1505:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1506:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #ifdef OS_SAFETY_CRITICAL
1507:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (p_err == (OS_ERR *)0) {
1508:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
1509:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return ((OS_SEM_CTR)0);
1510:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
1511:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
1512:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1513:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_ARG_CHK_EN > 0u
1514:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     switch (opt) {                                          /* Validate 'opt'                      
 2206              		.loc 1 1514 0
 2207 000e 7B89     		ldrh	r3, [r7, #10]
 2208 0010 002B     		cmp	r3, #0
 2209 0012 02D0     		beq	.L160
 2210 0014 B3F5004F 		cmp	r3, #32768
 2211 0018 0ED1     		bne	.L163
 2212              	.L160:
1515:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_OPT_POST_NONE:
1516:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_OPT_POST_NO_SCHED:
1517:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              break;
1518:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1519:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         default:
1520:C:\Micrium\Software\uCOS-III\Source\os_task.c ****             *p_err =  OS_ERR_OPT_INVALID;
1521:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              return ((OS_SEM_CTR)0u);
1522:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
1523:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
1524:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1525:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     ts = OS_TS_GET();                                       /* Get timestamp                       
 2213              		.loc 1 1525 0
 2214 001a FFF7FEFF 		bl	CPU_TS_TmrRd
 2215 001e 0346     		mov	r3, r0
 2216 0020 7B61     		str	r3, [r7, #20]
1526:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1527:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_ISR_POST_DEFERRED_EN > 0u
1528:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (OSIntNestingCtr > (OS_NESTING_CTR)0) {              /* See if called from an ISR           
1529:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         OS_IntQPost((OS_OBJ_TYPE)OS_OBJ_TYPE_TASK_SIGNAL,   /* Post to ISR queue                   
1530:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     (void      *)p_tcb,
1531:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     (void      *)0,
1532:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     (OS_MSG_SIZE)0,
1533:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     (OS_FLAGS   )0,
1534:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     (OS_OPT     )0,
1535:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     (CPU_TS     )ts,
1536:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     (OS_ERR    *)p_err);
1537:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return ((OS_SEM_CTR)0);
1538:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
1539:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
1540:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1541:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     ctr = OS_TaskSemPost(p_tcb,
 2217              		.loc 1 1541 0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 67


 2218 0022 7B89     		ldrh	r3, [r7, #10]
 2219 0024 F868     		ldr	r0, [r7, #12]
 2220 0026 1946     		mov	r1, r3
 2221 0028 7A69     		ldr	r2, [r7, #20]
 2222 002a 7B68     		ldr	r3, [r7, #4]
 2223 002c FFF7FEFF 		bl	OS_TaskSemPost
 2224 0030 0346     		mov	r3, r0
 2225 0032 3B61     		str	r3, [r7, #16]
1542:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                          opt,
1543:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                          ts,
1544:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                          p_err);
1545:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1546:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     return (ctr);
 2226              		.loc 1 1546 0
 2227 0034 3B69     		ldr	r3, [r7, #16]
 2228 0036 05E0     		b	.L161
 2229              	.L163:
 2230              		.loc 1 1520 0
 2231 0038 7B68     		ldr	r3, [r7, #4]
 2232 003a 45F62562 		movw	r2, #24101
 2233 003e 1A80     		strh	r2, [r3, #0]	@ movhi
 2234              		.loc 1 1521 0
 2235 0040 4FF00003 		mov	r3, #0
 2236              	.L161:
1547:C:\Micrium\Software\uCOS-III\Source\os_task.c **** }
 2237              		.loc 1 1547 0
 2238 0044 1846     		mov	r0, r3
 2239 0046 07F11807 		add	r7, r7, #24
 2240 004a BD46     		mov	sp, r7
 2241 004c 80BD     		pop	{r7, pc}
 2242              		.cfi_endproc
 2243              	.LFE13:
 2244              		.size	OSTaskSemPost, .-OSTaskSemPost
 2245 004e 00BF     		.section	.text.OSTaskSemSet,"ax",%progbits
 2246              		.align	2
 2247              		.global	OSTaskSemSet
 2248              		.thumb
 2249              		.thumb_func
 2250              		.type	OSTaskSemSet, %function
 2251              	OSTaskSemSet:
 2252              	.LFB14:
1548:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1549:C:\Micrium\Software\uCOS-III\Source\os_task.c **** /*$PAGE*/
1550:C:\Micrium\Software\uCOS-III\Source\os_task.c **** /*
1551:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
1552:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                            SET THE SIGNAL COUNTER OF A TASK
1553:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1554:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Description: This function is called to clear the signal counter
1555:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1556:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Arguments  : p_tcb      is the pointer to the TCB of the task to clear the counter.  If you speci
1557:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                         then the signal counter of the current task will be cleared.
1558:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1559:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              cnt        is the desired value of the semaphore counter
1560:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1561:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              p_err      is a pointer to an error code returned by this function
1562:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1563:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             OS_ERR_NONE        if the signal counter of the requested task is cle
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 68


1564:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             OS_ERR_SET_ISR     if the function was called from an ISR
1565:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1566:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Returns    : none
1567:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
1568:C:\Micrium\Software\uCOS-III\Source\os_task.c **** */
1569:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1570:C:\Micrium\Software\uCOS-III\Source\os_task.c **** OS_SEM_CTR  OSTaskSemSet (OS_TCB      *p_tcb,
1571:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                           OS_SEM_CTR   cnt,
1572:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                           OS_ERR      *p_err)
1573:C:\Micrium\Software\uCOS-III\Source\os_task.c **** {
 2253              		.loc 1 1573 0
 2254              		.cfi_startproc
 2255              		@ args = 0, pretend = 0, frame = 24
 2256              		@ frame_needed = 1, uses_anonymous_args = 0
 2257 0000 80B5     		push	{r7, lr}
 2258              	.LCFI42:
 2259              		.cfi_def_cfa_offset 8
 2260 0002 86B0     		sub	sp, sp, #24
 2261              	.LCFI43:
 2262              		.cfi_def_cfa_offset 32
 2263 0004 00AF     		add	r7, sp, #0
 2264              		.cfi_offset 14, -4
 2265              		.cfi_offset 7, -8
 2266              	.LCFI44:
 2267              		.cfi_def_cfa_register 7
 2268 0006 F860     		str	r0, [r7, #12]
 2269 0008 B960     		str	r1, [r7, #8]
 2270 000a 7A60     		str	r2, [r7, #4]
1574:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OS_SEM_CTR  ctr;
1575:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_SR_ALLOC();
 2271              		.loc 1 1575 0
 2272 000c 4FF00003 		mov	r3, #0
 2273 0010 7B61     		str	r3, [r7, #20]
1576:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1577:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1578:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1579:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #ifdef OS_SAFETY_CRITICAL
1580:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (p_err == (OS_ERR *)0) {
1581:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
1582:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return ((OS_SEM_CTR)0);
1583:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
1584:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
1585:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1586:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_CALLED_FROM_ISR_CHK_EN > 0u
1587:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (OSIntNestingCtr > (OS_NESTING_CTR)0) {              /* Not allowed to call from an ISR     
 2274              		.loc 1 1587 0
 2275 0012 40F20003 		movw	r3, #:lower16:OSIntNestingCtr
 2276 0016 C0F20003 		movt	r3, #:upper16:OSIntNestingCtr
 2277 001a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2278 001c 002B     		cmp	r3, #0
 2279 001e 06D0     		beq	.L165
1588:C:\Micrium\Software\uCOS-III\Source\os_task.c ****        *p_err = OS_ERR_SET_ISR;
 2280              		.loc 1 1588 0
 2281 0020 7B68     		ldr	r3, [r7, #4]
 2282 0022 46F6C652 		movw	r2, #28102
 2283 0026 1A80     		strh	r2, [r3, #0]	@ movhi
1589:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return ((OS_SEM_CTR)0);
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 69


 2284              		.loc 1 1589 0
 2285 0028 4FF00003 		mov	r3, #0
 2286 002c 1AE0     		b	.L166
 2287              	.L165:
1590:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
1591:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
1592:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1593:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_CRITICAL_ENTER();
 2288              		.loc 1 1593 0
 2289 002e FFF7FEFF 		bl	CPU_SR_Save
 2290 0032 0346     		mov	r3, r0
 2291 0034 7B61     		str	r3, [r7, #20]
1594:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (p_tcb == (OS_TCB *)0) {
 2292              		.loc 1 1594 0
 2293 0036 FB68     		ldr	r3, [r7, #12]
 2294 0038 002B     		cmp	r3, #0
 2295 003a 05D1     		bne	.L167
1595:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         p_tcb = OSTCBCurPtr;
 2296              		.loc 1 1595 0
 2297 003c 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 2298 0040 C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 2299 0044 1B68     		ldr	r3, [r3, #0]
 2300 0046 FB60     		str	r3, [r7, #12]
 2301              	.L167:
1596:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
1597:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     ctr           = p_tcb->SemCtr;
 2302              		.loc 1 1597 0
 2303 0048 FB68     		ldr	r3, [r7, #12]
 2304 004a 5B6C     		ldr	r3, [r3, #68]
 2305 004c 3B61     		str	r3, [r7, #16]
1598:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->SemCtr = (OS_SEM_CTR)cnt;
 2306              		.loc 1 1598 0
 2307 004e FB68     		ldr	r3, [r7, #12]
 2308 0050 BA68     		ldr	r2, [r7, #8]
 2309 0052 5A64     		str	r2, [r3, #68]
1599:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_CRITICAL_EXIT();
 2310              		.loc 1 1599 0
 2311 0054 7869     		ldr	r0, [r7, #20]
 2312 0056 FFF7FEFF 		bl	CPU_SR_Restore
1600:C:\Micrium\Software\uCOS-III\Source\os_task.c ****    *p_err         =  OS_ERR_NONE;
 2313              		.loc 1 1600 0
 2314 005a 7B68     		ldr	r3, [r7, #4]
 2315 005c 4FF00002 		mov	r2, #0
 2316 0060 1A80     		strh	r2, [r3, #0]	@ movhi
1601:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     return (ctr);
 2317              		.loc 1 1601 0
 2318 0062 3B69     		ldr	r3, [r7, #16]
 2319              	.L166:
1602:C:\Micrium\Software\uCOS-III\Source\os_task.c **** }
 2320              		.loc 1 1602 0
 2321 0064 1846     		mov	r0, r3
 2322 0066 07F11807 		add	r7, r7, #24
 2323 006a BD46     		mov	sp, r7
 2324 006c 80BD     		pop	{r7, pc}
 2325              		.cfi_endproc
 2326              	.LFE14:
 2327              		.size	OSTaskSemSet, .-OSTaskSemSet
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 70


 2328 006e 00BF     		.section	.text.OSTaskStkChk,"ax",%progbits
 2329              		.align	2
 2330              		.global	OSTaskStkChk
 2331              		.thumb
 2332              		.thumb_func
 2333              		.type	OSTaskStkChk, %function
 2334              	OSTaskStkChk:
 2335              	.LFB15:
1603:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1604:C:\Micrium\Software\uCOS-III\Source\os_task.c **** /*$PAGE*/
1605:C:\Micrium\Software\uCOS-III\Source\os_task.c **** /*
1606:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
1607:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                                    STACK CHECKING
1608:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1609:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Description: This function is called to calculate the amount of free memory left on the specified
1610:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1611:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Arguments  : p_tcb       is a pointer to the TCB of the task to check.  If you specify a NULL poi
1612:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                          you are specifying that you want to check the stack of the current task.
1613:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1614:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              p_free      is a pointer to a variable that will receive the number of free 'entries
1615:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1616:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              p_used      is a pointer to a variable that will receive the number of used 'entries
1617:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1618:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              p_err       is a pointer to a variable that will contain an error code.
1619:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1620:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                              OS_ERR_NONE               upon success
1621:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                              OS_ERR_PTR_INVALID        if either 'p_free' or 'p_used' are NULL po
1622:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                              OS_ERR_TASK_NOT_EXIST     if the stack pointer of the task is a NULL
1623:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                              OS_ERR_TASK_OPT           if you did NOT specified OS_OPT_TASK_STK_C
1624:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                                        was created
1625:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                              OS_ERR_TASK_STK_CHK_ISR   you called this function from an ISR
1626:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
1627:C:\Micrium\Software\uCOS-III\Source\os_task.c **** */
1628:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1629:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_STAT_TASK_STK_CHK_EN > 0u
1630:C:\Micrium\Software\uCOS-III\Source\os_task.c **** void  OSTaskStkChk (OS_TCB        *p_tcb,
1631:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     CPU_STK_SIZE  *p_free,
1632:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     CPU_STK_SIZE  *p_used,
1633:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     OS_ERR        *p_err)
1634:C:\Micrium\Software\uCOS-III\Source\os_task.c **** {
 2336              		.loc 1 1634 0
 2337              		.cfi_startproc
 2338              		@ args = 0, pretend = 0, frame = 32
 2339              		@ frame_needed = 1, uses_anonymous_args = 0
 2340 0000 80B5     		push	{r7, lr}
 2341              	.LCFI45:
 2342              		.cfi_def_cfa_offset 8
 2343 0002 88B0     		sub	sp, sp, #32
 2344              	.LCFI46:
 2345              		.cfi_def_cfa_offset 40
 2346 0004 00AF     		add	r7, sp, #0
 2347              		.cfi_offset 14, -4
 2348              		.cfi_offset 7, -8
 2349              	.LCFI47:
 2350              		.cfi_def_cfa_register 7
 2351 0006 F860     		str	r0, [r7, #12]
 2352 0008 B960     		str	r1, [r7, #8]
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 71


 2353 000a 7A60     		str	r2, [r7, #4]
 2354 000c 3B60     		str	r3, [r7, #0]
1635:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_STK_SIZE  free_stk;
1636:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_STK      *p_stk;
1637:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_SR_ALLOC();
 2355              		.loc 1 1637 0
 2356 000e 4FF00003 		mov	r3, #0
 2357 0012 FB61     		str	r3, [r7, #28]
1638:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1639:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1640:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1641:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #ifdef OS_SAFETY_CRITICAL
1642:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (p_err == (OS_ERR *)0) {
1643:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
1644:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return;
1645:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
1646:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
1647:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1648:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_CALLED_FROM_ISR_CHK_EN > 0u
1649:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (OSIntNestingCtr > (OS_NESTING_CTR)0) {              /* See if trying to check stack from IS
 2358              		.loc 1 1649 0
 2359 0014 40F20003 		movw	r3, #:lower16:OSIntNestingCtr
 2360 0018 C0F20003 		movt	r3, #:upper16:OSIntNestingCtr
 2361 001c 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2362 001e 002B     		cmp	r3, #0
 2363 0020 04D0     		beq	.L170
1650:C:\Micrium\Software\uCOS-III\Source\os_task.c ****        *p_err = OS_ERR_TASK_STK_CHK_ISR;
 2364              		.loc 1 1650 0
 2365 0022 3B68     		ldr	r3, [r7, #0]
 2366 0024 47F25912 		movw	r2, #29017
 2367 0028 1A80     		strh	r2, [r3, #0]	@ movhi
1651:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return;
 2368              		.loc 1 1651 0
 2369 002a 6AE0     		b	.L179
 2370              	.L170:
1652:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
1653:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
1654:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1655:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_ARG_CHK_EN > 0u
1656:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (p_free == (CPU_STK_SIZE*)0) {                       /* User must specify valid destinations
 2371              		.loc 1 1656 0
 2372 002c BB68     		ldr	r3, [r7, #8]
 2373 002e 002B     		cmp	r3, #0
 2374 0030 04D1     		bne	.L172
1657:C:\Micrium\Software\uCOS-III\Source\os_task.c ****        *p_err  = OS_ERR_PTR_INVALID;
 2375              		.loc 1 1657 0
 2376 0032 3B68     		ldr	r3, [r7, #0]
 2377 0034 46F2D522 		movw	r2, #25301
 2378 0038 1A80     		strh	r2, [r3, #0]	@ movhi
1658:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return;
 2379              		.loc 1 1658 0
 2380 003a 62E0     		b	.L179
 2381              	.L172:
1659:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
1660:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1661:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (p_used == (CPU_STK_SIZE*)0) {
 2382              		.loc 1 1661 0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 72


 2383 003c 7B68     		ldr	r3, [r7, #4]
 2384 003e 002B     		cmp	r3, #0
 2385 0040 04D1     		bne	.L173
1662:C:\Micrium\Software\uCOS-III\Source\os_task.c ****        *p_err  = OS_ERR_PTR_INVALID;
 2386              		.loc 1 1662 0
 2387 0042 3B68     		ldr	r3, [r7, #0]
 2388 0044 46F2D522 		movw	r2, #25301
 2389 0048 1A80     		strh	r2, [r3, #0]	@ movhi
1663:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return;
 2390              		.loc 1 1663 0
 2391 004a 5AE0     		b	.L179
 2392              	.L173:
1664:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
1665:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
1666:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1667:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_CRITICAL_ENTER();
 2393              		.loc 1 1667 0
 2394 004c FFF7FEFF 		bl	CPU_SR_Save
 2395 0050 0346     		mov	r3, r0
 2396 0052 FB61     		str	r3, [r7, #28]
1668:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (p_tcb == (OS_TCB *)0) {                             /* Check the stack of the current task?
 2397              		.loc 1 1668 0
 2398 0054 FB68     		ldr	r3, [r7, #12]
 2399 0056 002B     		cmp	r3, #0
 2400 0058 05D1     		bne	.L174
1669:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         p_tcb = OSTCBCurPtr;                                /* Yes                                 
 2401              		.loc 1 1669 0
 2402 005a 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 2403 005e C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 2404 0062 1B68     		ldr	r3, [r3, #0]
 2405 0064 FB60     		str	r3, [r7, #12]
 2406              	.L174:
1670:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
1671:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1672:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (p_tcb->StkPtr == (CPU_STK*)0) {                     /* Make sure task exist                
 2407              		.loc 1 1672 0
 2408 0066 FB68     		ldr	r3, [r7, #12]
 2409 0068 1B68     		ldr	r3, [r3, #0]
 2410 006a 002B     		cmp	r3, #0
 2411 006c 0FD1     		bne	.L175
1673:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         CPU_CRITICAL_EXIT();
 2412              		.loc 1 1673 0
 2413 006e F869     		ldr	r0, [r7, #28]
 2414 0070 FFF7FEFF 		bl	CPU_SR_Restore
1674:C:\Micrium\Software\uCOS-III\Source\os_task.c ****        *p_free = (CPU_STK_SIZE)0;
 2415              		.loc 1 1674 0
 2416 0074 BB68     		ldr	r3, [r7, #8]
 2417 0076 4FF00002 		mov	r2, #0
 2418 007a 1A60     		str	r2, [r3, #0]
1675:C:\Micrium\Software\uCOS-III\Source\os_task.c ****        *p_used = (CPU_STK_SIZE)0;
 2419              		.loc 1 1675 0
 2420 007c 7B68     		ldr	r3, [r7, #4]
 2421 007e 4FF00002 		mov	r2, #0
 2422 0082 1A60     		str	r2, [r3, #0]
1676:C:\Micrium\Software\uCOS-III\Source\os_task.c ****        *p_err  =  OS_ERR_TASK_NOT_EXIST;
 2423              		.loc 1 1676 0
 2424 0084 3B68     		ldr	r3, [r7, #0]
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 73


 2425 0086 47F25212 		movw	r2, #29010
 2426 008a 1A80     		strh	r2, [r3, #0]	@ movhi
1677:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return;
 2427              		.loc 1 1677 0
 2428 008c 39E0     		b	.L179
 2429              	.L175:
1678:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
1679:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1680:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if ((p_tcb->Opt & OS_OPT_TASK_STK_CHK) == (OS_OPT)0) {  /* Make sure stack checking option is s
 2430              		.loc 1 1680 0
 2431 008e FB68     		ldr	r3, [r7, #12]
 2432 0090 9B8F     		ldrh	r3, [r3, #60]
 2433 0092 03F00103 		and	r3, r3, #1
 2434 0096 002B     		cmp	r3, #0
 2435 0098 0FD1     		bne	.L176
1681:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         CPU_CRITICAL_EXIT();
 2436              		.loc 1 1681 0
 2437 009a F869     		ldr	r0, [r7, #28]
 2438 009c FFF7FEFF 		bl	CPU_SR_Restore
1682:C:\Micrium\Software\uCOS-III\Source\os_task.c ****        *p_free = (CPU_STK_SIZE)0;
 2439              		.loc 1 1682 0
 2440 00a0 BB68     		ldr	r3, [r7, #8]
 2441 00a2 4FF00002 		mov	r2, #0
 2442 00a6 1A60     		str	r2, [r3, #0]
1683:C:\Micrium\Software\uCOS-III\Source\os_task.c ****        *p_used = (CPU_STK_SIZE)0;
 2443              		.loc 1 1683 0
 2444 00a8 7B68     		ldr	r3, [r7, #4]
 2445 00aa 4FF00002 		mov	r2, #0
 2446 00ae 1A60     		str	r2, [r3, #0]
1684:C:\Micrium\Software\uCOS-III\Source\os_task.c ****        *p_err  =  OS_ERR_TASK_OPT;
 2447              		.loc 1 1684 0
 2448 00b0 3B68     		ldr	r3, [r7, #0]
 2449 00b2 47F25412 		movw	r2, #29012
 2450 00b6 1A80     		strh	r2, [r3, #0]	@ movhi
1685:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return;
 2451              		.loc 1 1685 0
 2452 00b8 23E0     		b	.L179
 2453              	.L176:
1686:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
1687:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_CRITICAL_EXIT();
 2454              		.loc 1 1687 0
 2455 00ba F869     		ldr	r0, [r7, #28]
 2456 00bc FFF7FEFF 		bl	CPU_SR_Restore
1688:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1689:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     free_stk  = 0u;
 2457              		.loc 1 1689 0
 2458 00c0 4FF00003 		mov	r3, #0
 2459 00c4 7B61     		str	r3, [r7, #20]
1690:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if CPU_CFG_STK_GROWTH == CPU_STK_GROWTH_HI_TO_LO
1691:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_stk = p_tcb->StkBasePtr;                              /* Start at the lowest memory and go up
 2460              		.loc 1 1691 0
 2461 00c6 FB68     		ldr	r3, [r7, #12]
 2462 00c8 5B6A     		ldr	r3, [r3, #36]
 2463 00ca BB61     		str	r3, [r7, #24]
1692:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     while (*p_stk == (CPU_STK)0) {                          /* Compute the number of zero entries o
 2464              		.loc 1 1692 0
 2465 00cc 07E0     		b	.L177
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 74


 2466              	.L178:
1693:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         p_stk++;
 2467              		.loc 1 1693 0
 2468 00ce BB69     		ldr	r3, [r7, #24]
 2469 00d0 03F10403 		add	r3, r3, #4
 2470 00d4 BB61     		str	r3, [r7, #24]
1694:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         free_stk++;
 2471              		.loc 1 1694 0
 2472 00d6 7B69     		ldr	r3, [r7, #20]
 2473 00d8 03F10103 		add	r3, r3, #1
 2474 00dc 7B61     		str	r3, [r7, #20]
 2475              	.L177:
 2476              		.loc 1 1692 0
 2477 00de BB69     		ldr	r3, [r7, #24]
 2478 00e0 1B68     		ldr	r3, [r3, #0]
 2479 00e2 002B     		cmp	r3, #0
 2480 00e4 F3D0     		beq	.L178
1695:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
1696:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #else
1697:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_stk = p_tcb->StkBasePtr + p_tcb->StkSize - 1u;        /* Start at the highest memory and go d
1698:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     while (*p_stk == (CPU_STK)0) {
1699:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         free_stk++;
1700:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         p_stk--;
1701:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
1702:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
1703:C:\Micrium\Software\uCOS-III\Source\os_task.c ****    *p_free = free_stk;
 2481              		.loc 1 1703 0
 2482 00e6 BB68     		ldr	r3, [r7, #8]
 2483 00e8 7A69     		ldr	r2, [r7, #20]
 2484 00ea 1A60     		str	r2, [r3, #0]
1704:C:\Micrium\Software\uCOS-III\Source\os_task.c ****    *p_used = (p_tcb->StkSize - free_stk);                   /* Compute number of entries used on th
 2485              		.loc 1 1704 0
 2486 00ec FB68     		ldr	r3, [r7, #12]
 2487 00ee 9A6B     		ldr	r2, [r3, #56]
 2488 00f0 7B69     		ldr	r3, [r7, #20]
 2489 00f2 C3EB0202 		rsb	r2, r3, r2
 2490 00f6 7B68     		ldr	r3, [r7, #4]
 2491 00f8 1A60     		str	r2, [r3, #0]
1705:C:\Micrium\Software\uCOS-III\Source\os_task.c ****    *p_err  = OS_ERR_NONE;
 2492              		.loc 1 1705 0
 2493 00fa 3B68     		ldr	r3, [r7, #0]
 2494 00fc 4FF00002 		mov	r2, #0
 2495 0100 1A80     		strh	r2, [r3, #0]	@ movhi
 2496              	.L179:
1706:C:\Micrium\Software\uCOS-III\Source\os_task.c **** }
 2497              		.loc 1 1706 0
 2498 0102 07F12007 		add	r7, r7, #32
 2499 0106 BD46     		mov	sp, r7
 2500 0108 80BD     		pop	{r7, pc}
 2501              		.cfi_endproc
 2502              	.LFE15:
 2503              		.size	OSTaskStkChk, .-OSTaskStkChk
 2504 010a 00BF     		.section	.text.OSTaskSuspend,"ax",%progbits
 2505              		.align	2
 2506              		.global	OSTaskSuspend
 2507              		.thumb
 2508              		.thumb_func
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 75


 2509              		.type	OSTaskSuspend, %function
 2510              	OSTaskSuspend:
 2511              	.LFB16:
1707:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
1708:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1709:C:\Micrium\Software\uCOS-III\Source\os_task.c **** /*$PAGE*/
1710:C:\Micrium\Software\uCOS-III\Source\os_task.c **** /*
1711:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
1712:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                                   SUSPEND A TASK
1713:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1714:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Description: This function is called to suspend a task.  The task can be the calling task if 'p_t
1715:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              or the pointer to the TCB of the calling task.
1716:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1717:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Arguments  : p_tcb    is a pointer to the TCB to suspend.
1718:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                       If p_tcb is a NULL pointer then, suspend the current task.
1719:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1720:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              p_err    is a pointer to a variable that will receive an error code from this functi
1721:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1722:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                           OS_ERR_NONE                      if the requested task is suspended
1723:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                           OS_ERR_SCHED_LOCKED              you can't suspend the current task is 
1724:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                                            locked
1725:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                           OS_ERR_TASK_SUSPEND_ISR          if you called this function from an IS
1726:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                           OS_ERR_TASK_SUSPEND_IDLE         if you attempted to suspend the idle t
1727:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                                            allowed.
1728:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                           OS_ERR_TASK_SUSPEND_INT_HANDLER  if you attempted to suspend the idle t
1729:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                                            allowed.
1730:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1731:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Note(s)    : 1) You should use this function with great care.  If you suspend a task that is wait
1732:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                 (i.e. a message, a semaphore, a queue ...) you will prevent this task from runnin
1733:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                 arrives.
1734:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
1735:C:\Micrium\Software\uCOS-III\Source\os_task.c **** */
1736:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1737:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_TASK_SUSPEND_EN > 0u
1738:C:\Micrium\Software\uCOS-III\Source\os_task.c **** void   OSTaskSuspend (OS_TCB  *p_tcb,
1739:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                       OS_ERR  *p_err)
1740:C:\Micrium\Software\uCOS-III\Source\os_task.c **** {
 2512              		.loc 1 1740 0
 2513              		.cfi_startproc
 2514              		@ args = 0, pretend = 0, frame = 8
 2515              		@ frame_needed = 1, uses_anonymous_args = 0
 2516 0000 80B5     		push	{r7, lr}
 2517              	.LCFI48:
 2518              		.cfi_def_cfa_offset 8
 2519 0002 82B0     		sub	sp, sp, #8
 2520              	.LCFI49:
 2521              		.cfi_def_cfa_offset 16
 2522 0004 00AF     		add	r7, sp, #0
 2523              		.cfi_offset 14, -4
 2524              		.cfi_offset 7, -8
 2525              	.LCFI50:
 2526              		.cfi_def_cfa_register 7
 2527 0006 7860     		str	r0, [r7, #4]
 2528 0008 3960     		str	r1, [r7, #0]
1741:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #ifdef OS_SAFETY_CRITICAL
1742:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (p_err == (OS_ERR *)0) {
1743:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 76


1744:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return;
1745:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
1746:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
1747:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1748:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if (OS_CFG_ISR_POST_DEFERRED_EN   == 0u) && \
1749:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     (OS_CFG_CALLED_FROM_ISR_CHK_EN >  0u)
1750:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (OSIntNestingCtr > (OS_NESTING_CTR)0) {              /* Not allowed to call from an ISR     
 2529              		.loc 1 1750 0
 2530 000a 40F20003 		movw	r3, #:lower16:OSIntNestingCtr
 2531 000e C0F20003 		movt	r3, #:upper16:OSIntNestingCtr
 2532 0012 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2533 0014 002B     		cmp	r3, #0
 2534 0016 04D0     		beq	.L181
1751:C:\Micrium\Software\uCOS-III\Source\os_task.c ****        *p_err = OS_ERR_TASK_SUSPEND_ISR;
 2535              		.loc 1 1751 0
 2536 0018 3B68     		ldr	r3, [r7, #0]
 2537 001a 47F25D12 		movw	r2, #29021
 2538 001e 1A80     		strh	r2, [r3, #0]	@ movhi
1752:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return;
 2539              		.loc 1 1752 0
 2540 0020 0FE0     		b	.L184
 2541              	.L181:
1753:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
1754:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
1755:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1756:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (p_tcb == &OSIdleTaskTCB) {                          /* Make sure not suspending the idle ta
 2542              		.loc 1 1756 0
 2543 0022 7A68     		ldr	r2, [r7, #4]
 2544 0024 40F20003 		movw	r3, #:lower16:OSIdleTaskTCB
 2545 0028 C0F20003 		movt	r3, #:upper16:OSIdleTaskTCB
 2546 002c 9A42     		cmp	r2, r3
 2547 002e 04D1     		bne	.L183
1757:C:\Micrium\Software\uCOS-III\Source\os_task.c ****        *p_err = OS_ERR_TASK_SUSPEND_IDLE;
 2548              		.loc 1 1757 0
 2549 0030 3B68     		ldr	r3, [r7, #0]
 2550 0032 47F25B12 		movw	r2, #29019
 2551 0036 1A80     		strh	r2, [r3, #0]	@ movhi
1758:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return;
 2552              		.loc 1 1758 0
 2553 0038 03E0     		b	.L184
 2554              	.L183:
1759:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
1760:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1761:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_ISR_POST_DEFERRED_EN > 0u
1762:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (p_tcb == &OSIntQTaskTCB) {                          /* Not allowed to suspend the ISR handl
1763:C:\Micrium\Software\uCOS-III\Source\os_task.c ****        *p_err = OS_ERR_TASK_SUSPEND_INT_HANDLER;
1764:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return;
1765:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
1766:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1767:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (OSIntNestingCtr > (OS_NESTING_CTR)0) {              /* See if called from an ISR           
1768:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         OS_IntQPost((OS_OBJ_TYPE)OS_OBJ_TYPE_TASK_SUSPEND,  /* Post to ISR queue                   
1769:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     (void      *)p_tcb,
1770:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     (void      *)0,
1771:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     (OS_MSG_SIZE)0,
1772:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     (OS_FLAGS   )0,
1773:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     (OS_OPT     )0,
1774:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     (CPU_TS     )0,
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 77


1775:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     (OS_ERR    *)p_err);
1776:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return;
1777:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
1778:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
1779:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1780:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OS_TaskSuspend(p_tcb, p_err);
 2555              		.loc 1 1780 0
 2556 003a 7868     		ldr	r0, [r7, #4]
 2557 003c 3968     		ldr	r1, [r7, #0]
 2558 003e FFF7FEFF 		bl	OS_TaskSuspend
 2559              	.L184:
1781:C:\Micrium\Software\uCOS-III\Source\os_task.c **** }
 2560              		.loc 1 1781 0
 2561 0042 07F10807 		add	r7, r7, #8
 2562 0046 BD46     		mov	sp, r7
 2563 0048 80BD     		pop	{r7, pc}
 2564              		.cfi_endproc
 2565              	.LFE16:
 2566              		.size	OSTaskSuspend, .-OSTaskSuspend
 2567 004a 00BF     		.section	.text.OSTaskTimeQuantaSet,"ax",%progbits
 2568              		.align	2
 2569              		.global	OSTaskTimeQuantaSet
 2570              		.thumb
 2571              		.thumb_func
 2572              		.type	OSTaskTimeQuantaSet, %function
 2573              	OSTaskTimeQuantaSet:
 2574              	.LFB17:
1782:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
1783:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1784:C:\Micrium\Software\uCOS-III\Source\os_task.c **** /*$PAGE*/
1785:C:\Micrium\Software\uCOS-III\Source\os_task.c **** /*
1786:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
1787:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                                CHANGE A TASK'S TIME SLICE
1788:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1789:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Description: This function is called to change the value of the task's specific time slice.
1790:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1791:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Arguments  : p_tcb        is the pointer to the TCB of the task to change. If you specify an NULL
1792:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                           task is assumed.
1793:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1794:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              time_quanta  is the number of ticks before the CPU is taken away when round-robin sc
1795:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1796:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              p_err        is a pointer to an error code returned by this function:
1797:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1798:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                               OS_ERR_NONE       upon success
1799:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                               OS_ERR_SET_ISR    if you called this function from an ISR
1800:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1801:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Returns    : none
1802:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
1803:C:\Micrium\Software\uCOS-III\Source\os_task.c **** */
1804:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1805:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_SCHED_ROUND_ROBIN_EN > 0u
1806:C:\Micrium\Software\uCOS-III\Source\os_task.c **** void  OSTaskTimeQuantaSet (OS_TCB   *p_tcb,
1807:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                            OS_TICK   time_quanta,
1808:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                            OS_ERR   *p_err)
1809:C:\Micrium\Software\uCOS-III\Source\os_task.c **** {
 2575              		.loc 1 1809 0
 2576              		.cfi_startproc
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 78


 2577              		@ args = 0, pretend = 0, frame = 24
 2578              		@ frame_needed = 1, uses_anonymous_args = 0
 2579 0000 80B5     		push	{r7, lr}
 2580              	.LCFI51:
 2581              		.cfi_def_cfa_offset 8
 2582 0002 86B0     		sub	sp, sp, #24
 2583              	.LCFI52:
 2584              		.cfi_def_cfa_offset 32
 2585 0004 00AF     		add	r7, sp, #0
 2586              		.cfi_offset 14, -4
 2587              		.cfi_offset 7, -8
 2588              	.LCFI53:
 2589              		.cfi_def_cfa_register 7
 2590 0006 F860     		str	r0, [r7, #12]
 2591 0008 B960     		str	r1, [r7, #8]
 2592 000a 7A60     		str	r2, [r7, #4]
1810:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_SR_ALLOC();
 2593              		.loc 1 1810 0
 2594 000c 4FF00003 		mov	r3, #0
 2595 0010 7B61     		str	r3, [r7, #20]
1811:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1812:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1813:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1814:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #ifdef OS_SAFETY_CRITICAL
1815:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (p_err == (OS_ERR *)0) {
1816:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
1817:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return;
1818:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
1819:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
1820:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1821:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_CALLED_FROM_ISR_CHK_EN > 0u
1822:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (OSIntNestingCtr > (OS_NESTING_CTR)0) {              /* Can't call this function from an ISR
 2596              		.loc 1 1822 0
 2597 0012 40F20003 		movw	r3, #:lower16:OSIntNestingCtr
 2598 0016 C0F20003 		movt	r3, #:upper16:OSIntNestingCtr
 2599 001a 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2600 001c 002B     		cmp	r3, #0
 2601 001e 04D0     		beq	.L186
1823:C:\Micrium\Software\uCOS-III\Source\os_task.c ****        *p_err = OS_ERR_SET_ISR;
 2602              		.loc 1 1823 0
 2603 0020 7B68     		ldr	r3, [r7, #4]
 2604 0022 46F6C652 		movw	r2, #28102
 2605 0026 1A80     		strh	r2, [r3, #0]	@ movhi
1824:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return;
 2606              		.loc 1 1824 0
 2607 0028 2BE0     		b	.L192
 2608              	.L186:
1825:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
1826:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
1827:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1828:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_CRITICAL_ENTER();
 2609              		.loc 1 1828 0
 2610 002a FFF7FEFF 		bl	CPU_SR_Save
 2611 002e 0346     		mov	r3, r0
 2612 0030 7B61     		str	r3, [r7, #20]
1829:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (p_tcb == (OS_TCB *)0) {
 2613              		.loc 1 1829 0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 79


 2614 0032 FB68     		ldr	r3, [r7, #12]
 2615 0034 002B     		cmp	r3, #0
 2616 0036 05D1     		bne	.L188
1830:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         p_tcb = OSTCBCurPtr;
 2617              		.loc 1 1830 0
 2618 0038 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 2619 003c C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 2620 0040 1B68     		ldr	r3, [r3, #0]
 2621 0042 FB60     		str	r3, [r7, #12]
 2622              	.L188:
1831:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
1832:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1833:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (time_quanta == 0u) {
 2623              		.loc 1 1833 0
 2624 0044 BB68     		ldr	r3, [r7, #8]
 2625 0046 002B     		cmp	r3, #0
 2626 0048 07D1     		bne	.L189
1834:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         p_tcb->TimeQuanta    = OSSchedRoundRobinDfltTimeQuanta;
 2627              		.loc 1 1834 0
 2628 004a 40F20003 		movw	r3, #:lower16:OSSchedRoundRobinDfltTimeQuanta
 2629 004e C0F20003 		movt	r3, #:upper16:OSSchedRoundRobinDfltTimeQuanta
 2630 0052 1A68     		ldr	r2, [r3, #0]
 2631 0054 FB68     		ldr	r3, [r7, #12]
 2632 0056 5A65     		str	r2, [r3, #84]
 2633 0058 02E0     		b	.L190
 2634              	.L189:
1835:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     } else {
1836:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         p_tcb->TimeQuanta    = time_quanta;
 2635              		.loc 1 1836 0
 2636 005a FB68     		ldr	r3, [r7, #12]
 2637 005c BA68     		ldr	r2, [r7, #8]
 2638 005e 5A65     		str	r2, [r3, #84]
 2639              	.L190:
1837:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
1838:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (p_tcb->TimeQuanta > p_tcb->TimeQuantaCtr) {
 2640              		.loc 1 1838 0
 2641 0060 FB68     		ldr	r3, [r7, #12]
 2642 0062 5A6D     		ldr	r2, [r3, #84]
 2643 0064 FB68     		ldr	r3, [r7, #12]
 2644 0066 9B6D     		ldr	r3, [r3, #88]
 2645 0068 9A42     		cmp	r2, r3
 2646 006a 03D9     		bls	.L191
1839:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         p_tcb->TimeQuantaCtr = p_tcb->TimeQuanta;
 2647              		.loc 1 1839 0
 2648 006c FB68     		ldr	r3, [r7, #12]
 2649 006e 5A6D     		ldr	r2, [r3, #84]
 2650 0070 FB68     		ldr	r3, [r7, #12]
 2651 0072 9A65     		str	r2, [r3, #88]
 2652              	.L191:
1840:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
1841:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_CRITICAL_EXIT();
 2653              		.loc 1 1841 0
 2654 0074 7869     		ldr	r0, [r7, #20]
 2655 0076 FFF7FEFF 		bl	CPU_SR_Restore
1842:C:\Micrium\Software\uCOS-III\Source\os_task.c ****    *p_err = OS_ERR_NONE;
 2656              		.loc 1 1842 0
 2657 007a 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 80


 2658 007c 4FF00002 		mov	r2, #0
 2659 0080 1A80     		strh	r2, [r3, #0]	@ movhi
 2660              	.L192:
1843:C:\Micrium\Software\uCOS-III\Source\os_task.c **** }
 2661              		.loc 1 1843 0
 2662 0082 07F11807 		add	r7, r7, #24
 2663 0086 BD46     		mov	sp, r7
 2664 0088 80BD     		pop	{r7, pc}
 2665              		.cfi_endproc
 2666              	.LFE17:
 2667              		.size	OSTaskTimeQuantaSet, .-OSTaskTimeQuantaSet
 2668 008a 00BF     		.section	.text.OS_TaskDbgListAdd,"ax",%progbits
 2669              		.align	2
 2670              		.global	OS_TaskDbgListAdd
 2671              		.thumb
 2672              		.thumb_func
 2673              		.type	OS_TaskDbgListAdd, %function
 2674              	OS_TaskDbgListAdd:
 2675              	.LFB18:
1844:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
1845:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1846:C:\Micrium\Software\uCOS-III\Source\os_task.c **** /*$PAGE*/
1847:C:\Micrium\Software\uCOS-III\Source\os_task.c **** /*
1848:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
1849:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                            ADD/REMOVE TASK TO/FROM DEBUG LIST
1850:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1851:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Description: These functions are called by uC/OS-III to add or remove an OS_TCB from the debug li
1852:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1853:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Arguments  : p_tcb     is a pointer to the OS_TCB to add/remove
1854:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1855:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Returns    : none
1856:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1857:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Note(s)    : These functions are INTERNAL to uC/OS-III and your application should not call it.
1858:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
1859:C:\Micrium\Software\uCOS-III\Source\os_task.c **** */
1860:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1861:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_DBG_EN > 0u
1862:C:\Micrium\Software\uCOS-III\Source\os_task.c **** void  OS_TaskDbgListAdd (OS_TCB  *p_tcb)
1863:C:\Micrium\Software\uCOS-III\Source\os_task.c **** {
 2676              		.loc 1 1863 0
 2677              		.cfi_startproc
 2678              		@ args = 0, pretend = 0, frame = 8
 2679              		@ frame_needed = 1, uses_anonymous_args = 0
 2680              		@ link register save eliminated.
 2681 0000 80B4     		push	{r7}
 2682              	.LCFI54:
 2683              		.cfi_def_cfa_offset 4
 2684 0002 83B0     		sub	sp, sp, #12
 2685              	.LCFI55:
 2686              		.cfi_def_cfa_offset 16
 2687 0004 00AF     		add	r7, sp, #0
 2688              		.cfi_offset 7, -4
 2689              	.LCFI56:
 2690              		.cfi_def_cfa_register 7
 2691 0006 7860     		str	r0, [r7, #4]
1864:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->DbgPrevPtr                = (OS_TCB *)0;
 2692              		.loc 1 1864 0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 81


 2693 0008 7B68     		ldr	r3, [r7, #4]
 2694 000a 4FF00002 		mov	r2, #0
 2695 000e C3F8B420 		str	r2, [r3, #180]
1865:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (OSTaskDbgListPtr == (OS_TCB *)0) {
 2696              		.loc 1 1865 0
 2697 0012 40F20003 		movw	r3, #:lower16:OSTaskDbgListPtr
 2698 0016 C0F20003 		movt	r3, #:upper16:OSTaskDbgListPtr
 2699 001a 1B68     		ldr	r3, [r3, #0]
 2700 001c 002B     		cmp	r3, #0
 2701 001e 05D1     		bne	.L194
1866:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         p_tcb->DbgNextPtr            = (OS_TCB *)0;
 2702              		.loc 1 1866 0
 2703 0020 7B68     		ldr	r3, [r7, #4]
 2704 0022 4FF00002 		mov	r2, #0
 2705 0026 C3F8B820 		str	r2, [r3, #184]
 2706 002a 0FE0     		b	.L195
 2707              	.L194:
1867:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     } else {
1868:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         p_tcb->DbgNextPtr            =  OSTaskDbgListPtr;
 2708              		.loc 1 1868 0
 2709 002c 40F20003 		movw	r3, #:lower16:OSTaskDbgListPtr
 2710 0030 C0F20003 		movt	r3, #:upper16:OSTaskDbgListPtr
 2711 0034 1A68     		ldr	r2, [r3, #0]
 2712 0036 7B68     		ldr	r3, [r7, #4]
 2713 0038 C3F8B820 		str	r2, [r3, #184]
1869:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         OSTaskDbgListPtr->DbgPrevPtr =  p_tcb;
 2714              		.loc 1 1869 0
 2715 003c 40F20003 		movw	r3, #:lower16:OSTaskDbgListPtr
 2716 0040 C0F20003 		movt	r3, #:upper16:OSTaskDbgListPtr
 2717 0044 1B68     		ldr	r3, [r3, #0]
 2718 0046 7A68     		ldr	r2, [r7, #4]
 2719 0048 C3F8B420 		str	r2, [r3, #180]
 2720              	.L195:
1870:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
1871:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OSTaskDbgListPtr                 =  p_tcb;
 2721              		.loc 1 1871 0
 2722 004c 40F20003 		movw	r3, #:lower16:OSTaskDbgListPtr
 2723 0050 C0F20003 		movt	r3, #:upper16:OSTaskDbgListPtr
 2724 0054 7A68     		ldr	r2, [r7, #4]
 2725 0056 1A60     		str	r2, [r3, #0]
1872:C:\Micrium\Software\uCOS-III\Source\os_task.c **** }
 2726              		.loc 1 1872 0
 2727 0058 07F10C07 		add	r7, r7, #12
 2728 005c BD46     		mov	sp, r7
 2729 005e 80BC     		pop	{r7}
 2730 0060 7047     		bx	lr
 2731              		.cfi_endproc
 2732              	.LFE18:
 2733              		.size	OS_TaskDbgListAdd, .-OS_TaskDbgListAdd
 2734 0062 00BF     		.section	.text.OS_TaskDbgListRemove,"ax",%progbits
 2735              		.align	2
 2736              		.global	OS_TaskDbgListRemove
 2737              		.thumb
 2738              		.thumb_func
 2739              		.type	OS_TaskDbgListRemove, %function
 2740              	OS_TaskDbgListRemove:
 2741              	.LFB19:
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 82


1873:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1874:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1875:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1876:C:\Micrium\Software\uCOS-III\Source\os_task.c **** void  OS_TaskDbgListRemove (OS_TCB  *p_tcb)
1877:C:\Micrium\Software\uCOS-III\Source\os_task.c **** {
 2742              		.loc 1 1877 0
 2743              		.cfi_startproc
 2744              		@ args = 0, pretend = 0, frame = 16
 2745              		@ frame_needed = 1, uses_anonymous_args = 0
 2746              		@ link register save eliminated.
 2747 0000 80B4     		push	{r7}
 2748              	.LCFI57:
 2749              		.cfi_def_cfa_offset 4
 2750 0002 85B0     		sub	sp, sp, #20
 2751              	.LCFI58:
 2752              		.cfi_def_cfa_offset 24
 2753 0004 00AF     		add	r7, sp, #0
 2754              		.cfi_offset 7, -4
 2755              	.LCFI59:
 2756              		.cfi_def_cfa_register 7
 2757 0006 7860     		str	r0, [r7, #4]
1878:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OS_TCB  *p_tcb_next;
1879:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OS_TCB  *p_tcb_prev;
1880:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1881:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1882:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb_prev = p_tcb->DbgPrevPtr;
 2758              		.loc 1 1882 0
 2759 0008 7B68     		ldr	r3, [r7, #4]
 2760 000a D3F8B430 		ldr	r3, [r3, #180]
 2761 000e FB60     		str	r3, [r7, #12]
1883:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb_next = p_tcb->DbgNextPtr;
 2762              		.loc 1 1883 0
 2763 0010 7B68     		ldr	r3, [r7, #4]
 2764 0012 D3F8B830 		ldr	r3, [r3, #184]
 2765 0016 BB60     		str	r3, [r7, #8]
1884:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1885:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (p_tcb_prev == (OS_TCB *)0) {
 2766              		.loc 1 1885 0
 2767 0018 FB68     		ldr	r3, [r7, #12]
 2768 001a 002B     		cmp	r3, #0
 2769 001c 13D1     		bne	.L198
1886:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         OSTaskDbgListPtr = p_tcb_next;
 2770              		.loc 1 1886 0
 2771 001e 40F20003 		movw	r3, #:lower16:OSTaskDbgListPtr
 2772 0022 C0F20003 		movt	r3, #:upper16:OSTaskDbgListPtr
 2773 0026 BA68     		ldr	r2, [r7, #8]
 2774 0028 1A60     		str	r2, [r3, #0]
1887:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         if (p_tcb_next != (OS_TCB *)0) {
 2775              		.loc 1 1887 0
 2776 002a BB68     		ldr	r3, [r7, #8]
 2777 002c 002B     		cmp	r3, #0
 2778 002e 04D0     		beq	.L199
1888:C:\Micrium\Software\uCOS-III\Source\os_task.c ****             p_tcb_next->DbgPrevPtr = (OS_TCB *)0;
 2779              		.loc 1 1888 0
 2780 0030 BB68     		ldr	r3, [r7, #8]
 2781 0032 4FF00002 		mov	r2, #0
 2782 0036 C3F8B420 		str	r2, [r3, #180]
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 83


 2783              	.L199:
1889:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         }
1890:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         p_tcb->DbgNextPtr = (OS_TCB *)0;
 2784              		.loc 1 1890 0
 2785 003a 7B68     		ldr	r3, [r7, #4]
 2786 003c 4FF00002 		mov	r2, #0
 2787 0040 C3F8B820 		str	r2, [r3, #184]
 2788 0044 1FE0     		b	.L202
 2789              	.L198:
1891:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1892:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     } else if (p_tcb_next == (OS_TCB *)0) {
 2790              		.loc 1 1892 0
 2791 0046 BB68     		ldr	r3, [r7, #8]
 2792 0048 002B     		cmp	r3, #0
 2793 004a 0AD1     		bne	.L201
1893:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         p_tcb_prev->DbgNextPtr = (OS_TCB *)0;
 2794              		.loc 1 1893 0
 2795 004c FB68     		ldr	r3, [r7, #12]
 2796 004e 4FF00002 		mov	r2, #0
 2797 0052 C3F8B820 		str	r2, [r3, #184]
1894:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         p_tcb->DbgPrevPtr      = (OS_TCB *)0;
 2798              		.loc 1 1894 0
 2799 0056 7B68     		ldr	r3, [r7, #4]
 2800 0058 4FF00002 		mov	r2, #0
 2801 005c C3F8B420 		str	r2, [r3, #180]
 2802 0060 11E0     		b	.L202
 2803              	.L201:
1895:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1896:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     } else {
1897:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         p_tcb_prev->DbgNextPtr =  p_tcb_next;
 2804              		.loc 1 1897 0
 2805 0062 FB68     		ldr	r3, [r7, #12]
 2806 0064 BA68     		ldr	r2, [r7, #8]
 2807 0066 C3F8B820 		str	r2, [r3, #184]
1898:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         p_tcb_next->DbgPrevPtr =  p_tcb_prev;
 2808              		.loc 1 1898 0
 2809 006a BB68     		ldr	r3, [r7, #8]
 2810 006c FA68     		ldr	r2, [r7, #12]
 2811 006e C3F8B420 		str	r2, [r3, #180]
1899:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         p_tcb->DbgNextPtr      = (OS_TCB *)0;
 2812              		.loc 1 1899 0
 2813 0072 7B68     		ldr	r3, [r7, #4]
 2814 0074 4FF00002 		mov	r2, #0
 2815 0078 C3F8B820 		str	r2, [r3, #184]
1900:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         p_tcb->DbgPrevPtr      = (OS_TCB *)0;
 2816              		.loc 1 1900 0
 2817 007c 7B68     		ldr	r3, [r7, #4]
 2818 007e 4FF00002 		mov	r2, #0
 2819 0082 C3F8B420 		str	r2, [r3, #180]
 2820              	.L202:
1901:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
1902:C:\Micrium\Software\uCOS-III\Source\os_task.c **** }
 2821              		.loc 1 1902 0
 2822 0086 07F11407 		add	r7, r7, #20
 2823 008a BD46     		mov	sp, r7
 2824 008c 80BC     		pop	{r7}
 2825 008e 7047     		bx	lr
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 84


 2826              		.cfi_endproc
 2827              	.LFE19:
 2828              		.size	OS_TaskDbgListRemove, .-OS_TaskDbgListRemove
 2829              		.section	.text.OS_TaskInit,"ax",%progbits
 2830              		.align	2
 2831              		.global	OS_TaskInit
 2832              		.thumb
 2833              		.thumb_func
 2834              		.type	OS_TaskInit, %function
 2835              	OS_TaskInit:
 2836              	.LFB20:
1903:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
1904:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1905:C:\Micrium\Software\uCOS-III\Source\os_task.c **** /*$PAGE*/
1906:C:\Micrium\Software\uCOS-III\Source\os_task.c **** /*
1907:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
1908:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                             TASK MANAGER INITIALIZATION
1909:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1910:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Description: This function is called by OSInit() to initialize the task management.
1911:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1912:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1913:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Argument(s): p_err        is a pointer to a variable that will contain an error code returned by 
1914:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1915:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                OS_ERR_NONE     the call was successful
1916:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1917:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Returns    : none
1918:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1919:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Note(s)    : This function is INTERNAL to uC/OS-III and your application should not call it.
1920:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
1921:C:\Micrium\Software\uCOS-III\Source\os_task.c **** */
1922:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1923:C:\Micrium\Software\uCOS-III\Source\os_task.c **** void  OS_TaskInit (OS_ERR  *p_err)
1924:C:\Micrium\Software\uCOS-III\Source\os_task.c **** {
 2837              		.loc 1 1924 0
 2838              		.cfi_startproc
 2839              		@ args = 0, pretend = 0, frame = 8
 2840              		@ frame_needed = 1, uses_anonymous_args = 0
 2841              		@ link register save eliminated.
 2842 0000 80B4     		push	{r7}
 2843              	.LCFI60:
 2844              		.cfi_def_cfa_offset 4
 2845 0002 83B0     		sub	sp, sp, #12
 2846              	.LCFI61:
 2847              		.cfi_def_cfa_offset 16
 2848 0004 00AF     		add	r7, sp, #0
 2849              		.cfi_offset 7, -4
 2850              	.LCFI62:
 2851              		.cfi_def_cfa_register 7
 2852 0006 7860     		str	r0, [r7, #4]
1925:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #ifdef OS_SAFETY_CRITICAL
1926:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (p_err == (OS_ERR *)0) {
1927:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         OS_SAFETY_CRITICAL_EXCEPTION();
1928:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         return;
1929:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
1930:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
1931:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1932:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_DBG_EN > 0u
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 85


1933:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OSTaskDbgListPtr = (OS_TCB      *)0;
 2853              		.loc 1 1933 0
 2854 0008 40F20003 		movw	r3, #:lower16:OSTaskDbgListPtr
 2855 000c C0F20003 		movt	r3, #:upper16:OSTaskDbgListPtr
 2856 0010 4FF00002 		mov	r2, #0
 2857 0014 1A60     		str	r2, [r3, #0]
1934:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
1935:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1936:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OSTaskQty        = (OS_OBJ_QTY   )0;                    /* Clear the number of tasks           
 2858              		.loc 1 1936 0
 2859 0016 40F20003 		movw	r3, #:lower16:OSTaskQty
 2860 001a C0F20003 		movt	r3, #:upper16:OSTaskQty
 2861 001e 4FF00002 		mov	r2, #0
 2862 0022 1A80     		strh	r2, [r3, #0]	@ movhi
1937:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OSTaskCtxSwCtr   = (OS_CTX_SW_CTR)0;                    /* Clear the context switch counter    
 2863              		.loc 1 1937 0
 2864 0024 40F20003 		movw	r3, #:lower16:OSTaskCtxSwCtr
 2865 0028 C0F20003 		movt	r3, #:upper16:OSTaskCtxSwCtr
 2866 002c 4FF00002 		mov	r2, #0
 2867 0030 1A60     		str	r2, [r3, #0]
1938:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1939:C:\Micrium\Software\uCOS-III\Source\os_task.c ****    *p_err            = OS_ERR_NONE;
 2868              		.loc 1 1939 0
 2869 0032 7B68     		ldr	r3, [r7, #4]
 2870 0034 4FF00002 		mov	r2, #0
 2871 0038 1A80     		strh	r2, [r3, #0]	@ movhi
1940:C:\Micrium\Software\uCOS-III\Source\os_task.c **** }
 2872              		.loc 1 1940 0
 2873 003a 07F10C07 		add	r7, r7, #12
 2874 003e BD46     		mov	sp, r7
 2875 0040 80BC     		pop	{r7}
 2876 0042 7047     		bx	lr
 2877              		.cfi_endproc
 2878              	.LFE20:
 2879              		.size	OS_TaskInit, .-OS_TaskInit
 2880              		.section	.rodata
 2881              		.align	2
 2882              	.LC0:
 2883 0000 3F546173 		.ascii	"?Task\000"
 2883      6B00
 2884 0006 0000     		.align	2
 2885              	.LC1:
 2886 0008 2000     		.ascii	" \000"
 2887 000a 0000     		.section	.text.OS_TaskInitTCB,"ax",%progbits
 2888              		.align	2
 2889              		.global	OS_TaskInitTCB
 2890              		.thumb
 2891              		.thumb_func
 2892              		.type	OS_TaskInitTCB, %function
 2893              	OS_TaskInitTCB:
 2894              	.LFB21:
1941:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1942:C:\Micrium\Software\uCOS-III\Source\os_task.c **** /*$PAGE*/
1943:C:\Micrium\Software\uCOS-III\Source\os_task.c **** /*
1944:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
1945:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                               INITIALIZE TCB FIELDS
1946:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 86


1947:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Description: This function is called to initialize a TCB to default values
1948:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1949:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Arguments  : p_tcb    is a pointer to the TCB to initialize
1950:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1951:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Returns    : none
1952:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
1953:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Note(s)    : This function is INTERNAL to uC/OS-III and your application should not call it.
1954:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
1955:C:\Micrium\Software\uCOS-III\Source\os_task.c **** */
1956:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1957:C:\Micrium\Software\uCOS-III\Source\os_task.c **** void  OS_TaskInitTCB (OS_TCB  *p_tcb)
1958:C:\Micrium\Software\uCOS-III\Source\os_task.c **** {
 2895              		.loc 1 1958 0
 2896              		.cfi_startproc
 2897              		@ args = 0, pretend = 0, frame = 16
 2898              		@ frame_needed = 1, uses_anonymous_args = 0
 2899 0000 80B5     		push	{r7, lr}
 2900              	.LCFI63:
 2901              		.cfi_def_cfa_offset 8
 2902 0002 84B0     		sub	sp, sp, #16
 2903              	.LCFI64:
 2904              		.cfi_def_cfa_offset 24
 2905 0004 00AF     		add	r7, sp, #0
 2906              		.cfi_offset 14, -4
 2907              		.cfi_offset 7, -8
 2908              	.LCFI65:
 2909              		.cfi_def_cfa_register 7
 2910 0006 7860     		str	r0, [r7, #4]
1959:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_TASK_REG_TBL_SIZE > 0u
1960:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OS_REG_ID   reg_id;
1961:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
1962:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if defined(OS_CFG_TLS_TBL_SIZE) && (OS_CFG_TLS_TBL_SIZE > 0u)
1963:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OS_TLS_ID   id;
1964:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
1965:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_TASK_PROFILE_EN > 0u
1966:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_TS      ts;
1967:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
1968:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1969:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1970:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->StkPtr             = (CPU_STK       *)0;
 2911              		.loc 1 1970 0
 2912 0008 7B68     		ldr	r3, [r7, #4]
 2913 000a 4FF00002 		mov	r2, #0
 2914 000e 1A60     		str	r2, [r3, #0]
1971:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->StkLimitPtr        = (CPU_STK       *)0;
 2915              		.loc 1 1971 0
 2916 0010 7B68     		ldr	r3, [r7, #4]
 2917 0012 4FF00002 		mov	r2, #0
 2918 0016 9A60     		str	r2, [r3, #8]
1972:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1973:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->ExtPtr             = (void          *)0;
 2919              		.loc 1 1973 0
 2920 0018 7B68     		ldr	r3, [r7, #4]
 2921 001a 4FF00002 		mov	r2, #0
 2922 001e 5A60     		str	r2, [r3, #4]
1974:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1975:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->NextPtr            = (OS_TCB        *)0;
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 87


 2923              		.loc 1 1975 0
 2924 0020 7B68     		ldr	r3, [r7, #4]
 2925 0022 4FF00002 		mov	r2, #0
 2926 0026 DA60     		str	r2, [r3, #12]
1976:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->PrevPtr            = (OS_TCB        *)0;
 2927              		.loc 1 1976 0
 2928 0028 7B68     		ldr	r3, [r7, #4]
 2929 002a 4FF00002 		mov	r2, #0
 2930 002e 1A61     		str	r2, [r3, #16]
1977:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1978:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->TickNextPtr        = (OS_TCB        *)0;
 2931              		.loc 1 1978 0
 2932 0030 7B68     		ldr	r3, [r7, #4]
 2933 0032 4FF00002 		mov	r2, #0
 2934 0036 5A61     		str	r2, [r3, #20]
1979:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->TickPrevPtr        = (OS_TCB        *)0;
 2935              		.loc 1 1979 0
 2936 0038 7B68     		ldr	r3, [r7, #4]
 2937 003a 4FF00002 		mov	r2, #0
 2938 003e 9A61     		str	r2, [r3, #24]
1980:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->TickSpokePtr       = (OS_TICK_SPOKE *)0;
 2939              		.loc 1 1980 0
 2940 0040 7B68     		ldr	r3, [r7, #4]
 2941 0042 4FF00002 		mov	r2, #0
 2942 0046 DA61     		str	r2, [r3, #28]
1981:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1982:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->NamePtr            = (CPU_CHAR      *)((void *)"?Task");
 2943              		.loc 1 1982 0
 2944 0048 7A68     		ldr	r2, [r7, #4]
 2945 004a 40F20003 		movw	r3, #:lower16:.LC0
 2946 004e C0F20003 		movt	r3, #:upper16:.LC0
 2947 0052 1362     		str	r3, [r2, #32]
1983:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1984:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->StkBasePtr         = (CPU_STK       *)0;
 2948              		.loc 1 1984 0
 2949 0054 7B68     		ldr	r3, [r7, #4]
 2950 0056 4FF00002 		mov	r2, #0
 2951 005a 5A62     		str	r2, [r3, #36]
1985:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1986:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->TaskEntryAddr      = (OS_TASK_PTR    )0;
 2952              		.loc 1 1986 0
 2953 005c 7B68     		ldr	r3, [r7, #4]
 2954 005e 4FF00002 		mov	r2, #0
 2955 0062 9A62     		str	r2, [r3, #40]
1987:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->TaskEntryArg       = (void          *)0;
 2956              		.loc 1 1987 0
 2957 0064 7B68     		ldr	r3, [r7, #4]
 2958 0066 4FF00002 		mov	r2, #0
 2959 006a DA62     		str	r2, [r3, #44]
1988:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1989:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if (OS_CFG_PEND_MULTI_EN > 0u)
1990:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->PendDataTblPtr     = (OS_PEND_DATA  *)0;
 2960              		.loc 1 1990 0
 2961 006c 7B68     		ldr	r3, [r7, #4]
 2962 006e 4FF00002 		mov	r2, #0
 2963 0072 1A63     		str	r2, [r3, #48]
1991:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->PendDataTblEntries = (OS_OBJ_QTY     )0u;
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 88


 2964              		.loc 1 1991 0
 2965 0074 7B68     		ldr	r3, [r7, #4]
 2966 0076 4FF00002 		mov	r2, #0
 2967 007a DA87     		strh	r2, [r3, #62]	@ movhi
1992:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
1993:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1994:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->TS                 = (CPU_TS         )0u;
 2968              		.loc 1 1994 0
 2969 007c 7B68     		ldr	r3, [r7, #4]
 2970 007e 4FF00002 		mov	r2, #0
 2971 0082 1A64     		str	r2, [r3, #64]
1995:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
1996:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if (OS_MSG_EN > 0u)
1997:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->MsgPtr             = (void          *)0;
 2972              		.loc 1 1997 0
 2973 0084 7B68     		ldr	r3, [r7, #4]
 2974 0086 4FF00002 		mov	r2, #0
 2975 008a DA65     		str	r2, [r3, #92]
1998:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->MsgSize            = (OS_MSG_SIZE    )0u;
 2976              		.loc 1 1998 0
 2977 008c 7B68     		ldr	r3, [r7, #4]
 2978 008e 4FF00002 		mov	r2, #0
 2979 0092 A3F86020 		strh	r2, [r3, #96]	@ movhi
1999:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
2000:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2001:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_TASK_Q_EN > 0u
2002:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OS_MsgQInit(&p_tcb->MsgQ,
 2980              		.loc 1 2002 0
 2981 0096 7B68     		ldr	r3, [r7, #4]
 2982 0098 03F16403 		add	r3, r3, #100
 2983 009c 1846     		mov	r0, r3
 2984 009e 4FF00001 		mov	r1, #0
 2985 00a2 FFF7FEFF 		bl	OS_MsgQInit
2003:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                 (OS_MSG_QTY)0u);
2004:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_TASK_PROFILE_EN > 0u
2005:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->MsgQPendTime       = (CPU_TS         )0u;
 2986              		.loc 1 2005 0
 2987 00a6 7B68     		ldr	r3, [r7, #4]
 2988 00a8 4FF00002 		mov	r2, #0
 2989 00ac 5A67     		str	r2, [r3, #116]
2006:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->MsgQPendTimeMax    = (CPU_TS         )0u;
 2990              		.loc 1 2006 0
 2991 00ae 7B68     		ldr	r3, [r7, #4]
 2992 00b0 4FF00002 		mov	r2, #0
 2993 00b4 9A67     		str	r2, [r3, #120]
2007:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
2008:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
2009:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2010:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_FLAG_EN > 0u
2011:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->FlagsPend          = (OS_FLAGS       )0u;
 2994              		.loc 1 2011 0
 2995 00b6 7B68     		ldr	r3, [r7, #4]
 2996 00b8 4FF00002 		mov	r2, #0
 2997 00bc C3F88020 		str	r2, [r3, #128]
2012:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->FlagsOpt           = (OS_OPT         )0u;
 2998              		.loc 1 2012 0
 2999 00c0 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 89


 3000 00c2 4FF00002 		mov	r2, #0
 3001 00c6 A3F88820 		strh	r2, [r3, #136]	@ movhi
2013:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->FlagsRdy           = (OS_FLAGS       )0u;
 3002              		.loc 1 2013 0
 3003 00ca 7B68     		ldr	r3, [r7, #4]
 3004 00cc 4FF00002 		mov	r2, #0
 3005 00d0 C3F88420 		str	r2, [r3, #132]
2014:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
2015:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2016:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_TASK_REG_TBL_SIZE > 0u
2017:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     for (reg_id = 0u; reg_id < OS_CFG_TASK_REG_TBL_SIZE; reg_id++) {
 3006              		.loc 1 2017 0
 3007 00d4 4FF00003 		mov	r3, #0
 3008 00d8 FB72     		strb	r3, [r7, #11]
 3009 00da 0DE0     		b	.L206
 3010              	.L207:
2018:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         p_tcb->RegTbl[reg_id] = (OS_REG)0u;
 3011              		.loc 1 2018 0
 3012 00dc FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 3013 00de 7A68     		ldr	r2, [r7, #4]
 3014 00e0 03F11E03 		add	r3, r3, #30
 3015 00e4 4FEA8303 		lsl	r3, r3, #2
 3016 00e8 1344     		add	r3, r3, r2
 3017 00ea 4FF00002 		mov	r2, #0
 3018 00ee 5A60     		str	r2, [r3, #4]
 3019              		.loc 1 2017 0
 3020 00f0 FB7A     		ldrb	r3, [r7, #11]
 3021 00f2 03F10103 		add	r3, r3, #1
 3022 00f6 FB72     		strb	r3, [r7, #11]
 3023              	.L206:
 3024 00f8 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
 3025 00fa 002B     		cmp	r3, #0
 3026 00fc EED0     		beq	.L207
2019:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
2020:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
2021:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2022:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if defined(OS_CFG_TLS_TBL_SIZE) && (OS_CFG_TLS_TBL_SIZE > 0u)
2023:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     for (id = 0u; id < OS_CFG_TLS_TBL_SIZE; id++) {
2024:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         p_tcb->TLS_Tbl[id]    = (OS_TLS)0;
2025:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
2026:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
2027:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2028:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->SemCtr             = (OS_SEM_CTR     )0u;
 3027              		.loc 1 2028 0
 3028 00fe 7B68     		ldr	r3, [r7, #4]
 3029 0100 4FF00002 		mov	r2, #0
 3030 0104 5A64     		str	r2, [r3, #68]
2029:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_TASK_PROFILE_EN > 0u
2030:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->SemPendTime        = (CPU_TS         )0u;
 3031              		.loc 1 2030 0
 3032 0106 7B68     		ldr	r3, [r7, #4]
 3033 0108 4FF00002 		mov	r2, #0
 3034 010c C3F8A420 		str	r2, [r3, #164]
2031:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->SemPendTimeMax     = (CPU_TS         )0u;
 3035              		.loc 1 2031 0
 3036 0110 7B68     		ldr	r3, [r7, #4]
 3037 0112 4FF00002 		mov	r2, #0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 90


 3038 0116 C3F8A820 		str	r2, [r3, #168]
2032:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
2033:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2034:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->StkSize            = (CPU_STK_SIZE   )0u;
 3039              		.loc 1 2034 0
 3040 011a 7B68     		ldr	r3, [r7, #4]
 3041 011c 4FF00002 		mov	r2, #0
 3042 0120 9A63     		str	r2, [r3, #56]
2035:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2036:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2037:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_TASK_SUSPEND_EN > 0u
2038:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->SuspendCtr         = (OS_NESTING_CTR )0u;
 3043              		.loc 1 2038 0
 3044 0122 7B68     		ldr	r3, [r7, #4]
 3045 0124 4FF00002 		mov	r2, #0
 3046 0128 83F88A20 		strb	r2, [r3, #138]
2039:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
2040:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2041:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_STAT_TASK_STK_CHK_EN > 0u
2042:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->StkFree            = (CPU_STK_SIZE   )0u;
 3047              		.loc 1 2042 0
 3048 012c 7B68     		ldr	r3, [r7, #4]
 3049 012e 4FF00002 		mov	r2, #0
 3050 0132 C3F8B020 		str	r2, [r3, #176]
2043:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->StkUsed            = (CPU_STK_SIZE   )0u;
 3051              		.loc 1 2043 0
 3052 0136 7B68     		ldr	r3, [r7, #4]
 3053 0138 4FF00002 		mov	r2, #0
 3054 013c C3F8AC20 		str	r2, [r3, #172]
2044:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
2045:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2046:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->Opt                = (OS_OPT         )0u;
 3055              		.loc 1 2046 0
 3056 0140 7B68     		ldr	r3, [r7, #4]
 3057 0142 4FF00002 		mov	r2, #0
 3058 0146 9A87     		strh	r2, [r3, #60]	@ movhi
2047:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2048:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->TickCtrPrev        = (OS_TICK        )OS_TICK_TH_INIT;
 3059              		.loc 1 2048 0
 3060 0148 7B68     		ldr	r3, [r7, #4]
 3061 014a 4FF00042 		mov	r2, #-2147483648
 3062 014e 9A64     		str	r2, [r3, #72]
2049:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->TickCtrMatch       = (OS_TICK        )0u;
 3063              		.loc 1 2049 0
 3064 0150 7B68     		ldr	r3, [r7, #4]
 3065 0152 4FF00002 		mov	r2, #0
 3066 0156 DA64     		str	r2, [r3, #76]
2050:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->TickRemain         = (OS_TICK        )0u;
 3067              		.loc 1 2050 0
 3068 0158 7B68     		ldr	r3, [r7, #4]
 3069 015a 4FF00002 		mov	r2, #0
 3070 015e 1A65     		str	r2, [r3, #80]
2051:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2052:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->TimeQuanta         = (OS_TICK        )0u;
 3071              		.loc 1 2052 0
 3072 0160 7B68     		ldr	r3, [r7, #4]
 3073 0162 4FF00002 		mov	r2, #0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 91


 3074 0166 5A65     		str	r2, [r3, #84]
2053:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->TimeQuantaCtr      = (OS_TICK        )0u;
 3075              		.loc 1 2053 0
 3076 0168 7B68     		ldr	r3, [r7, #4]
 3077 016a 4FF00002 		mov	r2, #0
 3078 016e 9A65     		str	r2, [r3, #88]
2054:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2055:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_TASK_PROFILE_EN > 0u
2056:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->CPUUsage           = (OS_CPU_USAGE   )0u;
 3079              		.loc 1 2056 0
 3080 0170 7B68     		ldr	r3, [r7, #4]
 3081 0172 4FF00002 		mov	r2, #0
 3082 0176 A3F88C20 		strh	r2, [r3, #140]	@ movhi
2057:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->CPUUsageMax        = (OS_CPU_USAGE   )0u;
 3083              		.loc 1 2057 0
 3084 017a 7B68     		ldr	r3, [r7, #4]
 3085 017c 4FF00002 		mov	r2, #0
 3086 0180 A3F88E20 		strh	r2, [r3, #142]	@ movhi
2058:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->CtxSwCtr           = (OS_CTX_SW_CTR  )0u;
 3087              		.loc 1 2058 0
 3088 0184 7B68     		ldr	r3, [r7, #4]
 3089 0186 4FF00002 		mov	r2, #0
 3090 018a C3F89020 		str	r2, [r3, #144]
2059:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->CyclesDelta        = (CPU_TS         )0u;
 3091              		.loc 1 2059 0
 3092 018e 7B68     		ldr	r3, [r7, #4]
 3093 0190 4FF00002 		mov	r2, #0
 3094 0194 C3F89420 		str	r2, [r3, #148]
2060:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     ts                        = OS_TS_GET();                /* Read the current timestamp and save 
 3095              		.loc 1 2060 0
 3096 0198 FFF7FEFF 		bl	CPU_TS_TmrRd
 3097 019c 0346     		mov	r3, r0
 3098 019e FB60     		str	r3, [r7, #12]
2061:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->CyclesStart        = ts;
 3099              		.loc 1 2061 0
 3100 01a0 7B68     		ldr	r3, [r7, #4]
 3101 01a2 FA68     		ldr	r2, [r7, #12]
 3102 01a4 C3F89820 		str	r2, [r3, #152]
2062:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->CyclesTotal        = (OS_CYCLES      )0u;
 3103              		.loc 1 2062 0
 3104 01a8 7B68     		ldr	r3, [r7, #4]
 3105 01aa 4FF00002 		mov	r2, #0
 3106 01ae C3F89C20 		str	r2, [r3, #156]
2063:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
2064:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #ifdef CPU_CFG_INT_DIS_MEAS_EN
2065:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->IntDisTimeMax      = (CPU_TS         )0u;
2066:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
2067:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_SCHED_LOCK_TIME_MEAS_EN > 0u
2068:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->SchedLockTimeMax   = (CPU_TS         )0u;
2069:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
2070:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2071:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->PendOn             = (OS_STATE       )OS_TASK_PEND_ON_NOTHING;
 3107              		.loc 1 2071 0
 3108 01b2 7B68     		ldr	r3, [r7, #4]
 3109 01b4 4FF00002 		mov	r2, #0
 3110 01b8 83F83420 		strb	r2, [r3, #52]
2072:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->PendStatus         = (OS_STATUS      )OS_STATUS_PEND_OK;
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 92


 3111              		.loc 1 2072 0
 3112 01bc 7B68     		ldr	r3, [r7, #4]
 3113 01be 4FF00002 		mov	r2, #0
 3114 01c2 83F83520 		strb	r2, [r3, #53]
2073:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->TaskState          = (OS_STATE       )OS_TASK_STATE_RDY;
 3115              		.loc 1 2073 0
 3116 01c6 7B68     		ldr	r3, [r7, #4]
 3117 01c8 4FF00002 		mov	r2, #0
 3118 01cc 83F83620 		strb	r2, [r3, #54]
2074:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2075:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->Prio               = (OS_PRIO        )OS_PRIO_INIT;
 3119              		.loc 1 2075 0
 3120 01d0 7B68     		ldr	r3, [r7, #4]
 3121 01d2 4FF00802 		mov	r2, #8
 3122 01d6 83F83720 		strb	r2, [r3, #55]
2076:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2077:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_DBG_EN > 0u
2078:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->DbgPrevPtr         = (OS_TCB        *)0;
 3123              		.loc 1 2078 0
 3124 01da 7B68     		ldr	r3, [r7, #4]
 3125 01dc 4FF00002 		mov	r2, #0
 3126 01e0 C3F8B420 		str	r2, [r3, #180]
2079:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->DbgNextPtr         = (OS_TCB        *)0;
 3127              		.loc 1 2079 0
 3128 01e4 7B68     		ldr	r3, [r7, #4]
 3129 01e6 4FF00002 		mov	r2, #0
 3130 01ea C3F8B820 		str	r2, [r3, #184]
2080:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->DbgNamePtr         = (CPU_CHAR      *)((void *)" ");
 3131              		.loc 1 2080 0
 3132 01ee 7A68     		ldr	r2, [r7, #4]
 3133 01f0 40F20003 		movw	r3, #:lower16:.LC1
 3134 01f4 C0F20003 		movt	r3, #:upper16:.LC1
 3135 01f8 C2F8BC30 		str	r3, [r2, #188]
2081:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
2082:C:\Micrium\Software\uCOS-III\Source\os_task.c **** }
 3136              		.loc 1 2082 0
 3137 01fc 07F11007 		add	r7, r7, #16
 3138 0200 BD46     		mov	sp, r7
 3139 0202 80BD     		pop	{r7, pc}
 3140              		.cfi_endproc
 3141              	.LFE21:
 3142              		.size	OS_TaskInitTCB, .-OS_TaskInitTCB
 3143              		.section	.text.OS_TaskQPost,"ax",%progbits
 3144              		.align	2
 3145              		.global	OS_TaskQPost
 3146              		.thumb
 3147              		.thumb_func
 3148              		.type	OS_TaskQPost, %function
 3149              	OS_TaskQPost:
 3150              	.LFB22:
2083:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2084:C:\Micrium\Software\uCOS-III\Source\os_task.c **** /*$PAGE*/
2085:C:\Micrium\Software\uCOS-III\Source\os_task.c **** /*
2086:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
2087:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                               POST MESSAGE TO A TASK
2088:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
2089:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Description: This function sends a message to a task
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 93


2090:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
2091:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Arguments  : p_tcb      is a pointer to the TCB of the task receiving a message.  If you specify 
2092:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                         the message will be posted to the task's queue of the calling task.  In o
2093:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                         posting a message to yourself.
2094:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
2095:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              p_void     is a pointer to the message to send.
2096:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
2097:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              msg_size   is the size of the message sent (in #bytes)
2098:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
2099:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              opt        specifies whether the post will be FIFO or LIFO:
2100:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
2101:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             OS_OPT_POST_FIFO       Post at the end   of the queue
2102:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             OS_OPT_POST_LIFO       Post at the front of the queue
2103:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
2104:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             OS_OPT_POST_NO_SCHED   Do not run the scheduler after the post
2105:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
2106:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                          Note(s): 1) OS_OPT_POST_NO_SCHED can be added with one of the other opti
2107:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
2108:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
2109:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              ts         is a timestamp indicating when the post occurred.
2110:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
2111:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              p_err      is a pointer to a variable that will hold the error code associated
2112:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                         with the outcome of this call.  Errors can be:
2113:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
2114:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             OS_ERR_NONE            The call was successful and the message was se
2115:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             OS_ERR_MSG_POOL_EMPTY  If there are no more OS_MSGs available from th
2116:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             OS_ERR_Q_MAX           If the queue is full
2117:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             OS_ERR_STATE_INVALID   If the task is in an invalid state.  This shou
2118:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                                    and if it does, would be considered a system f
2119:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
2120:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Returns    : none
2121:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
2122:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Note(s)    : This function is INTERNAL to uC/OS-III and your application should not call it.
2123:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
2124:C:\Micrium\Software\uCOS-III\Source\os_task.c **** */
2125:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2126:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_TASK_Q_EN > 0u
2127:C:\Micrium\Software\uCOS-III\Source\os_task.c **** void  OS_TaskQPost (OS_TCB       *p_tcb,
2128:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     void         *p_void,
2129:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     OS_MSG_SIZE   msg_size,
2130:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     OS_OPT        opt,
2131:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     CPU_TS        ts,
2132:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                     OS_ERR       *p_err)
2133:C:\Micrium\Software\uCOS-III\Source\os_task.c **** {
 3151              		.loc 1 2133 0
 3152              		.cfi_startproc
 3153              		@ args = 8, pretend = 0, frame = 24
 3154              		@ frame_needed = 1, uses_anonymous_args = 0
 3155 0000 80B5     		push	{r7, lr}
 3156              	.LCFI66:
 3157              		.cfi_def_cfa_offset 8
 3158 0002 88B0     		sub	sp, sp, #32
 3159              	.LCFI67:
 3160              		.cfi_def_cfa_offset 40
 3161 0004 02AF     		add	r7, sp, #8
 3162              		.cfi_offset 14, -4
 3163              		.cfi_offset 7, -8
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 94


 3164              	.LCFI68:
 3165              		.cfi_def_cfa 7, 32
 3166 0006 F860     		str	r0, [r7, #12]
 3167 0008 B960     		str	r1, [r7, #8]
 3168 000a FA80     		strh	r2, [r7, #6]	@ movhi
 3169 000c BB80     		strh	r3, [r7, #4]	@ movhi
2134:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_SR_ALLOC();
 3170              		.loc 1 2134 0
 3171 000e 4FF00003 		mov	r3, #0
 3172 0012 7B61     		str	r3, [r7, #20]
2135:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2136:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2137:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2138:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OS_CRITICAL_ENTER();
 3173              		.loc 1 2138 0
 3174 0014 FFF7FEFF 		bl	CPU_SR_Save
 3175 0018 0346     		mov	r3, r0
 3176 001a 7B61     		str	r3, [r7, #20]
2139:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (p_tcb == (OS_TCB *)0) {                             /* Post msg to 'self'?                 
 3177              		.loc 1 2139 0
 3178 001c FB68     		ldr	r3, [r7, #12]
 3179 001e 002B     		cmp	r3, #0
 3180 0020 05D1     		bne	.L210
2140:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         p_tcb = OSTCBCurPtr;
 3181              		.loc 1 2140 0
 3182 0022 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 3183 0026 C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 3184 002a 1B68     		ldr	r3, [r3, #0]
 3185 002c FB60     		str	r3, [r7, #12]
 3186              	.L210:
2141:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
2142:C:\Micrium\Software\uCOS-III\Source\os_task.c ****    *p_err  = OS_ERR_NONE;                                   /* Assume we won't have any errors     
 3187              		.loc 1 2142 0
 3188 002e 7B6A     		ldr	r3, [r7, #36]
 3189 0030 4FF00002 		mov	r2, #0
 3190 0034 1A80     		strh	r2, [r3, #0]	@ movhi
2143:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     switch (p_tcb->TaskState) {
 3191              		.loc 1 2143 0
 3192 0036 FB68     		ldr	r3, [r7, #12]
 3193 0038 93F83630 		ldrb	r3, [r3, #54]	@ zero_extendqisi2
 3194 003c 072B     		cmp	r3, #7
 3195 003e 45D8     		bhi	.L211
 3196 0040 4FF00102 		mov	r2, #1
 3197 0044 02FA03F3 		lsl	r3, r2, r3
 3198 0048 03F0CC02 		and	r2, r3, #204
 3199 004c 002A     		cmp	r2, #0
 3200 004e 14D1     		bne	.L213
 3201 0050 03F03303 		and	r3, r3, #51
 3202 0054 002B     		cmp	r3, #0
 3203 0056 39D0     		beq	.L211
 3204              	.L212:
2144:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_TASK_STATE_RDY:
2145:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_TASK_STATE_DLY:
2146:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_TASK_STATE_SUSPENDED:
2147:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_TASK_STATE_DLY_SUSPENDED:
2148:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              OS_MsgQPut(&p_tcb->MsgQ,                       /* Deposit the message in the queue    
 3205              		.loc 1 2148 0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 95


 3206 0058 FB68     		ldr	r3, [r7, #12]
 3207 005a 03F16401 		add	r1, r3, #100
 3208 005e FA88     		ldrh	r2, [r7, #6]
 3209 0060 BB88     		ldrh	r3, [r7, #4]
 3210 0062 386A     		ldr	r0, [r7, #32]
 3211 0064 0090     		str	r0, [sp, #0]
 3212 0066 786A     		ldr	r0, [r7, #36]
 3213 0068 0190     		str	r0, [sp, #4]
 3214 006a 0846     		mov	r0, r1
 3215 006c B968     		ldr	r1, [r7, #8]
 3216 006e FFF7FEFF 		bl	OS_MsgQPut
2149:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                         p_void,
2150:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                         msg_size,
2151:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                         opt,
2152:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                         ts,
2153:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                         p_err);
2154:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              OS_CRITICAL_EXIT();
 3217              		.loc 1 2154 0
 3218 0072 7869     		ldr	r0, [r7, #20]
 3219 0074 FFF7FEFF 		bl	CPU_SR_Restore
2155:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              break;
 3220              		.loc 1 2155 0
 3221 0078 31E0     		b	.L218
 3222              	.L213:
2156:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2157:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_TASK_STATE_PEND:
2158:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_TASK_STATE_PEND_TIMEOUT:
2159:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_TASK_STATE_PEND_SUSPENDED:
2160:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_TASK_STATE_PEND_TIMEOUT_SUSPENDED:
2161:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              if (p_tcb->PendOn == OS_TASK_PEND_ON_TASK_Q) { /* Is task waiting for a message to be 
 3223              		.loc 1 2161 0
 3224 007a FB68     		ldr	r3, [r7, #12]
 3225 007c 93F83430 		ldrb	r3, [r3, #52]	@ zero_extendqisi2
 3226 0080 022B     		cmp	r3, #2
 3227 0082 12D1     		bne	.L215
2162:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  OS_Post((OS_PEND_OBJ *)0,
 3228              		.loc 1 2162 0
 3229 0084 FB88     		ldrh	r3, [r7, #6]
 3230 0086 3A6A     		ldr	r2, [r7, #32]
 3231 0088 0092     		str	r2, [sp, #0]
 3232 008a 4FF00000 		mov	r0, #0
 3233 008e F968     		ldr	r1, [r7, #12]
 3234 0090 BA68     		ldr	r2, [r7, #8]
 3235 0092 FFF7FEFF 		bl	OS_Post
2163:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                          p_tcb,
2164:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                          p_void,
2165:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                          msg_size,
2166:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                          ts);
2167:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  OS_CRITICAL_EXIT_NO_SCHED();
 3236              		.loc 1 2167 0
 3237 0096 7869     		ldr	r0, [r7, #20]
 3238 0098 FFF7FEFF 		bl	CPU_SR_Restore
2168:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  if ((opt & OS_OPT_POST_NO_SCHED) == (OS_OPT)0u) {
 3239              		.loc 1 2168 0
 3240 009c BB88     		ldrh	r3, [r7, #4]
 3241 009e 1BB2     		sxth	r3, r3
 3242 00a0 002B     		cmp	r3, #0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 96


 3243 00a2 1BDB     		blt	.L219
2169:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                      OSSched();                             /* Run the scheduler                   
 3244              		.loc 1 2169 0
 3245 00a4 FFF7FEFF 		bl	OSSched
2170:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  }
2171:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              } else {
2172:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  OS_MsgQPut(&p_tcb->MsgQ,                   /* No,  Task is pending on something el
2173:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                             p_void,                         /*      ... Deposit the message in the 
2174:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                             msg_size,
2175:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                             opt,
2176:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                             ts,
2177:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                             p_err);
2178:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  OS_CRITICAL_EXIT();
2179:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              }
2180:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              break;
 3246              		.loc 1 2180 0
 3247 00a8 19E0     		b	.L218
 3248              	.L215:
 3249              		.loc 1 2172 0
 3250 00aa FB68     		ldr	r3, [r7, #12]
 3251 00ac 03F16401 		add	r1, r3, #100
 3252 00b0 FA88     		ldrh	r2, [r7, #6]
 3253 00b2 BB88     		ldrh	r3, [r7, #4]
 3254 00b4 386A     		ldr	r0, [r7, #32]
 3255 00b6 0090     		str	r0, [sp, #0]
 3256 00b8 786A     		ldr	r0, [r7, #36]
 3257 00ba 0190     		str	r0, [sp, #4]
 3258 00bc 0846     		mov	r0, r1
 3259 00be B968     		ldr	r1, [r7, #8]
 3260 00c0 FFF7FEFF 		bl	OS_MsgQPut
 3261              		.loc 1 2178 0
 3262 00c4 7869     		ldr	r0, [r7, #20]
 3263 00c6 FFF7FEFF 		bl	CPU_SR_Restore
 3264              		.loc 1 2180 0
 3265 00ca 08E0     		b	.L218
 3266              	.L211:
2181:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2182:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         default:
2183:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              OS_CRITICAL_EXIT();
 3267              		.loc 1 2183 0
 3268 00cc 7869     		ldr	r0, [r7, #20]
 3269 00ce FFF7FEFF 		bl	CPU_SR_Restore
2184:C:\Micrium\Software\uCOS-III\Source\os_task.c ****             *p_err = OS_ERR_STATE_INVALID;
 3270              		.loc 1 2184 0
 3271 00d2 7B6A     		ldr	r3, [r7, #36]
 3272 00d4 46F62D62 		movw	r2, #28205
 3273 00d8 1A80     		strh	r2, [r3, #0]	@ movhi
 3274 00da 00E0     		b	.L218
 3275              	.L219:
 3276              		.loc 1 2180 0
 3277 00dc 00BF     		nop
 3278              	.L218:
2185:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              break;
2186:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
2187:C:\Micrium\Software\uCOS-III\Source\os_task.c **** }
 3279              		.loc 1 2187 0
 3280 00de 07F11807 		add	r7, r7, #24
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 97


 3281 00e2 BD46     		mov	sp, r7
 3282 00e4 80BD     		pop	{r7, pc}
 3283              		.cfi_endproc
 3284              	.LFE22:
 3285              		.size	OS_TaskQPost, .-OS_TaskQPost
 3286 00e6 00BF     		.section	.text.OS_TaskResume,"ax",%progbits
 3287              		.align	2
 3288              		.global	OS_TaskResume
 3289              		.thumb
 3290              		.thumb_func
 3291              		.type	OS_TaskResume, %function
 3292              	OS_TaskResume:
 3293              	.LFB23:
2188:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
2189:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2190:C:\Micrium\Software\uCOS-III\Source\os_task.c **** /*$PAGE*/
2191:C:\Micrium\Software\uCOS-III\Source\os_task.c **** /*
2192:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
2193:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                               RESUME A SUSPENDED TASK
2194:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
2195:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Description: This function is called to resume a previously suspended task.  This is the only cal
2196:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              explicit task suspension.
2197:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
2198:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Arguments  : p_tcb      Is a pointer to the task's OS_TCB to resume
2199:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
2200:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              p_err      Is a pointer to a variable that will contain an error code returned by th
2201:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
2202:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             OS_ERR_NONE                  if the requested task is resumed
2203:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             OS_ERR_STATE_INVALID         if the task is in an invalid state
2204:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             OS_ERR_TASK_RESUME_ISR       if you called this function from an ISR
2205:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             OS_ERR_TASK_RESUME_SELF      You cannot resume 'self'
2206:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             OS_ERR_TASK_NOT_SUSPENDED    if the task to resume has not been suspe
2207:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
2208:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Returns    : none
2209:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
2210:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Note(s)    : This function is INTERNAL to uC/OS-III and your application should not call it.
2211:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
2212:C:\Micrium\Software\uCOS-III\Source\os_task.c **** */
2213:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2214:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_TASK_SUSPEND_EN > 0u
2215:C:\Micrium\Software\uCOS-III\Source\os_task.c **** void  OS_TaskResume (OS_TCB  *p_tcb,
2216:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                      OS_ERR  *p_err)
2217:C:\Micrium\Software\uCOS-III\Source\os_task.c **** {
 3294              		.loc 1 2217 0
 3295              		.cfi_startproc
 3296              		@ args = 0, pretend = 0, frame = 16
 3297              		@ frame_needed = 1, uses_anonymous_args = 0
 3298 0000 80B5     		push	{r7, lr}
 3299              	.LCFI69:
 3300              		.cfi_def_cfa_offset 8
 3301 0002 84B0     		sub	sp, sp, #16
 3302              	.LCFI70:
 3303              		.cfi_def_cfa_offset 24
 3304 0004 00AF     		add	r7, sp, #0
 3305              		.cfi_offset 14, -4
 3306              		.cfi_offset 7, -8
 3307              	.LCFI71:
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 98


 3308              		.cfi_def_cfa_register 7
 3309 0006 7860     		str	r0, [r7, #4]
 3310 0008 3960     		str	r1, [r7, #0]
2218:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_SR_ALLOC();
 3311              		.loc 1 2218 0
 3312 000a 4FF00003 		mov	r3, #0
 3313 000e FB60     		str	r3, [r7, #12]
2219:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2220:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2221:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_CRITICAL_ENTER();
 3314              		.loc 1 2221 0
 3315 0010 FFF7FEFF 		bl	CPU_SR_Save
 3316 0014 0346     		mov	r3, r0
 3317 0016 FB60     		str	r3, [r7, #12]
2222:C:\Micrium\Software\uCOS-III\Source\os_task.c ****    *p_err  = OS_ERR_NONE;
 3318              		.loc 1 2222 0
 3319 0018 3B68     		ldr	r3, [r7, #0]
 3320 001a 4FF00002 		mov	r2, #0
 3321 001e 1A80     		strh	r2, [r3, #0]	@ movhi
2223:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     switch (p_tcb->TaskState) {
 3322              		.loc 1 2223 0
 3323 0020 7B68     		ldr	r3, [r7, #4]
 3324 0022 93F83630 		ldrb	r3, [r3, #54]	@ zero_extendqisi2
 3325 0026 072B     		cmp	r3, #7
 3326 0028 79D8     		bhi	.L221
 3327 002a 01A2     		adr	r2, .L227
 3328 002c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3329              		.align	2
 3330              	.L227:
 3331 0030 51000000 		.word	.L222+1
 3332 0034 51000000 		.word	.L222+1
 3333 0038 51000000 		.word	.L222+1
 3334 003c 51000000 		.word	.L222+1
 3335 0040 61000000 		.word	.L223+1
 3336 0044 95000000 		.word	.L224+1
 3337 0048 C3000000 		.word	.L225+1
 3338 004c F1000000 		.word	.L226+1
 3339              	.L222:
2224:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_TASK_STATE_RDY:
2225:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_TASK_STATE_DLY:
2226:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_TASK_STATE_PEND:
2227:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_TASK_STATE_PEND_TIMEOUT:
2228:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              CPU_CRITICAL_EXIT();
 3340              		.loc 1 2228 0
 3341 0050 F868     		ldr	r0, [r7, #12]
 3342 0052 FFF7FEFF 		bl	CPU_SR_Restore
2229:C:\Micrium\Software\uCOS-III\Source\os_task.c ****             *p_err = OS_ERR_TASK_NOT_SUSPENDED;
 3343              		.loc 1 2229 0
 3344 0056 3B68     		ldr	r3, [r7, #0]
 3345 0058 47F25312 		movw	r2, #29011
 3346 005c 1A80     		strh	r2, [r3, #0]	@ movhi
2230:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              break;
 3347              		.loc 1 2230 0
 3348 005e 66E0     		b	.L228
 3349              	.L223:
2231:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2232:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_TASK_STATE_SUSPENDED:
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 99


2233:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              OS_CRITICAL_ENTER_CPU_EXIT();
2234:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              p_tcb->SuspendCtr--;
 3350              		.loc 1 2234 0
 3351 0060 7B68     		ldr	r3, [r7, #4]
 3352 0062 93F88A30 		ldrb	r3, [r3, #138]	@ zero_extendqisi2
 3353 0066 03F1FF33 		add	r3, r3, #-1
 3354 006a DAB2     		uxtb	r2, r3
 3355 006c 7B68     		ldr	r3, [r7, #4]
 3356 006e 83F88A20 		strb	r2, [r3, #138]
2235:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              if (p_tcb->SuspendCtr == (OS_NESTING_CTR)0) {
 3357              		.loc 1 2235 0
 3358 0072 7B68     		ldr	r3, [r7, #4]
 3359 0074 93F88A30 		ldrb	r3, [r3, #138]	@ zero_extendqisi2
 3360 0078 002B     		cmp	r3, #0
 3361 007a 07D1     		bne	.L229
2236:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  p_tcb->TaskState = OS_TASK_STATE_RDY;
 3362              		.loc 1 2236 0
 3363 007c 7B68     		ldr	r3, [r7, #4]
 3364 007e 4FF00002 		mov	r2, #0
 3365 0082 83F83620 		strb	r2, [r3, #54]
2237:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  OS_TaskRdy(p_tcb);
 3366              		.loc 1 2237 0
 3367 0086 7868     		ldr	r0, [r7, #4]
 3368 0088 FFF7FEFF 		bl	OS_TaskRdy
 3369              	.L229:
2238:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              }
2239:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              OS_CRITICAL_EXIT_NO_SCHED();
 3370              		.loc 1 2239 0
 3371 008c F868     		ldr	r0, [r7, #12]
 3372 008e FFF7FEFF 		bl	CPU_SR_Restore
2240:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              break;
 3373              		.loc 1 2240 0
 3374 0092 4CE0     		b	.L228
 3375              	.L224:
2241:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2242:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_TASK_STATE_DLY_SUSPENDED:
2243:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              p_tcb->SuspendCtr--;
 3376              		.loc 1 2243 0
 3377 0094 7B68     		ldr	r3, [r7, #4]
 3378 0096 93F88A30 		ldrb	r3, [r3, #138]	@ zero_extendqisi2
 3379 009a 03F1FF33 		add	r3, r3, #-1
 3380 009e DAB2     		uxtb	r2, r3
 3381 00a0 7B68     		ldr	r3, [r7, #4]
 3382 00a2 83F88A20 		strb	r2, [r3, #138]
2244:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              if (p_tcb->SuspendCtr == (OS_NESTING_CTR)0) {
 3383              		.loc 1 2244 0
 3384 00a6 7B68     		ldr	r3, [r7, #4]
 3385 00a8 93F88A30 		ldrb	r3, [r3, #138]	@ zero_extendqisi2
 3386 00ac 002B     		cmp	r3, #0
 3387 00ae 04D1     		bne	.L230
2245:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  p_tcb->TaskState = OS_TASK_STATE_DLY;
 3388              		.loc 1 2245 0
 3389 00b0 7B68     		ldr	r3, [r7, #4]
 3390 00b2 4FF00102 		mov	r2, #1
 3391 00b6 83F83620 		strb	r2, [r3, #54]
 3392              	.L230:
2246:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              }
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 100


2247:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              CPU_CRITICAL_EXIT();
 3393              		.loc 1 2247 0
 3394 00ba F868     		ldr	r0, [r7, #12]
 3395 00bc FFF7FEFF 		bl	CPU_SR_Restore
2248:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              break;
 3396              		.loc 1 2248 0
 3397 00c0 35E0     		b	.L228
 3398              	.L225:
2249:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2250:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_TASK_STATE_PEND_SUSPENDED:
2251:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              p_tcb->SuspendCtr--;
 3399              		.loc 1 2251 0
 3400 00c2 7B68     		ldr	r3, [r7, #4]
 3401 00c4 93F88A30 		ldrb	r3, [r3, #138]	@ zero_extendqisi2
 3402 00c8 03F1FF33 		add	r3, r3, #-1
 3403 00cc DAB2     		uxtb	r2, r3
 3404 00ce 7B68     		ldr	r3, [r7, #4]
 3405 00d0 83F88A20 		strb	r2, [r3, #138]
2252:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              if (p_tcb->SuspendCtr == (OS_NESTING_CTR)0) {
 3406              		.loc 1 2252 0
 3407 00d4 7B68     		ldr	r3, [r7, #4]
 3408 00d6 93F88A30 		ldrb	r3, [r3, #138]	@ zero_extendqisi2
 3409 00da 002B     		cmp	r3, #0
 3410 00dc 04D1     		bne	.L231
2253:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  p_tcb->TaskState = OS_TASK_STATE_PEND;
 3411              		.loc 1 2253 0
 3412 00de 7B68     		ldr	r3, [r7, #4]
 3413 00e0 4FF00202 		mov	r2, #2
 3414 00e4 83F83620 		strb	r2, [r3, #54]
 3415              	.L231:
2254:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              }
2255:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              CPU_CRITICAL_EXIT();
 3416              		.loc 1 2255 0
 3417 00e8 F868     		ldr	r0, [r7, #12]
 3418 00ea FFF7FEFF 		bl	CPU_SR_Restore
2256:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              break;
 3419              		.loc 1 2256 0
 3420 00ee 1EE0     		b	.L228
 3421              	.L226:
2257:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2258:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_TASK_STATE_PEND_TIMEOUT_SUSPENDED:
2259:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              p_tcb->SuspendCtr--;
 3422              		.loc 1 2259 0
 3423 00f0 7B68     		ldr	r3, [r7, #4]
 3424 00f2 93F88A30 		ldrb	r3, [r3, #138]	@ zero_extendqisi2
 3425 00f6 03F1FF33 		add	r3, r3, #-1
 3426 00fa DAB2     		uxtb	r2, r3
 3427 00fc 7B68     		ldr	r3, [r7, #4]
 3428 00fe 83F88A20 		strb	r2, [r3, #138]
2260:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              if (p_tcb->SuspendCtr == (OS_NESTING_CTR)0) {
 3429              		.loc 1 2260 0
 3430 0102 7B68     		ldr	r3, [r7, #4]
 3431 0104 93F88A30 		ldrb	r3, [r3, #138]	@ zero_extendqisi2
 3432 0108 002B     		cmp	r3, #0
 3433 010a 04D1     		bne	.L232
2261:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  p_tcb->TaskState = OS_TASK_STATE_PEND_TIMEOUT;
 3434              		.loc 1 2261 0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 101


 3435 010c 7B68     		ldr	r3, [r7, #4]
 3436 010e 4FF00302 		mov	r2, #3
 3437 0112 83F83620 		strb	r2, [r3, #54]
 3438              	.L232:
2262:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              }
2263:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              CPU_CRITICAL_EXIT();
 3439              		.loc 1 2263 0
 3440 0116 F868     		ldr	r0, [r7, #12]
 3441 0118 FFF7FEFF 		bl	CPU_SR_Restore
2264:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              break;
 3442              		.loc 1 2264 0
 3443 011c 07E0     		b	.L228
 3444              	.L221:
2265:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2266:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         default:
2267:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              CPU_CRITICAL_EXIT();
 3445              		.loc 1 2267 0
 3446 011e F868     		ldr	r0, [r7, #12]
 3447 0120 FFF7FEFF 		bl	CPU_SR_Restore
2268:C:\Micrium\Software\uCOS-III\Source\os_task.c ****             *p_err = OS_ERR_STATE_INVALID;
 3448              		.loc 1 2268 0
 3449 0124 3B68     		ldr	r3, [r7, #0]
 3450 0126 46F62D62 		movw	r2, #28205
 3451 012a 1A80     		strh	r2, [r3, #0]	@ movhi
2269:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              return;
 3452              		.loc 1 2269 0
 3453 012c 01E0     		b	.L234
 3454              	.L228:
2270:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
2271:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2272:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OSSched();
 3455              		.loc 1 2272 0
 3456 012e FFF7FEFF 		bl	OSSched
 3457              	.L234:
2273:C:\Micrium\Software\uCOS-III\Source\os_task.c **** }
 3458              		.loc 1 2273 0
 3459 0132 07F11007 		add	r7, r7, #16
 3460 0136 BD46     		mov	sp, r7
 3461 0138 80BD     		pop	{r7, pc}
 3462              		.cfi_endproc
 3463              	.LFE23:
 3464              		.size	OS_TaskResume, .-OS_TaskResume
 3465 013a 00BF     		.section	.text.OS_TaskReturn,"ax",%progbits
 3466              		.align	2
 3467              		.global	OS_TaskReturn
 3468              		.thumb
 3469              		.thumb_func
 3470              		.type	OS_TaskReturn, %function
 3471              	OS_TaskReturn:
 3472              	.LFB24:
2274:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
2275:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2276:C:\Micrium\Software\uCOS-III\Source\os_task.c **** /*$PAGE*/
2277:C:\Micrium\Software\uCOS-III\Source\os_task.c **** /*
2278:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
2279:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                              CATCH ACCIDENTAL TASK RETURN
2280:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 102


2281:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Description: This function is called if a task accidentally returns without deleting itself.  In 
2282:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              should either be an infinite loop or delete itself if it's done.
2283:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
2284:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Arguments  : none
2285:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
2286:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Returns    : none
2287:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
2288:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Note(s)    : This function is INTERNAL to uC/OS-III and your application should not call it.
2289:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
2290:C:\Micrium\Software\uCOS-III\Source\os_task.c **** */
2291:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2292:C:\Micrium\Software\uCOS-III\Source\os_task.c **** void  OS_TaskReturn (void)
2293:C:\Micrium\Software\uCOS-III\Source\os_task.c **** {
 3473              		.loc 1 2293 0
 3474              		.cfi_startproc
 3475              		@ args = 0, pretend = 0, frame = 8
 3476              		@ frame_needed = 1, uses_anonymous_args = 0
 3477 0000 80B5     		push	{r7, lr}
 3478              	.LCFI72:
 3479              		.cfi_def_cfa_offset 8
 3480 0002 82B0     		sub	sp, sp, #8
 3481              	.LCFI73:
 3482              		.cfi_def_cfa_offset 16
 3483 0004 00AF     		add	r7, sp, #0
 3484              		.cfi_offset 14, -4
 3485              		.cfi_offset 7, -8
 3486              	.LCFI74:
 3487              		.cfi_def_cfa_register 7
2294:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OS_ERR  err;
2295:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2296:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2297:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2298:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OSTaskReturnHook(OSTCBCurPtr);                          /* Call hook to let user decide on what
 3488              		.loc 1 2298 0
 3489 0006 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 3490 000a C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 3491 000e 1B68     		ldr	r3, [r3, #0]
 3492 0010 1846     		mov	r0, r3
 3493 0012 FFF7FEFF 		bl	OSTaskReturnHook
2299:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_TASK_DEL_EN > 0u
2300:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OSTaskDel((OS_TCB *)0,                                  /* Delete task if it accidentally retur
 3494              		.loc 1 2300 0
 3495 0016 07F10603 		add	r3, r7, #6
 3496 001a 4FF00000 		mov	r0, #0
 3497 001e 1946     		mov	r1, r3
 3498 0020 FFF7FEFF 		bl	OSTaskDel
2301:C:\Micrium\Software\uCOS-III\Source\os_task.c ****               (OS_ERR *)&err);
2302:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #else
2303:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     for (;;) {
2304:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         OSTimeDly((OS_TICK )OSCfg_TickRate_Hz,
2305:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                   (OS_OPT  )OS_OPT_TIME_DLY,
2306:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                   (OS_ERR *)&err);
2307:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
2308:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #endif
2309:C:\Micrium\Software\uCOS-III\Source\os_task.c **** }
 3499              		.loc 1 2309 0
 3500 0024 07F10807 		add	r7, r7, #8
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 103


 3501 0028 BD46     		mov	sp, r7
 3502 002a 80BD     		pop	{r7, pc}
 3503              		.cfi_endproc
 3504              	.LFE24:
 3505              		.size	OS_TaskReturn, .-OS_TaskReturn
 3506              		.section	.text.OS_TaskSemPost,"ax",%progbits
 3507              		.align	2
 3508              		.global	OS_TaskSemPost
 3509              		.thumb
 3510              		.thumb_func
 3511              		.type	OS_TaskSemPost, %function
 3512              	OS_TaskSemPost:
 3513              	.LFB25:
2310:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2311:C:\Micrium\Software\uCOS-III\Source\os_task.c **** /*$PAGE*/
2312:C:\Micrium\Software\uCOS-III\Source\os_task.c **** /*
2313:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
2314:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                                    SIGNAL A TASK
2315:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
2316:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Description: This function is called to signal a task waiting for a signal.
2317:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
2318:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Arguments  : p_tcb     is the pointer to the TCB of the task to signal.  A NULL pointer indicates
2319:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                        a signal to yourself.
2320:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
2321:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              opt       determines the type of POST performed:
2322:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
2323:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             OS_OPT_POST_NONE         No option
2324:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
2325:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                             OS_OPT_POST_NO_SCHED     Do not call the scheduler
2326:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
2327:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              ts        is a timestamp indicating when the post occurred.
2328:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
2329:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              p_err     is a pointer to an error code returned by this function:
2330:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
2331:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                            OS_ERR_NONE           If the requested task is signaled
2332:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                            OS_ERR_SEM_OVF        If the post would cause the semaphore count to o
2333:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                            OS_ERR_STATE_INVALID  If the task is in an invalid state.  This should
2334:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                                  and if it does, would be considered a system fai
2335:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
2336:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Returns    : The current value of the task's signal counter or 0 if called from an ISR
2337:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
2338:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Note(s)    : This function is INTERNAL to uC/OS-III and your application should not call it.
2339:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
2340:C:\Micrium\Software\uCOS-III\Source\os_task.c **** */
2341:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2342:C:\Micrium\Software\uCOS-III\Source\os_task.c **** OS_SEM_CTR  OS_TaskSemPost (OS_TCB  *p_tcb,
2343:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                             OS_OPT   opt,
2344:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                             CPU_TS   ts,
2345:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                             OS_ERR  *p_err)
2346:C:\Micrium\Software\uCOS-III\Source\os_task.c **** {
 3514              		.loc 1 2346 0
 3515              		.cfi_startproc
 3516              		@ args = 0, pretend = 0, frame = 24
 3517              		@ frame_needed = 1, uses_anonymous_args = 0
 3518 0000 80B5     		push	{r7, lr}
 3519              	.LCFI75:
 3520              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 104


 3521 0002 88B0     		sub	sp, sp, #32
 3522              	.LCFI76:
 3523              		.cfi_def_cfa_offset 40
 3524 0004 02AF     		add	r7, sp, #8
 3525              		.cfi_offset 14, -4
 3526              		.cfi_offset 7, -8
 3527              	.LCFI77:
 3528              		.cfi_def_cfa 7, 32
 3529 0006 F860     		str	r0, [r7, #12]
 3530 0008 7A60     		str	r2, [r7, #4]
 3531 000a 3B60     		str	r3, [r7, #0]
 3532 000c 0B46     		mov	r3, r1	@ movhi
 3533 000e 7B81     		strh	r3, [r7, #10]	@ movhi
2347:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OS_SEM_CTR  ctr;
2348:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_SR_ALLOC();
 3534              		.loc 1 2348 0
 3535 0010 4FF00003 		mov	r3, #0
 3536 0014 7B61     		str	r3, [r7, #20]
2349:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2350:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2351:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2352:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OS_CRITICAL_ENTER();
 3537              		.loc 1 2352 0
 3538 0016 FFF7FEFF 		bl	CPU_SR_Save
 3539 001a 0346     		mov	r3, r0
 3540 001c 7B61     		str	r3, [r7, #20]
2353:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (p_tcb == (OS_TCB *)0) {                             /* Post signal to 'self'?              
 3541              		.loc 1 2353 0
 3542 001e FB68     		ldr	r3, [r7, #12]
 3543 0020 002B     		cmp	r3, #0
 3544 0022 05D1     		bne	.L238
2354:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         p_tcb = OSTCBCurPtr;
 3545              		.loc 1 2354 0
 3546 0024 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 3547 0028 C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 3548 002c 1B68     		ldr	r3, [r3, #0]
 3549 002e FB60     		str	r3, [r7, #12]
 3550              	.L238:
2355:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
2356:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     p_tcb->TS = ts;
 3551              		.loc 1 2356 0
 3552 0030 FB68     		ldr	r3, [r7, #12]
 3553 0032 7A68     		ldr	r2, [r7, #4]
 3554 0034 1A64     		str	r2, [r3, #64]
2357:C:\Micrium\Software\uCOS-III\Source\os_task.c ****    *p_err     = OS_ERR_NONE;                                /* Assume we won't have any errors     
 3555              		.loc 1 2357 0
 3556 0036 3B68     		ldr	r3, [r7, #0]
 3557 0038 4FF00002 		mov	r2, #0
 3558 003c 1A80     		strh	r2, [r3, #0]	@ movhi
2358:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     switch (p_tcb->TaskState) {
 3559              		.loc 1 2358 0
 3560 003e FB68     		ldr	r3, [r7, #12]
 3561 0040 93F83630 		ldrb	r3, [r3, #54]	@ zero_extendqisi2
 3562 0044 072B     		cmp	r3, #7
 3563 0046 60D8     		bhi	.L239
 3564 0048 4FF00102 		mov	r2, #1
 3565 004c 02FA03F3 		lsl	r3, r2, r3
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 105


 3566 0050 03F0CC02 		and	r2, r3, #204
 3567 0054 002A     		cmp	r2, #0
 3568 0056 1FD1     		bne	.L241
 3569 0058 03F03303 		and	r3, r3, #51
 3570 005c 002B     		cmp	r3, #0
 3571 005e 54D0     		beq	.L239
 3572              	.L240:
2359:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_TASK_STATE_RDY:
2360:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_TASK_STATE_DLY:
2361:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_TASK_STATE_SUSPENDED:
2362:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_TASK_STATE_DLY_SUSPENDED:
2363:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              switch (sizeof(OS_SEM_CTR)) {
2364:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  case 1u:
2365:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                       if (p_tcb->SemCtr == DEF_INT_08U_MAX_VAL) {
2366:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                           OS_CRITICAL_EXIT();
2367:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                          *p_err = OS_ERR_SEM_OVF;
2368:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                           return ((OS_SEM_CTR)0);
2369:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                       }
2370:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                       break;
2371:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2372:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  case 2u:
2373:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                       if (p_tcb->SemCtr == DEF_INT_16U_MAX_VAL) {
2374:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                           OS_CRITICAL_EXIT();
2375:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                          *p_err = OS_ERR_SEM_OVF;
2376:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                           return ((OS_SEM_CTR)0);
2377:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                       }
2378:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                       break;
2379:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2380:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  case 4u:
2381:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                       if (p_tcb->SemCtr == DEF_INT_32U_MAX_VAL) {
 3573              		.loc 1 2381 0
 3574 0060 FB68     		ldr	r3, [r7, #12]
 3575 0062 5B6C     		ldr	r3, [r3, #68]
 3576 0064 B3F1FF3F 		cmp	r3, #-1
 3577 0068 09D1     		bne	.L242
2382:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                           OS_CRITICAL_EXIT();
 3578              		.loc 1 2382 0
 3579 006a 7869     		ldr	r0, [r7, #20]
 3580 006c FFF7FEFF 		bl	CPU_SR_Restore
2383:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                          *p_err = OS_ERR_SEM_OVF;
 3581              		.loc 1 2383 0
 3582 0070 3B68     		ldr	r3, [r7, #0]
 3583 0072 46F6C552 		movw	r2, #28101
 3584 0076 1A80     		strh	r2, [r3, #0]	@ movhi
2384:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                           return ((OS_SEM_CTR)0);
 3585              		.loc 1 2384 0
 3586 0078 4FF00003 		mov	r3, #0
 3587 007c 52E0     		b	.L243
 3588              	.L242:
2385:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                       }
2386:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                       break;
2387:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2388:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  default:
2389:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                       break;
2390:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              }
2391:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              p_tcb->SemCtr++;                               /* Task signaled is not pending on anyt
 3589              		.loc 1 2391 0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 106


 3590 007e FB68     		ldr	r3, [r7, #12]
 3591 0080 5B6C     		ldr	r3, [r3, #68]
 3592 0082 03F10102 		add	r2, r3, #1
 3593 0086 FB68     		ldr	r3, [r7, #12]
 3594 0088 5A64     		str	r2, [r3, #68]
2392:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              ctr = p_tcb->SemCtr;
 3595              		.loc 1 2392 0
 3596 008a FB68     		ldr	r3, [r7, #12]
 3597 008c 5B6C     		ldr	r3, [r3, #68]
 3598 008e 3B61     		str	r3, [r7, #16]
2393:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              OS_CRITICAL_EXIT();
 3599              		.loc 1 2393 0
 3600 0090 7869     		ldr	r0, [r7, #20]
 3601 0092 FFF7FEFF 		bl	CPU_SR_Restore
2394:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              break;
 3602              		.loc 1 2394 0
 3603 0096 44E0     		b	.L244
 3604              	.L241:
2395:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2396:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_TASK_STATE_PEND:
2397:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_TASK_STATE_PEND_TIMEOUT:
2398:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_TASK_STATE_PEND_SUSPENDED:
2399:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_TASK_STATE_PEND_TIMEOUT_SUSPENDED:
2400:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              if (p_tcb->PendOn == OS_TASK_PEND_ON_TASK_SEM) {   /* Is task signaled waiting for a s
 3605              		.loc 1 2400 0
 3606 0098 FB68     		ldr	r3, [r7, #12]
 3607 009a 93F83430 		ldrb	r3, [r3, #52]	@ zero_extendqisi2
 3608 009e 072B     		cmp	r3, #7
 3609 00a0 17D1     		bne	.L245
2401:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  OS_Post((OS_PEND_OBJ *)0,                      /*      Task is pending on signal  
 3610              		.loc 1 2401 0
 3611 00a2 7B68     		ldr	r3, [r7, #4]
 3612 00a4 0093     		str	r3, [sp, #0]
 3613 00a6 4FF00000 		mov	r0, #0
 3614 00aa F968     		ldr	r1, [r7, #12]
 3615 00ac 4FF00002 		mov	r2, #0
 3616 00b0 4FF00003 		mov	r3, #0
 3617 00b4 FFF7FEFF 		bl	OS_Post
2402:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                          (OS_TCB      *)p_tcb,
2403:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                          (void        *)0,
2404:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                          (OS_MSG_SIZE  )0u,
2405:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                          (CPU_TS       )ts);
2406:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  ctr = p_tcb->SemCtr;
 3618              		.loc 1 2406 0
 3619 00b8 FB68     		ldr	r3, [r7, #12]
 3620 00ba 5B6C     		ldr	r3, [r3, #68]
 3621 00bc 3B61     		str	r3, [r7, #16]
2407:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  OS_CRITICAL_EXIT_NO_SCHED();
 3622              		.loc 1 2407 0
 3623 00be 7869     		ldr	r0, [r7, #20]
 3624 00c0 FFF7FEFF 		bl	CPU_SR_Restore
2408:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  if ((opt & OS_OPT_POST_NO_SCHED) == (OS_OPT)0) {
 3625              		.loc 1 2408 0
 3626 00c4 7B89     		ldrh	r3, [r7, #10]
 3627 00c6 1BB2     		sxth	r3, r3
 3628 00c8 002B     		cmp	r3, #0
 3629 00ca 29DB     		blt	.L250
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 107


2409:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                      OSSched();                                 /* Run the scheduler               
 3630              		.loc 1 2409 0
 3631 00cc FFF7FEFF 		bl	OSSched
2410:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  }
2411:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              } else {
2412:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  switch (sizeof(OS_SEM_CTR)) {
2413:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                      case 1u:
2414:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                           if (p_tcb->SemCtr == DEF_INT_08U_MAX_VAL) {
2415:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                               OS_CRITICAL_EXIT();
2416:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                              *p_err = OS_ERR_SEM_OVF;
2417:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                               return ((OS_SEM_CTR)0);
2418:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                           }
2419:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                           break;
2420:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2421:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                      case 2u:
2422:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                           if (p_tcb->SemCtr == DEF_INT_16U_MAX_VAL) {
2423:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                               OS_CRITICAL_EXIT();
2424:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                              *p_err = OS_ERR_SEM_OVF;
2425:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                               return ((OS_SEM_CTR)0);
2426:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                           }
2427:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                           break;
2428:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2429:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                      case 4u:
2430:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                           if (p_tcb->SemCtr == DEF_INT_32U_MAX_VAL) {
2431:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                               OS_CRITICAL_EXIT();
2432:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                              *p_err = OS_ERR_SEM_OVF;
2433:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                               return ((OS_SEM_CTR)0);
2434:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                           }
2435:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                           break;
2436:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2437:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                      default:
2438:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                           break;
2439:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  }
2440:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  p_tcb->SemCtr++;                           /* No,  Task signaled is NOT pending on
2441:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  ctr = p_tcb->SemCtr;                       /*      ... it must be waiting on somet
2442:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                  OS_CRITICAL_EXIT();
2443:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              }
2444:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              break;
 3632              		.loc 1 2444 0
 3633 00d0 27E0     		b	.L244
 3634              	.L245:
 3635              		.loc 1 2430 0
 3636 00d2 FB68     		ldr	r3, [r7, #12]
 3637 00d4 5B6C     		ldr	r3, [r3, #68]
 3638 00d6 B3F1FF3F 		cmp	r3, #-1
 3639 00da 09D1     		bne	.L248
 3640              		.loc 1 2431 0
 3641 00dc 7869     		ldr	r0, [r7, #20]
 3642 00de FFF7FEFF 		bl	CPU_SR_Restore
 3643              		.loc 1 2432 0
 3644 00e2 3B68     		ldr	r3, [r7, #0]
 3645 00e4 46F6C552 		movw	r2, #28101
 3646 00e8 1A80     		strh	r2, [r3, #0]	@ movhi
 3647              		.loc 1 2433 0
 3648 00ea 4FF00003 		mov	r3, #0
 3649 00ee 19E0     		b	.L243
 3650              	.L248:
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 108


 3651              		.loc 1 2440 0
 3652 00f0 FB68     		ldr	r3, [r7, #12]
 3653 00f2 5B6C     		ldr	r3, [r3, #68]
 3654 00f4 03F10102 		add	r2, r3, #1
 3655 00f8 FB68     		ldr	r3, [r7, #12]
 3656 00fa 5A64     		str	r2, [r3, #68]
 3657              		.loc 1 2441 0
 3658 00fc FB68     		ldr	r3, [r7, #12]
 3659 00fe 5B6C     		ldr	r3, [r3, #68]
 3660 0100 3B61     		str	r3, [r7, #16]
 3661              		.loc 1 2442 0
 3662 0102 7869     		ldr	r0, [r7, #20]
 3663 0104 FFF7FEFF 		bl	CPU_SR_Restore
 3664              		.loc 1 2444 0
 3665 0108 0BE0     		b	.L244
 3666              	.L239:
2445:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2446:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         default:
2447:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              OS_CRITICAL_EXIT();
 3667              		.loc 1 2447 0
 3668 010a 7869     		ldr	r0, [r7, #20]
 3669 010c FFF7FEFF 		bl	CPU_SR_Restore
2448:C:\Micrium\Software\uCOS-III\Source\os_task.c ****             *p_err = OS_ERR_STATE_INVALID;
 3670              		.loc 1 2448 0
 3671 0110 3B68     		ldr	r3, [r7, #0]
 3672 0112 46F62D62 		movw	r2, #28205
 3673 0116 1A80     		strh	r2, [r3, #0]	@ movhi
2449:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              ctr   = (OS_SEM_CTR)0;
 3674              		.loc 1 2449 0
 3675 0118 4FF00003 		mov	r3, #0
 3676 011c 3B61     		str	r3, [r7, #16]
 3677 011e 00E0     		b	.L244
 3678              	.L250:
 3679              		.loc 1 2444 0
 3680 0120 00BF     		nop
 3681              	.L244:
2450:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              break;
2451:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
2452:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     return (ctr);
 3682              		.loc 1 2452 0
 3683 0122 3B69     		ldr	r3, [r7, #16]
 3684              	.L243:
2453:C:\Micrium\Software\uCOS-III\Source\os_task.c **** }
 3685              		.loc 1 2453 0
 3686 0124 1846     		mov	r0, r3
 3687 0126 07F11807 		add	r7, r7, #24
 3688 012a BD46     		mov	sp, r7
 3689 012c 80BD     		pop	{r7, pc}
 3690              		.cfi_endproc
 3691              	.LFE25:
 3692              		.size	OS_TaskSemPost, .-OS_TaskSemPost
 3693 012e 00BF     		.section	.text.OS_TaskSuspend,"ax",%progbits
 3694              		.align	2
 3695              		.global	OS_TaskSuspend
 3696              		.thumb
 3697              		.thumb_func
 3698              		.type	OS_TaskSuspend, %function
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 109


 3699              	OS_TaskSuspend:
 3700              	.LFB26:
2454:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2455:C:\Micrium\Software\uCOS-III\Source\os_task.c **** /*$PAGE*/
2456:C:\Micrium\Software\uCOS-III\Source\os_task.c **** /*
2457:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
2458:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                                   SUSPEND A TASK
2459:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
2460:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Description: This function is called to suspend a task.  The task can be the calling task if 'p_t
2461:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              or the pointer to the TCB of the calling task.
2462:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
2463:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Arguments  : p_tcb    is a pointer to the TCB to suspend.
2464:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                       If p_tcb is a NULL pointer then, suspend the current task.
2465:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
2466:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              p_err    is a pointer to a variable that will receive an error code from this functi
2467:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
2468:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                           OS_ERR_NONE                      if the requested task is suspended
2469:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                           OS_ERR_SCHED_LOCKED              you can't suspend the current task is 
2470:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                                            locked
2471:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                           OS_ERR_TASK_SUSPEND_ISR          if you called this function from an IS
2472:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                           OS_ERR_TASK_SUSPEND_IDLE         if you attempted to suspend the idle t
2473:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                                            allowed.
2474:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                           OS_ERR_TASK_SUSPEND_INT_HANDLER  if you attempted to suspend the idle t
2475:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                                                            allowed.
2476:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
2477:C:\Micrium\Software\uCOS-III\Source\os_task.c **** * Note(s)    : 1) This function is INTERNAL to uC/OS-III and your application should not call it.
2478:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *
2479:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *              2) You should use this function with great care.  If you suspend a task that is wait
2480:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                 (i.e. a message, a semaphore, a queue ...) you will prevent this task from runnin
2481:C:\Micrium\Software\uCOS-III\Source\os_task.c **** *                 arrives.
2482:C:\Micrium\Software\uCOS-III\Source\os_task.c **** ***************************************************************************************************
2483:C:\Micrium\Software\uCOS-III\Source\os_task.c **** */
2484:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2485:C:\Micrium\Software\uCOS-III\Source\os_task.c **** #if OS_CFG_TASK_SUSPEND_EN > 0u
2486:C:\Micrium\Software\uCOS-III\Source\os_task.c **** void   OS_TaskSuspend (OS_TCB  *p_tcb,
2487:C:\Micrium\Software\uCOS-III\Source\os_task.c ****                        OS_ERR  *p_err)
2488:C:\Micrium\Software\uCOS-III\Source\os_task.c **** {
 3701              		.loc 1 2488 0
 3702              		.cfi_startproc
 3703              		@ args = 0, pretend = 0, frame = 16
 3704              		@ frame_needed = 1, uses_anonymous_args = 0
 3705 0000 80B5     		push	{r7, lr}
 3706              	.LCFI78:
 3707              		.cfi_def_cfa_offset 8
 3708 0002 84B0     		sub	sp, sp, #16
 3709              	.LCFI79:
 3710              		.cfi_def_cfa_offset 24
 3711 0004 00AF     		add	r7, sp, #0
 3712              		.cfi_offset 14, -4
 3713              		.cfi_offset 7, -8
 3714              	.LCFI80:
 3715              		.cfi_def_cfa_register 7
 3716 0006 7860     		str	r0, [r7, #4]
 3717 0008 3960     		str	r1, [r7, #0]
2489:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_SR_ALLOC();
 3718              		.loc 1 2489 0
 3719 000a 4FF00003 		mov	r3, #0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 110


 3720 000e FB60     		str	r3, [r7, #12]
2490:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2491:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2492:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2493:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     CPU_CRITICAL_ENTER();
 3721              		.loc 1 2493 0
 3722 0010 FFF7FEFF 		bl	CPU_SR_Save
 3723 0014 0346     		mov	r3, r0
 3724 0016 FB60     		str	r3, [r7, #12]
2494:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (p_tcb == (OS_TCB *)0) {                             /* See if specified to suspend self    
 3725              		.loc 1 2494 0
 3726 0018 7B68     		ldr	r3, [r7, #4]
 3727 001a 002B     		cmp	r3, #0
 3728 001c 05D1     		bne	.L252
2495:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         p_tcb = OSTCBCurPtr;
 3729              		.loc 1 2495 0
 3730 001e 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 3731 0022 C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 3732 0026 1B68     		ldr	r3, [r3, #0]
 3733 0028 7B60     		str	r3, [r7, #4]
 3734              	.L252:
2496:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
2497:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2498:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     if (p_tcb == OSTCBCurPtr) {
 3735              		.loc 1 2498 0
 3736 002a 40F20003 		movw	r3, #:lower16:OSTCBCurPtr
 3737 002e C0F20003 		movt	r3, #:upper16:OSTCBCurPtr
 3738 0032 1B68     		ldr	r3, [r3, #0]
 3739 0034 7A68     		ldr	r2, [r7, #4]
 3740 0036 9A42     		cmp	r2, r3
 3741 0038 0ED1     		bne	.L253
2499:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         if (OSSchedLockNestingCtr > (OS_NESTING_CTR)0) {    /* Can't suspend when the scheduler is 
 3742              		.loc 1 2499 0
 3743 003a 40F20003 		movw	r3, #:lower16:OSSchedLockNestingCtr
 3744 003e C0F20003 		movt	r3, #:upper16:OSSchedLockNestingCtr
 3745 0042 1B78     		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3746 0044 002B     		cmp	r3, #0
 3747 0046 07D0     		beq	.L253
2500:C:\Micrium\Software\uCOS-III\Source\os_task.c ****             CPU_CRITICAL_EXIT();
 3748              		.loc 1 2500 0
 3749 0048 F868     		ldr	r0, [r7, #12]
 3750 004a FFF7FEFF 		bl	CPU_SR_Restore
2501:C:\Micrium\Software\uCOS-III\Source\os_task.c ****            *p_err = OS_ERR_SCHED_LOCKED;
 3751              		.loc 1 2501 0
 3752 004e 3B68     		ldr	r3, [r7, #0]
 3753 0050 46F66352 		movw	r2, #28003
 3754 0054 1A80     		strh	r2, [r3, #0]	@ movhi
2502:C:\Micrium\Software\uCOS-III\Source\os_task.c ****             return;
 3755              		.loc 1 2502 0
 3756 0056 6DE0     		b	.L263
 3757              	.L253:
2503:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         }
2504:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
2505:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2506:C:\Micrium\Software\uCOS-III\Source\os_task.c ****    *p_err = OS_ERR_NONE;
 3758              		.loc 1 2506 0
 3759 0058 3B68     		ldr	r3, [r7, #0]
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 111


 3760 005a 4FF00002 		mov	r2, #0
 3761 005e 1A80     		strh	r2, [r3, #0]	@ movhi
2507:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     switch (p_tcb->TaskState) {
 3762              		.loc 1 2507 0
 3763 0060 7B68     		ldr	r3, [r7, #4]
 3764 0062 93F83630 		ldrb	r3, [r3, #54]	@ zero_extendqisi2
 3765 0066 072B     		cmp	r3, #7
 3766 0068 5AD8     		bhi	.L255
 3767 006a 01A2     		adr	r2, .L261
 3768 006c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 3769              		.align	2
 3770              	.L261:
 3771 0070 91000000 		.word	.L256+1
 3772 0074 B3000000 		.word	.L257+1
 3773 0078 CF000000 		.word	.L258+1
 3774 007c EB000000 		.word	.L259+1
 3775 0080 07010000 		.word	.L260+1
 3776 0084 07010000 		.word	.L260+1
 3777 0088 07010000 		.word	.L260+1
 3778 008c 07010000 		.word	.L260+1
 3779              	.L256:
2508:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_TASK_STATE_RDY:
2509:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              OS_CRITICAL_ENTER_CPU_EXIT();
2510:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              p_tcb->TaskState  =  OS_TASK_STATE_SUSPENDED;
 3780              		.loc 1 2510 0
 3781 0090 7B68     		ldr	r3, [r7, #4]
 3782 0092 4FF00402 		mov	r2, #4
 3783 0096 83F83620 		strb	r2, [r3, #54]
2511:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              p_tcb->SuspendCtr = (OS_NESTING_CTR)1;
 3784              		.loc 1 2511 0
 3785 009a 7B68     		ldr	r3, [r7, #4]
 3786 009c 4FF00102 		mov	r2, #1
 3787 00a0 83F88A20 		strb	r2, [r3, #138]
2512:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              OS_RdyListRemove(p_tcb);
 3788              		.loc 1 2512 0
 3789 00a4 7868     		ldr	r0, [r7, #4]
 3790 00a6 FFF7FEFF 		bl	OS_RdyListRemove
2513:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              OS_CRITICAL_EXIT_NO_SCHED();
 3791              		.loc 1 2513 0
 3792 00aa F868     		ldr	r0, [r7, #12]
 3793 00ac FFF7FEFF 		bl	CPU_SR_Restore
2514:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              break;
 3794              		.loc 1 2514 0
 3795 00b0 3EE0     		b	.L262
 3796              	.L257:
2515:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2516:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_TASK_STATE_DLY:
2517:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              p_tcb->TaskState  = OS_TASK_STATE_DLY_SUSPENDED;
 3797              		.loc 1 2517 0
 3798 00b2 7B68     		ldr	r3, [r7, #4]
 3799 00b4 4FF00502 		mov	r2, #5
 3800 00b8 83F83620 		strb	r2, [r3, #54]
2518:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              p_tcb->SuspendCtr = (OS_NESTING_CTR)1;
 3801              		.loc 1 2518 0
 3802 00bc 7B68     		ldr	r3, [r7, #4]
 3803 00be 4FF00102 		mov	r2, #1
 3804 00c2 83F88A20 		strb	r2, [r3, #138]
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 112


2519:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              CPU_CRITICAL_EXIT();
 3805              		.loc 1 2519 0
 3806 00c6 F868     		ldr	r0, [r7, #12]
 3807 00c8 FFF7FEFF 		bl	CPU_SR_Restore
2520:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              break;
 3808              		.loc 1 2520 0
 3809 00cc 30E0     		b	.L262
 3810              	.L258:
2521:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2522:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_TASK_STATE_PEND:
2523:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              p_tcb->TaskState  = OS_TASK_STATE_PEND_SUSPENDED;
 3811              		.loc 1 2523 0
 3812 00ce 7B68     		ldr	r3, [r7, #4]
 3813 00d0 4FF00602 		mov	r2, #6
 3814 00d4 83F83620 		strb	r2, [r3, #54]
2524:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              p_tcb->SuspendCtr = (OS_NESTING_CTR)1;
 3815              		.loc 1 2524 0
 3816 00d8 7B68     		ldr	r3, [r7, #4]
 3817 00da 4FF00102 		mov	r2, #1
 3818 00de 83F88A20 		strb	r2, [r3, #138]
2525:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              CPU_CRITICAL_EXIT();
 3819              		.loc 1 2525 0
 3820 00e2 F868     		ldr	r0, [r7, #12]
 3821 00e4 FFF7FEFF 		bl	CPU_SR_Restore
2526:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              break;
 3822              		.loc 1 2526 0
 3823 00e8 22E0     		b	.L262
 3824              	.L259:
2527:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2528:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_TASK_STATE_PEND_TIMEOUT:
2529:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              p_tcb->TaskState  = OS_TASK_STATE_PEND_TIMEOUT_SUSPENDED;
 3825              		.loc 1 2529 0
 3826 00ea 7B68     		ldr	r3, [r7, #4]
 3827 00ec 4FF00702 		mov	r2, #7
 3828 00f0 83F83620 		strb	r2, [r3, #54]
2530:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              p_tcb->SuspendCtr = (OS_NESTING_CTR)1;
 3829              		.loc 1 2530 0
 3830 00f4 7B68     		ldr	r3, [r7, #4]
 3831 00f6 4FF00102 		mov	r2, #1
 3832 00fa 83F88A20 		strb	r2, [r3, #138]
2531:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              CPU_CRITICAL_EXIT();
 3833              		.loc 1 2531 0
 3834 00fe F868     		ldr	r0, [r7, #12]
 3835 0100 FFF7FEFF 		bl	CPU_SR_Restore
2532:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              break;
 3836              		.loc 1 2532 0
 3837 0104 14E0     		b	.L262
 3838              	.L260:
2533:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2534:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_TASK_STATE_SUSPENDED:
2535:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_TASK_STATE_DLY_SUSPENDED:
2536:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_TASK_STATE_PEND_SUSPENDED:
2537:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         case OS_TASK_STATE_PEND_TIMEOUT_SUSPENDED:
2538:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              p_tcb->SuspendCtr++;
 3839              		.loc 1 2538 0
 3840 0106 7B68     		ldr	r3, [r7, #4]
 3841 0108 93F88A30 		ldrb	r3, [r3, #138]	@ zero_extendqisi2
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 113


 3842 010c 03F10103 		add	r3, r3, #1
 3843 0110 DAB2     		uxtb	r2, r3
 3844 0112 7B68     		ldr	r3, [r7, #4]
 3845 0114 83F88A20 		strb	r2, [r3, #138]
2539:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              CPU_CRITICAL_EXIT();
 3846              		.loc 1 2539 0
 3847 0118 F868     		ldr	r0, [r7, #12]
 3848 011a FFF7FEFF 		bl	CPU_SR_Restore
2540:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              break;
 3849              		.loc 1 2540 0
 3850 011e 07E0     		b	.L262
 3851              	.L255:
2541:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2542:C:\Micrium\Software\uCOS-III\Source\os_task.c ****         default:
2543:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              CPU_CRITICAL_EXIT();
 3852              		.loc 1 2543 0
 3853 0120 F868     		ldr	r0, [r7, #12]
 3854 0122 FFF7FEFF 		bl	CPU_SR_Restore
2544:C:\Micrium\Software\uCOS-III\Source\os_task.c ****             *p_err = OS_ERR_STATE_INVALID;
 3855              		.loc 1 2544 0
 3856 0126 3B68     		ldr	r3, [r7, #0]
 3857 0128 46F62D62 		movw	r2, #28205
 3858 012c 1A80     		strh	r2, [r3, #0]	@ movhi
2545:C:\Micrium\Software\uCOS-III\Source\os_task.c ****              return;
 3859              		.loc 1 2545 0
 3860 012e 01E0     		b	.L263
 3861              	.L262:
2546:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     }
2547:C:\Micrium\Software\uCOS-III\Source\os_task.c **** 
2548:C:\Micrium\Software\uCOS-III\Source\os_task.c ****     OSSched();
 3862              		.loc 1 2548 0
 3863 0130 FFF7FEFF 		bl	OSSched
 3864              	.L263:
2549:C:\Micrium\Software\uCOS-III\Source\os_task.c **** }
 3865              		.loc 1 2549 0
 3866 0134 07F11007 		add	r7, r7, #16
 3867 0138 BD46     		mov	sp, r7
 3868 013a 80BD     		pop	{r7, pc}
 3869              		.cfi_endproc
 3870              	.LFE26:
 3871              		.size	OS_TaskSuspend, .-OS_TaskSuspend
 3872              		.text
 3873              	.Letext0:
 3874              		.section	.debug_loc,"",%progbits
 3875              	.Ldebug_loc0:
 3876              	.LLST0:
 3877 0000 00000000 		.4byte	.LFB0
 3878 0004 02000000 		.4byte	.LCFI0
 3879 0008 0100     		.2byte	0x1
 3880 000a 5D       		.byte	0x5d
 3881 000b 02000000 		.4byte	.LCFI0
 3882 000f 04000000 		.4byte	.LCFI1
 3883 0013 0200     		.2byte	0x2
 3884 0015 7D       		.byte	0x7d
 3885 0016 08       		.sleb128 8
 3886 0017 04000000 		.4byte	.LCFI1
 3887 001b 06000000 		.4byte	.LCFI2
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 114


 3888 001f 0200     		.2byte	0x2
 3889 0021 7D       		.byte	0x7d
 3890 0022 20       		.sleb128 32
 3891 0023 06000000 		.4byte	.LCFI2
 3892 0027 3E010000 		.4byte	.LFE0
 3893 002b 0200     		.2byte	0x2
 3894 002d 77       		.byte	0x77
 3895 002e 20       		.sleb128 32
 3896 002f 00000000 		.4byte	0x0
 3897 0033 00000000 		.4byte	0x0
 3898              	.LLST1:
 3899 0037 00000000 		.4byte	.LFB1
 3900 003b 02000000 		.4byte	.LCFI3
 3901 003f 0100     		.2byte	0x1
 3902 0041 5D       		.byte	0x5d
 3903 0042 02000000 		.4byte	.LCFI3
 3904 0046 04000000 		.4byte	.LCFI4
 3905 004a 0200     		.2byte	0x2
 3906 004c 7D       		.byte	0x7d
 3907 004d 08       		.sleb128 8
 3908 004e 04000000 		.4byte	.LCFI4
 3909 0052 06000000 		.4byte	.LCFI5
 3910 0056 0200     		.2byte	0x2
 3911 0058 7D       		.byte	0x7d
 3912 0059 38       		.sleb128 56
 3913 005a 06000000 		.4byte	.LCFI5
 3914 005e 3C020000 		.4byte	.LFE1
 3915 0062 0200     		.2byte	0x2
 3916 0064 77       		.byte	0x77
 3917 0065 30       		.sleb128 48
 3918 0066 00000000 		.4byte	0x0
 3919 006a 00000000 		.4byte	0x0
 3920              	.LLST2:
 3921 006e 00000000 		.4byte	.LFB2
 3922 0072 02000000 		.4byte	.LCFI6
 3923 0076 0100     		.2byte	0x1
 3924 0078 5D       		.byte	0x5d
 3925 0079 02000000 		.4byte	.LCFI6
 3926 007d 04000000 		.4byte	.LCFI7
 3927 0081 0200     		.2byte	0x2
 3928 0083 7D       		.byte	0x7d
 3929 0084 08       		.sleb128 8
 3930 0085 04000000 		.4byte	.LCFI7
 3931 0089 06000000 		.4byte	.LCFI8
 3932 008d 0200     		.2byte	0x2
 3933 008f 7D       		.byte	0x7d
 3934 0090 18       		.sleb128 24
 3935 0091 06000000 		.4byte	.LCFI8
 3936 0095 50010000 		.4byte	.LFE2
 3937 0099 0200     		.2byte	0x2
 3938 009b 77       		.byte	0x77
 3939 009c 18       		.sleb128 24
 3940 009d 00000000 		.4byte	0x0
 3941 00a1 00000000 		.4byte	0x0
 3942              	.LLST3:
 3943 00a5 00000000 		.4byte	.LFB3
 3944 00a9 02000000 		.4byte	.LCFI9
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 115


 3945 00ad 0100     		.2byte	0x1
 3946 00af 5D       		.byte	0x5d
 3947 00b0 02000000 		.4byte	.LCFI9
 3948 00b4 04000000 		.4byte	.LCFI10
 3949 00b8 0200     		.2byte	0x2
 3950 00ba 7D       		.byte	0x7d
 3951 00bb 08       		.sleb128 8
 3952 00bc 04000000 		.4byte	.LCFI10
 3953 00c0 06000000 		.4byte	.LCFI11
 3954 00c4 0200     		.2byte	0x2
 3955 00c6 7D       		.byte	0x7d
 3956 00c7 18       		.sleb128 24
 3957 00c8 06000000 		.4byte	.LCFI11
 3958 00cc 7E000000 		.4byte	.LFE3
 3959 00d0 0200     		.2byte	0x2
 3960 00d2 77       		.byte	0x77
 3961 00d3 18       		.sleb128 24
 3962 00d4 00000000 		.4byte	0x0
 3963 00d8 00000000 		.4byte	0x0
 3964              	.LLST4:
 3965 00dc 00000000 		.4byte	.LFB4
 3966 00e0 02000000 		.4byte	.LCFI12
 3967 00e4 0100     		.2byte	0x1
 3968 00e6 5D       		.byte	0x5d
 3969 00e7 02000000 		.4byte	.LCFI12
 3970 00eb 04000000 		.4byte	.LCFI13
 3971 00ef 0200     		.2byte	0x2
 3972 00f1 7D       		.byte	0x7d
 3973 00f2 0C       		.sleb128 12
 3974 00f3 04000000 		.4byte	.LCFI13
 3975 00f7 06000000 		.4byte	.LCFI14
 3976 00fb 0200     		.2byte	0x2
 3977 00fd 7D       		.byte	0x7d
 3978 00fe 30       		.sleb128 48
 3979 00ff 06000000 		.4byte	.LCFI14
 3980 0103 72020000 		.4byte	.LFE4
 3981 0107 0200     		.2byte	0x2
 3982 0109 77       		.byte	0x77
 3983 010a 30       		.sleb128 48
 3984 010b 00000000 		.4byte	0x0
 3985 010f 00000000 		.4byte	0x0
 3986              	.LLST5:
 3987 0113 00000000 		.4byte	.LFB5
 3988 0117 02000000 		.4byte	.LCFI15
 3989 011b 0100     		.2byte	0x1
 3990 011d 5D       		.byte	0x5d
 3991 011e 02000000 		.4byte	.LCFI15
 3992 0122 04000000 		.4byte	.LCFI16
 3993 0126 0200     		.2byte	0x2
 3994 0128 7D       		.byte	0x7d
 3995 0129 08       		.sleb128 8
 3996 012a 04000000 		.4byte	.LCFI16
 3997 012e 06000000 		.4byte	.LCFI17
 3998 0132 0200     		.2byte	0x2
 3999 0134 7D       		.byte	0x7d
 4000 0135 20       		.sleb128 32
 4001 0136 06000000 		.4byte	.LCFI17
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 116


 4002 013a D8000000 		.4byte	.LFE5
 4003 013e 0200     		.2byte	0x2
 4004 0140 77       		.byte	0x77
 4005 0141 20       		.sleb128 32
 4006 0142 00000000 		.4byte	0x0
 4007 0146 00000000 		.4byte	0x0
 4008              	.LLST6:
 4009 014a 00000000 		.4byte	.LFB6
 4010 014e 02000000 		.4byte	.LCFI18
 4011 0152 0100     		.2byte	0x1
 4012 0154 5D       		.byte	0x5d
 4013 0155 02000000 		.4byte	.LCFI18
 4014 0159 04000000 		.4byte	.LCFI19
 4015 015d 0200     		.2byte	0x2
 4016 015f 7D       		.byte	0x7d
 4017 0160 08       		.sleb128 8
 4018 0161 04000000 		.4byte	.LCFI19
 4019 0165 06000000 		.4byte	.LCFI20
 4020 0169 0200     		.2byte	0x2
 4021 016b 7D       		.byte	0x7d
 4022 016c 28       		.sleb128 40
 4023 016d 06000000 		.4byte	.LCFI20
 4024 0171 5C000000 		.4byte	.LFE6
 4025 0175 0200     		.2byte	0x2
 4026 0177 77       		.byte	0x77
 4027 0178 20       		.sleb128 32
 4028 0179 00000000 		.4byte	0x0
 4029 017d 00000000 		.4byte	0x0
 4030              	.LLST7:
 4031 0181 00000000 		.4byte	.LFB7
 4032 0185 02000000 		.4byte	.LCFI21
 4033 0189 0100     		.2byte	0x1
 4034 018b 5D       		.byte	0x5d
 4035 018c 02000000 		.4byte	.LCFI21
 4036 0190 04000000 		.4byte	.LCFI22
 4037 0194 0200     		.2byte	0x2
 4038 0196 7D       		.byte	0x7d
 4039 0197 08       		.sleb128 8
 4040 0198 04000000 		.4byte	.LCFI22
 4041 019c 06000000 		.4byte	.LCFI23
 4042 01a0 0200     		.2byte	0x2
 4043 01a2 7D       		.byte	0x7d
 4044 01a3 20       		.sleb128 32
 4045 01a4 06000000 		.4byte	.LCFI23
 4046 01a8 6E000000 		.4byte	.LFE7
 4047 01ac 0200     		.2byte	0x2
 4048 01ae 77       		.byte	0x77
 4049 01af 20       		.sleb128 32
 4050 01b0 00000000 		.4byte	0x0
 4051 01b4 00000000 		.4byte	0x0
 4052              	.LLST8:
 4053 01b8 00000000 		.4byte	.LFB8
 4054 01bc 02000000 		.4byte	.LCFI24
 4055 01c0 0100     		.2byte	0x1
 4056 01c2 5D       		.byte	0x5d
 4057 01c3 02000000 		.4byte	.LCFI24
 4058 01c7 04000000 		.4byte	.LCFI25
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 117


 4059 01cb 0200     		.2byte	0x2
 4060 01cd 7D       		.byte	0x7d
 4061 01ce 08       		.sleb128 8
 4062 01cf 04000000 		.4byte	.LCFI25
 4063 01d3 06000000 		.4byte	.LCFI26
 4064 01d7 0200     		.2byte	0x2
 4065 01d9 7D       		.byte	0x7d
 4066 01da 18       		.sleb128 24
 4067 01db 06000000 		.4byte	.LCFI26
 4068 01df 78000000 		.4byte	.LFE8
 4069 01e3 0200     		.2byte	0x2
 4070 01e5 77       		.byte	0x77
 4071 01e6 18       		.sleb128 24
 4072 01e7 00000000 		.4byte	0x0
 4073 01eb 00000000 		.4byte	0x0
 4074              	.LLST9:
 4075 01ef 00000000 		.4byte	.LFB9
 4076 01f3 02000000 		.4byte	.LCFI27
 4077 01f7 0100     		.2byte	0x1
 4078 01f9 5D       		.byte	0x5d
 4079 01fa 02000000 		.4byte	.LCFI27
 4080 01fe 04000000 		.4byte	.LCFI28
 4081 0202 0200     		.2byte	0x2
 4082 0204 7D       		.byte	0x7d
 4083 0205 08       		.sleb128 8
 4084 0206 04000000 		.4byte	.LCFI28
 4085 020a 06000000 		.4byte	.LCFI29
 4086 020e 0200     		.2byte	0x2
 4087 0210 7D       		.byte	0x7d
 4088 0211 20       		.sleb128 32
 4089 0212 06000000 		.4byte	.LCFI29
 4090 0216 68000000 		.4byte	.LFE9
 4091 021a 0200     		.2byte	0x2
 4092 021c 77       		.byte	0x77
 4093 021d 20       		.sleb128 32
 4094 021e 00000000 		.4byte	0x0
 4095 0222 00000000 		.4byte	0x0
 4096              	.LLST10:
 4097 0226 00000000 		.4byte	.LFB10
 4098 022a 02000000 		.4byte	.LCFI30
 4099 022e 0100     		.2byte	0x1
 4100 0230 5D       		.byte	0x5d
 4101 0231 02000000 		.4byte	.LCFI30
 4102 0235 04000000 		.4byte	.LCFI31
 4103 0239 0200     		.2byte	0x2
 4104 023b 7D       		.byte	0x7d
 4105 023c 08       		.sleb128 8
 4106 023d 04000000 		.4byte	.LCFI31
 4107 0241 06000000 		.4byte	.LCFI32
 4108 0245 0200     		.2byte	0x2
 4109 0247 7D       		.byte	0x7d
 4110 0248 18       		.sleb128 24
 4111 0249 06000000 		.4byte	.LCFI32
 4112 024d 6C000000 		.4byte	.LFE10
 4113 0251 0200     		.2byte	0x2
 4114 0253 77       		.byte	0x77
 4115 0254 18       		.sleb128 24
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 118


 4116 0255 00000000 		.4byte	0x0
 4117 0259 00000000 		.4byte	0x0
 4118              	.LLST11:
 4119 025d 00000000 		.4byte	.LFB11
 4120 0261 02000000 		.4byte	.LCFI33
 4121 0265 0100     		.2byte	0x1
 4122 0267 5D       		.byte	0x5d
 4123 0268 02000000 		.4byte	.LCFI33
 4124 026c 04000000 		.4byte	.LCFI34
 4125 0270 0200     		.2byte	0x2
 4126 0272 7D       		.byte	0x7d
 4127 0273 0C       		.sleb128 12
 4128 0274 04000000 		.4byte	.LCFI34
 4129 0278 06000000 		.4byte	.LCFI35
 4130 027c 0200     		.2byte	0x2
 4131 027e 7D       		.byte	0x7d
 4132 027f 28       		.sleb128 40
 4133 0280 06000000 		.4byte	.LCFI35
 4134 0284 78020000 		.4byte	.LFE11
 4135 0288 0200     		.2byte	0x2
 4136 028a 77       		.byte	0x77
 4137 028b 28       		.sleb128 40
 4138 028c 00000000 		.4byte	0x0
 4139 0290 00000000 		.4byte	0x0
 4140              	.LLST12:
 4141 0294 00000000 		.4byte	.LFB12
 4142 0298 02000000 		.4byte	.LCFI36
 4143 029c 0100     		.2byte	0x1
 4144 029e 5D       		.byte	0x5d
 4145 029f 02000000 		.4byte	.LCFI36
 4146 02a3 04000000 		.4byte	.LCFI37
 4147 02a7 0200     		.2byte	0x2
 4148 02a9 7D       		.byte	0x7d
 4149 02aa 08       		.sleb128 8
 4150 02ab 04000000 		.4byte	.LCFI37
 4151 02af 06000000 		.4byte	.LCFI38
 4152 02b3 0200     		.2byte	0x2
 4153 02b5 7D       		.byte	0x7d
 4154 02b6 20       		.sleb128 32
 4155 02b7 06000000 		.4byte	.LCFI38
 4156 02bb E6000000 		.4byte	.LFE12
 4157 02bf 0200     		.2byte	0x2
 4158 02c1 77       		.byte	0x77
 4159 02c2 20       		.sleb128 32
 4160 02c3 00000000 		.4byte	0x0
 4161 02c7 00000000 		.4byte	0x0
 4162              	.LLST13:
 4163 02cb 00000000 		.4byte	.LFB13
 4164 02cf 02000000 		.4byte	.LCFI39
 4165 02d3 0100     		.2byte	0x1
 4166 02d5 5D       		.byte	0x5d
 4167 02d6 02000000 		.4byte	.LCFI39
 4168 02da 04000000 		.4byte	.LCFI40
 4169 02de 0200     		.2byte	0x2
 4170 02e0 7D       		.byte	0x7d
 4171 02e1 08       		.sleb128 8
 4172 02e2 04000000 		.4byte	.LCFI40
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 119


 4173 02e6 06000000 		.4byte	.LCFI41
 4174 02ea 0200     		.2byte	0x2
 4175 02ec 7D       		.byte	0x7d
 4176 02ed 20       		.sleb128 32
 4177 02ee 06000000 		.4byte	.LCFI41
 4178 02f2 4E000000 		.4byte	.LFE13
 4179 02f6 0200     		.2byte	0x2
 4180 02f8 77       		.byte	0x77
 4181 02f9 20       		.sleb128 32
 4182 02fa 00000000 		.4byte	0x0
 4183 02fe 00000000 		.4byte	0x0
 4184              	.LLST14:
 4185 0302 00000000 		.4byte	.LFB14
 4186 0306 02000000 		.4byte	.LCFI42
 4187 030a 0100     		.2byte	0x1
 4188 030c 5D       		.byte	0x5d
 4189 030d 02000000 		.4byte	.LCFI42
 4190 0311 04000000 		.4byte	.LCFI43
 4191 0315 0200     		.2byte	0x2
 4192 0317 7D       		.byte	0x7d
 4193 0318 08       		.sleb128 8
 4194 0319 04000000 		.4byte	.LCFI43
 4195 031d 06000000 		.4byte	.LCFI44
 4196 0321 0200     		.2byte	0x2
 4197 0323 7D       		.byte	0x7d
 4198 0324 20       		.sleb128 32
 4199 0325 06000000 		.4byte	.LCFI44
 4200 0329 6E000000 		.4byte	.LFE14
 4201 032d 0200     		.2byte	0x2
 4202 032f 77       		.byte	0x77
 4203 0330 20       		.sleb128 32
 4204 0331 00000000 		.4byte	0x0
 4205 0335 00000000 		.4byte	0x0
 4206              	.LLST15:
 4207 0339 00000000 		.4byte	.LFB15
 4208 033d 02000000 		.4byte	.LCFI45
 4209 0341 0100     		.2byte	0x1
 4210 0343 5D       		.byte	0x5d
 4211 0344 02000000 		.4byte	.LCFI45
 4212 0348 04000000 		.4byte	.LCFI46
 4213 034c 0200     		.2byte	0x2
 4214 034e 7D       		.byte	0x7d
 4215 034f 08       		.sleb128 8
 4216 0350 04000000 		.4byte	.LCFI46
 4217 0354 06000000 		.4byte	.LCFI47
 4218 0358 0200     		.2byte	0x2
 4219 035a 7D       		.byte	0x7d
 4220 035b 28       		.sleb128 40
 4221 035c 06000000 		.4byte	.LCFI47
 4222 0360 0A010000 		.4byte	.LFE15
 4223 0364 0200     		.2byte	0x2
 4224 0366 77       		.byte	0x77
 4225 0367 28       		.sleb128 40
 4226 0368 00000000 		.4byte	0x0
 4227 036c 00000000 		.4byte	0x0
 4228              	.LLST16:
 4229 0370 00000000 		.4byte	.LFB16
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 120


 4230 0374 02000000 		.4byte	.LCFI48
 4231 0378 0100     		.2byte	0x1
 4232 037a 5D       		.byte	0x5d
 4233 037b 02000000 		.4byte	.LCFI48
 4234 037f 04000000 		.4byte	.LCFI49
 4235 0383 0200     		.2byte	0x2
 4236 0385 7D       		.byte	0x7d
 4237 0386 08       		.sleb128 8
 4238 0387 04000000 		.4byte	.LCFI49
 4239 038b 06000000 		.4byte	.LCFI50
 4240 038f 0200     		.2byte	0x2
 4241 0391 7D       		.byte	0x7d
 4242 0392 10       		.sleb128 16
 4243 0393 06000000 		.4byte	.LCFI50
 4244 0397 4A000000 		.4byte	.LFE16
 4245 039b 0200     		.2byte	0x2
 4246 039d 77       		.byte	0x77
 4247 039e 10       		.sleb128 16
 4248 039f 00000000 		.4byte	0x0
 4249 03a3 00000000 		.4byte	0x0
 4250              	.LLST17:
 4251 03a7 00000000 		.4byte	.LFB17
 4252 03ab 02000000 		.4byte	.LCFI51
 4253 03af 0100     		.2byte	0x1
 4254 03b1 5D       		.byte	0x5d
 4255 03b2 02000000 		.4byte	.LCFI51
 4256 03b6 04000000 		.4byte	.LCFI52
 4257 03ba 0200     		.2byte	0x2
 4258 03bc 7D       		.byte	0x7d
 4259 03bd 08       		.sleb128 8
 4260 03be 04000000 		.4byte	.LCFI52
 4261 03c2 06000000 		.4byte	.LCFI53
 4262 03c6 0200     		.2byte	0x2
 4263 03c8 7D       		.byte	0x7d
 4264 03c9 20       		.sleb128 32
 4265 03ca 06000000 		.4byte	.LCFI53
 4266 03ce 8A000000 		.4byte	.LFE17
 4267 03d2 0200     		.2byte	0x2
 4268 03d4 77       		.byte	0x77
 4269 03d5 20       		.sleb128 32
 4270 03d6 00000000 		.4byte	0x0
 4271 03da 00000000 		.4byte	0x0
 4272              	.LLST18:
 4273 03de 00000000 		.4byte	.LFB18
 4274 03e2 02000000 		.4byte	.LCFI54
 4275 03e6 0100     		.2byte	0x1
 4276 03e8 5D       		.byte	0x5d
 4277 03e9 02000000 		.4byte	.LCFI54
 4278 03ed 04000000 		.4byte	.LCFI55
 4279 03f1 0200     		.2byte	0x2
 4280 03f3 7D       		.byte	0x7d
 4281 03f4 04       		.sleb128 4
 4282 03f5 04000000 		.4byte	.LCFI55
 4283 03f9 06000000 		.4byte	.LCFI56
 4284 03fd 0200     		.2byte	0x2
 4285 03ff 7D       		.byte	0x7d
 4286 0400 10       		.sleb128 16
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 121


 4287 0401 06000000 		.4byte	.LCFI56
 4288 0405 62000000 		.4byte	.LFE18
 4289 0409 0200     		.2byte	0x2
 4290 040b 77       		.byte	0x77
 4291 040c 10       		.sleb128 16
 4292 040d 00000000 		.4byte	0x0
 4293 0411 00000000 		.4byte	0x0
 4294              	.LLST19:
 4295 0415 00000000 		.4byte	.LFB19
 4296 0419 02000000 		.4byte	.LCFI57
 4297 041d 0100     		.2byte	0x1
 4298 041f 5D       		.byte	0x5d
 4299 0420 02000000 		.4byte	.LCFI57
 4300 0424 04000000 		.4byte	.LCFI58
 4301 0428 0200     		.2byte	0x2
 4302 042a 7D       		.byte	0x7d
 4303 042b 04       		.sleb128 4
 4304 042c 04000000 		.4byte	.LCFI58
 4305 0430 06000000 		.4byte	.LCFI59
 4306 0434 0200     		.2byte	0x2
 4307 0436 7D       		.byte	0x7d
 4308 0437 18       		.sleb128 24
 4309 0438 06000000 		.4byte	.LCFI59
 4310 043c 90000000 		.4byte	.LFE19
 4311 0440 0200     		.2byte	0x2
 4312 0442 77       		.byte	0x77
 4313 0443 18       		.sleb128 24
 4314 0444 00000000 		.4byte	0x0
 4315 0448 00000000 		.4byte	0x0
 4316              	.LLST20:
 4317 044c 00000000 		.4byte	.LFB20
 4318 0450 02000000 		.4byte	.LCFI60
 4319 0454 0100     		.2byte	0x1
 4320 0456 5D       		.byte	0x5d
 4321 0457 02000000 		.4byte	.LCFI60
 4322 045b 04000000 		.4byte	.LCFI61
 4323 045f 0200     		.2byte	0x2
 4324 0461 7D       		.byte	0x7d
 4325 0462 04       		.sleb128 4
 4326 0463 04000000 		.4byte	.LCFI61
 4327 0467 06000000 		.4byte	.LCFI62
 4328 046b 0200     		.2byte	0x2
 4329 046d 7D       		.byte	0x7d
 4330 046e 10       		.sleb128 16
 4331 046f 06000000 		.4byte	.LCFI62
 4332 0473 44000000 		.4byte	.LFE20
 4333 0477 0200     		.2byte	0x2
 4334 0479 77       		.byte	0x77
 4335 047a 10       		.sleb128 16
 4336 047b 00000000 		.4byte	0x0
 4337 047f 00000000 		.4byte	0x0
 4338              	.LLST21:
 4339 0483 00000000 		.4byte	.LFB21
 4340 0487 02000000 		.4byte	.LCFI63
 4341 048b 0100     		.2byte	0x1
 4342 048d 5D       		.byte	0x5d
 4343 048e 02000000 		.4byte	.LCFI63
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 122


 4344 0492 04000000 		.4byte	.LCFI64
 4345 0496 0200     		.2byte	0x2
 4346 0498 7D       		.byte	0x7d
 4347 0499 08       		.sleb128 8
 4348 049a 04000000 		.4byte	.LCFI64
 4349 049e 06000000 		.4byte	.LCFI65
 4350 04a2 0200     		.2byte	0x2
 4351 04a4 7D       		.byte	0x7d
 4352 04a5 18       		.sleb128 24
 4353 04a6 06000000 		.4byte	.LCFI65
 4354 04aa 04020000 		.4byte	.LFE21
 4355 04ae 0200     		.2byte	0x2
 4356 04b0 77       		.byte	0x77
 4357 04b1 18       		.sleb128 24
 4358 04b2 00000000 		.4byte	0x0
 4359 04b6 00000000 		.4byte	0x0
 4360              	.LLST22:
 4361 04ba 00000000 		.4byte	.LFB22
 4362 04be 02000000 		.4byte	.LCFI66
 4363 04c2 0100     		.2byte	0x1
 4364 04c4 5D       		.byte	0x5d
 4365 04c5 02000000 		.4byte	.LCFI66
 4366 04c9 04000000 		.4byte	.LCFI67
 4367 04cd 0200     		.2byte	0x2
 4368 04cf 7D       		.byte	0x7d
 4369 04d0 08       		.sleb128 8
 4370 04d1 04000000 		.4byte	.LCFI67
 4371 04d5 06000000 		.4byte	.LCFI68
 4372 04d9 0200     		.2byte	0x2
 4373 04db 7D       		.byte	0x7d
 4374 04dc 28       		.sleb128 40
 4375 04dd 06000000 		.4byte	.LCFI68
 4376 04e1 E6000000 		.4byte	.LFE22
 4377 04e5 0200     		.2byte	0x2
 4378 04e7 77       		.byte	0x77
 4379 04e8 20       		.sleb128 32
 4380 04e9 00000000 		.4byte	0x0
 4381 04ed 00000000 		.4byte	0x0
 4382              	.LLST23:
 4383 04f1 00000000 		.4byte	.LFB23
 4384 04f5 02000000 		.4byte	.LCFI69
 4385 04f9 0100     		.2byte	0x1
 4386 04fb 5D       		.byte	0x5d
 4387 04fc 02000000 		.4byte	.LCFI69
 4388 0500 04000000 		.4byte	.LCFI70
 4389 0504 0200     		.2byte	0x2
 4390 0506 7D       		.byte	0x7d
 4391 0507 08       		.sleb128 8
 4392 0508 04000000 		.4byte	.LCFI70
 4393 050c 06000000 		.4byte	.LCFI71
 4394 0510 0200     		.2byte	0x2
 4395 0512 7D       		.byte	0x7d
 4396 0513 18       		.sleb128 24
 4397 0514 06000000 		.4byte	.LCFI71
 4398 0518 3A010000 		.4byte	.LFE23
 4399 051c 0200     		.2byte	0x2
 4400 051e 77       		.byte	0x77
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 123


 4401 051f 18       		.sleb128 24
 4402 0520 00000000 		.4byte	0x0
 4403 0524 00000000 		.4byte	0x0
 4404              	.LLST24:
 4405 0528 00000000 		.4byte	.LFB24
 4406 052c 02000000 		.4byte	.LCFI72
 4407 0530 0100     		.2byte	0x1
 4408 0532 5D       		.byte	0x5d
 4409 0533 02000000 		.4byte	.LCFI72
 4410 0537 04000000 		.4byte	.LCFI73
 4411 053b 0200     		.2byte	0x2
 4412 053d 7D       		.byte	0x7d
 4413 053e 08       		.sleb128 8
 4414 053f 04000000 		.4byte	.LCFI73
 4415 0543 06000000 		.4byte	.LCFI74
 4416 0547 0200     		.2byte	0x2
 4417 0549 7D       		.byte	0x7d
 4418 054a 10       		.sleb128 16
 4419 054b 06000000 		.4byte	.LCFI74
 4420 054f 2C000000 		.4byte	.LFE24
 4421 0553 0200     		.2byte	0x2
 4422 0555 77       		.byte	0x77
 4423 0556 10       		.sleb128 16
 4424 0557 00000000 		.4byte	0x0
 4425 055b 00000000 		.4byte	0x0
 4426              	.LLST25:
 4427 055f 00000000 		.4byte	.LFB25
 4428 0563 02000000 		.4byte	.LCFI75
 4429 0567 0100     		.2byte	0x1
 4430 0569 5D       		.byte	0x5d
 4431 056a 02000000 		.4byte	.LCFI75
 4432 056e 04000000 		.4byte	.LCFI76
 4433 0572 0200     		.2byte	0x2
 4434 0574 7D       		.byte	0x7d
 4435 0575 08       		.sleb128 8
 4436 0576 04000000 		.4byte	.LCFI76
 4437 057a 06000000 		.4byte	.LCFI77
 4438 057e 0200     		.2byte	0x2
 4439 0580 7D       		.byte	0x7d
 4440 0581 28       		.sleb128 40
 4441 0582 06000000 		.4byte	.LCFI77
 4442 0586 2E010000 		.4byte	.LFE25
 4443 058a 0200     		.2byte	0x2
 4444 058c 77       		.byte	0x77
 4445 058d 20       		.sleb128 32
 4446 058e 00000000 		.4byte	0x0
 4447 0592 00000000 		.4byte	0x0
 4448              	.LLST26:
 4449 0596 00000000 		.4byte	.LFB26
 4450 059a 02000000 		.4byte	.LCFI78
 4451 059e 0100     		.2byte	0x1
 4452 05a0 5D       		.byte	0x5d
 4453 05a1 02000000 		.4byte	.LCFI78
 4454 05a5 04000000 		.4byte	.LCFI79
 4455 05a9 0200     		.2byte	0x2
 4456 05ab 7D       		.byte	0x7d
 4457 05ac 08       		.sleb128 8
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 124


 4458 05ad 04000000 		.4byte	.LCFI79
 4459 05b1 06000000 		.4byte	.LCFI80
 4460 05b5 0200     		.2byte	0x2
 4461 05b7 7D       		.byte	0x7d
 4462 05b8 18       		.sleb128 24
 4463 05b9 06000000 		.4byte	.LCFI80
 4464 05bd 3C010000 		.4byte	.LFE26
 4465 05c1 0200     		.2byte	0x2
 4466 05c3 77       		.byte	0x77
 4467 05c4 18       		.sleb128 24
 4468 05c5 00000000 		.4byte	0x0
 4469 05c9 00000000 		.4byte	0x0
 4470              		.file 2 "..\\..\\..\\..\\..\\..\\uC-CPU\\ARM-Cortex-M3\\GNU/cpu.h"
 4471              		.file 3 "..\\..\\..\\..\\..\\..\\uC-CPU/cpu_core.h"
 4472              		.file 4 "..\\..\\..\\..\\..\\..\\uCOS-III\\Source/os_type.h"
 4473              		.file 5 "..\\..\\..\\..\\..\\..\\uCOS-III\\Source/os.h"
 4474              		.section	.debug_info
 4475 0000 B1170000 		.4byte	0x17b1
 4476 0004 0200     		.2byte	0x2
 4477 0006 00000000 		.4byte	.Ldebug_abbrev0
 4478 000a 04       		.byte	0x4
 4479 000b 01       		.uleb128 0x1
 4480 000c 3D000000 		.4byte	.LASF352
 4481 0010 01       		.byte	0x1
 4482 0011 BC0F0000 		.4byte	.LASF353
 4483 0015 71130000 		.4byte	.LASF354
 4484 0019 00000000 		.4byte	0x0
 4485 001d 00000000 		.4byte	0x0
 4486 0021 00000000 		.4byte	.Ldebug_ranges0+0x0
 4487 0025 00000000 		.4byte	.Ldebug_line0
 4488 0029 02       		.uleb128 0x2
 4489 002a F8060000 		.4byte	.LASF0
 4490 002e 02       		.byte	0x2
 4491 002f 76       		.byte	0x76
 4492 0030 34000000 		.4byte	0x34
 4493 0034 03       		.uleb128 0x3
 4494 0035 01       		.byte	0x1
 4495 0036 08       		.byte	0x8
 4496 0037 9A080000 		.4byte	.LASF2
 4497 003b 02       		.uleb128 0x2
 4498 003c 54100000 		.4byte	.LASF1
 4499 0040 02       		.byte	0x2
 4500 0041 77       		.byte	0x77
 4501 0042 46000000 		.4byte	0x46
 4502 0046 03       		.uleb128 0x3
 4503 0047 01       		.byte	0x1
 4504 0048 08       		.byte	0x8
 4505 0049 DB100000 		.4byte	.LASF3
 4506 004d 02       		.uleb128 0x2
 4507 004e D9050000 		.4byte	.LASF4
 4508 0052 02       		.byte	0x2
 4509 0053 78       		.byte	0x78
 4510 0054 46000000 		.4byte	0x46
 4511 0058 03       		.uleb128 0x3
 4512 0059 01       		.byte	0x1
 4513 005a 06       		.byte	0x6
 4514 005b 36120000 		.4byte	.LASF5
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 125


 4515 005f 02       		.uleb128 0x2
 4516 0060 690A0000 		.4byte	.LASF6
 4517 0064 02       		.byte	0x2
 4518 0065 7A       		.byte	0x7a
 4519 0066 6A000000 		.4byte	0x6a
 4520 006a 03       		.uleb128 0x3
 4521 006b 02       		.byte	0x2
 4522 006c 07       		.byte	0x7
 4523 006d 69120000 		.4byte	.LASF7
 4524 0071 03       		.uleb128 0x3
 4525 0072 02       		.byte	0x2
 4526 0073 05       		.byte	0x5
 4527 0074 980D0000 		.4byte	.LASF8
 4528 0078 02       		.uleb128 0x2
 4529 0079 CB010000 		.4byte	.LASF9
 4530 007d 02       		.byte	0x2
 4531 007e 7C       		.byte	0x7c
 4532 007f 83000000 		.4byte	0x83
 4533 0083 03       		.uleb128 0x3
 4534 0084 04       		.byte	0x4
 4535 0085 07       		.byte	0x7
 4536 0086 360F0000 		.4byte	.LASF10
 4537 008a 04       		.uleb128 0x4
 4538 008b 04       		.byte	0x4
 4539 008c 05       		.byte	0x5
 4540 008d 696E7400 		.ascii	"int\000"
 4541 0091 03       		.uleb128 0x3
 4542 0092 08       		.byte	0x8
 4543 0093 07       		.byte	0x7
 4544 0094 37050000 		.4byte	.LASF11
 4545 0098 03       		.uleb128 0x3
 4546 0099 08       		.byte	0x8
 4547 009a 05       		.byte	0x5
 4548 009b CF090000 		.4byte	.LASF12
 4549 009f 03       		.uleb128 0x3
 4550 00a0 04       		.byte	0x4
 4551 00a1 04       		.byte	0x4
 4552 00a2 7A040000 		.4byte	.LASF13
 4553 00a6 03       		.uleb128 0x3
 4554 00a7 08       		.byte	0x8
 4555 00a8 04       		.byte	0x4
 4556 00a9 10130000 		.4byte	.LASF14
 4557 00ad 05       		.uleb128 0x5
 4558 00ae 04       		.byte	0x4
 4559 00af B3000000 		.4byte	0xb3
 4560 00b3 06       		.uleb128 0x6
 4561 00b4 01       		.byte	0x1
 4562 00b5 BF000000 		.4byte	0xbf
 4563 00b9 07       		.uleb128 0x7
 4564 00ba BF000000 		.4byte	0xbf
 4565 00be 00       		.byte	0x0
 4566 00bf 08       		.uleb128 0x8
 4567 00c0 04       		.byte	0x4
 4568 00c1 02       		.uleb128 0x2
 4569 00c2 00100000 		.4byte	.LASF15
 4570 00c6 02       		.byte	0x2
 4571 00c7 B5       		.byte	0xb5
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 126


 4572 00c8 78000000 		.4byte	0x78
 4573 00cc 02       		.uleb128 0x2
 4574 00cd 44150000 		.4byte	.LASF16
 4575 00d1 02       		.byte	0x2
 4576 00d2 D9       		.byte	0xd9
 4577 00d3 78000000 		.4byte	0x78
 4578 00d7 02       		.uleb128 0x2
 4579 00d8 18070000 		.4byte	.LASF17
 4580 00dc 02       		.byte	0x2
 4581 00dd DA       		.byte	0xda
 4582 00de C1000000 		.4byte	0xc1
 4583 00e2 09       		.uleb128 0x9
 4584 00e3 DC080000 		.4byte	.LASF18
 4585 00e7 02       		.byte	0x2
 4586 00e8 2901     		.2byte	0x129
 4587 00ea 78000000 		.4byte	0x78
 4588 00ee 02       		.uleb128 0x2
 4589 00ef 1B0B0000 		.4byte	.LASF19
 4590 00f3 03       		.byte	0x3
 4591 00f4 C4       		.byte	0xc4
 4592 00f5 78000000 		.4byte	0x78
 4593 00f9 02       		.uleb128 0x2
 4594 00fa C8090000 		.4byte	.LASF20
 4595 00fe 03       		.byte	0x3
 4596 00ff C7       		.byte	0xc7
 4597 0100 EE000000 		.4byte	0xee
 4598 0104 02       		.uleb128 0x2
 4599 0105 A1010000 		.4byte	.LASF21
 4600 0109 04       		.byte	0x4
 4601 010a 30       		.byte	0x30
 4602 010b 5F000000 		.4byte	0x5f
 4603 010f 02       		.uleb128 0x2
 4604 0110 2F000000 		.4byte	.LASF22
 4605 0114 04       		.byte	0x4
 4606 0115 34       		.byte	0x34
 4607 0116 78000000 		.4byte	0x78
 4608 011a 02       		.uleb128 0x2
 4609 011b 7F100000 		.4byte	.LASF23
 4610 011f 04       		.byte	0x4
 4611 0120 36       		.byte	0x36
 4612 0121 78000000 		.4byte	0x78
 4613 0125 02       		.uleb128 0x2
 4614 0126 7C120000 		.4byte	.LASF24
 4615 012a 04       		.byte	0x4
 4616 012b 38       		.byte	0x38
 4617 012c 78000000 		.4byte	0x78
 4618 0130 02       		.uleb128 0x2
 4619 0131 2C070000 		.4byte	.LASF25
 4620 0135 04       		.byte	0x4
 4621 0136 3F       		.byte	0x3f
 4622 0137 5F000000 		.4byte	0x5f
 4623 013b 02       		.uleb128 0x2
 4624 013c BD060000 		.4byte	.LASF26
 4625 0140 04       		.byte	0x4
 4626 0141 40       		.byte	0x40
 4627 0142 5F000000 		.4byte	0x5f
 4628 0146 02       		.uleb128 0x2
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 127


 4629 0147 620E0000 		.4byte	.LASF27
 4630 014b 04       		.byte	0x4
 4631 014c 42       		.byte	0x42
 4632 014d 4D000000 		.4byte	0x4d
 4633 0151 02       		.uleb128 0x2
 4634 0152 85020000 		.4byte	.LASF28
 4635 0156 04       		.byte	0x4
 4636 0157 44       		.byte	0x44
 4637 0158 5F000000 		.4byte	0x5f
 4638 015c 02       		.uleb128 0x2
 4639 015d 9F080000 		.4byte	.LASF29
 4640 0161 04       		.byte	0x4
 4641 0162 45       		.byte	0x45
 4642 0163 78000000 		.4byte	0x78
 4643 0167 02       		.uleb128 0x2
 4644 0168 2F110000 		.4byte	.LASF30
 4645 016c 04       		.byte	0x4
 4646 016d 47       		.byte	0x47
 4647 016e 5F000000 		.4byte	0x5f
 4648 0172 02       		.uleb128 0x2
 4649 0173 64040000 		.4byte	.LASF31
 4650 0177 04       		.byte	0x4
 4651 0178 49       		.byte	0x49
 4652 0179 4D000000 		.4byte	0x4d
 4653 017d 02       		.uleb128 0x2
 4654 017e 47060000 		.4byte	.LASF32
 4655 0182 04       		.byte	0x4
 4656 0183 4F       		.byte	0x4f
 4657 0184 78000000 		.4byte	0x78
 4658 0188 02       		.uleb128 0x2
 4659 0189 D5120000 		.4byte	.LASF33
 4660 018d 04       		.byte	0x4
 4661 018e 50       		.byte	0x50
 4662 018f 4D000000 		.4byte	0x4d
 4663 0193 02       		.uleb128 0x2
 4664 0194 560B0000 		.4byte	.LASF34
 4665 0198 04       		.byte	0x4
 4666 0199 52       		.byte	0x52
 4667 019a 78000000 		.4byte	0x78
 4668 019e 02       		.uleb128 0x2
 4669 019f 1E110000 		.4byte	.LASF35
 4670 01a3 04       		.byte	0x4
 4671 01a4 54       		.byte	0x54
 4672 01a5 4D000000 		.4byte	0x4d
 4673 01a9 02       		.uleb128 0x2
 4674 01aa 68060000 		.4byte	.LASF36
 4675 01ae 04       		.byte	0x4
 4676 01af 56       		.byte	0x56
 4677 01b0 4D000000 		.4byte	0x4d
 4678 01b4 02       		.uleb128 0x2
 4679 01b5 D20A0000 		.4byte	.LASF37
 4680 01b9 04       		.byte	0x4
 4681 01ba 58       		.byte	0x58
 4682 01bb 78000000 		.4byte	0x78
 4683 01bf 0A       		.uleb128 0xa
 4684 01c0 66010000 		.4byte	.LASF355
 4685 01c4 02       		.byte	0x2
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 128


 4686 01c5 05       		.byte	0x5
 4687 01c6 A501     		.2byte	0x1a5
 4688 01c8 D3060000 		.4byte	0x6d3
 4689 01cc 0B       		.uleb128 0xb
 4690 01cd B4120000 		.4byte	.LASF38
 4691 01d1 00       		.sleb128 0
 4692 01d2 0B       		.uleb128 0xb
 4693 01d3 74000000 		.4byte	.LASF39
 4694 01d7 90CE00   		.sleb128 10000
 4695 01da 0B       		.uleb128 0xb
 4696 01db 0A030000 		.4byte	.LASF40
 4697 01df 91CE00   		.sleb128 10001
 4698 01e2 0B       		.uleb128 0xb
 4699 01e3 7D000000 		.4byte	.LASF41
 4700 01e7 F8D500   		.sleb128 11000
 4701 01ea 0B       		.uleb128 0xb
 4702 01eb 86000000 		.4byte	.LASF42
 4703 01ef E0DD00   		.sleb128 12000
 4704 01f2 0B       		.uleb128 0xb
 4705 01f3 8F010000 		.4byte	.LASF43
 4706 01f7 E1DD00   		.sleb128 12001
 4707 01fa 0B       		.uleb128 0xb
 4708 01fb 8F000000 		.4byte	.LASF44
 4709 01ff C8E500   		.sleb128 13000
 4710 0202 0B       		.uleb128 0xb
 4711 0203 76080000 		.4byte	.LASF45
 4712 0207 C9E500   		.sleb128 13001
 4713 020a 0B       		.uleb128 0xb
 4714 020b 98000000 		.4byte	.LASF46
 4715 020f B0ED00   		.sleb128 14000
 4716 0212 0B       		.uleb128 0xb
 4717 0213 A1000000 		.4byte	.LASF47
 4718 0217 98F500   		.sleb128 15000
 4719 021a 0B       		.uleb128 0xb
 4720 021b 55120000 		.4byte	.LASF48
 4721 021f 99F500   		.sleb128 15001
 4722 0222 0B       		.uleb128 0xb
 4723 0223 C8070000 		.4byte	.LASF49
 4724 0227 FDF500   		.sleb128 15101
 4725 022a 0B       		.uleb128 0xb
 4726 022b 840F0000 		.4byte	.LASF50
 4727 022f FEF500   		.sleb128 15102
 4728 0232 0B       		.uleb128 0xb
 4729 0233 DD090000 		.4byte	.LASF51
 4730 0237 FFF500   		.sleb128 15103
 4731 023a 0B       		.uleb128 0xb
 4732 023b F3120000 		.4byte	.LASF52
 4733 023f 80F600   		.sleb128 15104
 4734 0242 0B       		.uleb128 0xb
 4735 0243 AA000000 		.4byte	.LASF53
 4736 0247 80FD00   		.sleb128 16000
 4737 024a 0B       		.uleb128 0xb
 4738 024b B3000000 		.4byte	.LASF54
 4739 024f E88401   		.sleb128 17000
 4740 0252 0B       		.uleb128 0xb
 4741 0253 BC000000 		.4byte	.LASF55
 4742 0257 D08C01   		.sleb128 18000
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 129


 4743 025a 0B       		.uleb128 0xb
 4744 025b F8030000 		.4byte	.LASF56
 4745 025f D18C01   		.sleb128 18001
 4746 0262 0B       		.uleb128 0xb
 4747 0263 D7020000 		.4byte	.LASF57
 4748 0267 D28C01   		.sleb128 18002
 4749 026a 0B       		.uleb128 0xb
 4750 026b B7030000 		.4byte	.LASF58
 4751 026f D38C01   		.sleb128 18003
 4752 0272 0B       		.uleb128 0xb
 4753 0273 7D010000 		.4byte	.LASF59
 4754 0277 D48C01   		.sleb128 18004
 4755 027a 0B       		.uleb128 0xb
 4756 027b DB110000 		.4byte	.LASF60
 4757 027f D58C01   		.sleb128 18005
 4758 0282 0B       		.uleb128 0xb
 4759 0283 3B0C0000 		.4byte	.LASF61
 4760 0287 D68C01   		.sleb128 18006
 4761 028a 0B       		.uleb128 0xb
 4762 028b C5000000 		.4byte	.LASF62
 4763 028f B89401   		.sleb128 19000
 4764 0292 0B       		.uleb128 0xb
 4765 0293 CE000000 		.4byte	.LASF63
 4766 0297 A09C01   		.sleb128 20000
 4767 029a 0B       		.uleb128 0xb
 4768 029b D7000000 		.4byte	.LASF64
 4769 029f 88A401   		.sleb128 21000
 4770 02a2 0B       		.uleb128 0xb
 4771 02a3 590D0000 		.4byte	.LASF65
 4772 02a7 89A401   		.sleb128 21001
 4773 02aa 0B       		.uleb128 0xb
 4774 02ab E0000000 		.4byte	.LASF66
 4775 02af F0AB01   		.sleb128 22000
 4776 02b2 0B       		.uleb128 0xb
 4777 02b3 42110000 		.4byte	.LASF67
 4778 02b7 B9AD01   		.sleb128 22201
 4779 02ba 0B       		.uleb128 0xb
 4780 02bb DA0A0000 		.4byte	.LASF68
 4781 02bf BAAD01   		.sleb128 22202
 4782 02c2 0B       		.uleb128 0xb
 4783 02c3 300D0000 		.4byte	.LASF69
 4784 02c7 BBAD01   		.sleb128 22203
 4785 02ca 0B       		.uleb128 0xb
 4786 02cb E1070000 		.4byte	.LASF70
 4787 02cf BCAD01   		.sleb128 22204
 4788 02d2 0B       		.uleb128 0xb
 4789 02d3 900A0000 		.4byte	.LASF71
 4790 02d7 BDAD01   		.sleb128 22205
 4791 02da 0B       		.uleb128 0xb
 4792 02db 170D0000 		.4byte	.LASF72
 4793 02df BEAD01   		.sleb128 22206
 4794 02e2 0B       		.uleb128 0xb
 4795 02e3 020B0000 		.4byte	.LASF73
 4796 02e7 BFAD01   		.sleb128 22207
 4797 02ea 0B       		.uleb128 0xb
 4798 02eb D5040000 		.4byte	.LASF74
 4799 02ef C0AD01   		.sleb128 22208
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 130


 4800 02f2 0B       		.uleb128 0xb
 4801 02f3 3A140000 		.4byte	.LASF75
 4802 02f7 C1AD01   		.sleb128 22209
 4803 02fa 0B       		.uleb128 0xb
 4804 02fb 2C150000 		.4byte	.LASF76
 4805 02ff C2AD01   		.sleb128 22210
 4806 0302 0B       		.uleb128 0xb
 4807 0303 AD0D0000 		.4byte	.LASF77
 4808 0307 9DAE01   		.sleb128 22301
 4809 030a 0B       		.uleb128 0xb
 4810 030b 490E0000 		.4byte	.LASF78
 4811 030f 9EAE01   		.sleb128 22302
 4812 0312 0B       		.uleb128 0xb
 4813 0313 A6060000 		.4byte	.LASF79
 4814 0317 81AF01   		.sleb128 22401
 4815 031a 0B       		.uleb128 0xb
 4816 031b 4B0F0000 		.4byte	.LASF80
 4817 031f 82AF01   		.sleb128 22402
 4818 0322 0B       		.uleb128 0xb
 4819 0323 34030000 		.4byte	.LASF81
 4820 0327 83AF01   		.sleb128 22403
 4821 032a 0B       		.uleb128 0xb
 4822 032b E9000000 		.4byte	.LASF82
 4823 032f D8B301   		.sleb128 23000
 4824 0332 0B       		.uleb128 0xb
 4825 0333 4E060000 		.4byte	.LASF83
 4826 0337 D9B301   		.sleb128 23001
 4827 033a 0B       		.uleb128 0xb
 4828 033b AF040000 		.4byte	.LASF84
 4829 033f DAB301   		.sleb128 23002
 4830 0342 0B       		.uleb128 0xb
 4831 0343 F2000000 		.4byte	.LASF85
 4832 0347 C0BB01   		.sleb128 24000
 4833 034a 0B       		.uleb128 0xb
 4834 034b 7C030000 		.4byte	.LASF86
 4835 034f C1BB01   		.sleb128 24001
 4836 0352 0B       		.uleb128 0xb
 4837 0353 B9090000 		.4byte	.LASF87
 4838 0357 C2BB01   		.sleb128 24002
 4839 035a 0B       		.uleb128 0xb
 4840 035b A80A0000 		.4byte	.LASF88
 4841 035f C3BB01   		.sleb128 24003
 4842 0362 0B       		.uleb128 0xb
 4843 0363 B60E0000 		.4byte	.LASF89
 4844 0367 C4BB01   		.sleb128 24004
 4845 036a 0B       		.uleb128 0xb
 4846 036b C9080000 		.4byte	.LASF90
 4847 036f A5BC01   		.sleb128 24101
 4848 0372 0B       		.uleb128 0xb
 4849 0373 C30C0000 		.4byte	.LASF91
 4850 0377 89BD01   		.sleb128 24201
 4851 037a 0B       		.uleb128 0xb
 4852 037b 37070000 		.4byte	.LASF92
 4853 037f 8ABD01   		.sleb128 24202
 4854 0382 0B       		.uleb128 0xb
 4855 0383 FB000000 		.4byte	.LASF93
 4856 0387 A8C301   		.sleb128 25000
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 131


 4857 038a 0B       		.uleb128 0xb
 4858 038b 17130000 		.4byte	.LASF94
 4859 038f A9C301   		.sleb128 25001
 4860 0392 0B       		.uleb128 0xb
 4861 0393 EA0F0000 		.4byte	.LASF95
 4862 0397 AAC301   		.sleb128 25002
 4863 039a 0B       		.uleb128 0xb
 4864 039b 130F0000 		.4byte	.LASF96
 4865 039f ABC301   		.sleb128 25003
 4866 03a2 0B       		.uleb128 0xb
 4867 03a3 520A0000 		.4byte	.LASF97
 4868 03a7 ACC301   		.sleb128 25004
 4869 03aa 0B       		.uleb128 0xb
 4870 03ab 56130000 		.4byte	.LASF98
 4871 03af ADC301   		.sleb128 25005
 4872 03b2 0B       		.uleb128 0xb
 4873 03b3 77110000 		.4byte	.LASF99
 4874 03b7 AEC301   		.sleb128 25006
 4875 03ba 0B       		.uleb128 0xb
 4876 03bb 72020000 		.4byte	.LASF100
 4877 03bf AFC301   		.sleb128 25007
 4878 03c2 0B       		.uleb128 0xb
 4879 03c3 1D020000 		.4byte	.LASF101
 4880 03c7 B0C301   		.sleb128 25008
 4881 03ca 0B       		.uleb128 0xb
 4882 03cb 9A040000 		.4byte	.LASF102
 4883 03cf 8DC401   		.sleb128 25101
 4884 03d2 0B       		.uleb128 0xb
 4885 03d3 09100000 		.4byte	.LASF103
 4886 03d7 8EC401   		.sleb128 25102
 4887 03da 0B       		.uleb128 0xb
 4888 03db 11150000 		.4byte	.LASF104
 4889 03df F1C401   		.sleb128 25201
 4890 03e2 0B       		.uleb128 0xb
 4891 03e3 4A130000 		.4byte	.LASF105
 4892 03e7 F2C401   		.sleb128 25202
 4893 03ea 0B       		.uleb128 0xb
 4894 03eb 14000000 		.4byte	.LASF106
 4895 03ef F3C401   		.sleb128 25203
 4896 03f2 0B       		.uleb128 0xb
 4897 03f3 930C0000 		.4byte	.LASF107
 4898 03f7 D5C501   		.sleb128 25301
 4899 03fa 0B       		.uleb128 0xb
 4900 03fb 04010000 		.4byte	.LASF108
 4901 03ff 90CB01   		.sleb128 26000
 4902 0402 0B       		.uleb128 0xb
 4903 0403 BC110000 		.4byte	.LASF109
 4904 0407 91CB01   		.sleb128 26001
 4905 040a 0B       		.uleb128 0xb
 4906 040b 17060000 		.4byte	.LASF110
 4907 040f 92CB01   		.sleb128 26002
 4908 0412 0B       		.uleb128 0xb
 4909 0413 85080000 		.4byte	.LASF111
 4910 0417 93CB01   		.sleb128 26003
 4911 041a 0B       		.uleb128 0xb
 4912 041b 120A0000 		.4byte	.LASF112
 4913 041f 94CB01   		.sleb128 26004
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 132


 4914 0422 0B       		.uleb128 0xb
 4915 0423 0D010000 		.4byte	.LASF113
 4916 0427 F8D201   		.sleb128 27000
 4917 042a 0B       		.uleb128 0xb
 4918 042b BC0A0000 		.4byte	.LASF114
 4919 042f F9D201   		.sleb128 27001
 4920 0432 0B       		.uleb128 0xb
 4921 0433 020D0000 		.4byte	.LASF115
 4922 0437 FAD201   		.sleb128 27002
 4923 043a 0B       		.uleb128 0xb
 4924 043b 740A0000 		.4byte	.LASF116
 4925 043f FBD201   		.sleb128 27003
 4926 0442 0B       		.uleb128 0xb
 4927 0443 16010000 		.4byte	.LASF117
 4928 0447 E0DA01   		.sleb128 28000
 4929 044a 0B       		.uleb128 0xb
 4930 044b EF080000 		.4byte	.LASF118
 4931 044f E1DA01   		.sleb128 28001
 4932 0452 0B       		.uleb128 0xb
 4933 0453 60080000 		.4byte	.LASF119
 4934 0457 E2DA01   		.sleb128 28002
 4935 045a 0B       		.uleb128 0xb
 4936 045b DF120000 		.4byte	.LASF120
 4937 045f E3DA01   		.sleb128 28003
 4938 0462 0B       		.uleb128 0xb
 4939 0463 32130000 		.4byte	.LASF121
 4940 0467 E4DA01   		.sleb128 28004
 4941 046a 0B       		.uleb128 0xb
 4942 046b E80D0000 		.4byte	.LASF122
 4943 046f E5DA01   		.sleb128 28005
 4944 0472 0B       		.uleb128 0xb
 4945 0473 86140000 		.4byte	.LASF123
 4946 0477 C5DB01   		.sleb128 28101
 4947 047a 0B       		.uleb128 0xb
 4948 047b 68140000 		.4byte	.LASF124
 4949 047f C6DB01   		.sleb128 28102
 4950 0482 0B       		.uleb128 0xb
 4951 0483 51020000 		.4byte	.LASF125
 4952 0487 A9DC01   		.sleb128 28201
 4953 048a 0B       		.uleb128 0xb
 4954 048b 3A090000 		.4byte	.LASF126
 4955 048f AADC01   		.sleb128 28202
 4956 0492 0B       		.uleb128 0xb
 4957 0493 A3070000 		.4byte	.LASF127
 4958 0497 ABDC01   		.sleb128 28203
 4959 049a 0B       		.uleb128 0xb
 4960 049b 670F0000 		.4byte	.LASF128
 4961 049f ACDC01   		.sleb128 28204
 4962 04a2 0B       		.uleb128 0xb
 4963 04a3 A60C0000 		.4byte	.LASF129
 4964 04a7 ADDC01   		.sleb128 28205
 4965 04aa 0B       		.uleb128 0xb
 4966 04ab 58110000 		.4byte	.LASF130
 4967 04af AEDC01   		.sleb128 28206
 4968 04b2 0B       		.uleb128 0xb
 4969 04b3 E2010000 		.4byte	.LASF131
 4970 04b7 AFDC01   		.sleb128 28207
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 133


 4971 04ba 0B       		.uleb128 0xb
 4972 04bb A5100000 		.4byte	.LASF132
 4973 04bf B0DC01   		.sleb128 28208
 4974 04c2 0B       		.uleb128 0xb
 4975 04c3 2D100000 		.4byte	.LASF133
 4976 04c7 B1DC01   		.sleb128 28209
 4977 04ca 0B       		.uleb128 0xb
 4978 04cb 1F010000 		.4byte	.LASF134
 4979 04cf C8E201   		.sleb128 29000
 4980 04d2 0B       		.uleb128 0xb
 4981 04d3 35020000 		.4byte	.LASF135
 4982 04d7 C9E201   		.sleb128 29001
 4983 04da 0B       		.uleb128 0xb
 4984 04db 01070000 		.4byte	.LASF136
 4985 04df CAE201   		.sleb128 29002
 4986 04e2 0B       		.uleb128 0xb
 4987 04e3 10120000 		.4byte	.LASF137
 4988 04e7 CBE201   		.sleb128 29003
 4989 04ea 0B       		.uleb128 0xb
 4990 04eb 95140000 		.4byte	.LASF138
 4991 04ef CCE201   		.sleb128 29004
 4992 04f2 0B       		.uleb128 0xb
 4993 04f3 AA050000 		.4byte	.LASF139
 4994 04f7 CDE201   		.sleb128 29005
 4995 04fa 0B       		.uleb128 0xb
 4996 04fb 730C0000 		.4byte	.LASF140
 4997 04ff CEE201   		.sleb128 29006
 4998 0502 0B       		.uleb128 0xb
 4999 0503 E70B0000 		.4byte	.LASF141
 5000 0507 CFE201   		.sleb128 29007
 5001 050a 0B       		.uleb128 0xb
 5002 050b EA0A0000 		.4byte	.LASF142
 5003 050f D0E201   		.sleb128 29008
 5004 0512 0B       		.uleb128 0xb
 5005 0513 B8020000 		.4byte	.LASF143
 5006 0517 D1E201   		.sleb128 29009
 5007 051a 0B       		.uleb128 0xb
 5008 051b A00B0000 		.4byte	.LASF144
 5009 051f D2E201   		.sleb128 29010
 5010 0522 0B       		.uleb128 0xb
 5011 0523 9E020000 		.4byte	.LASF145
 5012 0527 D3E201   		.sleb128 29011
 5013 052a 0B       		.uleb128 0xb
 5014 052b E9100000 		.4byte	.LASF146
 5015 052f D4E201   		.sleb128 29012
 5016 0532 0B       		.uleb128 0xb
 5017 0533 06020000 		.4byte	.LASF147
 5018 0537 D5E201   		.sleb128 29013
 5019 053a 0B       		.uleb128 0xb
 5020 053b 41040000 		.4byte	.LASF148
 5021 053f D6E201   		.sleb128 29014
 5022 0542 0B       		.uleb128 0xb
 5023 0543 890E0000 		.4byte	.LASF149
 5024 0547 D7E201   		.sleb128 29015
 5025 054a 0B       		.uleb128 0xb
 5026 054b 4E050000 		.4byte	.LASF150
 5027 054f D8E201   		.sleb128 29016
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 134


 5028 0552 0B       		.uleb128 0xb
 5029 0553 710D0000 		.4byte	.LASF151
 5030 0557 D9E201   		.sleb128 29017
 5031 055a 0B       		.uleb128 0xb
 5032 055b 52140000 		.4byte	.LASF152
 5033 055f DAE201   		.sleb128 29018
 5034 0562 0B       		.uleb128 0xb
 5035 0563 9E030000 		.4byte	.LASF153
 5036 0567 DBE201   		.sleb128 29019
 5037 056a 0B       		.uleb128 0xb
 5038 056b 8A050000 		.4byte	.LASF154
 5039 056f DCE201   		.sleb128 29020
 5040 0572 0B       		.uleb128 0xb
 5041 0573 1C030000 		.4byte	.LASF155
 5042 0577 DDE201   		.sleb128 29021
 5043 057a 0B       		.uleb128 0xb
 5044 057b 180C0000 		.4byte	.LASF156
 5045 057f DEE201   		.sleb128 29022
 5046 0582 0B       		.uleb128 0xb
 5047 0583 F6020000 		.4byte	.LASF157
 5048 0587 DFE201   		.sleb128 29023
 5049 058a 0B       		.uleb128 0xb
 5050 058b EB050000 		.4byte	.LASF158
 5051 058f ADE301   		.sleb128 29101
 5052 0592 0B       		.uleb128 0xb
 5053 0593 21050000 		.4byte	.LASF159
 5054 0597 C0E301   		.sleb128 29120
 5055 059a 0B       		.uleb128 0xb
 5056 059b 590C0000 		.4byte	.LASF160
 5057 059f C1E301   		.sleb128 29121
 5058 05a2 0B       		.uleb128 0xb
 5059 05a3 9B120000 		.4byte	.LASF161
 5060 05a7 C2E301   		.sleb128 29122
 5061 05aa 0B       		.uleb128 0xb
 5062 05ab B7080000 		.4byte	.LASF162
 5063 05af C3E301   		.sleb128 29123
 5064 05b2 0B       		.uleb128 0xb
 5065 05b3 89060000 		.4byte	.LASF163
 5066 05b7 C4E301   		.sleb128 29124
 5067 05ba 0B       		.uleb128 0xb
 5068 05bb E4140000 		.4byte	.LASF164
 5069 05bf 91E401   		.sleb128 29201
 5070 05c2 0B       		.uleb128 0xb
 5071 05c3 310E0000 		.4byte	.LASF165
 5072 05c7 92E401   		.sleb128 29202
 5073 05ca 0B       		.uleb128 0xb
 5074 05cb AE010000 		.4byte	.LASF166
 5075 05cf 93E401   		.sleb128 29203
 5076 05d2 0B       		.uleb128 0xb
 5077 05d3 7D0B0000 		.4byte	.LASF167
 5078 05d7 94E401   		.sleb128 29204
 5079 05da 0B       		.uleb128 0xb
 5080 05db 19100000 		.4byte	.LASF168
 5081 05df F5E401   		.sleb128 29301
 5082 05e2 0B       		.uleb128 0xb
 5083 05e3 C9140000 		.4byte	.LASF169
 5084 05e7 F6E401   		.sleb128 29302
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 135


 5085 05ea 0B       		.uleb128 0xb
 5086 05eb AA140000 		.4byte	.LASF170
 5087 05ef F7E401   		.sleb128 29303
 5088 05f2 0B       		.uleb128 0xb
 5089 05f3 C9060000 		.4byte	.LASF171
 5090 05f7 F8E401   		.sleb128 29304
 5091 05fa 0B       		.uleb128 0xb
 5092 05fb 58000000 		.4byte	.LASF172
 5093 05ff F9E401   		.sleb128 29305
 5094 0602 0B       		.uleb128 0xb
 5095 0603 F4110000 		.4byte	.LASF173
 5096 0607 FAE401   		.sleb128 29306
 5097 060a 0B       		.uleb128 0xb
 5098 060b 26060000 		.4byte	.LASF174
 5099 060f FBE401   		.sleb128 29307
 5100 0612 0B       		.uleb128 0xb
 5101 0613 53090000 		.4byte	.LASF175
 5102 0617 FCE401   		.sleb128 29308
 5103 061a 0B       		.uleb128 0xb
 5104 061b EE0C0000 		.4byte	.LASF176
 5105 061f FDE401   		.sleb128 29309
 5106 0622 0B       		.uleb128 0xb
 5107 0623 6C070000 		.4byte	.LASF177
 5108 0627 FEE401   		.sleb128 29310
 5109 062a 0B       		.uleb128 0xb
 5110 062b 0F110000 		.4byte	.LASF178
 5111 062f D9E501   		.sleb128 29401
 5112 0632 0B       		.uleb128 0xb
 5113 0633 0D050000 		.4byte	.LASF179
 5114 0637 BDE601   		.sleb128 29501
 5115 063a 0B       		.uleb128 0xb
 5116 063b 34080000 		.4byte	.LASF180
 5117 063f BEE601   		.sleb128 29502
 5118 0642 0B       		.uleb128 0xb
 5119 0643 21040000 		.4byte	.LASF181
 5120 0647 BFE601   		.sleb128 29503
 5121 064a 0B       		.uleb128 0xb
 5122 064b 4C010000 		.4byte	.LASF182
 5123 064f C0E601   		.sleb128 29504
 5124 0652 0B       		.uleb128 0xb
 5125 0653 49030000 		.4byte	.LASF183
 5126 0657 C1E601   		.sleb128 29505
 5127 065a 0B       		.uleb128 0xb
 5128 065b 6A050000 		.4byte	.LASF184
 5129 065f C2E601   		.sleb128 29506
 5130 0662 0B       		.uleb128 0xb
 5131 0663 49000000 		.4byte	.LASF185
 5132 0667 C3E601   		.sleb128 29507
 5133 066a 0B       		.uleb128 0xb
 5134 066b F6040000 		.4byte	.LASF186
 5135 066f C4E601   		.sleb128 29508
 5136 0672 0B       		.uleb128 0xb
 5137 0673 E3060000 		.4byte	.LASF187
 5138 0677 C5E601   		.sleb128 29509
 5139 067a 0B       		.uleb128 0xb
 5140 067b FB0B0000 		.4byte	.LASF188
 5141 067f C6E601   		.sleb128 29510
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 136


 5142 0682 0B       		.uleb128 0xb
 5143 0683 C2050000 		.4byte	.LASF189
 5144 0687 C7E601   		.sleb128 29511
 5145 068a 0B       		.uleb128 0xb
 5146 068b 610B0000 		.4byte	.LASF190
 5147 068f C8E601   		.sleb128 29512
 5148 0692 0B       		.uleb128 0xb
 5149 0693 C8100000 		.4byte	.LASF191
 5150 0697 C9E601   		.sleb128 29513
 5151 069a 0B       		.uleb128 0xb
 5152 069b 28010000 		.4byte	.LASF192
 5153 069f B0EA01   		.sleb128 30000
 5154 06a2 0B       		.uleb128 0xb
 5155 06a3 31010000 		.4byte	.LASF193
 5156 06a7 98F201   		.sleb128 31000
 5157 06aa 0B       		.uleb128 0xb
 5158 06ab 3A010000 		.4byte	.LASF194
 5159 06af 80FA01   		.sleb128 32000
 5160 06b2 0B       		.uleb128 0xb
 5161 06b3 43010000 		.4byte	.LASF195
 5162 06b7 E88102   		.sleb128 33000
 5163 06ba 0B       		.uleb128 0xb
 5164 06bb 6E110000 		.4byte	.LASF196
 5165 06bf D08902   		.sleb128 34000
 5166 06c2 0B       		.uleb128 0xb
 5167 06c3 A8090000 		.4byte	.LASF197
 5168 06c7 D18902   		.sleb128 34001
 5169 06ca 0B       		.uleb128 0xb
 5170 06cb 87110000 		.4byte	.LASF198
 5171 06cf B89102   		.sleb128 35000
 5172 06d2 00       		.byte	0x0
 5173 06d3 09       		.uleb128 0x9
 5174 06d4 28000000 		.4byte	.LASF199
 5175 06d8 05       		.byte	0x5
 5176 06d9 7202     		.2byte	0x272
 5177 06db BF010000 		.4byte	0x1bf
 5178 06df 09       		.uleb128 0x9
 5179 06e0 26080000 		.4byte	.LASF200
 5180 06e4 05       		.byte	0x5
 5181 06e5 8202     		.2byte	0x282
 5182 06e7 EB060000 		.4byte	0x6eb
 5183 06eb 0C       		.uleb128 0xc
 5184 06ec E4050000 		.4byte	.LASF206
 5185 06f0 10       		.byte	0x10
 5186 06f1 05       		.byte	0x5
 5187 06f2 8202     		.2byte	0x282
 5188 06f4 35070000 		.4byte	0x735
 5189 06f8 0D       		.uleb128 0xd
 5190 06f9 BB0C0000 		.4byte	.LASF201
 5191 06fd 05       		.byte	0x5
 5192 06fe 4103     		.2byte	0x341
 5193 0700 7A0C0000 		.4byte	0xc7a
 5194 0704 02       		.byte	0x2
 5195 0705 23       		.byte	0x23
 5196 0706 00       		.uleb128 0x0
 5197 0707 0D       		.uleb128 0xd
 5198 0708 94120000 		.4byte	.LASF202
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 137


 5199 070c 05       		.byte	0x5
 5200 070d 4203     		.2byte	0x342
 5201 070f BF000000 		.4byte	0xbf
 5202 0713 02       		.byte	0x2
 5203 0714 23       		.byte	0x23
 5204 0715 04       		.uleb128 0x4
 5205 0716 0D       		.uleb128 0xd
 5206 0717 430F0000 		.4byte	.LASF203
 5207 071b 05       		.byte	0x5
 5208 071c 4303     		.2byte	0x343
 5209 071e 3B010000 		.4byte	0x13b
 5210 0722 02       		.byte	0x2
 5211 0723 23       		.byte	0x23
 5212 0724 08       		.uleb128 0x8
 5213 0725 0D       		.uleb128 0xd
 5214 0726 42120000 		.4byte	.LASF204
 5215 072a 05       		.byte	0x5
 5216 072b 4403     		.2byte	0x344
 5217 072d F9000000 		.4byte	0xf9
 5218 0731 02       		.byte	0x2
 5219 0732 23       		.byte	0x23
 5220 0733 0C       		.uleb128 0xc
 5221 0734 00       		.byte	0x0
 5222 0735 09       		.uleb128 0x9
 5223 0736 87090000 		.4byte	.LASF205
 5224 073a 05       		.byte	0x5
 5225 073b 8402     		.2byte	0x284
 5226 073d 41070000 		.4byte	0x741
 5227 0741 0C       		.uleb128 0xc
 5228 0742 23150000 		.4byte	.LASF207
 5229 0746 10       		.byte	0x10
 5230 0747 05       		.byte	0x5
 5231 0748 8402     		.2byte	0x284
 5232 074a 9A070000 		.4byte	0x79a
 5233 074e 0D       		.uleb128 0xd
 5234 074f F10E0000 		.4byte	.LASF208
 5235 0753 05       		.byte	0x5
 5236 0754 5403     		.2byte	0x354
 5237 0756 7A0C0000 		.4byte	0xc7a
 5238 075a 02       		.byte	0x2
 5239 075b 23       		.byte	0x23
 5240 075c 00       		.uleb128 0x0
 5241 075d 0D       		.uleb128 0xd
 5242 075e A8110000 		.4byte	.LASF209
 5243 0762 05       		.byte	0x5
 5244 0763 5503     		.2byte	0x355
 5245 0765 7A0C0000 		.4byte	0xc7a
 5246 0769 02       		.byte	0x2
 5247 076a 23       		.byte	0x23
 5248 076b 04       		.uleb128 0x4
 5249 076c 0D       		.uleb128 0xd
 5250 076d 5D070000 		.4byte	.LASF210
 5251 0771 05       		.byte	0x5
 5252 0772 5603     		.2byte	0x356
 5253 0774 30010000 		.4byte	0x130
 5254 0778 02       		.byte	0x2
 5255 0779 23       		.byte	0x23
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 138


 5256 077a 08       		.uleb128 0x8
 5257 077b 0D       		.uleb128 0xd
 5258 077c 72010000 		.4byte	.LASF211
 5259 0780 05       		.byte	0x5
 5260 0781 5703     		.2byte	0x357
 5261 0783 30010000 		.4byte	0x130
 5262 0787 02       		.byte	0x2
 5263 0788 23       		.byte	0x23
 5264 0789 0A       		.uleb128 0xa
 5265 078a 0D       		.uleb128 0xd
 5266 078b 0E140000 		.4byte	.LASF212
 5267 078f 05       		.byte	0x5
 5268 0790 5803     		.2byte	0x358
 5269 0792 30010000 		.4byte	0x130
 5270 0796 02       		.byte	0x2
 5271 0797 23       		.byte	0x23
 5272 0798 0C       		.uleb128 0xc
 5273 0799 00       		.byte	0x0
 5274 079a 09       		.uleb128 0x9
 5275 079b 36110000 		.4byte	.LASF213
 5276 079f 05       		.byte	0x5
 5277 07a0 8E02     		.2byte	0x28e
 5278 07a2 AD000000 		.4byte	0xad
 5279 07a6 09       		.uleb128 0x9
 5280 07a7 89100000 		.4byte	.LASF214
 5281 07ab 05       		.byte	0x5
 5282 07ac 9002     		.2byte	0x290
 5283 07ae B2070000 		.4byte	0x7b2
 5284 07b2 0C       		.uleb128 0xc
 5285 07b3 00000000 		.4byte	.LASF215
 5286 07b7 C0       		.byte	0xc0
 5287 07b8 05       		.byte	0x5
 5288 07b9 9002     		.2byte	0x290
 5289 07bb CE0A0000 		.4byte	0xace
 5290 07bf 0D       		.uleb128 0xd
 5291 07c0 F2090000 		.4byte	.LASF216
 5292 07c4 05       		.byte	0x5
 5293 07c5 AC03     		.2byte	0x3ac
 5294 07c7 800C0000 		.4byte	0xc80
 5295 07cb 02       		.byte	0x2
 5296 07cc 23       		.byte	0x23
 5297 07cd 00       		.uleb128 0x0
 5298 07ce 0D       		.uleb128 0xd
 5299 07cf B50F0000 		.4byte	.LASF217
 5300 07d3 05       		.byte	0x5
 5301 07d4 AE03     		.2byte	0x3ae
 5302 07d6 BF000000 		.4byte	0xbf
 5303 07da 02       		.byte	0x2
 5304 07db 23       		.byte	0x23
 5305 07dc 04       		.uleb128 0x4
 5306 07dd 0D       		.uleb128 0xd
 5307 07de 2F0B0000 		.4byte	.LASF218
 5308 07e2 05       		.byte	0x5
 5309 07e3 B003     		.2byte	0x3b0
 5310 07e5 800C0000 		.4byte	0xc80
 5311 07e9 02       		.byte	0x2
 5312 07ea 23       		.byte	0x23
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 139


 5313 07eb 08       		.uleb128 0x8
 5314 07ec 0D       		.uleb128 0xd
 5315 07ed BB0C0000 		.4byte	.LASF201
 5316 07f1 05       		.byte	0x5
 5317 07f2 B203     		.2byte	0x3b2
 5318 07f4 620C0000 		.4byte	0xc62
 5319 07f8 02       		.byte	0x2
 5320 07f9 23       		.byte	0x23
 5321 07fa 0C       		.uleb128 0xc
 5322 07fb 0D       		.uleb128 0xd
 5323 07fc 92080000 		.4byte	.LASF219
 5324 0800 05       		.byte	0x5
 5325 0801 B303     		.2byte	0x3b3
 5326 0803 620C0000 		.4byte	0xc62
 5327 0807 02       		.byte	0x2
 5328 0808 23       		.byte	0x23
 5329 0809 10       		.uleb128 0x10
 5330 080a 0D       		.uleb128 0xd
 5331 080b 940B0000 		.4byte	.LASF220
 5332 080f 05       		.byte	0x5
 5333 0810 B503     		.2byte	0x3b5
 5334 0812 620C0000 		.4byte	0xc62
 5335 0816 02       		.byte	0x2
 5336 0817 23       		.byte	0x23
 5337 0818 14       		.uleb128 0x14
 5338 0819 0D       		.uleb128 0xd
 5339 081a 88070000 		.4byte	.LASF221
 5340 081e 05       		.byte	0x5
 5341 081f B603     		.2byte	0x3b6
 5342 0821 620C0000 		.4byte	0xc62
 5343 0825 02       		.byte	0x2
 5344 0826 23       		.byte	0x23
 5345 0827 18       		.uleb128 0x18
 5346 0828 0D       		.uleb128 0xd
 5347 0829 90110000 		.4byte	.LASF222
 5348 082d 05       		.byte	0x5
 5349 082e B803     		.2byte	0x3b8
 5350 0830 860C0000 		.4byte	0xc86
 5351 0834 02       		.byte	0x2
 5352 0835 23       		.byte	0x23
 5353 0836 1C       		.uleb128 0x1c
 5354 0837 0D       		.uleb128 0xd
 5355 0838 74090000 		.4byte	.LASF223
 5356 083c 05       		.byte	0x5
 5357 083d BA03     		.2byte	0x3ba
 5358 083f 740C0000 		.4byte	0xc74
 5359 0843 02       		.byte	0x2
 5360 0844 23       		.byte	0x23
 5361 0845 20       		.uleb128 0x20
 5362 0846 0D       		.uleb128 0xd
 5363 0847 06060000 		.4byte	.LASF224
 5364 084b 05       		.byte	0x5
 5365 084c BC03     		.2byte	0x3bc
 5366 084e 800C0000 		.4byte	0xc80
 5367 0852 02       		.byte	0x2
 5368 0853 23       		.byte	0x23
 5369 0854 24       		.uleb128 0x24
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 140


 5370 0855 0D       		.uleb128 0xd
 5371 0856 2C090000 		.4byte	.LASF225
 5372 085a 05       		.byte	0x5
 5373 085b C203     		.2byte	0x3c2
 5374 085d 9A070000 		.4byte	0x79a
 5375 0861 02       		.byte	0x2
 5376 0862 23       		.byte	0x23
 5377 0863 28       		.uleb128 0x28
 5378 0864 0D       		.uleb128 0xd
 5379 0865 AF110000 		.4byte	.LASF226
 5380 0869 05       		.byte	0x5
 5381 086a C303     		.2byte	0x3c3
 5382 086c BF000000 		.4byte	0xbf
 5383 0870 02       		.byte	0x2
 5384 0871 23       		.byte	0x23
 5385 0872 2C       		.uleb128 0x2c
 5386 0873 0D       		.uleb128 0xd
 5387 0874 C60E0000 		.4byte	.LASF227
 5388 0878 05       		.byte	0x5
 5389 0879 C503     		.2byte	0x3c5
 5390 087b 680C0000 		.4byte	0xc68
 5391 087f 02       		.byte	0x2
 5392 0880 23       		.byte	0x23
 5393 0881 30       		.uleb128 0x30
 5394 0882 0D       		.uleb128 0xd
 5395 0883 62030000 		.4byte	.LASF228
 5396 0887 05       		.byte	0x5
 5397 0888 C603     		.2byte	0x3c6
 5398 088a 9E010000 		.4byte	0x19e
 5399 088e 02       		.byte	0x2
 5400 088f 23       		.byte	0x23
 5401 0890 34       		.uleb128 0x34
 5402 0891 0D       		.uleb128 0xd
 5403 0892 7C090000 		.4byte	.LASF229
 5404 0896 05       		.byte	0x5
 5405 0897 C703     		.2byte	0x3c7
 5406 0899 A9010000 		.4byte	0x1a9
 5407 089d 02       		.byte	0x2
 5408 089e 23       		.byte	0x23
 5409 089f 35       		.uleb128 0x35
 5410 08a0 0D       		.uleb128 0xd
 5411 08a1 72060000 		.4byte	.LASF230
 5412 08a5 05       		.byte	0x5
 5413 08a6 C903     		.2byte	0x3c9
 5414 08a8 9E010000 		.4byte	0x19e
 5415 08ac 02       		.byte	0x2
 5416 08ad 23       		.byte	0x23
 5417 08ae 36       		.uleb128 0x36
 5418 08af 0D       		.uleb128 0xd
 5419 08b0 04130000 		.4byte	.LASF231
 5420 08b4 05       		.byte	0x5
 5421 08b5 CA03     		.2byte	0x3ca
 5422 08b7 72010000 		.4byte	0x172
 5423 08bb 02       		.byte	0x2
 5424 08bc 23       		.byte	0x23
 5425 08bd 37       		.uleb128 0x37
 5426 08be 0D       		.uleb128 0xd
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 141


 5427 08bf FE050000 		.4byte	.LASF232
 5428 08c3 05       		.byte	0x5
 5429 08c4 CB03     		.2byte	0x3cb
 5430 08c6 D7000000 		.4byte	0xd7
 5431 08ca 02       		.byte	0x2
 5432 08cb 23       		.byte	0x23
 5433 08cc 38       		.uleb128 0x38
 5434 08cd 0E       		.uleb128 0xe
 5435 08ce 4F707400 		.ascii	"Opt\000"
 5436 08d2 05       		.byte	0x5
 5437 08d3 CC03     		.2byte	0x3cc
 5438 08d5 67010000 		.4byte	0x167
 5439 08d9 02       		.byte	0x2
 5440 08da 23       		.byte	0x23
 5441 08db 3C       		.uleb128 0x3c
 5442 08dc 0D       		.uleb128 0xd
 5443 08dd 69030000 		.4byte	.LASF233
 5444 08e1 05       		.byte	0x5
 5445 08e2 CE03     		.2byte	0x3ce
 5446 08e4 51010000 		.4byte	0x151
 5447 08e8 02       		.byte	0x2
 5448 08e9 23       		.byte	0x23
 5449 08ea 3E       		.uleb128 0x3e
 5450 08eb 0E       		.uleb128 0xe
 5451 08ec 545300   		.ascii	"TS\000"
 5452 08ef 05       		.byte	0x5
 5453 08f0 D003     		.2byte	0x3d0
 5454 08f2 F9000000 		.4byte	0xf9
 5455 08f6 02       		.byte	0x2
 5456 08f7 23       		.byte	0x23
 5457 08f8 40       		.uleb128 0x40
 5458 08f9 0D       		.uleb128 0xd
 5459 08fa EA0E0000 		.4byte	.LASF234
 5460 08fe 05       		.byte	0x5
 5461 08ff D203     		.2byte	0x3d2
 5462 0901 93010000 		.4byte	0x193
 5463 0905 02       		.byte	0x2
 5464 0906 23       		.byte	0x23
 5465 0907 44       		.uleb128 0x44
 5466 0908 0D       		.uleb128 0xd
 5467 0909 51070000 		.4byte	.LASF235
 5468 090d 05       		.byte	0x5
 5469 090e D503     		.2byte	0x3d5
 5470 0910 B4010000 		.4byte	0x1b4
 5471 0914 02       		.byte	0x2
 5472 0915 23       		.byte	0x23
 5473 0916 48       		.uleb128 0x48
 5474 0917 0D       		.uleb128 0xd
 5475 0918 C9030000 		.4byte	.LASF236
 5476 091c 05       		.byte	0x5
 5477 091d D603     		.2byte	0x3d6
 5478 091f B4010000 		.4byte	0x1b4
 5479 0923 02       		.byte	0x2
 5480 0924 23       		.byte	0x23
 5481 0925 4C       		.uleb128 0x4c
 5482 0926 0D       		.uleb128 0xd
 5483 0927 000F0000 		.4byte	.LASF237
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 142


 5484 092b 05       		.byte	0x5
 5485 092c D703     		.2byte	0x3d7
 5486 092e B4010000 		.4byte	0x1b4
 5487 0932 02       		.byte	0x2
 5488 0933 23       		.byte	0x23
 5489 0934 50       		.uleb128 0x50
 5490 0935 0D       		.uleb128 0xd
 5491 0936 BE140000 		.4byte	.LASF238
 5492 093a 05       		.byte	0x5
 5493 093b D903     		.2byte	0x3d9
 5494 093d B4010000 		.4byte	0x1b4
 5495 0941 02       		.byte	0x2
 5496 0942 23       		.byte	0x23
 5497 0943 54       		.uleb128 0x54
 5498 0944 0D       		.uleb128 0xd
 5499 0945 90090000 		.4byte	.LASF239
 5500 0949 05       		.byte	0x5
 5501 094a DA03     		.2byte	0x3da
 5502 094c B4010000 		.4byte	0x1b4
 5503 0950 02       		.byte	0x2
 5504 0951 23       		.byte	0x23
 5505 0952 58       		.uleb128 0x58
 5506 0953 0D       		.uleb128 0xd
 5507 0954 94120000 		.4byte	.LASF202
 5508 0958 05       		.byte	0x5
 5509 0959 DD03     		.2byte	0x3dd
 5510 095b BF000000 		.4byte	0xbf
 5511 095f 02       		.byte	0x2
 5512 0960 23       		.byte	0x23
 5513 0961 5C       		.uleb128 0x5c
 5514 0962 0D       		.uleb128 0xd
 5515 0963 430F0000 		.4byte	.LASF203
 5516 0967 05       		.byte	0x5
 5517 0968 DE03     		.2byte	0x3de
 5518 096a 3B010000 		.4byte	0x13b
 5519 096e 02       		.byte	0x2
 5520 096f 23       		.byte	0x23
 5521 0970 60       		.uleb128 0x60
 5522 0971 0D       		.uleb128 0xd
 5523 0972 27090000 		.4byte	.LASF240
 5524 0976 05       		.byte	0x5
 5525 0977 E203     		.2byte	0x3e2
 5526 0979 35070000 		.4byte	0x735
 5527 097d 02       		.byte	0x2
 5528 097e 23       		.byte	0x23
 5529 097f 64       		.uleb128 0x64
 5530 0980 0D       		.uleb128 0xd
 5531 0981 19080000 		.4byte	.LASF241
 5532 0985 05       		.byte	0x5
 5533 0986 E403     		.2byte	0x3e4
 5534 0988 F9000000 		.4byte	0xf9
 5535 098c 02       		.byte	0x2
 5536 098d 23       		.byte	0x23
 5537 098e 74       		.uleb128 0x74
 5538 098f 0D       		.uleb128 0xd
 5539 0990 09080000 		.4byte	.LASF242
 5540 0994 05       		.byte	0x5
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 143


 5541 0995 E503     		.2byte	0x3e5
 5542 0997 F9000000 		.4byte	0xf9
 5543 099b 02       		.byte	0x2
 5544 099c 23       		.byte	0x23
 5545 099d 78       		.uleb128 0x78
 5546 099e 0D       		.uleb128 0xd
 5547 099f 77140000 		.4byte	.LASF243
 5548 09a3 05       		.byte	0x5
 5549 09a4 EA03     		.2byte	0x3ea
 5550 09a6 8C0C0000 		.4byte	0xc8c
 5551 09aa 02       		.byte	0x2
 5552 09ab 23       		.byte	0x23
 5553 09ac 7C       		.uleb128 0x7c
 5554 09ad 0D       		.uleb128 0xd
 5555 09ae 17040000 		.4byte	.LASF244
 5556 09b2 05       		.byte	0x5
 5557 09b3 EE03     		.2byte	0x3ee
 5558 09b5 25010000 		.4byte	0x125
 5559 09b9 03       		.byte	0x3
 5560 09ba 23       		.byte	0x23
 5561 09bb 8001     		.uleb128 0x80
 5562 09bd 0D       		.uleb128 0xd
 5563 09be 94070000 		.4byte	.LASF245
 5564 09c2 05       		.byte	0x5
 5565 09c3 EF03     		.2byte	0x3ef
 5566 09c5 25010000 		.4byte	0x125
 5567 09c9 03       		.byte	0x3
 5568 09ca 23       		.byte	0x23
 5569 09cb 8401     		.uleb128 0x84
 5570 09cd 0D       		.uleb128 0xd
 5571 09ce FD010000 		.4byte	.LASF246
 5572 09d2 05       		.byte	0x5
 5573 09d3 F003     		.2byte	0x3f0
 5574 09d5 67010000 		.4byte	0x167
 5575 09d9 03       		.byte	0x3
 5576 09da 23       		.byte	0x23
 5577 09db 8801     		.uleb128 0x88
 5578 09dd 0D       		.uleb128 0xd
 5579 09de 240B0000 		.4byte	.LASF247
 5580 09e2 05       		.byte	0x5
 5581 09e3 F403     		.2byte	0x3f4
 5582 09e5 46010000 		.4byte	0x146
 5583 09e9 03       		.byte	0x3
 5584 09ea 23       		.byte	0x23
 5585 09eb 8A01     		.uleb128 0x8a
 5586 09ed 0D       		.uleb128 0xd
 5587 09ee 29130000 		.4byte	.LASF248
 5588 09f2 05       		.byte	0x5
 5589 09f3 F803     		.2byte	0x3f8
 5590 09f5 04010000 		.4byte	0x104
 5591 09f9 03       		.byte	0x3
 5592 09fa 23       		.byte	0x23
 5593 09fb 8C01     		.uleb128 0x8c
 5594 09fd 0D       		.uleb128 0xd
 5595 09fe A10E0000 		.4byte	.LASF249
 5596 0a02 05       		.byte	0x5
 5597 0a03 F903     		.2byte	0x3f9
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 144


 5598 0a05 04010000 		.4byte	0x104
 5599 0a09 03       		.byte	0x3
 5600 0a0a 23       		.byte	0x23
 5601 0a0b 8E01     		.uleb128 0x8e
 5602 0a0d 0D       		.uleb128 0xd
 5603 0a0e 38040000 		.4byte	.LASF250
 5604 0a12 05       		.byte	0x5
 5605 0a13 FA03     		.2byte	0x3fa
 5606 0a15 0F010000 		.4byte	0x10f
 5607 0a19 03       		.byte	0x3
 5608 0a1a 23       		.byte	0x23
 5609 0a1b 9001     		.uleb128 0x90
 5610 0a1d 0D       		.uleb128 0xd
 5611 0a1e 4A0B0000 		.4byte	.LASF251
 5612 0a22 05       		.byte	0x5
 5613 0a23 FB03     		.2byte	0x3fb
 5614 0a25 F9000000 		.4byte	0xf9
 5615 0a29 03       		.byte	0x3
 5616 0a2a 23       		.byte	0x23
 5617 0a2b 9401     		.uleb128 0x94
 5618 0a2d 0D       		.uleb128 0xd
 5619 0a2e 200A0000 		.4byte	.LASF252
 5620 0a32 05       		.byte	0x5
 5621 0a33 FC03     		.2byte	0x3fc
 5622 0a35 F9000000 		.4byte	0xf9
 5623 0a39 03       		.byte	0x3
 5624 0a3a 23       		.byte	0x23
 5625 0a3b 9801     		.uleb128 0x98
 5626 0a3d 0D       		.uleb128 0xd
 5627 0a3e 710E0000 		.4byte	.LASF253
 5628 0a42 05       		.byte	0x5
 5629 0a43 FD03     		.2byte	0x3fd
 5630 0a45 1A010000 		.4byte	0x11a
 5631 0a49 03       		.byte	0x3
 5632 0a4a 23       		.byte	0x23
 5633 0a4b 9C01     		.uleb128 0x9c
 5634 0a4d 0D       		.uleb128 0xd
 5635 0a4e 210E0000 		.4byte	.LASF254
 5636 0a52 05       		.byte	0x5
 5637 0a53 FE03     		.2byte	0x3fe
 5638 0a55 1A010000 		.4byte	0x11a
 5639 0a59 03       		.byte	0x3
 5640 0a5a 23       		.byte	0x23
 5641 0a5b A001     		.uleb128 0xa0
 5642 0a5d 0D       		.uleb128 0xd
 5643 0a5e 870C0000 		.4byte	.LASF255
 5644 0a62 05       		.byte	0x5
 5645 0a63 0004     		.2byte	0x400
 5646 0a65 F9000000 		.4byte	0xf9
 5647 0a69 03       		.byte	0x3
 5648 0a6a 23       		.byte	0x23
 5649 0a6b A401     		.uleb128 0xa4
 5650 0a6d 0D       		.uleb128 0xd
 5651 0a6e 000E0000 		.4byte	.LASF256
 5652 0a72 05       		.byte	0x5
 5653 0a73 0104     		.2byte	0x401
 5654 0a75 F9000000 		.4byte	0xf9
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 145


 5655 0a79 03       		.byte	0x3
 5656 0a7a 23       		.byte	0x23
 5657 0a7b A801     		.uleb128 0xa8
 5658 0a7d 0D       		.uleb128 0xd
 5659 0a7e 62050000 		.4byte	.LASF257
 5660 0a82 05       		.byte	0x5
 5661 0a83 0504     		.2byte	0x405
 5662 0a85 D7000000 		.4byte	0xd7
 5663 0a89 03       		.byte	0x3
 5664 0a8a 23       		.byte	0x23
 5665 0a8b AC01     		.uleb128 0xac
 5666 0a8d 0D       		.uleb128 0xd
 5667 0a8e 49070000 		.4byte	.LASF258
 5668 0a92 05       		.byte	0x5
 5669 0a93 0604     		.2byte	0x406
 5670 0a95 D7000000 		.4byte	0xd7
 5671 0a99 03       		.byte	0x3
 5672 0a9a 23       		.byte	0x23
 5673 0a9b B001     		.uleb128 0xb0
 5674 0a9d 0D       		.uleb128 0xd
 5675 0a9e CC020000 		.4byte	.LASF259
 5676 0aa2 05       		.byte	0x5
 5677 0aa3 1104     		.2byte	0x411
 5678 0aa5 620C0000 		.4byte	0xc62
 5679 0aa9 03       		.byte	0x3
 5680 0aaa 23       		.byte	0x23
 5681 0aab B401     		.uleb128 0xb4
 5682 0aad 0D       		.uleb128 0xd
 5683 0aae E4020000 		.4byte	.LASF260
 5684 0ab2 05       		.byte	0x5
 5685 0ab3 1204     		.2byte	0x412
 5686 0ab5 620C0000 		.4byte	0xc62
 5687 0ab9 03       		.byte	0x3
 5688 0aba 23       		.byte	0x23
 5689 0abb B801     		.uleb128 0xb8
 5690 0abd 0D       		.uleb128 0xd
 5691 0abe 9D110000 		.4byte	.LASF261
 5692 0ac2 05       		.byte	0x5
 5693 0ac3 1304     		.2byte	0x413
 5694 0ac5 740C0000 		.4byte	0xc74
 5695 0ac9 03       		.byte	0x3
 5696 0aca 23       		.byte	0x23
 5697 0acb BC01     		.uleb128 0xbc
 5698 0acd 00       		.byte	0x0
 5699 0ace 09       		.uleb128 0x9
 5700 0acf C7040000 		.4byte	.LASF262
 5701 0ad3 05       		.byte	0x5
 5702 0ad4 9E02     		.2byte	0x29e
 5703 0ad6 DA0A0000 		.4byte	0xada
 5704 0ada 0C       		.uleb128 0xc
 5705 0adb F9090000 		.4byte	.LASF263
 5706 0adf 08       		.byte	0x8
 5707 0ae0 05       		.byte	0x5
 5708 0ae1 9E02     		.2byte	0x29e
 5709 0ae3 150B0000 		.4byte	0xb15
 5710 0ae7 0D       		.uleb128 0xd
 5711 0ae8 5E0F0000 		.4byte	.LASF264
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 146


 5712 0aec 05       		.byte	0x5
 5713 0aed 1F04     		.2byte	0x41f
 5714 0aef 620C0000 		.4byte	0xc62
 5715 0af3 02       		.byte	0x2
 5716 0af4 23       		.byte	0x23
 5717 0af5 00       		.uleb128 0x0
 5718 0af6 0D       		.uleb128 0xd
 5719 0af7 72010000 		.4byte	.LASF211
 5720 0afb 05       		.byte	0x5
 5721 0afc 2004     		.2byte	0x420
 5722 0afe 51010000 		.4byte	0x151
 5723 0b02 02       		.byte	0x2
 5724 0b03 23       		.byte	0x23
 5725 0b04 04       		.uleb128 0x4
 5726 0b05 0D       		.uleb128 0xd
 5727 0b06 0E140000 		.4byte	.LASF212
 5728 0b0a 05       		.byte	0x5
 5729 0b0b 2104     		.2byte	0x421
 5730 0b0d 51010000 		.4byte	0x151
 5731 0b11 02       		.byte	0x2
 5732 0b12 23       		.byte	0x23
 5733 0b13 06       		.uleb128 0x6
 5734 0b14 00       		.byte	0x0
 5735 0b15 09       		.uleb128 0x9
 5736 0b16 7D050000 		.4byte	.LASF265
 5737 0b1a 05       		.byte	0x5
 5738 0b1b A502     		.2byte	0x2a5
 5739 0b1d 210B0000 		.4byte	0xb21
 5740 0b21 0C       		.uleb128 0xc
 5741 0b22 C8120000 		.4byte	.LASF266
 5742 0b26 20       		.byte	0x20
 5743 0b27 05       		.byte	0x5
 5744 0b28 A502     		.2byte	0x2a5
 5745 0b2a A70B0000 		.4byte	0xba7
 5746 0b2e 0D       		.uleb128 0xd
 5747 0b2f 92080000 		.4byte	.LASF219
 5748 0b33 05       		.byte	0x5
 5749 0b34 DE02     		.2byte	0x2de
 5750 0b36 680C0000 		.4byte	0xc68
 5751 0b3a 02       		.byte	0x2
 5752 0b3b 23       		.byte	0x23
 5753 0b3c 00       		.uleb128 0x0
 5754 0b3d 0D       		.uleb128 0xd
 5755 0b3e BB0C0000 		.4byte	.LASF201
 5756 0b42 05       		.byte	0x5
 5757 0b43 DF02     		.2byte	0x2df
 5758 0b45 680C0000 		.4byte	0xc68
 5759 0b49 02       		.byte	0x2
 5760 0b4a 23       		.byte	0x23
 5761 0b4b 04       		.uleb128 0x4
 5762 0b4c 0D       		.uleb128 0xd
 5763 0b4d 4B0A0000 		.4byte	.LASF267
 5764 0b51 05       		.byte	0x5
 5765 0b52 E002     		.2byte	0x2e0
 5766 0b54 620C0000 		.4byte	0xc62
 5767 0b58 02       		.byte	0x2
 5768 0b59 23       		.byte	0x23
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 147


 5769 0b5a 08       		.uleb128 0x8
 5770 0b5b 0D       		.uleb128 0xd
 5771 0b5c 66130000 		.4byte	.LASF268
 5772 0b60 05       		.byte	0x5
 5773 0b61 E102     		.2byte	0x2e1
 5774 0b63 6E0C0000 		.4byte	0xc6e
 5775 0b67 02       		.byte	0x2
 5776 0b68 23       		.byte	0x23
 5777 0b69 0C       		.uleb128 0xc
 5778 0b6a 0D       		.uleb128 0xd
 5779 0b6b 310C0000 		.4byte	.LASF269
 5780 0b6f 05       		.byte	0x5
 5781 0b70 E202     		.2byte	0x2e2
 5782 0b72 6E0C0000 		.4byte	0xc6e
 5783 0b76 02       		.byte	0x2
 5784 0b77 23       		.byte	0x23
 5785 0b78 10       		.uleb128 0x10
 5786 0b79 0D       		.uleb128 0xd
 5787 0b7a D6030000 		.4byte	.LASF270
 5788 0b7e 05       		.byte	0x5
 5789 0b7f E302     		.2byte	0x2e3
 5790 0b81 BF000000 		.4byte	0xbf
 5791 0b85 02       		.byte	0x2
 5792 0b86 23       		.byte	0x23
 5793 0b87 14       		.uleb128 0x14
 5794 0b88 0D       		.uleb128 0xd
 5795 0b89 A20D0000 		.4byte	.LASF271
 5796 0b8d 05       		.byte	0x5
 5797 0b8e E402     		.2byte	0x2e4
 5798 0b90 3B010000 		.4byte	0x13b
 5799 0b94 02       		.byte	0x2
 5800 0b95 23       		.byte	0x23
 5801 0b96 18       		.uleb128 0x18
 5802 0b97 0D       		.uleb128 0xd
 5803 0b98 4A0D0000 		.4byte	.LASF272
 5804 0b9c 05       		.byte	0x5
 5805 0b9d E502     		.2byte	0x2e5
 5806 0b9f F9000000 		.4byte	0xf9
 5807 0ba3 02       		.byte	0x2
 5808 0ba4 23       		.byte	0x23
 5809 0ba5 1C       		.uleb128 0x1c
 5810 0ba6 00       		.byte	0x0
 5811 0ba7 09       		.uleb128 0x9
 5812 0ba8 20120000 		.4byte	.LASF273
 5813 0bac 05       		.byte	0x5
 5814 0bad A602     		.2byte	0x2a6
 5815 0baf B30B0000 		.4byte	0xbb3
 5816 0bb3 0C       		.uleb128 0xc
 5817 0bb4 2D140000 		.4byte	.LASF274
 5818 0bb8 0C       		.byte	0xc
 5819 0bb9 05       		.byte	0x5
 5820 0bba A602     		.2byte	0x2a6
 5821 0bbc EE0B0000 		.4byte	0xbee
 5822 0bc0 0D       		.uleb128 0xd
 5823 0bc1 0B0F0000 		.4byte	.LASF275
 5824 0bc5 05       		.byte	0x5
 5825 0bc6 EA02     		.2byte	0x2ea
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 148


 5826 0bc8 680C0000 		.4byte	0xc68
 5827 0bcc 02       		.byte	0x2
 5828 0bcd 23       		.byte	0x23
 5829 0bce 00       		.uleb128 0x0
 5830 0bcf 0D       		.uleb128 0xd
 5831 0bd0 8F030000 		.4byte	.LASF276
 5832 0bd4 05       		.byte	0x5
 5833 0bd5 EB02     		.2byte	0x2eb
 5834 0bd7 680C0000 		.4byte	0xc68
 5835 0bdb 02       		.byte	0x2
 5836 0bdc 23       		.byte	0x23
 5837 0bdd 04       		.uleb128 0x4
 5838 0bde 0D       		.uleb128 0xd
 5839 0bdf 72010000 		.4byte	.LASF211
 5840 0be3 05       		.byte	0x5
 5841 0be4 EC02     		.2byte	0x2ec
 5842 0be6 51010000 		.4byte	0x151
 5843 0bea 02       		.byte	0x2
 5844 0beb 23       		.byte	0x23
 5845 0bec 08       		.uleb128 0x8
 5846 0bed 00       		.byte	0x0
 5847 0bee 09       		.uleb128 0x9
 5848 0bef 7D0E0000 		.4byte	.LASF277
 5849 0bf3 05       		.byte	0x5
 5850 0bf4 A702     		.2byte	0x2a7
 5851 0bf6 FA0B0000 		.4byte	0xbfa
 5852 0bfa 0C       		.uleb128 0xc
 5853 0bfb E0030000 		.4byte	.LASF278
 5854 0bff 20       		.byte	0x20
 5855 0c00 05       		.byte	0x5
 5856 0c01 A702     		.2byte	0x2a7
 5857 0c03 620C0000 		.4byte	0xc62
 5858 0c07 0D       		.uleb128 0xd
 5859 0c08 D90C0000 		.4byte	.LASF279
 5860 0c0c 05       		.byte	0x5
 5861 0c0d 0003     		.2byte	0x300
 5862 0c0f 5C010000 		.4byte	0x15c
 5863 0c13 02       		.byte	0x2
 5864 0c14 23       		.byte	0x23
 5865 0c15 00       		.uleb128 0x0
 5866 0c16 0D       		.uleb128 0xd
 5867 0c17 74090000 		.4byte	.LASF223
 5868 0c1b 05       		.byte	0x5
 5869 0c1c 0103     		.2byte	0x301
 5870 0c1e 740C0000 		.4byte	0xc74
 5871 0c22 02       		.byte	0x2
 5872 0c23 23       		.byte	0x23
 5873 0c24 04       		.uleb128 0x4
 5874 0c25 0D       		.uleb128 0xd
 5875 0c26 AD0E0000 		.4byte	.LASF280
 5876 0c2a 05       		.byte	0x5
 5877 0c2b 0203     		.2byte	0x302
 5878 0c2d A70B0000 		.4byte	0xba7
 5879 0c31 02       		.byte	0x2
 5880 0c32 23       		.byte	0x23
 5881 0c33 08       		.uleb128 0x8
 5882 0c34 0D       		.uleb128 0xd
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 149


 5883 0c35 CC020000 		.4byte	.LASF259
 5884 0c39 05       		.byte	0x5
 5885 0c3a 0403     		.2byte	0x304
 5886 0c3c BF000000 		.4byte	0xbf
 5887 0c40 02       		.byte	0x2
 5888 0c41 23       		.byte	0x23
 5889 0c42 14       		.uleb128 0x14
 5890 0c43 0D       		.uleb128 0xd
 5891 0c44 E4020000 		.4byte	.LASF260
 5892 0c48 05       		.byte	0x5
 5893 0c49 0503     		.2byte	0x305
 5894 0c4b BF000000 		.4byte	0xbf
 5895 0c4f 02       		.byte	0x2
 5896 0c50 23       		.byte	0x23
 5897 0c51 18       		.uleb128 0x18
 5898 0c52 0D       		.uleb128 0xd
 5899 0c53 9D110000 		.4byte	.LASF261
 5900 0c57 05       		.byte	0x5
 5901 0c58 0603     		.2byte	0x306
 5902 0c5a 740C0000 		.4byte	0xc74
 5903 0c5e 02       		.byte	0x2
 5904 0c5f 23       		.byte	0x23
 5905 0c60 1C       		.uleb128 0x1c
 5906 0c61 00       		.byte	0x0
 5907 0c62 05       		.uleb128 0x5
 5908 0c63 04       		.byte	0x4
 5909 0c64 A6070000 		.4byte	0x7a6
 5910 0c68 05       		.uleb128 0x5
 5911 0c69 04       		.byte	0x4
 5912 0c6a 150B0000 		.4byte	0xb15
 5913 0c6e 05       		.uleb128 0x5
 5914 0c6f 04       		.byte	0x4
 5915 0c70 EE0B0000 		.4byte	0xbee
 5916 0c74 05       		.uleb128 0x5
 5917 0c75 04       		.byte	0x4
 5918 0c76 29000000 		.4byte	0x29
 5919 0c7a 05       		.uleb128 0x5
 5920 0c7b 04       		.byte	0x4
 5921 0c7c DF060000 		.4byte	0x6df
 5922 0c80 05       		.uleb128 0x5
 5923 0c81 04       		.byte	0x4
 5924 0c82 CC000000 		.4byte	0xcc
 5925 0c86 05       		.uleb128 0x5
 5926 0c87 04       		.byte	0x4
 5927 0c88 CE0A0000 		.4byte	0xace
 5928 0c8c 0F       		.uleb128 0xf
 5929 0c8d 7D010000 		.4byte	0x17d
 5930 0c91 9C0C0000 		.4byte	0xc9c
 5931 0c95 10       		.uleb128 0x10
 5932 0c96 9C0C0000 		.4byte	0xc9c
 5933 0c9a 00       		.byte	0x0
 5934 0c9b 00       		.byte	0x0
 5935 0c9c 11       		.uleb128 0x11
 5936 0c9d 04       		.byte	0x4
 5937 0c9e 07       		.byte	0x7
 5938 0c9f 12       		.uleb128 0x12
 5939 0ca0 01       		.byte	0x1
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 150


 5940 0ca1 CA110000 		.4byte	.LASF286
 5941 0ca5 01       		.byte	0x1
 5942 0ca6 3E       		.byte	0x3e
 5943 0ca7 01       		.byte	0x1
 5944 0ca8 00000000 		.4byte	.LFB0
 5945 0cac 3E010000 		.4byte	.LFE0
 5946 0cb0 00000000 		.4byte	.LLST0
 5947 0cb4 FF0C0000 		.4byte	0xcff
 5948 0cb8 13       		.uleb128 0x13
 5949 0cb9 070A0000 		.4byte	.LASF281
 5950 0cbd 01       		.byte	0x1
 5951 0cbe 3E       		.byte	0x3e
 5952 0cbf 620C0000 		.4byte	0xc62
 5953 0cc3 02       		.byte	0x2
 5954 0cc4 91       		.byte	0x91
 5955 0cc5 6C       		.sleb128 -20
 5956 0cc6 13       		.uleb128 0x13
 5957 0cc7 F70E0000 		.4byte	.LASF282
 5958 0ccb 01       		.byte	0x1
 5959 0ccc 3F       		.byte	0x3f
 5960 0ccd 72010000 		.4byte	0x172
 5961 0cd1 02       		.byte	0x2
 5962 0cd2 91       		.byte	0x91
 5963 0cd3 6B       		.sleb128 -21
 5964 0cd4 13       		.uleb128 0x13
 5965 0cd5 F9070000 		.4byte	.LASF283
 5966 0cd9 01       		.byte	0x1
 5967 0cda 40       		.byte	0x40
 5968 0cdb FF0C0000 		.4byte	0xcff
 5969 0cdf 02       		.byte	0x2
 5970 0ce0 91       		.byte	0x91
 5971 0ce1 64       		.sleb128 -28
 5972 0ce2 14       		.uleb128 0x14
 5973 0ce3 6D010000 		.4byte	.LASF284
 5974 0ce7 01       		.byte	0x1
 5975 0ce8 42       		.byte	0x42
 5976 0ce9 3B000000 		.4byte	0x3b
 5977 0ced 02       		.byte	0x2
 5978 0cee 91       		.byte	0x91
 5979 0cef 73       		.sleb128 -13
 5980 0cf0 14       		.uleb128 0x14
 5981 0cf1 EF040000 		.4byte	.LASF285
 5982 0cf5 01       		.byte	0x1
 5983 0cf6 43       		.byte	0x43
 5984 0cf7 E2000000 		.4byte	0xe2
 5985 0cfb 02       		.byte	0x2
 5986 0cfc 91       		.byte	0x91
 5987 0cfd 74       		.sleb128 -12
 5988 0cfe 00       		.byte	0x0
 5989 0cff 05       		.uleb128 0x5
 5990 0d00 04       		.byte	0x4
 5991 0d01 D3060000 		.4byte	0x6d3
 5992 0d05 12       		.uleb128 0x12
 5993 0d06 01       		.byte	0x1
 5994 0d07 07000000 		.4byte	.LASF287
 5995 0d0b 01       		.byte	0x1
 5996 0d0c F9       		.byte	0xf9
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 151


 5997 0d0d 01       		.byte	0x1
 5998 0d0e 00000000 		.4byte	.LFB1
 5999 0d12 3C020000 		.4byte	.LFE1
 6000 0d16 37000000 		.4byte	.LLST1
 6001 0d1a 240E0000 		.4byte	0xe24
 6002 0d1e 13       		.uleb128 0x13
 6003 0d1f 070A0000 		.4byte	.LASF281
 6004 0d23 01       		.byte	0x1
 6005 0d24 F9       		.byte	0xf9
 6006 0d25 620C0000 		.4byte	0xc62
 6007 0d29 02       		.byte	0x2
 6008 0d2a 91       		.byte	0x91
 6009 0d2b 5C       		.sleb128 -36
 6010 0d2c 13       		.uleb128 0x13
 6011 0d2d 2D080000 		.4byte	.LASF288
 6012 0d31 01       		.byte	0x1
 6013 0d32 FA       		.byte	0xfa
 6014 0d33 740C0000 		.4byte	0xc74
 6015 0d37 02       		.byte	0x2
 6016 0d38 91       		.byte	0x91
 6017 0d39 58       		.sleb128 -40
 6018 0d3a 13       		.uleb128 0x13
 6019 0d3b 90100000 		.4byte	.LASF289
 6020 0d3f 01       		.byte	0x1
 6021 0d40 FB       		.byte	0xfb
 6022 0d41 9A070000 		.4byte	0x79a
 6023 0d45 02       		.byte	0x2
 6024 0d46 91       		.byte	0x91
 6025 0d47 54       		.sleb128 -44
 6026 0d48 13       		.uleb128 0x13
 6027 0d49 AF0F0000 		.4byte	.LASF290
 6028 0d4d 01       		.byte	0x1
 6029 0d4e FC       		.byte	0xfc
 6030 0d4f BF000000 		.4byte	0xbf
 6031 0d53 02       		.byte	0x2
 6032 0d54 91       		.byte	0x91
 6033 0d55 50       		.sleb128 -48
 6034 0d56 13       		.uleb128 0x13
 6035 0d57 5B080000 		.4byte	.LASF291
 6036 0d5b 01       		.byte	0x1
 6037 0d5c FD       		.byte	0xfd
 6038 0d5d 72010000 		.4byte	0x172
 6039 0d61 02       		.byte	0x2
 6040 0d62 91       		.byte	0x91
 6041 0d63 00       		.sleb128 0
 6042 0d64 13       		.uleb128 0x13
 6043 0d65 BD100000 		.4byte	.LASF292
 6044 0d69 01       		.byte	0x1
 6045 0d6a FE       		.byte	0xfe
 6046 0d6b 800C0000 		.4byte	0xc80
 6047 0d6f 02       		.byte	0x2
 6048 0d70 91       		.byte	0x91
 6049 0d71 04       		.sleb128 4
 6050 0d72 13       		.uleb128 0x13
 6051 0d73 9E090000 		.4byte	.LASF293
 6052 0d77 01       		.byte	0x1
 6053 0d78 FF       		.byte	0xff
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 152


 6054 0d79 D7000000 		.4byte	0xd7
 6055 0d7d 02       		.byte	0x2
 6056 0d7e 91       		.byte	0x91
 6057 0d7f 08       		.sleb128 8
 6058 0d80 15       		.uleb128 0x15
 6059 0d81 500D0000 		.4byte	.LASF294
 6060 0d85 01       		.byte	0x1
 6061 0d86 0001     		.2byte	0x100
 6062 0d88 D7000000 		.4byte	0xd7
 6063 0d8c 02       		.byte	0x2
 6064 0d8d 91       		.byte	0x91
 6065 0d8e 0C       		.sleb128 12
 6066 0d8f 15       		.uleb128 0x15
 6067 0d90 09130000 		.4byte	.LASF295
 6068 0d94 01       		.byte	0x1
 6069 0d95 0101     		.2byte	0x101
 6070 0d97 30010000 		.4byte	0x130
 6071 0d9b 02       		.byte	0x2
 6072 0d9c 91       		.byte	0x91
 6073 0d9d 10       		.sleb128 16
 6074 0d9e 15       		.uleb128 0x15
 6075 0d9f E3080000 		.4byte	.LASF296
 6076 0da3 01       		.byte	0x1
 6077 0da4 0201     		.2byte	0x102
 6078 0da6 B4010000 		.4byte	0x1b4
 6079 0daa 02       		.byte	0x2
 6080 0dab 91       		.byte	0x91
 6081 0dac 14       		.sleb128 20
 6082 0dad 15       		.uleb128 0x15
 6083 0dae E20D0000 		.4byte	.LASF297
 6084 0db2 01       		.byte	0x1
 6085 0db3 0301     		.2byte	0x103
 6086 0db5 BF000000 		.4byte	0xbf
 6087 0db9 02       		.byte	0x2
 6088 0dba 91       		.byte	0x91
 6089 0dbb 18       		.sleb128 24
 6090 0dbc 16       		.uleb128 0x16
 6091 0dbd 6F707400 		.ascii	"opt\000"
 6092 0dc1 01       		.byte	0x1
 6093 0dc2 0401     		.2byte	0x104
 6094 0dc4 67010000 		.4byte	0x167
 6095 0dc8 02       		.byte	0x2
 6096 0dc9 91       		.byte	0x91
 6097 0dca 1C       		.sleb128 28
 6098 0dcb 15       		.uleb128 0x15
 6099 0dcc F9070000 		.4byte	.LASF283
 6100 0dd0 01       		.byte	0x1
 6101 0dd1 0501     		.2byte	0x105
 6102 0dd3 FF0C0000 		.4byte	0xcff
 6103 0dd7 02       		.byte	0x2
 6104 0dd8 91       		.byte	0x91
 6105 0dd9 20       		.sleb128 32
 6106 0dda 17       		.uleb128 0x17
 6107 0ddb 6900     		.ascii	"i\000"
 6108 0ddd 01       		.byte	0x1
 6109 0dde 0701     		.2byte	0x107
 6110 0de0 D7000000 		.4byte	0xd7
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 153


 6111 0de4 02       		.byte	0x2
 6112 0de5 91       		.byte	0x91
 6113 0de6 64       		.sleb128 -28
 6114 0de7 18       		.uleb128 0x18
 6115 0de8 F5010000 		.4byte	.LASF298
 6116 0dec 01       		.byte	0x1
 6117 0ded 0901     		.2byte	0x109
 6118 0def 88010000 		.4byte	0x188
 6119 0df3 02       		.byte	0x2
 6120 0df4 91       		.byte	0x91
 6121 0df5 6B       		.sleb128 -21
 6122 0df6 18       		.uleb128 0x18
 6123 0df7 0D0A0000 		.4byte	.LASF299
 6124 0dfb 01       		.byte	0x1
 6125 0dfc 0F01     		.2byte	0x10f
 6126 0dfe 800C0000 		.4byte	0xc80
 6127 0e02 02       		.byte	0x2
 6128 0e03 91       		.byte	0x91
 6129 0e04 6C       		.sleb128 -20
 6130 0e05 18       		.uleb128 0x18
 6131 0e06 AB080000 		.4byte	.LASF300
 6132 0e0a 01       		.byte	0x1
 6133 0e0b 1001     		.2byte	0x110
 6134 0e0d 800C0000 		.4byte	0xc80
 6135 0e11 02       		.byte	0x2
 6136 0e12 91       		.byte	0x91
 6137 0e13 70       		.sleb128 -16
 6138 0e14 18       		.uleb128 0x18
 6139 0e15 EF040000 		.4byte	.LASF285
 6140 0e19 01       		.byte	0x1
 6141 0e1a 1101     		.2byte	0x111
 6142 0e1c E2000000 		.4byte	0xe2
 6143 0e20 02       		.byte	0x2
 6144 0e21 91       		.byte	0x91
 6145 0e22 74       		.sleb128 -12
 6146 0e23 00       		.byte	0x0
 6147 0e24 19       		.uleb128 0x19
 6148 0e25 01       		.byte	0x1
 6149 0e26 980F0000 		.4byte	.LASF301
 6150 0e2a 01       		.byte	0x1
 6151 0e2b CC01     		.2byte	0x1cc
 6152 0e2d 01       		.byte	0x1
 6153 0e2e 00000000 		.4byte	.LFB2
 6154 0e32 50010000 		.4byte	.LFE2
 6155 0e36 6E000000 		.4byte	.LLST2
 6156 0e3a 6C0E0000 		.4byte	0xe6c
 6157 0e3e 15       		.uleb128 0x15
 6158 0e3f 070A0000 		.4byte	.LASF281
 6159 0e43 01       		.byte	0x1
 6160 0e44 CC01     		.2byte	0x1cc
 6161 0e46 620C0000 		.4byte	0xc62
 6162 0e4a 02       		.byte	0x2
 6163 0e4b 91       		.byte	0x91
 6164 0e4c 6C       		.sleb128 -20
 6165 0e4d 15       		.uleb128 0x15
 6166 0e4e F9070000 		.4byte	.LASF283
 6167 0e52 01       		.byte	0x1
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 154


 6168 0e53 CD01     		.2byte	0x1cd
 6169 0e55 FF0C0000 		.4byte	0xcff
 6170 0e59 02       		.byte	0x2
 6171 0e5a 91       		.byte	0x91
 6172 0e5b 68       		.sleb128 -24
 6173 0e5c 18       		.uleb128 0x18
 6174 0e5d EF040000 		.4byte	.LASF285
 6175 0e61 01       		.byte	0x1
 6176 0e62 CF01     		.2byte	0x1cf
 6177 0e64 E2000000 		.4byte	0xe2
 6178 0e68 02       		.byte	0x2
 6179 0e69 91       		.byte	0x91
 6180 0e6a 74       		.sleb128 -12
 6181 0e6b 00       		.byte	0x0
 6182 0e6c 1A       		.uleb128 0x1a
 6183 0e6d 01       		.byte	0x1
 6184 0e6e BB070000 		.4byte	.LASF303
 6185 0e72 01       		.byte	0x1
 6186 0e73 5202     		.2byte	0x252
 6187 0e75 01       		.byte	0x1
 6188 0e76 30010000 		.4byte	0x130
 6189 0e7a 00000000 		.4byte	.LFB3
 6190 0e7e 7E000000 		.4byte	.LFE3
 6191 0e82 A5000000 		.4byte	.LLST3
 6192 0e86 C70E0000 		.4byte	0xec7
 6193 0e8a 15       		.uleb128 0x15
 6194 0e8b 070A0000 		.4byte	.LASF281
 6195 0e8f 01       		.byte	0x1
 6196 0e90 5202     		.2byte	0x252
 6197 0e92 620C0000 		.4byte	0xc62
 6198 0e96 02       		.byte	0x2
 6199 0e97 91       		.byte	0x91
 6200 0e98 6C       		.sleb128 -20
 6201 0e99 15       		.uleb128 0x15
 6202 0e9a F9070000 		.4byte	.LASF283
 6203 0e9e 01       		.byte	0x1
 6204 0e9f 5302     		.2byte	0x253
 6205 0ea1 FF0C0000 		.4byte	0xcff
 6206 0ea5 02       		.byte	0x2
 6207 0ea6 91       		.byte	0x91
 6208 0ea7 68       		.sleb128 -24
 6209 0ea8 18       		.uleb128 0x18
 6210 0ea9 C0120000 		.4byte	.LASF302
 6211 0ead 01       		.byte	0x1
 6212 0eae 5502     		.2byte	0x255
 6213 0eb0 30010000 		.4byte	0x130
 6214 0eb4 02       		.byte	0x2
 6215 0eb5 91       		.byte	0x91
 6216 0eb6 72       		.sleb128 -14
 6217 0eb7 18       		.uleb128 0x18
 6218 0eb8 EF040000 		.4byte	.LASF285
 6219 0ebc 01       		.byte	0x1
 6220 0ebd 5602     		.2byte	0x256
 6221 0ebf E2000000 		.4byte	0xe2
 6222 0ec3 02       		.byte	0x2
 6223 0ec4 91       		.byte	0x91
 6224 0ec5 74       		.sleb128 -12
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 155


 6225 0ec6 00       		.byte	0x0
 6226 0ec7 1A       		.uleb128 0x1a
 6227 0ec8 01       		.byte	0x1
 6228 0ec9 EC030000 		.4byte	.LASF304
 6229 0ecd 01       		.byte	0x1
 6230 0ece A002     		.2byte	0x2a0
 6231 0ed0 01       		.byte	0x1
 6232 0ed1 BF000000 		.4byte	0xbf
 6233 0ed5 00000000 		.4byte	.LFB4
 6234 0ed9 72020000 		.4byte	.LFE4
 6235 0edd DC000000 		.4byte	.LLST4
 6236 0ee1 5E0F0000 		.4byte	0xf5e
 6237 0ee5 15       		.uleb128 0x15
 6238 0ee6 27110000 		.4byte	.LASF305
 6239 0eea 01       		.byte	0x1
 6240 0eeb A002     		.2byte	0x2a0
 6241 0eed B4010000 		.4byte	0x1b4
 6242 0ef1 02       		.byte	0x2
 6243 0ef2 91       		.byte	0x91
 6244 0ef3 5C       		.sleb128 -36
 6245 0ef4 16       		.uleb128 0x16
 6246 0ef5 6F707400 		.ascii	"opt\000"
 6247 0ef9 01       		.byte	0x1
 6248 0efa A102     		.2byte	0x2a1
 6249 0efc 67010000 		.4byte	0x167
 6250 0f00 02       		.byte	0x2
 6251 0f01 91       		.byte	0x91
 6252 0f02 5A       		.sleb128 -38
 6253 0f03 15       		.uleb128 0x15
 6254 0f04 67020000 		.4byte	.LASF306
 6255 0f08 01       		.byte	0x1
 6256 0f09 A202     		.2byte	0x2a2
 6257 0f0b 5E0F0000 		.4byte	0xf5e
 6258 0f0f 02       		.byte	0x2
 6259 0f10 91       		.byte	0x91
 6260 0f11 54       		.sleb128 -44
 6261 0f12 15       		.uleb128 0x15
 6262 0f13 130C0000 		.4byte	.LASF307
 6263 0f17 01       		.byte	0x1
 6264 0f18 A302     		.2byte	0x2a3
 6265 0f1a 640F0000 		.4byte	0xf64
 6266 0f1e 02       		.byte	0x2
 6267 0f1f 91       		.byte	0x91
 6268 0f20 50       		.sleb128 -48
 6269 0f21 15       		.uleb128 0x15
 6270 0f22 F9070000 		.4byte	.LASF283
 6271 0f26 01       		.byte	0x1
 6272 0f27 A402     		.2byte	0x2a4
 6273 0f29 FF0C0000 		.4byte	0xcff
 6274 0f2d 02       		.byte	0x2
 6275 0f2e 91       		.byte	0x91
 6276 0f2f 00       		.sleb128 0
 6277 0f30 18       		.uleb128 0x18
 6278 0f31 7E140000 		.4byte	.LASF308
 6279 0f35 01       		.byte	0x1
 6280 0f36 A602     		.2byte	0x2a6
 6281 0f38 6A0F0000 		.4byte	0xf6a
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 156


 6282 0f3c 02       		.byte	0x2
 6283 0f3d 91       		.byte	0x91
 6284 0f3e 64       		.sleb128 -28
 6285 0f3f 18       		.uleb128 0x18
 6286 0f40 97030000 		.4byte	.LASF309
 6287 0f44 01       		.byte	0x1
 6288 0f45 A702     		.2byte	0x2a7
 6289 0f47 BF000000 		.4byte	0xbf
 6290 0f4b 02       		.byte	0x2
 6291 0f4c 91       		.byte	0x91
 6292 0f4d 68       		.sleb128 -24
 6293 0f4e 18       		.uleb128 0x18
 6294 0f4f EF040000 		.4byte	.LASF285
 6295 0f53 01       		.byte	0x1
 6296 0f54 A802     		.2byte	0x2a8
 6297 0f56 E2000000 		.4byte	0xe2
 6298 0f5a 02       		.byte	0x2
 6299 0f5b 91       		.byte	0x91
 6300 0f5c 6C       		.sleb128 -20
 6301 0f5d 00       		.byte	0x0
 6302 0f5e 05       		.uleb128 0x5
 6303 0f5f 04       		.byte	0x4
 6304 0f60 3B010000 		.4byte	0x13b
 6305 0f64 05       		.uleb128 0x5
 6306 0f65 04       		.byte	0x4
 6307 0f66 F9000000 		.4byte	0xf9
 6308 0f6a 05       		.uleb128 0x5
 6309 0f6b 04       		.byte	0x4
 6310 0f6c 35070000 		.4byte	0x735
 6311 0f70 1A       		.uleb128 0x1a
 6312 0f71 01       		.byte	0x1
 6313 0f72 6E100000 		.4byte	.LASF310
 6314 0f76 01       		.byte	0x1
 6315 0f77 3C03     		.2byte	0x33c
 6316 0f79 01       		.byte	0x1
 6317 0f7a 3B000000 		.4byte	0x3b
 6318 0f7e 00000000 		.4byte	.LFB5
 6319 0f82 D8000000 		.4byte	.LFE5
 6320 0f86 13010000 		.4byte	.LLST5
 6321 0f8a D90F0000 		.4byte	0xfd9
 6322 0f8e 15       		.uleb128 0x15
 6323 0f8f 070A0000 		.4byte	.LASF281
 6324 0f93 01       		.byte	0x1
 6325 0f94 3C03     		.2byte	0x33c
 6326 0f96 620C0000 		.4byte	0xc62
 6327 0f9a 02       		.byte	0x2
 6328 0f9b 91       		.byte	0x91
 6329 0f9c 6C       		.sleb128 -20
 6330 0f9d 16       		.uleb128 0x16
 6331 0f9e 6F707400 		.ascii	"opt\000"
 6332 0fa2 01       		.byte	0x1
 6333 0fa3 3D03     		.2byte	0x33d
 6334 0fa5 67010000 		.4byte	0x167
 6335 0fa9 02       		.byte	0x2
 6336 0faa 91       		.byte	0x91
 6337 0fab 6A       		.sleb128 -22
 6338 0fac 15       		.uleb128 0x15
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 157


 6339 0fad F9070000 		.4byte	.LASF283
 6340 0fb1 01       		.byte	0x1
 6341 0fb2 3E03     		.2byte	0x33e
 6342 0fb4 FF0C0000 		.4byte	0xcff
 6343 0fb8 02       		.byte	0x2
 6344 0fb9 91       		.byte	0x91
 6345 0fba 64       		.sleb128 -28
 6346 0fbb 17       		.uleb128 0x17
 6347 0fbc 747300   		.ascii	"ts\000"
 6348 0fbf 01       		.byte	0x1
 6349 0fc0 4003     		.2byte	0x340
 6350 0fc2 F9000000 		.4byte	0xf9
 6351 0fc6 02       		.byte	0x2
 6352 0fc7 91       		.byte	0x91
 6353 0fc8 70       		.sleb128 -16
 6354 0fc9 18       		.uleb128 0x18
 6355 0fca EF040000 		.4byte	.LASF285
 6356 0fce 01       		.byte	0x1
 6357 0fcf 4103     		.2byte	0x341
 6358 0fd1 E2000000 		.4byte	0xe2
 6359 0fd5 02       		.byte	0x2
 6360 0fd6 91       		.byte	0x91
 6361 0fd7 74       		.sleb128 -12
 6362 0fd8 00       		.byte	0x0
 6363 0fd9 19       		.uleb128 0x19
 6364 0fda 01       		.byte	0x1
 6365 0fdb D60D0000 		.4byte	.LASF311
 6366 0fdf 01       		.byte	0x1
 6367 0fe0 A203     		.2byte	0x3a2
 6368 0fe2 01       		.byte	0x1
 6369 0fe3 00000000 		.4byte	.LFB6
 6370 0fe7 5C000000 		.4byte	.LFE6
 6371 0feb 4A010000 		.4byte	.LLST6
 6372 0fef 4D100000 		.4byte	0x104d
 6373 0ff3 15       		.uleb128 0x15
 6374 0ff4 070A0000 		.4byte	.LASF281
 6375 0ff8 01       		.byte	0x1
 6376 0ff9 A203     		.2byte	0x3a2
 6377 0ffb 620C0000 		.4byte	0xc62
 6378 0fff 02       		.byte	0x2
 6379 1000 91       		.byte	0x91
 6380 1001 6C       		.sleb128 -20
 6381 1002 15       		.uleb128 0x15
 6382 1003 97030000 		.4byte	.LASF309
 6383 1007 01       		.byte	0x1
 6384 1008 A303     		.2byte	0x3a3
 6385 100a BF000000 		.4byte	0xbf
 6386 100e 02       		.byte	0x2
 6387 100f 91       		.byte	0x91
 6388 1010 68       		.sleb128 -24
 6389 1011 15       		.uleb128 0x15
 6390 1012 2D120000 		.4byte	.LASF312
 6391 1016 01       		.byte	0x1
 6392 1017 A403     		.2byte	0x3a4
 6393 1019 3B010000 		.4byte	0x13b
 6394 101d 02       		.byte	0x2
 6395 101e 91       		.byte	0x91
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 158


 6396 101f 66       		.sleb128 -26
 6397 1020 16       		.uleb128 0x16
 6398 1021 6F707400 		.ascii	"opt\000"
 6399 1025 01       		.byte	0x1
 6400 1026 A503     		.2byte	0x3a5
 6401 1028 67010000 		.4byte	0x167
 6402 102c 02       		.byte	0x2
 6403 102d 91       		.byte	0x91
 6404 102e 64       		.sleb128 -28
 6405 102f 15       		.uleb128 0x15
 6406 1030 F9070000 		.4byte	.LASF283
 6407 1034 01       		.byte	0x1
 6408 1035 A603     		.2byte	0x3a6
 6409 1037 FF0C0000 		.4byte	0xcff
 6410 103b 02       		.byte	0x2
 6411 103c 91       		.byte	0x91
 6412 103d 00       		.sleb128 0
 6413 103e 17       		.uleb128 0x17
 6414 103f 747300   		.ascii	"ts\000"
 6415 1042 01       		.byte	0x1
 6416 1043 A803     		.2byte	0x3a8
 6417 1045 F9000000 		.4byte	0xf9
 6418 1049 02       		.byte	0x2
 6419 104a 91       		.byte	0x91
 6420 104b 74       		.sleb128 -12
 6421 104c 00       		.byte	0x0
 6422 104d 1A       		.uleb128 0x1a
 6423 104e 01       		.byte	0x1
 6424 104f 67090000 		.4byte	.LASF313
 6425 1053 01       		.byte	0x1
 6426 1054 F303     		.2byte	0x3f3
 6427 1056 01       		.byte	0x1
 6428 1057 7D010000 		.4byte	0x17d
 6429 105b 00000000 		.4byte	.LFB7
 6430 105f 6E000000 		.4byte	.LFE7
 6431 1063 81010000 		.4byte	.LLST7
 6432 1067 B6100000 		.4byte	0x10b6
 6433 106b 15       		.uleb128 0x15
 6434 106c 070A0000 		.4byte	.LASF281
 6435 1070 01       		.byte	0x1
 6436 1071 F303     		.2byte	0x3f3
 6437 1073 620C0000 		.4byte	0xc62
 6438 1077 02       		.byte	0x2
 6439 1078 91       		.byte	0x91
 6440 1079 6C       		.sleb128 -20
 6441 107a 16       		.uleb128 0x16
 6442 107b 696400   		.ascii	"id\000"
 6443 107e 01       		.byte	0x1
 6444 107f F403     		.2byte	0x3f4
 6445 1081 88010000 		.4byte	0x188
 6446 1085 02       		.byte	0x2
 6447 1086 91       		.byte	0x91
 6448 1087 6B       		.sleb128 -21
 6449 1088 15       		.uleb128 0x15
 6450 1089 F9070000 		.4byte	.LASF283
 6451 108d 01       		.byte	0x1
 6452 108e F503     		.2byte	0x3f5
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 159


 6453 1090 FF0C0000 		.4byte	0xcff
 6454 1094 02       		.byte	0x2
 6455 1095 91       		.byte	0x91
 6456 1096 64       		.sleb128 -28
 6457 1097 18       		.uleb128 0x18
 6458 1098 11060000 		.4byte	.LASF314
 6459 109c 01       		.byte	0x1
 6460 109d F703     		.2byte	0x3f7
 6461 109f 7D010000 		.4byte	0x17d
 6462 10a3 02       		.byte	0x2
 6463 10a4 91       		.byte	0x91
 6464 10a5 70       		.sleb128 -16
 6465 10a6 18       		.uleb128 0x18
 6466 10a7 EF040000 		.4byte	.LASF285
 6467 10ab 01       		.byte	0x1
 6468 10ac F803     		.2byte	0x3f8
 6469 10ae E2000000 		.4byte	0xe2
 6470 10b2 02       		.byte	0x2
 6471 10b3 91       		.byte	0x91
 6472 10b4 74       		.sleb128 -12
 6473 10b5 00       		.byte	0x0
 6474 10b6 1A       		.uleb128 0x1a
 6475 10b7 01       		.byte	0x1
 6476 10b8 0F090000 		.4byte	.LASF315
 6477 10bc 01       		.byte	0x1
 6478 10bd 2804     		.2byte	0x428
 6479 10bf 01       		.byte	0x1
 6480 10c0 88010000 		.4byte	0x188
 6481 10c4 00000000 		.4byte	.LFB8
 6482 10c8 78000000 		.4byte	.LFE8
 6483 10cc B8010000 		.4byte	.LLST8
 6484 10d0 01110000 		.4byte	0x1101
 6485 10d4 15       		.uleb128 0x15
 6486 10d5 F9070000 		.4byte	.LASF283
 6487 10d9 01       		.byte	0x1
 6488 10da 2804     		.2byte	0x428
 6489 10dc FF0C0000 		.4byte	0xcff
 6490 10e0 02       		.byte	0x2
 6491 10e1 91       		.byte	0x91
 6492 10e2 6C       		.sleb128 -20
 6493 10e3 17       		.uleb128 0x17
 6494 10e4 696400   		.ascii	"id\000"
 6495 10e7 01       		.byte	0x1
 6496 10e8 2A04     		.2byte	0x42a
 6497 10ea 88010000 		.4byte	0x188
 6498 10ee 02       		.byte	0x2
 6499 10ef 91       		.byte	0x91
 6500 10f0 73       		.sleb128 -13
 6501 10f1 18       		.uleb128 0x18
 6502 10f2 EF040000 		.4byte	.LASF285
 6503 10f6 01       		.byte	0x1
 6504 10f7 2B04     		.2byte	0x42b
 6505 10f9 E2000000 		.4byte	0xe2
 6506 10fd 02       		.byte	0x2
 6507 10fe 91       		.byte	0x91
 6508 10ff 74       		.sleb128 -12
 6509 1100 00       		.byte	0x0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 160


 6510 1101 19       		.uleb128 0x19
 6511 1102 01       		.byte	0x1
 6512 1103 80040000 		.4byte	.LASF316
 6513 1107 01       		.byte	0x1
 6514 1108 6004     		.2byte	0x460
 6515 110a 01       		.byte	0x1
 6516 110b 00000000 		.4byte	.LFB9
 6517 110f 68000000 		.4byte	.LFE9
 6518 1113 EF010000 		.4byte	.LLST9
 6519 1117 66110000 		.4byte	0x1166
 6520 111b 15       		.uleb128 0x15
 6521 111c 070A0000 		.4byte	.LASF281
 6522 1120 01       		.byte	0x1
 6523 1121 6004     		.2byte	0x460
 6524 1123 620C0000 		.4byte	0xc62
 6525 1127 02       		.byte	0x2
 6526 1128 91       		.byte	0x91
 6527 1129 6C       		.sleb128 -20
 6528 112a 16       		.uleb128 0x16
 6529 112b 696400   		.ascii	"id\000"
 6530 112e 01       		.byte	0x1
 6531 112f 6104     		.2byte	0x461
 6532 1131 88010000 		.4byte	0x188
 6533 1135 02       		.byte	0x2
 6534 1136 91       		.byte	0x91
 6535 1137 6B       		.sleb128 -21
 6536 1138 15       		.uleb128 0x15
 6537 1139 11060000 		.4byte	.LASF314
 6538 113d 01       		.byte	0x1
 6539 113e 6204     		.2byte	0x462
 6540 1140 7D010000 		.4byte	0x17d
 6541 1144 02       		.byte	0x2
 6542 1145 91       		.byte	0x91
 6543 1146 64       		.sleb128 -28
 6544 1147 15       		.uleb128 0x15
 6545 1148 F9070000 		.4byte	.LASF283
 6546 114c 01       		.byte	0x1
 6547 114d 6304     		.2byte	0x463
 6548 114f FF0C0000 		.4byte	0xcff
 6549 1153 02       		.byte	0x2
 6550 1154 91       		.byte	0x91
 6551 1155 60       		.sleb128 -32
 6552 1156 18       		.uleb128 0x18
 6553 1157 EF040000 		.4byte	.LASF285
 6554 115b 01       		.byte	0x1
 6555 115c 6504     		.2byte	0x465
 6556 115e E2000000 		.4byte	0xe2
 6557 1162 02       		.byte	0x2
 6558 1163 91       		.byte	0x91
 6559 1164 74       		.sleb128 -12
 6560 1165 00       		.byte	0x0
 6561 1166 19       		.uleb128 0x19
 6562 1167 01       		.byte	0x1
 6563 1168 8D040000 		.4byte	.LASF317
 6564 116c 01       		.byte	0x1
 6565 116d 9804     		.2byte	0x498
 6566 116f 01       		.byte	0x1
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 161


 6567 1170 00000000 		.4byte	.LFB10
 6568 1174 6C000000 		.4byte	.LFE10
 6569 1178 26020000 		.4byte	.LLST10
 6570 117c AE110000 		.4byte	0x11ae
 6571 1180 15       		.uleb128 0x15
 6572 1181 070A0000 		.4byte	.LASF281
 6573 1185 01       		.byte	0x1
 6574 1186 9804     		.2byte	0x498
 6575 1188 620C0000 		.4byte	0xc62
 6576 118c 02       		.byte	0x2
 6577 118d 91       		.byte	0x91
 6578 118e 6C       		.sleb128 -20
 6579 118f 15       		.uleb128 0x15
 6580 1190 F9070000 		.4byte	.LASF283
 6581 1194 01       		.byte	0x1
 6582 1195 9904     		.2byte	0x499
 6583 1197 FF0C0000 		.4byte	0xcff
 6584 119b 02       		.byte	0x2
 6585 119c 91       		.byte	0x91
 6586 119d 68       		.sleb128 -24
 6587 119e 18       		.uleb128 0x18
 6588 119f EF040000 		.4byte	.LASF285
 6589 11a3 01       		.byte	0x1
 6590 11a4 9B04     		.2byte	0x49b
 6591 11a6 E2000000 		.4byte	0xe2
 6592 11aa 02       		.byte	0x2
 6593 11ab 91       		.byte	0x91
 6594 11ac 74       		.sleb128 -12
 6595 11ad 00       		.byte	0x0
 6596 11ae 1A       		.uleb128 0x1a
 6597 11af 01       		.byte	0x1
 6598 11b0 46100000 		.4byte	.LASF318
 6599 11b4 01       		.byte	0x1
 6600 11b5 EE04     		.2byte	0x4ee
 6601 11b7 01       		.byte	0x1
 6602 11b8 93010000 		.4byte	0x193
 6603 11bc 00000000 		.4byte	.LFB11
 6604 11c0 78020000 		.4byte	.LFE11
 6605 11c4 5D020000 		.4byte	.LLST11
 6606 11c8 27120000 		.4byte	0x1227
 6607 11cc 15       		.uleb128 0x15
 6608 11cd 27110000 		.4byte	.LASF305
 6609 11d1 01       		.byte	0x1
 6610 11d2 EE04     		.2byte	0x4ee
 6611 11d4 B4010000 		.4byte	0x1b4
 6612 11d8 02       		.byte	0x2
 6613 11d9 91       		.byte	0x91
 6614 11da 64       		.sleb128 -28
 6615 11db 16       		.uleb128 0x16
 6616 11dc 6F707400 		.ascii	"opt\000"
 6617 11e0 01       		.byte	0x1
 6618 11e1 EF04     		.2byte	0x4ef
 6619 11e3 67010000 		.4byte	0x167
 6620 11e7 02       		.byte	0x2
 6621 11e8 91       		.byte	0x91
 6622 11e9 62       		.sleb128 -30
 6623 11ea 15       		.uleb128 0x15
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 162


 6624 11eb 130C0000 		.4byte	.LASF307
 6625 11ef 01       		.byte	0x1
 6626 11f0 F004     		.2byte	0x4f0
 6627 11f2 640F0000 		.4byte	0xf64
 6628 11f6 02       		.byte	0x2
 6629 11f7 91       		.byte	0x91
 6630 11f8 5C       		.sleb128 -36
 6631 11f9 15       		.uleb128 0x15
 6632 11fa F9070000 		.4byte	.LASF283
 6633 11fe 01       		.byte	0x1
 6634 11ff F104     		.2byte	0x4f1
 6635 1201 FF0C0000 		.4byte	0xcff
 6636 1205 02       		.byte	0x2
 6637 1206 91       		.byte	0x91
 6638 1207 58       		.sleb128 -40
 6639 1208 17       		.uleb128 0x17
 6640 1209 63747200 		.ascii	"ctr\000"
 6641 120d 01       		.byte	0x1
 6642 120e F304     		.2byte	0x4f3
 6643 1210 93010000 		.4byte	0x193
 6644 1214 02       		.byte	0x2
 6645 1215 91       		.byte	0x91
 6646 1216 68       		.sleb128 -24
 6647 1217 18       		.uleb128 0x18
 6648 1218 EF040000 		.4byte	.LASF285
 6649 121c 01       		.byte	0x1
 6650 121d F404     		.2byte	0x4f4
 6651 121f E2000000 		.4byte	0xe2
 6652 1223 02       		.byte	0x2
 6653 1224 91       		.byte	0x91
 6654 1225 6C       		.sleb128 -20
 6655 1226 00       		.byte	0x0
 6656 1227 1A       		.uleb128 0x1a
 6657 1228 01       		.byte	0x1
 6658 1229 C30D0000 		.4byte	.LASF319
 6659 122d 01       		.byte	0x1
 6660 122e 8105     		.2byte	0x581
 6661 1230 01       		.byte	0x1
 6662 1231 3B000000 		.4byte	0x3b
 6663 1235 00000000 		.4byte	.LFB12
 6664 1239 E6000000 		.4byte	.LFE12
 6665 123d 94020000 		.4byte	.LLST12
 6666 1241 90120000 		.4byte	0x1290
 6667 1245 15       		.uleb128 0x15
 6668 1246 070A0000 		.4byte	.LASF281
 6669 124a 01       		.byte	0x1
 6670 124b 8105     		.2byte	0x581
 6671 124d 620C0000 		.4byte	0xc62
 6672 1251 02       		.byte	0x2
 6673 1252 91       		.byte	0x91
 6674 1253 6C       		.sleb128 -20
 6675 1254 16       		.uleb128 0x16
 6676 1255 6F707400 		.ascii	"opt\000"
 6677 1259 01       		.byte	0x1
 6678 125a 8205     		.2byte	0x582
 6679 125c 67010000 		.4byte	0x167
 6680 1260 02       		.byte	0x2
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 163


 6681 1261 91       		.byte	0x91
 6682 1262 6A       		.sleb128 -22
 6683 1263 15       		.uleb128 0x15
 6684 1264 F9070000 		.4byte	.LASF283
 6685 1268 01       		.byte	0x1
 6686 1269 8305     		.2byte	0x583
 6687 126b FF0C0000 		.4byte	0xcff
 6688 126f 02       		.byte	0x2
 6689 1270 91       		.byte	0x91
 6690 1271 64       		.sleb128 -28
 6691 1272 17       		.uleb128 0x17
 6692 1273 747300   		.ascii	"ts\000"
 6693 1276 01       		.byte	0x1
 6694 1277 8505     		.2byte	0x585
 6695 1279 F9000000 		.4byte	0xf9
 6696 127d 02       		.byte	0x2
 6697 127e 91       		.byte	0x91
 6698 127f 70       		.sleb128 -16
 6699 1280 18       		.uleb128 0x18
 6700 1281 EF040000 		.4byte	.LASF285
 6701 1285 01       		.byte	0x1
 6702 1286 8605     		.2byte	0x586
 6703 1288 E2000000 		.4byte	0xe2
 6704 128c 02       		.byte	0x2
 6705 128d 91       		.byte	0x91
 6706 128e 74       		.sleb128 -12
 6707 128f 00       		.byte	0x0
 6708 1290 1A       		.uleb128 0x1a
 6709 1291 01       		.byte	0x1
 6710 1292 90020000 		.4byte	.LASF320
 6711 1296 01       		.byte	0x1
 6712 1297 D905     		.2byte	0x5d9
 6713 1299 01       		.byte	0x1
 6714 129a 93010000 		.4byte	0x193
 6715 129e 00000000 		.4byte	.LFB13
 6716 12a2 4E000000 		.4byte	.LFE13
 6717 12a6 CB020000 		.4byte	.LLST13
 6718 12aa F9120000 		.4byte	0x12f9
 6719 12ae 15       		.uleb128 0x15
 6720 12af 070A0000 		.4byte	.LASF281
 6721 12b3 01       		.byte	0x1
 6722 12b4 D905     		.2byte	0x5d9
 6723 12b6 620C0000 		.4byte	0xc62
 6724 12ba 02       		.byte	0x2
 6725 12bb 91       		.byte	0x91
 6726 12bc 6C       		.sleb128 -20
 6727 12bd 16       		.uleb128 0x16
 6728 12be 6F707400 		.ascii	"opt\000"
 6729 12c2 01       		.byte	0x1
 6730 12c3 DA05     		.2byte	0x5da
 6731 12c5 67010000 		.4byte	0x167
 6732 12c9 02       		.byte	0x2
 6733 12ca 91       		.byte	0x91
 6734 12cb 6A       		.sleb128 -22
 6735 12cc 15       		.uleb128 0x15
 6736 12cd F9070000 		.4byte	.LASF283
 6737 12d1 01       		.byte	0x1
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 164


 6738 12d2 DB05     		.2byte	0x5db
 6739 12d4 FF0C0000 		.4byte	0xcff
 6740 12d8 02       		.byte	0x2
 6741 12d9 91       		.byte	0x91
 6742 12da 64       		.sleb128 -28
 6743 12db 17       		.uleb128 0x17
 6744 12dc 63747200 		.ascii	"ctr\000"
 6745 12e0 01       		.byte	0x1
 6746 12e1 DD05     		.2byte	0x5dd
 6747 12e3 93010000 		.4byte	0x193
 6748 12e7 02       		.byte	0x2
 6749 12e8 91       		.byte	0x91
 6750 12e9 70       		.sleb128 -16
 6751 12ea 17       		.uleb128 0x17
 6752 12eb 747300   		.ascii	"ts\000"
 6753 12ee 01       		.byte	0x1
 6754 12ef DE05     		.2byte	0x5de
 6755 12f1 F9000000 		.4byte	0xf9
 6756 12f5 02       		.byte	0x2
 6757 12f6 91       		.byte	0x91
 6758 12f7 74       		.sleb128 -12
 6759 12f8 00       		.byte	0x0
 6760 12f9 1A       		.uleb128 0x1a
 6761 12fa 01       		.byte	0x1
 6762 12fb 7C060000 		.4byte	.LASF321
 6763 12ff 01       		.byte	0x1
 6764 1300 2206     		.2byte	0x622
 6765 1302 01       		.byte	0x1
 6766 1303 93010000 		.4byte	0x193
 6767 1307 00000000 		.4byte	.LFB14
 6768 130b 6E000000 		.4byte	.LFE14
 6769 130f 02030000 		.4byte	.LLST14
 6770 1313 63130000 		.4byte	0x1363
 6771 1317 15       		.uleb128 0x15
 6772 1318 070A0000 		.4byte	.LASF281
 6773 131c 01       		.byte	0x1
 6774 131d 2206     		.2byte	0x622
 6775 131f 620C0000 		.4byte	0xc62
 6776 1323 02       		.byte	0x2
 6777 1324 91       		.byte	0x91
 6778 1325 6C       		.sleb128 -20
 6779 1326 16       		.uleb128 0x16
 6780 1327 636E7400 		.ascii	"cnt\000"
 6781 132b 01       		.byte	0x1
 6782 132c 2306     		.2byte	0x623
 6783 132e 93010000 		.4byte	0x193
 6784 1332 02       		.byte	0x2
 6785 1333 91       		.byte	0x91
 6786 1334 68       		.sleb128 -24
 6787 1335 15       		.uleb128 0x15
 6788 1336 F9070000 		.4byte	.LASF283
 6789 133a 01       		.byte	0x1
 6790 133b 2406     		.2byte	0x624
 6791 133d FF0C0000 		.4byte	0xcff
 6792 1341 02       		.byte	0x2
 6793 1342 91       		.byte	0x91
 6794 1343 64       		.sleb128 -28
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 165


 6795 1344 17       		.uleb128 0x17
 6796 1345 63747200 		.ascii	"ctr\000"
 6797 1349 01       		.byte	0x1
 6798 134a 2606     		.2byte	0x626
 6799 134c 93010000 		.4byte	0x193
 6800 1350 02       		.byte	0x2
 6801 1351 91       		.byte	0x91
 6802 1352 70       		.sleb128 -16
 6803 1353 18       		.uleb128 0x18
 6804 1354 EF040000 		.4byte	.LASF285
 6805 1358 01       		.byte	0x1
 6806 1359 2706     		.2byte	0x627
 6807 135b E2000000 		.4byte	0xe2
 6808 135f 02       		.byte	0x2
 6809 1360 91       		.byte	0x91
 6810 1361 74       		.sleb128 -12
 6811 1362 00       		.byte	0x0
 6812 1363 19       		.uleb128 0x19
 6813 1364 01       		.byte	0x1
 6814 1365 A20F0000 		.4byte	.LASF322
 6815 1369 01       		.byte	0x1
 6816 136a 5E06     		.2byte	0x65e
 6817 136c 01       		.byte	0x1
 6818 136d 00000000 		.4byte	.LFB15
 6819 1371 0A010000 		.4byte	.LFE15
 6820 1375 39030000 		.4byte	.LLST15
 6821 1379 E7130000 		.4byte	0x13e7
 6822 137d 15       		.uleb128 0x15
 6823 137e 070A0000 		.4byte	.LASF281
 6824 1382 01       		.byte	0x1
 6825 1383 5E06     		.2byte	0x65e
 6826 1385 620C0000 		.4byte	0xc62
 6827 1389 02       		.byte	0x2
 6828 138a 91       		.byte	0x91
 6829 138b 64       		.sleb128 -28
 6830 138c 15       		.uleb128 0x15
 6831 138d 25070000 		.4byte	.LASF323
 6832 1391 01       		.byte	0x1
 6833 1392 5F06     		.2byte	0x65f
 6834 1394 E7130000 		.4byte	0x13e7
 6835 1398 02       		.byte	0x2
 6836 1399 91       		.byte	0x91
 6837 139a 60       		.sleb128 -32
 6838 139b 15       		.uleb128 0x15
 6839 139c EF020000 		.4byte	.LASF324
 6840 13a0 01       		.byte	0x1
 6841 13a1 6006     		.2byte	0x660
 6842 13a3 E7130000 		.4byte	0x13e7
 6843 13a7 02       		.byte	0x2
 6844 13a8 91       		.byte	0x91
 6845 13a9 5C       		.sleb128 -36
 6846 13aa 15       		.uleb128 0x15
 6847 13ab F9070000 		.4byte	.LASF283
 6848 13af 01       		.byte	0x1
 6849 13b0 6106     		.2byte	0x661
 6850 13b2 FF0C0000 		.4byte	0xcff
 6851 13b6 02       		.byte	0x2
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 166


 6852 13b7 91       		.byte	0x91
 6853 13b8 58       		.sleb128 -40
 6854 13b9 18       		.uleb128 0x18
 6855 13ba 1E090000 		.4byte	.LASF325
 6856 13be 01       		.byte	0x1
 6857 13bf 6306     		.2byte	0x663
 6858 13c1 D7000000 		.4byte	0xd7
 6859 13c5 02       		.byte	0x2
 6860 13c6 91       		.byte	0x91
 6861 13c7 6C       		.sleb128 -20
 6862 13c8 18       		.uleb128 0x18
 6863 13c9 9D070000 		.4byte	.LASF326
 6864 13cd 01       		.byte	0x1
 6865 13ce 6406     		.2byte	0x664
 6866 13d0 800C0000 		.4byte	0xc80
 6867 13d4 02       		.byte	0x2
 6868 13d5 91       		.byte	0x91
 6869 13d6 70       		.sleb128 -16
 6870 13d7 18       		.uleb128 0x18
 6871 13d8 EF040000 		.4byte	.LASF285
 6872 13dc 01       		.byte	0x1
 6873 13dd 6506     		.2byte	0x665
 6874 13df E2000000 		.4byte	0xe2
 6875 13e3 02       		.byte	0x2
 6876 13e4 91       		.byte	0x91
 6877 13e5 74       		.sleb128 -12
 6878 13e6 00       		.byte	0x0
 6879 13e7 05       		.uleb128 0x5
 6880 13e8 04       		.byte	0x4
 6881 13e9 D7000000 		.4byte	0xd7
 6882 13ed 19       		.uleb128 0x19
 6883 13ee 01       		.byte	0x1
 6884 13ef 97100000 		.4byte	.LASF327
 6885 13f3 01       		.byte	0x1
 6886 13f4 CA06     		.2byte	0x6ca
 6887 13f6 01       		.byte	0x1
 6888 13f7 00000000 		.4byte	.LFB16
 6889 13fb 4A000000 		.4byte	.LFE16
 6890 13ff 70030000 		.4byte	.LLST16
 6891 1403 26140000 		.4byte	0x1426
 6892 1407 15       		.uleb128 0x15
 6893 1408 070A0000 		.4byte	.LASF281
 6894 140c 01       		.byte	0x1
 6895 140d CA06     		.2byte	0x6ca
 6896 140f 620C0000 		.4byte	0xc62
 6897 1413 02       		.byte	0x2
 6898 1414 91       		.byte	0x91
 6899 1415 74       		.sleb128 -12
 6900 1416 15       		.uleb128 0x15
 6901 1417 F9070000 		.4byte	.LASF283
 6902 141b 01       		.byte	0x1
 6903 141c CB06     		.2byte	0x6cb
 6904 141e FF0C0000 		.4byte	0xcff
 6905 1422 02       		.byte	0x2
 6906 1423 91       		.byte	0x91
 6907 1424 70       		.sleb128 -16
 6908 1425 00       		.byte	0x0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 167


 6909 1426 19       		.uleb128 0x19
 6910 1427 01       		.byte	0x1
 6911 1428 FD140000 		.4byte	.LASF328
 6912 142c 01       		.byte	0x1
 6913 142d 0E07     		.2byte	0x70e
 6914 142f 01       		.byte	0x1
 6915 1430 00000000 		.4byte	.LFB17
 6916 1434 8A000000 		.4byte	.LFE17
 6917 1438 A7030000 		.4byte	.LLST17
 6918 143c 7D140000 		.4byte	0x147d
 6919 1440 15       		.uleb128 0x15
 6920 1441 070A0000 		.4byte	.LASF281
 6921 1445 01       		.byte	0x1
 6922 1446 0E07     		.2byte	0x70e
 6923 1448 620C0000 		.4byte	0xc62
 6924 144c 02       		.byte	0x2
 6925 144d 91       		.byte	0x91
 6926 144e 6C       		.sleb128 -20
 6927 144f 15       		.uleb128 0x15
 6928 1450 E3080000 		.4byte	.LASF296
 6929 1454 01       		.byte	0x1
 6930 1455 0F07     		.2byte	0x70f
 6931 1457 B4010000 		.4byte	0x1b4
 6932 145b 02       		.byte	0x2
 6933 145c 91       		.byte	0x91
 6934 145d 68       		.sleb128 -24
 6935 145e 15       		.uleb128 0x15
 6936 145f F9070000 		.4byte	.LASF283
 6937 1463 01       		.byte	0x1
 6938 1464 1007     		.2byte	0x710
 6939 1466 FF0C0000 		.4byte	0xcff
 6940 146a 02       		.byte	0x2
 6941 146b 91       		.byte	0x91
 6942 146c 64       		.sleb128 -28
 6943 146d 18       		.uleb128 0x18
 6944 146e EF040000 		.4byte	.LASF285
 6945 1472 01       		.byte	0x1
 6946 1473 1207     		.2byte	0x712
 6947 1475 E2000000 		.4byte	0xe2
 6948 1479 02       		.byte	0x2
 6949 147a 91       		.byte	0x91
 6950 147b 74       		.sleb128 -12
 6951 147c 00       		.byte	0x0
 6952 147d 19       		.uleb128 0x19
 6953 147e 01       		.byte	0x1
 6954 147f 0F0E0000 		.4byte	.LASF329
 6955 1483 01       		.byte	0x1
 6956 1484 4607     		.2byte	0x746
 6957 1486 01       		.byte	0x1
 6958 1487 00000000 		.4byte	.LFB18
 6959 148b 62000000 		.4byte	.LFE18
 6960 148f DE030000 		.4byte	.LLST18
 6961 1493 A7140000 		.4byte	0x14a7
 6962 1497 15       		.uleb128 0x15
 6963 1498 070A0000 		.4byte	.LASF281
 6964 149c 01       		.byte	0x1
 6965 149d 4607     		.2byte	0x746
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 168


 6966 149f 620C0000 		.4byte	0xc62
 6967 14a3 02       		.byte	0x2
 6968 14a4 91       		.byte	0x91
 6969 14a5 74       		.sleb128 -12
 6970 14a6 00       		.byte	0x0
 6971 14a7 19       		.uleb128 0x19
 6972 14a8 01       		.byte	0x1
 6973 14a9 D50E0000 		.4byte	.LASF330
 6974 14ad 01       		.byte	0x1
 6975 14ae 5407     		.2byte	0x754
 6976 14b0 01       		.byte	0x1
 6977 14b1 00000000 		.4byte	.LFB19
 6978 14b5 90000000 		.4byte	.LFE19
 6979 14b9 15040000 		.4byte	.LLST19
 6980 14bd EF140000 		.4byte	0x14ef
 6981 14c1 15       		.uleb128 0x15
 6982 14c2 070A0000 		.4byte	.LASF281
 6983 14c6 01       		.byte	0x1
 6984 14c7 5407     		.2byte	0x754
 6985 14c9 620C0000 		.4byte	0xc62
 6986 14cd 02       		.byte	0x2
 6987 14ce 91       		.byte	0x91
 6988 14cf 6C       		.sleb128 -20
 6989 14d0 18       		.uleb128 0x18
 6990 14d1 59040000 		.4byte	.LASF331
 6991 14d5 01       		.byte	0x1
 6992 14d6 5607     		.2byte	0x756
 6993 14d8 620C0000 		.4byte	0xc62
 6994 14dc 02       		.byte	0x2
 6995 14dd 91       		.byte	0x91
 6996 14de 70       		.sleb128 -16
 6997 14df 18       		.uleb128 0x18
 6998 14e0 680C0000 		.4byte	.LASF332
 6999 14e4 01       		.byte	0x1
 7000 14e5 5707     		.2byte	0x757
 7001 14e7 620C0000 		.4byte	0xc62
 7002 14eb 02       		.byte	0x2
 7003 14ec 91       		.byte	0x91
 7004 14ed 74       		.sleb128 -12
 7005 14ee 00       		.byte	0x0
 7006 14ef 19       		.uleb128 0x19
 7007 14f0 01       		.byte	0x1
 7008 14f1 2A0F0000 		.4byte	.LASF333
 7009 14f5 01       		.byte	0x1
 7010 14f6 8307     		.2byte	0x783
 7011 14f8 01       		.byte	0x1
 7012 14f9 00000000 		.4byte	.LFB20
 7013 14fd 44000000 		.4byte	.LFE20
 7014 1501 4C040000 		.4byte	.LLST20
 7015 1505 19150000 		.4byte	0x1519
 7016 1509 15       		.uleb128 0x15
 7017 150a F9070000 		.4byte	.LASF283
 7018 150e 01       		.byte	0x1
 7019 150f 8307     		.2byte	0x783
 7020 1511 FF0C0000 		.4byte	0xcff
 7021 1515 02       		.byte	0x2
 7022 1516 91       		.byte	0x91
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 169


 7023 1517 74       		.sleb128 -12
 7024 1518 00       		.byte	0x0
 7025 1519 19       		.uleb128 0x19
 7026 151a 01       		.byte	0x1
 7027 151b 3B0B0000 		.4byte	.LASF334
 7028 151f 01       		.byte	0x1
 7029 1520 A507     		.2byte	0x7a5
 7030 1522 01       		.byte	0x1
 7031 1523 00000000 		.4byte	.LFB21
 7032 1527 04020000 		.4byte	.LFE21
 7033 152b 83040000 		.4byte	.LLST21
 7034 152f 60150000 		.4byte	0x1560
 7035 1533 15       		.uleb128 0x15
 7036 1534 070A0000 		.4byte	.LASF281
 7037 1538 01       		.byte	0x1
 7038 1539 A507     		.2byte	0x7a5
 7039 153b 620C0000 		.4byte	0xc62
 7040 153f 02       		.byte	0x2
 7041 1540 91       		.byte	0x91
 7042 1541 6C       		.sleb128 -20
 7043 1542 18       		.uleb128 0x18
 7044 1543 81070000 		.4byte	.LASF335
 7045 1547 01       		.byte	0x1
 7046 1548 A807     		.2byte	0x7a8
 7047 154a 88010000 		.4byte	0x188
 7048 154e 02       		.byte	0x2
 7049 154f 91       		.byte	0x91
 7050 1550 73       		.sleb128 -13
 7051 1551 17       		.uleb128 0x17
 7052 1552 747300   		.ascii	"ts\000"
 7053 1555 01       		.byte	0x1
 7054 1556 AE07     		.2byte	0x7ae
 7055 1558 F9000000 		.4byte	0xf9
 7056 155c 02       		.byte	0x2
 7057 155d 91       		.byte	0x91
 7058 155e 74       		.sleb128 -12
 7059 155f 00       		.byte	0x0
 7060 1560 19       		.uleb128 0x19
 7061 1561 01       		.byte	0x1
 7062 1562 48120000 		.4byte	.LASF336
 7063 1566 01       		.byte	0x1
 7064 1567 4F08     		.2byte	0x84f
 7065 1569 01       		.byte	0x1
 7066 156a 00000000 		.4byte	.LFB22
 7067 156e E6000000 		.4byte	.LFE22
 7068 1572 BA040000 		.4byte	.LLST22
 7069 1576 E3150000 		.4byte	0x15e3
 7070 157a 15       		.uleb128 0x15
 7071 157b 070A0000 		.4byte	.LASF281
 7072 157f 01       		.byte	0x1
 7073 1580 4F08     		.2byte	0x84f
 7074 1582 620C0000 		.4byte	0xc62
 7075 1586 02       		.byte	0x2
 7076 1587 91       		.byte	0x91
 7077 1588 6C       		.sleb128 -20
 7078 1589 15       		.uleb128 0x15
 7079 158a 97030000 		.4byte	.LASF309
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 170


 7080 158e 01       		.byte	0x1
 7081 158f 5008     		.2byte	0x850
 7082 1591 BF000000 		.4byte	0xbf
 7083 1595 02       		.byte	0x2
 7084 1596 91       		.byte	0x91
 7085 1597 68       		.sleb128 -24
 7086 1598 15       		.uleb128 0x15
 7087 1599 2D120000 		.4byte	.LASF312
 7088 159d 01       		.byte	0x1
 7089 159e 5108     		.2byte	0x851
 7090 15a0 3B010000 		.4byte	0x13b
 7091 15a4 02       		.byte	0x2
 7092 15a5 91       		.byte	0x91
 7093 15a6 66       		.sleb128 -26
 7094 15a7 16       		.uleb128 0x16
 7095 15a8 6F707400 		.ascii	"opt\000"
 7096 15ac 01       		.byte	0x1
 7097 15ad 5208     		.2byte	0x852
 7098 15af 67010000 		.4byte	0x167
 7099 15b3 02       		.byte	0x2
 7100 15b4 91       		.byte	0x91
 7101 15b5 64       		.sleb128 -28
 7102 15b6 16       		.uleb128 0x16
 7103 15b7 747300   		.ascii	"ts\000"
 7104 15ba 01       		.byte	0x1
 7105 15bb 5308     		.2byte	0x853
 7106 15bd F9000000 		.4byte	0xf9
 7107 15c1 02       		.byte	0x2
 7108 15c2 91       		.byte	0x91
 7109 15c3 00       		.sleb128 0
 7110 15c4 15       		.uleb128 0x15
 7111 15c5 F9070000 		.4byte	.LASF283
 7112 15c9 01       		.byte	0x1
 7113 15ca 5408     		.2byte	0x854
 7114 15cc FF0C0000 		.4byte	0xcff
 7115 15d0 02       		.byte	0x2
 7116 15d1 91       		.byte	0x91
 7117 15d2 04       		.sleb128 4
 7118 15d3 18       		.uleb128 0x18
 7119 15d4 EF040000 		.4byte	.LASF285
 7120 15d8 01       		.byte	0x1
 7121 15d9 5608     		.2byte	0x856
 7122 15db E2000000 		.4byte	0xe2
 7123 15df 02       		.byte	0x2
 7124 15e0 91       		.byte	0x91
 7125 15e1 74       		.sleb128 -12
 7126 15e2 00       		.byte	0x0
 7127 15e3 19       		.uleb128 0x19
 7128 15e4 01       		.byte	0x1
 7129 15e5 60100000 		.4byte	.LASF337
 7130 15e9 01       		.byte	0x1
 7131 15ea A708     		.2byte	0x8a7
 7132 15ec 01       		.byte	0x1
 7133 15ed 00000000 		.4byte	.LFB23
 7134 15f1 3A010000 		.4byte	.LFE23
 7135 15f5 F1040000 		.4byte	.LLST23
 7136 15f9 2B160000 		.4byte	0x162b
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 171


 7137 15fd 15       		.uleb128 0x15
 7138 15fe 070A0000 		.4byte	.LASF281
 7139 1602 01       		.byte	0x1
 7140 1603 A708     		.2byte	0x8a7
 7141 1605 620C0000 		.4byte	0xc62
 7142 1609 02       		.byte	0x2
 7143 160a 91       		.byte	0x91
 7144 160b 6C       		.sleb128 -20
 7145 160c 15       		.uleb128 0x15
 7146 160d F9070000 		.4byte	.LASF283
 7147 1611 01       		.byte	0x1
 7148 1612 A808     		.2byte	0x8a8
 7149 1614 FF0C0000 		.4byte	0xcff
 7150 1618 02       		.byte	0x2
 7151 1619 91       		.byte	0x91
 7152 161a 68       		.sleb128 -24
 7153 161b 18       		.uleb128 0x18
 7154 161c EF040000 		.4byte	.LASF285
 7155 1620 01       		.byte	0x1
 7156 1621 AA08     		.2byte	0x8aa
 7157 1623 E2000000 		.4byte	0xe2
 7158 1627 02       		.byte	0x2
 7159 1628 91       		.byte	0x91
 7160 1629 74       		.sleb128 -12
 7161 162a 00       		.byte	0x0
 7162 162b 19       		.uleb128 0x19
 7163 162c 01       		.byte	0x1
 7164 162d 6C040000 		.4byte	.LASF338
 7165 1631 01       		.byte	0x1
 7166 1632 F408     		.2byte	0x8f4
 7167 1634 01       		.byte	0x1
 7168 1635 00000000 		.4byte	.LFB24
 7169 1639 2C000000 		.4byte	.LFE24
 7170 163d 28050000 		.4byte	.LLST24
 7171 1641 55160000 		.4byte	0x1655
 7172 1645 17       		.uleb128 0x17
 7173 1646 65727200 		.ascii	"err\000"
 7174 164a 01       		.byte	0x1
 7175 164b F608     		.2byte	0x8f6
 7176 164d D3060000 		.4byte	0x6d3
 7177 1651 02       		.byte	0x2
 7178 1652 91       		.byte	0x91
 7179 1653 76       		.sleb128 -10
 7180 1654 00       		.byte	0x0
 7181 1655 1A       		.uleb128 0x1a
 7182 1656 01       		.byte	0x1
 7183 1657 85120000 		.4byte	.LASF339
 7184 165b 01       		.byte	0x1
 7185 165c 2609     		.2byte	0x926
 7186 165e 01       		.byte	0x1
 7187 165f 93010000 		.4byte	0x193
 7188 1663 00000000 		.4byte	.LFB25
 7189 1667 2E010000 		.4byte	.LFE25
 7190 166b 5F050000 		.4byte	.LLST25
 7191 166f CD160000 		.4byte	0x16cd
 7192 1673 15       		.uleb128 0x15
 7193 1674 070A0000 		.4byte	.LASF281
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 172


 7194 1678 01       		.byte	0x1
 7195 1679 2609     		.2byte	0x926
 7196 167b 620C0000 		.4byte	0xc62
 7197 167f 02       		.byte	0x2
 7198 1680 91       		.byte	0x91
 7199 1681 6C       		.sleb128 -20
 7200 1682 16       		.uleb128 0x16
 7201 1683 6F707400 		.ascii	"opt\000"
 7202 1687 01       		.byte	0x1
 7203 1688 2709     		.2byte	0x927
 7204 168a 67010000 		.4byte	0x167
 7205 168e 02       		.byte	0x2
 7206 168f 91       		.byte	0x91
 7207 1690 6A       		.sleb128 -22
 7208 1691 16       		.uleb128 0x16
 7209 1692 747300   		.ascii	"ts\000"
 7210 1695 01       		.byte	0x1
 7211 1696 2809     		.2byte	0x928
 7212 1698 F9000000 		.4byte	0xf9
 7213 169c 02       		.byte	0x2
 7214 169d 91       		.byte	0x91
 7215 169e 64       		.sleb128 -28
 7216 169f 15       		.uleb128 0x15
 7217 16a0 F9070000 		.4byte	.LASF283
 7218 16a4 01       		.byte	0x1
 7219 16a5 2909     		.2byte	0x929
 7220 16a7 FF0C0000 		.4byte	0xcff
 7221 16ab 02       		.byte	0x2
 7222 16ac 91       		.byte	0x91
 7223 16ad 60       		.sleb128 -32
 7224 16ae 17       		.uleb128 0x17
 7225 16af 63747200 		.ascii	"ctr\000"
 7226 16b3 01       		.byte	0x1
 7227 16b4 2B09     		.2byte	0x92b
 7228 16b6 93010000 		.4byte	0x193
 7229 16ba 02       		.byte	0x2
 7230 16bb 91       		.byte	0x91
 7231 16bc 70       		.sleb128 -16
 7232 16bd 18       		.uleb128 0x18
 7233 16be EF040000 		.4byte	.LASF285
 7234 16c2 01       		.byte	0x1
 7235 16c3 2C09     		.2byte	0x92c
 7236 16c5 E2000000 		.4byte	0xe2
 7237 16c9 02       		.byte	0x2
 7238 16ca 91       		.byte	0x91
 7239 16cb 74       		.sleb128 -12
 7240 16cc 00       		.byte	0x0
 7241 16cd 19       		.uleb128 0x19
 7242 16ce 01       		.byte	0x1
 7243 16cf 890D0000 		.4byte	.LASF340
 7244 16d3 01       		.byte	0x1
 7245 16d4 B609     		.2byte	0x9b6
 7246 16d6 01       		.byte	0x1
 7247 16d7 00000000 		.4byte	.LFB26
 7248 16db 3C010000 		.4byte	.LFE26
 7249 16df 96050000 		.4byte	.LLST26
 7250 16e3 15170000 		.4byte	0x1715
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 173


 7251 16e7 15       		.uleb128 0x15
 7252 16e8 070A0000 		.4byte	.LASF281
 7253 16ec 01       		.byte	0x1
 7254 16ed B609     		.2byte	0x9b6
 7255 16ef 620C0000 		.4byte	0xc62
 7256 16f3 02       		.byte	0x2
 7257 16f4 91       		.byte	0x91
 7258 16f5 6C       		.sleb128 -20
 7259 16f6 15       		.uleb128 0x15
 7260 16f7 F9070000 		.4byte	.LASF283
 7261 16fb 01       		.byte	0x1
 7262 16fc B709     		.2byte	0x9b7
 7263 16fe FF0C0000 		.4byte	0xcff
 7264 1702 02       		.byte	0x2
 7265 1703 91       		.byte	0x91
 7266 1704 68       		.sleb128 -24
 7267 1705 18       		.uleb128 0x18
 7268 1706 EF040000 		.4byte	.LASF285
 7269 170a 01       		.byte	0x1
 7270 170b B909     		.2byte	0x9b9
 7271 170d E2000000 		.4byte	0xe2
 7272 1711 02       		.byte	0x2
 7273 1712 91       		.byte	0x91
 7274 1713 74       		.sleb128 -12
 7275 1714 00       		.byte	0x0
 7276 1715 1B       		.uleb128 0x1b
 7277 1716 5A060000 		.4byte	.LASF341
 7278 171a 05       		.byte	0x5
 7279 171b 5C04     		.2byte	0x45c
 7280 171d A6070000 		.4byte	0x7a6
 7281 1721 01       		.byte	0x1
 7282 1722 01       		.byte	0x1
 7283 1723 1B       		.uleb128 0x1b
 7284 1724 DE0C0000 		.4byte	.LASF342
 7285 1728 05       		.byte	0x5
 7286 1729 5F04     		.2byte	0x45f
 7287 172b 46010000 		.4byte	0x146
 7288 172f 01       		.byte	0x1
 7289 1730 01       		.byte	0x1
 7290 1731 1B       		.uleb128 0x1b
 7291 1732 FF070000 		.4byte	.LASF343
 7292 1736 05       		.byte	0x5
 7293 1737 6404     		.2byte	0x464
 7294 1739 9E010000 		.4byte	0x19e
 7295 173d 01       		.byte	0x1
 7296 173e 01       		.byte	0x1
 7297 173f 1B       		.uleb128 0x1b
 7298 1740 F9100000 		.4byte	.LASF344
 7299 1744 05       		.byte	0x5
 7300 1745 AD04     		.2byte	0x4ad
 7301 1747 46010000 		.4byte	0x146
 7302 174b 01       		.byte	0x1
 7303 174c 01       		.byte	0x1
 7304 174d 1B       		.uleb128 0x1b
 7305 174e C70B0000 		.4byte	.LASF345
 7306 1752 05       		.byte	0x5
 7307 1753 AF04     		.2byte	0x4af
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 174


 7308 1755 B4010000 		.4byte	0x1b4
 7309 1759 01       		.byte	0x1
 7310 175a 01       		.byte	0x1
 7311 175b 1B       		.uleb128 0x1b
 7312 175c 4C080000 		.4byte	.LASF346
 7313 1760 05       		.byte	0x5
 7314 1761 C804     		.2byte	0x4c8
 7315 1763 0F010000 		.4byte	0x10f
 7316 1767 01       		.byte	0x1
 7317 1768 01       		.byte	0x1
 7318 1769 1B       		.uleb128 0x1b
 7319 176a 1C140000 		.4byte	.LASF347
 7320 176e 05       		.byte	0x5
 7321 176f CA04     		.2byte	0x4ca
 7322 1771 620C0000 		.4byte	0xc62
 7323 1775 01       		.byte	0x1
 7324 1776 01       		.byte	0x1
 7325 1777 1B       		.uleb128 0x1b
 7326 1778 410A0000 		.4byte	.LASF348
 7327 177c 05       		.byte	0x5
 7328 177d CC04     		.2byte	0x4cc
 7329 177f 51010000 		.4byte	0x151
 7330 1783 01       		.byte	0x1
 7331 1784 01       		.byte	0x1
 7332 1785 1B       		.uleb128 0x1b
 7333 1786 2C0A0000 		.4byte	.LASF349
 7334 178a 05       		.byte	0x5
 7335 178b CF04     		.2byte	0x4cf
 7336 178d 88010000 		.4byte	0x188
 7337 1791 01       		.byte	0x1
 7338 1792 01       		.byte	0x1
 7339 1793 1B       		.uleb128 0x1b
 7340 1794 D6010000 		.4byte	.LASF350
 7341 1798 05       		.byte	0x5
 7342 1799 E504     		.2byte	0x4e5
 7343 179b 620C0000 		.4byte	0xc62
 7344 179f 01       		.byte	0x1
 7345 17a0 01       		.byte	0x1
 7346 17a1 1B       		.uleb128 0x1b
 7347 17a2 B60B0000 		.4byte	.LASF351
 7348 17a6 05       		.byte	0x5
 7349 17a7 0D05     		.2byte	0x50d
 7350 17a9 AF170000 		.4byte	0x17af
 7351 17ad 01       		.byte	0x1
 7352 17ae 01       		.byte	0x1
 7353 17af 1C       		.uleb128 0x1c
 7354 17b0 D7000000 		.4byte	0xd7
 7355 17b4 00       		.byte	0x0
 7356              		.section	.debug_abbrev
 7357 0000 01       		.uleb128 0x1
 7358 0001 11       		.uleb128 0x11
 7359 0002 01       		.byte	0x1
 7360 0003 25       		.uleb128 0x25
 7361 0004 0E       		.uleb128 0xe
 7362 0005 13       		.uleb128 0x13
 7363 0006 0B       		.uleb128 0xb
 7364 0007 03       		.uleb128 0x3
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 175


 7365 0008 0E       		.uleb128 0xe
 7366 0009 1B       		.uleb128 0x1b
 7367 000a 0E       		.uleb128 0xe
 7368 000b 11       		.uleb128 0x11
 7369 000c 01       		.uleb128 0x1
 7370 000d 52       		.uleb128 0x52
 7371 000e 01       		.uleb128 0x1
 7372 000f 55       		.uleb128 0x55
 7373 0010 06       		.uleb128 0x6
 7374 0011 10       		.uleb128 0x10
 7375 0012 06       		.uleb128 0x6
 7376 0013 00       		.byte	0x0
 7377 0014 00       		.byte	0x0
 7378 0015 02       		.uleb128 0x2
 7379 0016 16       		.uleb128 0x16
 7380 0017 00       		.byte	0x0
 7381 0018 03       		.uleb128 0x3
 7382 0019 0E       		.uleb128 0xe
 7383 001a 3A       		.uleb128 0x3a
 7384 001b 0B       		.uleb128 0xb
 7385 001c 3B       		.uleb128 0x3b
 7386 001d 0B       		.uleb128 0xb
 7387 001e 49       		.uleb128 0x49
 7388 001f 13       		.uleb128 0x13
 7389 0020 00       		.byte	0x0
 7390 0021 00       		.byte	0x0
 7391 0022 03       		.uleb128 0x3
 7392 0023 24       		.uleb128 0x24
 7393 0024 00       		.byte	0x0
 7394 0025 0B       		.uleb128 0xb
 7395 0026 0B       		.uleb128 0xb
 7396 0027 3E       		.uleb128 0x3e
 7397 0028 0B       		.uleb128 0xb
 7398 0029 03       		.uleb128 0x3
 7399 002a 0E       		.uleb128 0xe
 7400 002b 00       		.byte	0x0
 7401 002c 00       		.byte	0x0
 7402 002d 04       		.uleb128 0x4
 7403 002e 24       		.uleb128 0x24
 7404 002f 00       		.byte	0x0
 7405 0030 0B       		.uleb128 0xb
 7406 0031 0B       		.uleb128 0xb
 7407 0032 3E       		.uleb128 0x3e
 7408 0033 0B       		.uleb128 0xb
 7409 0034 03       		.uleb128 0x3
 7410 0035 08       		.uleb128 0x8
 7411 0036 00       		.byte	0x0
 7412 0037 00       		.byte	0x0
 7413 0038 05       		.uleb128 0x5
 7414 0039 0F       		.uleb128 0xf
 7415 003a 00       		.byte	0x0
 7416 003b 0B       		.uleb128 0xb
 7417 003c 0B       		.uleb128 0xb
 7418 003d 49       		.uleb128 0x49
 7419 003e 13       		.uleb128 0x13
 7420 003f 00       		.byte	0x0
 7421 0040 00       		.byte	0x0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 176


 7422 0041 06       		.uleb128 0x6
 7423 0042 15       		.uleb128 0x15
 7424 0043 01       		.byte	0x1
 7425 0044 27       		.uleb128 0x27
 7426 0045 0C       		.uleb128 0xc
 7427 0046 01       		.uleb128 0x1
 7428 0047 13       		.uleb128 0x13
 7429 0048 00       		.byte	0x0
 7430 0049 00       		.byte	0x0
 7431 004a 07       		.uleb128 0x7
 7432 004b 05       		.uleb128 0x5
 7433 004c 00       		.byte	0x0
 7434 004d 49       		.uleb128 0x49
 7435 004e 13       		.uleb128 0x13
 7436 004f 00       		.byte	0x0
 7437 0050 00       		.byte	0x0
 7438 0051 08       		.uleb128 0x8
 7439 0052 0F       		.uleb128 0xf
 7440 0053 00       		.byte	0x0
 7441 0054 0B       		.uleb128 0xb
 7442 0055 0B       		.uleb128 0xb
 7443 0056 00       		.byte	0x0
 7444 0057 00       		.byte	0x0
 7445 0058 09       		.uleb128 0x9
 7446 0059 16       		.uleb128 0x16
 7447 005a 00       		.byte	0x0
 7448 005b 03       		.uleb128 0x3
 7449 005c 0E       		.uleb128 0xe
 7450 005d 3A       		.uleb128 0x3a
 7451 005e 0B       		.uleb128 0xb
 7452 005f 3B       		.uleb128 0x3b
 7453 0060 05       		.uleb128 0x5
 7454 0061 49       		.uleb128 0x49
 7455 0062 13       		.uleb128 0x13
 7456 0063 00       		.byte	0x0
 7457 0064 00       		.byte	0x0
 7458 0065 0A       		.uleb128 0xa
 7459 0066 04       		.uleb128 0x4
 7460 0067 01       		.byte	0x1
 7461 0068 03       		.uleb128 0x3
 7462 0069 0E       		.uleb128 0xe
 7463 006a 0B       		.uleb128 0xb
 7464 006b 0B       		.uleb128 0xb
 7465 006c 3A       		.uleb128 0x3a
 7466 006d 0B       		.uleb128 0xb
 7467 006e 3B       		.uleb128 0x3b
 7468 006f 05       		.uleb128 0x5
 7469 0070 01       		.uleb128 0x1
 7470 0071 13       		.uleb128 0x13
 7471 0072 00       		.byte	0x0
 7472 0073 00       		.byte	0x0
 7473 0074 0B       		.uleb128 0xb
 7474 0075 28       		.uleb128 0x28
 7475 0076 00       		.byte	0x0
 7476 0077 03       		.uleb128 0x3
 7477 0078 0E       		.uleb128 0xe
 7478 0079 1C       		.uleb128 0x1c
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 177


 7479 007a 0D       		.uleb128 0xd
 7480 007b 00       		.byte	0x0
 7481 007c 00       		.byte	0x0
 7482 007d 0C       		.uleb128 0xc
 7483 007e 13       		.uleb128 0x13
 7484 007f 01       		.byte	0x1
 7485 0080 03       		.uleb128 0x3
 7486 0081 0E       		.uleb128 0xe
 7487 0082 0B       		.uleb128 0xb
 7488 0083 0B       		.uleb128 0xb
 7489 0084 3A       		.uleb128 0x3a
 7490 0085 0B       		.uleb128 0xb
 7491 0086 3B       		.uleb128 0x3b
 7492 0087 05       		.uleb128 0x5
 7493 0088 01       		.uleb128 0x1
 7494 0089 13       		.uleb128 0x13
 7495 008a 00       		.byte	0x0
 7496 008b 00       		.byte	0x0
 7497 008c 0D       		.uleb128 0xd
 7498 008d 0D       		.uleb128 0xd
 7499 008e 00       		.byte	0x0
 7500 008f 03       		.uleb128 0x3
 7501 0090 0E       		.uleb128 0xe
 7502 0091 3A       		.uleb128 0x3a
 7503 0092 0B       		.uleb128 0xb
 7504 0093 3B       		.uleb128 0x3b
 7505 0094 05       		.uleb128 0x5
 7506 0095 49       		.uleb128 0x49
 7507 0096 13       		.uleb128 0x13
 7508 0097 38       		.uleb128 0x38
 7509 0098 0A       		.uleb128 0xa
 7510 0099 00       		.byte	0x0
 7511 009a 00       		.byte	0x0
 7512 009b 0E       		.uleb128 0xe
 7513 009c 0D       		.uleb128 0xd
 7514 009d 00       		.byte	0x0
 7515 009e 03       		.uleb128 0x3
 7516 009f 08       		.uleb128 0x8
 7517 00a0 3A       		.uleb128 0x3a
 7518 00a1 0B       		.uleb128 0xb
 7519 00a2 3B       		.uleb128 0x3b
 7520 00a3 05       		.uleb128 0x5
 7521 00a4 49       		.uleb128 0x49
 7522 00a5 13       		.uleb128 0x13
 7523 00a6 38       		.uleb128 0x38
 7524 00a7 0A       		.uleb128 0xa
 7525 00a8 00       		.byte	0x0
 7526 00a9 00       		.byte	0x0
 7527 00aa 0F       		.uleb128 0xf
 7528 00ab 01       		.uleb128 0x1
 7529 00ac 01       		.byte	0x1
 7530 00ad 49       		.uleb128 0x49
 7531 00ae 13       		.uleb128 0x13
 7532 00af 01       		.uleb128 0x1
 7533 00b0 13       		.uleb128 0x13
 7534 00b1 00       		.byte	0x0
 7535 00b2 00       		.byte	0x0
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 178


 7536 00b3 10       		.uleb128 0x10
 7537 00b4 21       		.uleb128 0x21
 7538 00b5 00       		.byte	0x0
 7539 00b6 49       		.uleb128 0x49
 7540 00b7 13       		.uleb128 0x13
 7541 00b8 2F       		.uleb128 0x2f
 7542 00b9 0B       		.uleb128 0xb
 7543 00ba 00       		.byte	0x0
 7544 00bb 00       		.byte	0x0
 7545 00bc 11       		.uleb128 0x11
 7546 00bd 24       		.uleb128 0x24
 7547 00be 00       		.byte	0x0
 7548 00bf 0B       		.uleb128 0xb
 7549 00c0 0B       		.uleb128 0xb
 7550 00c1 3E       		.uleb128 0x3e
 7551 00c2 0B       		.uleb128 0xb
 7552 00c3 00       		.byte	0x0
 7553 00c4 00       		.byte	0x0
 7554 00c5 12       		.uleb128 0x12
 7555 00c6 2E       		.uleb128 0x2e
 7556 00c7 01       		.byte	0x1
 7557 00c8 3F       		.uleb128 0x3f
 7558 00c9 0C       		.uleb128 0xc
 7559 00ca 03       		.uleb128 0x3
 7560 00cb 0E       		.uleb128 0xe
 7561 00cc 3A       		.uleb128 0x3a
 7562 00cd 0B       		.uleb128 0xb
 7563 00ce 3B       		.uleb128 0x3b
 7564 00cf 0B       		.uleb128 0xb
 7565 00d0 27       		.uleb128 0x27
 7566 00d1 0C       		.uleb128 0xc
 7567 00d2 11       		.uleb128 0x11
 7568 00d3 01       		.uleb128 0x1
 7569 00d4 12       		.uleb128 0x12
 7570 00d5 01       		.uleb128 0x1
 7571 00d6 40       		.uleb128 0x40
 7572 00d7 06       		.uleb128 0x6
 7573 00d8 01       		.uleb128 0x1
 7574 00d9 13       		.uleb128 0x13
 7575 00da 00       		.byte	0x0
 7576 00db 00       		.byte	0x0
 7577 00dc 13       		.uleb128 0x13
 7578 00dd 05       		.uleb128 0x5
 7579 00de 00       		.byte	0x0
 7580 00df 03       		.uleb128 0x3
 7581 00e0 0E       		.uleb128 0xe
 7582 00e1 3A       		.uleb128 0x3a
 7583 00e2 0B       		.uleb128 0xb
 7584 00e3 3B       		.uleb128 0x3b
 7585 00e4 0B       		.uleb128 0xb
 7586 00e5 49       		.uleb128 0x49
 7587 00e6 13       		.uleb128 0x13
 7588 00e7 02       		.uleb128 0x2
 7589 00e8 0A       		.uleb128 0xa
 7590 00e9 00       		.byte	0x0
 7591 00ea 00       		.byte	0x0
 7592 00eb 14       		.uleb128 0x14
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 179


 7593 00ec 34       		.uleb128 0x34
 7594 00ed 00       		.byte	0x0
 7595 00ee 03       		.uleb128 0x3
 7596 00ef 0E       		.uleb128 0xe
 7597 00f0 3A       		.uleb128 0x3a
 7598 00f1 0B       		.uleb128 0xb
 7599 00f2 3B       		.uleb128 0x3b
 7600 00f3 0B       		.uleb128 0xb
 7601 00f4 49       		.uleb128 0x49
 7602 00f5 13       		.uleb128 0x13
 7603 00f6 02       		.uleb128 0x2
 7604 00f7 0A       		.uleb128 0xa
 7605 00f8 00       		.byte	0x0
 7606 00f9 00       		.byte	0x0
 7607 00fa 15       		.uleb128 0x15
 7608 00fb 05       		.uleb128 0x5
 7609 00fc 00       		.byte	0x0
 7610 00fd 03       		.uleb128 0x3
 7611 00fe 0E       		.uleb128 0xe
 7612 00ff 3A       		.uleb128 0x3a
 7613 0100 0B       		.uleb128 0xb
 7614 0101 3B       		.uleb128 0x3b
 7615 0102 05       		.uleb128 0x5
 7616 0103 49       		.uleb128 0x49
 7617 0104 13       		.uleb128 0x13
 7618 0105 02       		.uleb128 0x2
 7619 0106 0A       		.uleb128 0xa
 7620 0107 00       		.byte	0x0
 7621 0108 00       		.byte	0x0
 7622 0109 16       		.uleb128 0x16
 7623 010a 05       		.uleb128 0x5
 7624 010b 00       		.byte	0x0
 7625 010c 03       		.uleb128 0x3
 7626 010d 08       		.uleb128 0x8
 7627 010e 3A       		.uleb128 0x3a
 7628 010f 0B       		.uleb128 0xb
 7629 0110 3B       		.uleb128 0x3b
 7630 0111 05       		.uleb128 0x5
 7631 0112 49       		.uleb128 0x49
 7632 0113 13       		.uleb128 0x13
 7633 0114 02       		.uleb128 0x2
 7634 0115 0A       		.uleb128 0xa
 7635 0116 00       		.byte	0x0
 7636 0117 00       		.byte	0x0
 7637 0118 17       		.uleb128 0x17
 7638 0119 34       		.uleb128 0x34
 7639 011a 00       		.byte	0x0
 7640 011b 03       		.uleb128 0x3
 7641 011c 08       		.uleb128 0x8
 7642 011d 3A       		.uleb128 0x3a
 7643 011e 0B       		.uleb128 0xb
 7644 011f 3B       		.uleb128 0x3b
 7645 0120 05       		.uleb128 0x5
 7646 0121 49       		.uleb128 0x49
 7647 0122 13       		.uleb128 0x13
 7648 0123 02       		.uleb128 0x2
 7649 0124 0A       		.uleb128 0xa
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 180


 7650 0125 00       		.byte	0x0
 7651 0126 00       		.byte	0x0
 7652 0127 18       		.uleb128 0x18
 7653 0128 34       		.uleb128 0x34
 7654 0129 00       		.byte	0x0
 7655 012a 03       		.uleb128 0x3
 7656 012b 0E       		.uleb128 0xe
 7657 012c 3A       		.uleb128 0x3a
 7658 012d 0B       		.uleb128 0xb
 7659 012e 3B       		.uleb128 0x3b
 7660 012f 05       		.uleb128 0x5
 7661 0130 49       		.uleb128 0x49
 7662 0131 13       		.uleb128 0x13
 7663 0132 02       		.uleb128 0x2
 7664 0133 0A       		.uleb128 0xa
 7665 0134 00       		.byte	0x0
 7666 0135 00       		.byte	0x0
 7667 0136 19       		.uleb128 0x19
 7668 0137 2E       		.uleb128 0x2e
 7669 0138 01       		.byte	0x1
 7670 0139 3F       		.uleb128 0x3f
 7671 013a 0C       		.uleb128 0xc
 7672 013b 03       		.uleb128 0x3
 7673 013c 0E       		.uleb128 0xe
 7674 013d 3A       		.uleb128 0x3a
 7675 013e 0B       		.uleb128 0xb
 7676 013f 3B       		.uleb128 0x3b
 7677 0140 05       		.uleb128 0x5
 7678 0141 27       		.uleb128 0x27
 7679 0142 0C       		.uleb128 0xc
 7680 0143 11       		.uleb128 0x11
 7681 0144 01       		.uleb128 0x1
 7682 0145 12       		.uleb128 0x12
 7683 0146 01       		.uleb128 0x1
 7684 0147 40       		.uleb128 0x40
 7685 0148 06       		.uleb128 0x6
 7686 0149 01       		.uleb128 0x1
 7687 014a 13       		.uleb128 0x13
 7688 014b 00       		.byte	0x0
 7689 014c 00       		.byte	0x0
 7690 014d 1A       		.uleb128 0x1a
 7691 014e 2E       		.uleb128 0x2e
 7692 014f 01       		.byte	0x1
 7693 0150 3F       		.uleb128 0x3f
 7694 0151 0C       		.uleb128 0xc
 7695 0152 03       		.uleb128 0x3
 7696 0153 0E       		.uleb128 0xe
 7697 0154 3A       		.uleb128 0x3a
 7698 0155 0B       		.uleb128 0xb
 7699 0156 3B       		.uleb128 0x3b
 7700 0157 05       		.uleb128 0x5
 7701 0158 27       		.uleb128 0x27
 7702 0159 0C       		.uleb128 0xc
 7703 015a 49       		.uleb128 0x49
 7704 015b 13       		.uleb128 0x13
 7705 015c 11       		.uleb128 0x11
 7706 015d 01       		.uleb128 0x1
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 181


 7707 015e 12       		.uleb128 0x12
 7708 015f 01       		.uleb128 0x1
 7709 0160 40       		.uleb128 0x40
 7710 0161 06       		.uleb128 0x6
 7711 0162 01       		.uleb128 0x1
 7712 0163 13       		.uleb128 0x13
 7713 0164 00       		.byte	0x0
 7714 0165 00       		.byte	0x0
 7715 0166 1B       		.uleb128 0x1b
 7716 0167 34       		.uleb128 0x34
 7717 0168 00       		.byte	0x0
 7718 0169 03       		.uleb128 0x3
 7719 016a 0E       		.uleb128 0xe
 7720 016b 3A       		.uleb128 0x3a
 7721 016c 0B       		.uleb128 0xb
 7722 016d 3B       		.uleb128 0x3b
 7723 016e 05       		.uleb128 0x5
 7724 016f 49       		.uleb128 0x49
 7725 0170 13       		.uleb128 0x13
 7726 0171 3F       		.uleb128 0x3f
 7727 0172 0C       		.uleb128 0xc
 7728 0173 3C       		.uleb128 0x3c
 7729 0174 0C       		.uleb128 0xc
 7730 0175 00       		.byte	0x0
 7731 0176 00       		.byte	0x0
 7732 0177 1C       		.uleb128 0x1c
 7733 0178 26       		.uleb128 0x26
 7734 0179 00       		.byte	0x0
 7735 017a 49       		.uleb128 0x49
 7736 017b 13       		.uleb128 0x13
 7737 017c 00       		.byte	0x0
 7738 017d 00       		.byte	0x0
 7739 017e 00       		.byte	0x0
 7740              		.section	.debug_pubnames,"",%progbits
 7741 0000 02020000 		.4byte	0x202
 7742 0004 0200     		.2byte	0x2
 7743 0006 00000000 		.4byte	.Ldebug_info0
 7744 000a B5170000 		.4byte	0x17b5
 7745 000e 9F0C0000 		.4byte	0xc9f
 7746 0012 4F535461 		.ascii	"OSTaskChangePrio\000"
 7746      736B4368 
 7746      616E6765 
 7746      5072696F 
 7746      00
 7747 0023 050D0000 		.4byte	0xd05
 7748 0027 4F535461 		.ascii	"OSTaskCreate\000"
 7748      736B4372 
 7748      65617465 
 7748      00
 7749 0034 240E0000 		.4byte	0xe24
 7750 0038 4F535461 		.ascii	"OSTaskDel\000"
 7750      736B4465 
 7750      6C00
 7751 0042 6C0E0000 		.4byte	0xe6c
 7752 0046 4F535461 		.ascii	"OSTaskQFlush\000"
 7752      736B5146 
 7752      6C757368 
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 182


 7752      00
 7753 0053 C70E0000 		.4byte	0xec7
 7754 0057 4F535461 		.ascii	"OSTaskQPend\000"
 7754      736B5150 
 7754      656E6400 
 7755 0063 700F0000 		.4byte	0xf70
 7756 0067 4F535461 		.ascii	"OSTaskQPendAbort\000"
 7756      736B5150 
 7756      656E6441 
 7756      626F7274 
 7756      00
 7757 0078 D90F0000 		.4byte	0xfd9
 7758 007c 4F535461 		.ascii	"OSTaskQPost\000"
 7758      736B5150 
 7758      6F737400 
 7759 0088 4D100000 		.4byte	0x104d
 7760 008c 4F535461 		.ascii	"OSTaskRegGet\000"
 7760      736B5265 
 7760      67476574 
 7760      00
 7761 0099 B6100000 		.4byte	0x10b6
 7762 009d 4F535461 		.ascii	"OSTaskRegGetID\000"
 7762      736B5265 
 7762      67476574 
 7762      494400
 7763 00ac 01110000 		.4byte	0x1101
 7764 00b0 4F535461 		.ascii	"OSTaskRegSet\000"
 7764      736B5265 
 7764      67536574 
 7764      00
 7765 00bd 66110000 		.4byte	0x1166
 7766 00c1 4F535461 		.ascii	"OSTaskResume\000"
 7766      736B5265 
 7766      73756D65 
 7766      00
 7767 00ce AE110000 		.4byte	0x11ae
 7768 00d2 4F535461 		.ascii	"OSTaskSemPend\000"
 7768      736B5365 
 7768      6D50656E 
 7768      6400
 7769 00e0 27120000 		.4byte	0x1227
 7770 00e4 4F535461 		.ascii	"OSTaskSemPendAbort\000"
 7770      736B5365 
 7770      6D50656E 
 7770      6441626F 
 7770      727400
 7771 00f7 90120000 		.4byte	0x1290
 7772 00fb 4F535461 		.ascii	"OSTaskSemPost\000"
 7772      736B5365 
 7772      6D506F73 
 7772      7400
 7773 0109 F9120000 		.4byte	0x12f9
 7774 010d 4F535461 		.ascii	"OSTaskSemSet\000"
 7774      736B5365 
 7774      6D536574 
 7774      00
 7775 011a 63130000 		.4byte	0x1363
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 183


 7776 011e 4F535461 		.ascii	"OSTaskStkChk\000"
 7776      736B5374 
 7776      6B43686B 
 7776      00
 7777 012b ED130000 		.4byte	0x13ed
 7778 012f 4F535461 		.ascii	"OSTaskSuspend\000"
 7778      736B5375 
 7778      7370656E 
 7778      6400
 7779 013d 26140000 		.4byte	0x1426
 7780 0141 4F535461 		.ascii	"OSTaskTimeQuantaSet\000"
 7780      736B5469 
 7780      6D655175 
 7780      616E7461 
 7780      53657400 
 7781 0155 7D140000 		.4byte	0x147d
 7782 0159 4F535F54 		.ascii	"OS_TaskDbgListAdd\000"
 7782      61736B44 
 7782      62674C69 
 7782      73744164 
 7782      6400
 7783 016b A7140000 		.4byte	0x14a7
 7784 016f 4F535F54 		.ascii	"OS_TaskDbgListRemove\000"
 7784      61736B44 
 7784      62674C69 
 7784      73745265 
 7784      6D6F7665 
 7785 0184 EF140000 		.4byte	0x14ef
 7786 0188 4F535F54 		.ascii	"OS_TaskInit\000"
 7786      61736B49 
 7786      6E697400 
 7787 0194 19150000 		.4byte	0x1519
 7788 0198 4F535F54 		.ascii	"OS_TaskInitTCB\000"
 7788      61736B49 
 7788      6E697454 
 7788      434200
 7789 01a7 60150000 		.4byte	0x1560
 7790 01ab 4F535F54 		.ascii	"OS_TaskQPost\000"
 7790      61736B51 
 7790      506F7374 
 7790      00
 7791 01b8 E3150000 		.4byte	0x15e3
 7792 01bc 4F535F54 		.ascii	"OS_TaskResume\000"
 7792      61736B52 
 7792      6573756D 
 7792      6500
 7793 01ca 2B160000 		.4byte	0x162b
 7794 01ce 4F535F54 		.ascii	"OS_TaskReturn\000"
 7794      61736B52 
 7794      65747572 
 7794      6E00
 7795 01dc 55160000 		.4byte	0x1655
 7796 01e0 4F535F54 		.ascii	"OS_TaskSemPost\000"
 7796      61736B53 
 7796      656D506F 
 7796      737400
 7797 01ef CD160000 		.4byte	0x16cd
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 184


 7798 01f3 4F535F54 		.ascii	"OS_TaskSuspend\000"
 7798      61736B53 
 7798      75737065 
 7798      6E6400
 7799 0202 00000000 		.4byte	0x0
 7800              		.section	.debug_aranges,"",%progbits
 7801 0000 EC000000 		.4byte	0xec
 7802 0004 0200     		.2byte	0x2
 7803 0006 00000000 		.4byte	.Ldebug_info0
 7804 000a 04       		.byte	0x4
 7805 000b 00       		.byte	0x0
 7806 000c 0000     		.2byte	0x0
 7807 000e 0000     		.2byte	0x0
 7808 0010 00000000 		.4byte	.LFB0
 7809 0014 3E010000 		.4byte	.LFE0-.LFB0
 7810 0018 00000000 		.4byte	.LFB1
 7811 001c 3C020000 		.4byte	.LFE1-.LFB1
 7812 0020 00000000 		.4byte	.LFB2
 7813 0024 50010000 		.4byte	.LFE2-.LFB2
 7814 0028 00000000 		.4byte	.LFB3
 7815 002c 7E000000 		.4byte	.LFE3-.LFB3
 7816 0030 00000000 		.4byte	.LFB4
 7817 0034 72020000 		.4byte	.LFE4-.LFB4
 7818 0038 00000000 		.4byte	.LFB5
 7819 003c D8000000 		.4byte	.LFE5-.LFB5
 7820 0040 00000000 		.4byte	.LFB6
 7821 0044 5C000000 		.4byte	.LFE6-.LFB6
 7822 0048 00000000 		.4byte	.LFB7
 7823 004c 6E000000 		.4byte	.LFE7-.LFB7
 7824 0050 00000000 		.4byte	.LFB8
 7825 0054 78000000 		.4byte	.LFE8-.LFB8
 7826 0058 00000000 		.4byte	.LFB9
 7827 005c 68000000 		.4byte	.LFE9-.LFB9
 7828 0060 00000000 		.4byte	.LFB10
 7829 0064 6C000000 		.4byte	.LFE10-.LFB10
 7830 0068 00000000 		.4byte	.LFB11
 7831 006c 78020000 		.4byte	.LFE11-.LFB11
 7832 0070 00000000 		.4byte	.LFB12
 7833 0074 E6000000 		.4byte	.LFE12-.LFB12
 7834 0078 00000000 		.4byte	.LFB13
 7835 007c 4E000000 		.4byte	.LFE13-.LFB13
 7836 0080 00000000 		.4byte	.LFB14
 7837 0084 6E000000 		.4byte	.LFE14-.LFB14
 7838 0088 00000000 		.4byte	.LFB15
 7839 008c 0A010000 		.4byte	.LFE15-.LFB15
 7840 0090 00000000 		.4byte	.LFB16
 7841 0094 4A000000 		.4byte	.LFE16-.LFB16
 7842 0098 00000000 		.4byte	.LFB17
 7843 009c 8A000000 		.4byte	.LFE17-.LFB17
 7844 00a0 00000000 		.4byte	.LFB18
 7845 00a4 62000000 		.4byte	.LFE18-.LFB18
 7846 00a8 00000000 		.4byte	.LFB19
 7847 00ac 90000000 		.4byte	.LFE19-.LFB19
 7848 00b0 00000000 		.4byte	.LFB20
 7849 00b4 44000000 		.4byte	.LFE20-.LFB20
 7850 00b8 00000000 		.4byte	.LFB21
 7851 00bc 04020000 		.4byte	.LFE21-.LFB21
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 185


 7852 00c0 00000000 		.4byte	.LFB22
 7853 00c4 E6000000 		.4byte	.LFE22-.LFB22
 7854 00c8 00000000 		.4byte	.LFB23
 7855 00cc 3A010000 		.4byte	.LFE23-.LFB23
 7856 00d0 00000000 		.4byte	.LFB24
 7857 00d4 2C000000 		.4byte	.LFE24-.LFB24
 7858 00d8 00000000 		.4byte	.LFB25
 7859 00dc 2E010000 		.4byte	.LFE25-.LFB25
 7860 00e0 00000000 		.4byte	.LFB26
 7861 00e4 3C010000 		.4byte	.LFE26-.LFB26
 7862 00e8 00000000 		.4byte	0x0
 7863 00ec 00000000 		.4byte	0x0
 7864              		.section	.debug_ranges,"",%progbits
 7865              	.Ldebug_ranges0:
 7866 0000 00000000 		.4byte	.Ltext0
 7867 0004 00000000 		.4byte	.Letext0
 7868 0008 00000000 		.4byte	.LFB0
 7869 000c 3E010000 		.4byte	.LFE0
 7870 0010 00000000 		.4byte	.LFB1
 7871 0014 3C020000 		.4byte	.LFE1
 7872 0018 00000000 		.4byte	.LFB2
 7873 001c 50010000 		.4byte	.LFE2
 7874 0020 00000000 		.4byte	.LFB3
 7875 0024 7E000000 		.4byte	.LFE3
 7876 0028 00000000 		.4byte	.LFB4
 7877 002c 72020000 		.4byte	.LFE4
 7878 0030 00000000 		.4byte	.LFB5
 7879 0034 D8000000 		.4byte	.LFE5
 7880 0038 00000000 		.4byte	.LFB6
 7881 003c 5C000000 		.4byte	.LFE6
 7882 0040 00000000 		.4byte	.LFB7
 7883 0044 6E000000 		.4byte	.LFE7
 7884 0048 00000000 		.4byte	.LFB8
 7885 004c 78000000 		.4byte	.LFE8
 7886 0050 00000000 		.4byte	.LFB9
 7887 0054 68000000 		.4byte	.LFE9
 7888 0058 00000000 		.4byte	.LFB10
 7889 005c 6C000000 		.4byte	.LFE10
 7890 0060 00000000 		.4byte	.LFB11
 7891 0064 78020000 		.4byte	.LFE11
 7892 0068 00000000 		.4byte	.LFB12
 7893 006c E6000000 		.4byte	.LFE12
 7894 0070 00000000 		.4byte	.LFB13
 7895 0074 4E000000 		.4byte	.LFE13
 7896 0078 00000000 		.4byte	.LFB14
 7897 007c 6E000000 		.4byte	.LFE14
 7898 0080 00000000 		.4byte	.LFB15
 7899 0084 0A010000 		.4byte	.LFE15
 7900 0088 00000000 		.4byte	.LFB16
 7901 008c 4A000000 		.4byte	.LFE16
 7902 0090 00000000 		.4byte	.LFB17
 7903 0094 8A000000 		.4byte	.LFE17
 7904 0098 00000000 		.4byte	.LFB18
 7905 009c 62000000 		.4byte	.LFE18
 7906 00a0 00000000 		.4byte	.LFB19
 7907 00a4 90000000 		.4byte	.LFE19
 7908 00a8 00000000 		.4byte	.LFB20
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 186


 7909 00ac 44000000 		.4byte	.LFE20
 7910 00b0 00000000 		.4byte	.LFB21
 7911 00b4 04020000 		.4byte	.LFE21
 7912 00b8 00000000 		.4byte	.LFB22
 7913 00bc E6000000 		.4byte	.LFE22
 7914 00c0 00000000 		.4byte	.LFB23
 7915 00c4 3A010000 		.4byte	.LFE23
 7916 00c8 00000000 		.4byte	.LFB24
 7917 00cc 2C000000 		.4byte	.LFE24
 7918 00d0 00000000 		.4byte	.LFB25
 7919 00d4 2E010000 		.4byte	.LFE25
 7920 00d8 00000000 		.4byte	.LFB26
 7921 00dc 3C010000 		.4byte	.LFE26
 7922 00e0 00000000 		.4byte	0x0
 7923 00e4 00000000 		.4byte	0x0
 7924              		.section	.debug_str,"MS",%progbits,1
 7925              	.LASF215:
 7926 0000 6F735F74 		.ascii	"os_tcb\000"
 7926      636200
 7927              	.LASF287:
 7928 0007 4F535461 		.ascii	"OSTaskCreate\000"
 7928      736B4372 
 7928      65617465 
 7928      00
 7929              	.LASF106:
 7930 0014 4F535F45 		.ascii	"OS_ERR_PRIO_INVALID\000"
 7930      52525F50 
 7930      52494F5F 
 7930      494E5641 
 7930      4C494400 
 7931              	.LASF199:
 7932 0028 4F535F45 		.ascii	"OS_ERR\000"
 7932      525200
 7933              	.LASF22:
 7934 002f 4F535F43 		.ascii	"OS_CTX_SW_CTR\000"
 7934      54585F53 
 7934      575F4354 
 7934      5200
 7935              	.LASF352:
 7936 003d 474E5520 		.ascii	"GNU C 4.4.1\000"
 7936      4320342E 
 7936      342E3100 
 7937              	.LASF185:
 7938 0049 4F535F45 		.ascii	"OS_ERR_TMR_ISR\000"
 7938      52525F54 
 7938      4D525F49 
 7938      535200
 7939              	.LASF172:
 7940 0058 4F535F45 		.ascii	"OS_ERR_TIME_INVALID_MINUTES\000"
 7940      52525F54 
 7940      494D455F 
 7940      494E5641 
 7940      4C49445F 
 7941              	.LASF39:
 7942 0074 4F535F45 		.ascii	"OS_ERR_A\000"
 7942      52525F41 
 7942      00
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 187


 7943              	.LASF41:
 7944 007d 4F535F45 		.ascii	"OS_ERR_B\000"
 7944      52525F42 
 7944      00
 7945              	.LASF42:
 7946 0086 4F535F45 		.ascii	"OS_ERR_C\000"
 7946      52525F43 
 7946      00
 7947              	.LASF44:
 7948 008f 4F535F45 		.ascii	"OS_ERR_D\000"
 7948      52525F44 
 7948      00
 7949              	.LASF46:
 7950 0098 4F535F45 		.ascii	"OS_ERR_E\000"
 7950      52525F45 
 7950      00
 7951              	.LASF47:
 7952 00a1 4F535F45 		.ascii	"OS_ERR_F\000"
 7952      52525F46 
 7952      00
 7953              	.LASF53:
 7954 00aa 4F535F45 		.ascii	"OS_ERR_G\000"
 7954      52525F47 
 7954      00
 7955              	.LASF54:
 7956 00b3 4F535F45 		.ascii	"OS_ERR_H\000"
 7956      52525F48 
 7956      00
 7957              	.LASF55:
 7958 00bc 4F535F45 		.ascii	"OS_ERR_I\000"
 7958      52525F49 
 7958      00
 7959              	.LASF62:
 7960 00c5 4F535F45 		.ascii	"OS_ERR_J\000"
 7960      52525F4A 
 7960      00
 7961              	.LASF63:
 7962 00ce 4F535F45 		.ascii	"OS_ERR_K\000"
 7962      52525F4B 
 7962      00
 7963              	.LASF64:
 7964 00d7 4F535F45 		.ascii	"OS_ERR_L\000"
 7964      52525F4C 
 7964      00
 7965              	.LASF66:
 7966 00e0 4F535F45 		.ascii	"OS_ERR_M\000"
 7966      52525F4D 
 7966      00
 7967              	.LASF82:
 7968 00e9 4F535F45 		.ascii	"OS_ERR_N\000"
 7968      52525F4E 
 7968      00
 7969              	.LASF85:
 7970 00f2 4F535F45 		.ascii	"OS_ERR_O\000"
 7970      52525F4F 
 7970      00
 7971              	.LASF93:
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 188


 7972 00fb 4F535F45 		.ascii	"OS_ERR_P\000"
 7972      52525F50 
 7972      00
 7973              	.LASF108:
 7974 0104 4F535F45 		.ascii	"OS_ERR_Q\000"
 7974      52525F51 
 7974      00
 7975              	.LASF113:
 7976 010d 4F535F45 		.ascii	"OS_ERR_R\000"
 7976      52525F52 
 7976      00
 7977              	.LASF117:
 7978 0116 4F535F45 		.ascii	"OS_ERR_S\000"
 7978      52525F53 
 7978      00
 7979              	.LASF134:
 7980 011f 4F535F45 		.ascii	"OS_ERR_T\000"
 7980      52525F54 
 7980      00
 7981              	.LASF192:
 7982 0128 4F535F45 		.ascii	"OS_ERR_U\000"
 7982      52525F55 
 7982      00
 7983              	.LASF193:
 7984 0131 4F535F45 		.ascii	"OS_ERR_V\000"
 7984      52525F56 
 7984      00
 7985              	.LASF194:
 7986 013a 4F535F45 		.ascii	"OS_ERR_W\000"
 7986      52525F57 
 7986      00
 7987              	.LASF195:
 7988 0143 4F535F45 		.ascii	"OS_ERR_X\000"
 7988      52525F58 
 7988      00
 7989              	.LASF182:
 7990 014c 4F535F45 		.ascii	"OS_ERR_TMR_INVALID_PERIOD\000"
 7990      52525F54 
 7990      4D525F49 
 7990      4E56414C 
 7990      49445F50 
 7991              	.LASF355:
 7992 0166 6F735F65 		.ascii	"os_err\000"
 7992      727200
 7993              	.LASF284:
 7994 016d 73656C66 		.ascii	"self\000"
 7994      00
 7995              	.LASF211:
 7996 0172 4E627245 		.ascii	"NbrEntries\000"
 7996      6E747269 
 7996      657300
 7997              	.LASF59:
 7998 017d 4F535F45 		.ascii	"OS_ERR_INT_Q_SIZE\000"
 7998      52525F49 
 7998      4E545F51 
 7998      5F53495A 
 7998      4500
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 189


 7999              	.LASF43:
 8000 018f 4F535F45 		.ascii	"OS_ERR_CREATE_ISR\000"
 8000      52525F43 
 8000      52454154 
 8000      455F4953 
 8000      5200
 8001              	.LASF21:
 8002 01a1 4F535F43 		.ascii	"OS_CPU_USAGE\000"
 8002      50555F55 
 8002      53414745 
 8002      00
 8003              	.LASF166:
 8004 01ae 4F535F45 		.ascii	"OS_ERR_TICK_STK_SIZE_INVALID\000"
 8004      52525F54 
 8004      49434B5F 
 8004      53544B5F 
 8004      53495A45 
 8005              	.LASF9:
 8006 01cb 4350555F 		.ascii	"CPU_INT32U\000"
 8006      494E5433 
 8006      325500
 8007              	.LASF350:
 8008 01d6 4F535443 		.ascii	"OSTCBCurPtr\000"
 8008      42437572 
 8008      50747200 
 8009              	.LASF131:
 8010 01e2 4F535F45 		.ascii	"OS_ERR_STK_INVALID\000"
 8010      52525F53 
 8010      544B5F49 
 8010      4E56414C 
 8010      494400
 8011              	.LASF298:
 8012 01f5 7265675F 		.ascii	"reg_nbr\000"
 8012      6E627200 
 8013              	.LASF246:
 8014 01fd 466C6167 		.ascii	"FlagsOpt\000"
 8014      734F7074 
 8014      00
 8015              	.LASF147:
 8016 0206 4F535F45 		.ascii	"OS_ERR_TASK_RESUME_ISR\000"
 8016      52525F54 
 8016      41534B5F 
 8016      52455355 
 8016      4D455F49 
 8017              	.LASF101:
 8018 021d 4F535F45 		.ascii	"OS_ERR_PEND_WOULD_BLOCK\000"
 8018      52525F50 
 8018      454E445F 
 8018      574F554C 
 8018      445F424C 
 8019              	.LASF135:
 8020 0235 4F535F45 		.ascii	"OS_ERR_TASK_CHANGE_PRIO_ISR\000"
 8020      52525F54 
 8020      41534B5F 
 8020      4348414E 
 8020      47455F50 
 8021              	.LASF125:
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 190


 8022 0251 4F535F45 		.ascii	"OS_ERR_STAT_RESET_ISR\000"
 8022      52525F53 
 8022      5441545F 
 8022      52455345 
 8022      545F4953 
 8023              	.LASF306:
 8024 0267 705F6D73 		.ascii	"p_msg_size\000"
 8024      675F7369 
 8024      7A6500
 8025              	.LASF100:
 8026 0272 4F535F45 		.ascii	"OS_ERR_PEND_LOCKED\000"
 8026      52525F50 
 8026      454E445F 
 8026      4C4F434B 
 8026      454400
 8027              	.LASF28:
 8028 0285 4F535F4F 		.ascii	"OS_OBJ_QTY\000"
 8028      424A5F51 
 8028      545900
 8029              	.LASF320:
 8030 0290 4F535461 		.ascii	"OSTaskSemPost\000"
 8030      736B5365 
 8030      6D506F73 
 8030      7400
 8031              	.LASF145:
 8032 029e 4F535F45 		.ascii	"OS_ERR_TASK_NOT_SUSPENDED\000"
 8032      52525F54 
 8032      41534B5F 
 8032      4E4F545F 
 8032      53555350 
 8033              	.LASF143:
 8034 02b8 4F535F45 		.ascii	"OS_ERR_TASK_NOT_DLY\000"
 8034      52525F54 
 8034      41534B5F 
 8034      4E4F545F 
 8034      444C5900 
 8035              	.LASF259:
 8036 02cc 44626750 		.ascii	"DbgPrevPtr\000"
 8036      72657650 
 8036      747200
 8037              	.LASF57:
 8038 02d7 4F535F45 		.ascii	"OS_ERR_INT_Q\000"
 8038      52525F49 
 8038      4E545F51 
 8038      00
 8039              	.LASF260:
 8040 02e4 4462674E 		.ascii	"DbgNextPtr\000"
 8040      65787450 
 8040      747200
 8041              	.LASF324:
 8042 02ef 705F7573 		.ascii	"p_used\000"
 8042      656400
 8043              	.LASF157:
 8044 02f6 4F535F45 		.ascii	"OS_ERR_TASK_WAITING\000"
 8044      52525F54 
 8044      41534B5F 
 8044      57414954 
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 191


 8044      494E4700 
 8045              	.LASF40:
 8046 030a 4F535F45 		.ascii	"OS_ERR_ACCEPT_ISR\000"
 8046      52525F41 
 8046      43434550 
 8046      545F4953 
 8046      5200
 8047              	.LASF155:
 8048 031c 4F535F45 		.ascii	"OS_ERR_TASK_SUSPEND_ISR\000"
 8048      52525F54 
 8048      41534B5F 
 8048      53555350 
 8048      454E445F 
 8049              	.LASF81:
 8050 0334 4F535F45 		.ascii	"OS_ERR_MUTEX_NESTING\000"
 8050      52525F4D 
 8050      55544558 
 8050      5F4E4553 
 8050      54494E47 
 8051              	.LASF183:
 8052 0349 4F535F45 		.ascii	"OS_ERR_TMR_INVALID_STATE\000"
 8052      52525F54 
 8052      4D525F49 
 8052      4E56414C 
 8052      49445F53 
 8053              	.LASF228:
 8054 0362 50656E64 		.ascii	"PendOn\000"
 8054      4F6E00
 8055              	.LASF233:
 8056 0369 50656E64 		.ascii	"PendDataTblEntries\000"
 8056      44617461 
 8056      54626C45 
 8056      6E747269 
 8056      657300
 8057              	.LASF86:
 8058 037c 4F535F45 		.ascii	"OS_ERR_OBJ_CREATED\000"
 8058      52525F4F 
 8058      424A5F43 
 8058      52454154 
 8058      454400
 8059              	.LASF276:
 8060 038f 5461696C 		.ascii	"TailPtr\000"
 8060      50747200 
 8061              	.LASF309:
 8062 0397 705F766F 		.ascii	"p_void\000"
 8062      696400
 8063              	.LASF153:
 8064 039e 4F535F45 		.ascii	"OS_ERR_TASK_SUSPEND_IDLE\000"
 8064      52525F54 
 8064      41534B5F 
 8064      53555350 
 8064      454E445F 
 8065              	.LASF58:
 8066 03b7 4F535F45 		.ascii	"OS_ERR_INT_Q_FULL\000"
 8066      52525F49 
 8066      4E545F51 
 8066      5F46554C 
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 192


 8066      4C00
 8067              	.LASF236:
 8068 03c9 5469636B 		.ascii	"TickCtrMatch\000"
 8068      4374724D 
 8068      61746368 
 8068      00
 8069              	.LASF270:
 8070 03d6 5264794D 		.ascii	"RdyMsgPtr\000"
 8070      73675074 
 8070      7200
 8071              	.LASF278:
 8072 03e0 6F735F70 		.ascii	"os_pend_obj\000"
 8072      656E645F 
 8072      6F626A00 
 8073              	.LASF304:
 8074 03ec 4F535461 		.ascii	"OSTaskQPend\000"
 8074      736B5150 
 8074      656E6400 
 8075              	.LASF56:
 8076 03f8 4F535F45 		.ascii	"OS_ERR_ILLEGAL_CREATE_RUN_TIME\000"
 8076      52525F49 
 8076      4C4C4547 
 8076      414C5F43 
 8076      52454154 
 8077              	.LASF244:
 8078 0417 466C6167 		.ascii	"FlagsPend\000"
 8078      7350656E 
 8078      6400
 8079              	.LASF181:
 8080 0421 4F535F45 		.ascii	"OS_ERR_TMR_INVALID_DLY\000"
 8080      52525F54 
 8080      4D525F49 
 8080      4E56414C 
 8080      49445F44 
 8081              	.LASF250:
 8082 0438 43747853 		.ascii	"CtxSwCtr\000"
 8082      77437472 
 8082      00
 8083              	.LASF148:
 8084 0441 4F535F45 		.ascii	"OS_ERR_TASK_RESUME_PRIO\000"
 8084      52525F54 
 8084      41534B5F 
 8084      52455355 
 8084      4D455F50 
 8085              	.LASF331:
 8086 0459 705F7463 		.ascii	"p_tcb_next\000"
 8086      625F6E65 
 8086      787400
 8087              	.LASF31:
 8088 0464 4F535F50 		.ascii	"OS_PRIO\000"
 8088      52494F00 
 8089              	.LASF338:
 8090 046c 4F535F54 		.ascii	"OS_TaskReturn\000"
 8090      61736B52 
 8090      65747572 
 8090      6E00
 8091              	.LASF13:
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 193


 8092 047a 666C6F61 		.ascii	"float\000"
 8092      7400
 8093              	.LASF316:
 8094 0480 4F535461 		.ascii	"OSTaskRegSet\000"
 8094      736B5265 
 8094      67536574 
 8094      00
 8095              	.LASF317:
 8096 048d 4F535461 		.ascii	"OSTaskResume\000"
 8096      736B5265 
 8096      73756D65 
 8096      00
 8097              	.LASF102:
 8098 049a 4F535F45 		.ascii	"OS_ERR_POST_NULL_PTR\000"
 8098      52525F50 
 8098      4F53545F 
 8098      4E554C4C 
 8098      5F505452 
 8099              	.LASF84:
 8100 04af 4F535F45 		.ascii	"OS_ERR_NO_MORE_ID_AVAIL\000"
 8100      52525F4E 
 8100      4F5F4D4F 
 8100      52455F49 
 8100      445F4156 
 8101              	.LASF262:
 8102 04c7 4F535F54 		.ascii	"OS_TICK_SPOKE\000"
 8102      49434B5F 
 8102      53504F4B 
 8102      4500
 8103              	.LASF74:
 8104 04d5 4F535F45 		.ascii	"OS_ERR_MEM_INVALID_P_DATA\000"
 8104      52525F4D 
 8104      454D5F49 
 8104      4E56414C 
 8104      49445F50 
 8105              	.LASF285:
 8106 04ef 6370755F 		.ascii	"cpu_sr\000"
 8106      737200
 8107              	.LASF186:
 8108 04f6 4F535F45 		.ascii	"OS_ERR_TMR_NO_CALLBACK\000"
 8108      52525F54 
 8108      4D525F4E 
 8108      4F5F4341 
 8108      4C4C4241 
 8109              	.LASF179:
 8110 050d 4F535F45 		.ascii	"OS_ERR_TMR_INACTIVE\000"
 8110      52525F54 
 8110      4D525F49 
 8110      4E414354 
 8110      49564500 
 8111              	.LASF159:
 8112 0521 4F535F45 		.ascii	"OS_ERR_TLS_ID_INVALID\000"
 8112      52525F54 
 8112      4C535F49 
 8112      445F494E 
 8112      56414C49 
 8113              	.LASF11:
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 194


 8114 0537 6C6F6E67 		.ascii	"long long unsigned int\000"
 8114      206C6F6E 
 8114      6720756E 
 8114      7369676E 
 8114      65642069 
 8115              	.LASF150:
 8116 054e 4F535F45 		.ascii	"OS_ERR_TASK_RUNNING\000"
 8116      52525F54 
 8116      41534B5F 
 8116      52554E4E 
 8116      494E4700 
 8117              	.LASF257:
 8118 0562 53746B55 		.ascii	"StkUsed\000"
 8118      73656400 
 8119              	.LASF184:
 8120 056a 4F535F45 		.ascii	"OS_ERR_TMR_INVALID\000"
 8120      52525F54 
 8120      4D525F49 
 8120      4E56414C 
 8120      494400
 8121              	.LASF265:
 8122 057d 4F535F50 		.ascii	"OS_PEND_DATA\000"
 8122      454E445F 
 8122      44415441 
 8122      00
 8123              	.LASF154:
 8124 058a 4F535F45 		.ascii	"OS_ERR_TASK_SUSPEND_INT_HANDLER\000"
 8124      52525F54 
 8124      41534B5F 
 8124      53555350 
 8124      454E445F 
 8125              	.LASF139:
 8126 05aa 4F535F45 		.ascii	"OS_ERR_TASK_DEL_INVALID\000"
 8126      52525F54 
 8126      41534B5F 
 8126      44454C5F 
 8126      494E5641 
 8127              	.LASF189:
 8128 05c2 4F535F45 		.ascii	"OS_ERR_TMR_STK_INVALID\000"
 8128      52525F54 
 8128      4D525F53 
 8128      544B5F49 
 8128      4E56414C 
 8129              	.LASF4:
 8130 05d9 4350555F 		.ascii	"CPU_INT08U\000"
 8130      494E5430 
 8130      385500
 8131              	.LASF206:
 8132 05e4 6F735F6D 		.ascii	"os_msg\000"
 8132      736700
 8133              	.LASF158:
 8134 05eb 4F535F45 		.ascii	"OS_ERR_TCB_INVALID\000"
 8134      52525F54 
 8134      43425F49 
 8134      4E56414C 
 8134      494400
 8135              	.LASF232:
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 195


 8136 05fe 53746B53 		.ascii	"StkSize\000"
 8136      697A6500 
 8137              	.LASF224:
 8138 0606 53746B42 		.ascii	"StkBasePtr\000"
 8138      61736550 
 8138      747200
 8139              	.LASF314:
 8140 0611 76616C75 		.ascii	"value\000"
 8140      6500
 8141              	.LASF110:
 8142 0617 4F535F45 		.ascii	"OS_ERR_Q_EMPTY\000"
 8142      52525F51 
 8142      5F454D50 
 8142      545900
 8143              	.LASF174:
 8144 0626 4F535F45 		.ascii	"OS_ERR_TIME_INVALID_MILLISECONDS\000"
 8144      52525F54 
 8144      494D455F 
 8144      494E5641 
 8144      4C49445F 
 8145              	.LASF32:
 8146 0647 4F535F52 		.ascii	"OS_REG\000"
 8146      454700
 8147              	.LASF83:
 8148 064e 4F535F45 		.ascii	"OS_ERR_NAME\000"
 8148      52525F4E 
 8148      414D4500 
 8149              	.LASF341:
 8150 065a 4F534964 		.ascii	"OSIdleTaskTCB\000"
 8150      6C655461 
 8150      736B5443 
 8150      4200
 8151              	.LASF36:
 8152 0668 4F535F53 		.ascii	"OS_STATUS\000"
 8152      54415455 
 8152      5300
 8153              	.LASF230:
 8154 0672 5461736B 		.ascii	"TaskState\000"
 8154      53746174 
 8154      6500
 8155              	.LASF321:
 8156 067c 4F535461 		.ascii	"OSTaskSemSet\000"
 8156      736B5365 
 8156      6D536574 
 8156      00
 8157              	.LASF163:
 8158 0689 4F535F45 		.ascii	"OS_ERR_TLS_DESTRUCT_ASSIGNED\000"
 8158      52525F54 
 8158      4C535F44 
 8158      45535452 
 8158      5543545F 
 8159              	.LASF79:
 8160 06a6 4F535F45 		.ascii	"OS_ERR_MUTEX_NOT_OWNER\000"
 8160      52525F4D 
 8160      55544558 
 8160      5F4E4F54 
 8160      5F4F574E 
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 196


 8161              	.LASF26:
 8162 06bd 4F535F4D 		.ascii	"OS_MSG_SIZE\000"
 8162      53475F53 
 8162      495A4500 
 8163              	.LASF171:
 8164 06c9 4F535F45 		.ascii	"OS_ERR_TIME_INVALID_HOURS\000"
 8164      52525F54 
 8164      494D455F 
 8164      494E5641 
 8164      4C49445F 
 8165              	.LASF187:
 8166 06e3 4F535F45 		.ascii	"OS_ERR_TMR_NON_AVAIL\000"
 8166      52525F54 
 8166      4D525F4E 
 8166      4F4E5F41 
 8166      5641494C 
 8167              	.LASF0:
 8168 06f8 4350555F 		.ascii	"CPU_CHAR\000"
 8168      43484152 
 8168      00
 8169              	.LASF136:
 8170 0701 4F535F45 		.ascii	"OS_ERR_TASK_CREATE_ISR\000"
 8170      52525F54 
 8170      41534B5F 
 8170      43524541 
 8170      54455F49 
 8171              	.LASF17:
 8172 0718 4350555F 		.ascii	"CPU_STK_SIZE\000"
 8172      53544B5F 
 8172      53495A45 
 8172      00
 8173              	.LASF323:
 8174 0725 705F6672 		.ascii	"p_free\000"
 8174      656500
 8175              	.LASF25:
 8176 072c 4F535F4D 		.ascii	"OS_MSG_QTY\000"
 8176      53475F51 
 8176      545900
 8177              	.LASF92:
 8178 0737 4F535F45 		.ascii	"OS_ERR_OS_RUNNING\000"
 8178      52525F4F 
 8178      535F5255 
 8178      4E4E494E 
 8178      4700
 8179              	.LASF258:
 8180 0749 53746B46 		.ascii	"StkFree\000"
 8180      72656500 
 8181              	.LASF235:
 8182 0751 5469636B 		.ascii	"TickCtrPrev\000"
 8182      43747250 
 8182      72657600 
 8183              	.LASF210:
 8184 075d 4E627245 		.ascii	"NbrEntriesSize\000"
 8184      6E747269 
 8184      65735369 
 8184      7A6500
 8185              	.LASF177:
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 197


 8186 076c 4F535F45 		.ascii	"OS_ERR_TIME_ZERO_DLY\000"
 8186      52525F54 
 8186      494D455F 
 8186      5A45524F 
 8186      5F444C59 
 8187              	.LASF335:
 8188 0781 7265675F 		.ascii	"reg_id\000"
 8188      696400
 8189              	.LASF221:
 8190 0788 5469636B 		.ascii	"TickPrevPtr\000"
 8190      50726576 
 8190      50747200 
 8191              	.LASF245:
 8192 0794 466C6167 		.ascii	"FlagsRdy\000"
 8192      73526479 
 8192      00
 8193              	.LASF326:
 8194 079d 705F7374 		.ascii	"p_stk\000"
 8194      6B00
 8195              	.LASF127:
 8196 07a3 4F535F45 		.ascii	"OS_ERR_STAT_STK_INVALID\000"
 8196      52525F53 
 8196      5441545F 
 8196      53544B5F 
 8196      494E5641 
 8197              	.LASF303:
 8198 07bb 4F535461 		.ascii	"OSTaskQFlush\000"
 8198      736B5146 
 8198      6C757368 
 8198      00
 8199              	.LASF49:
 8200 07c8 4F535F45 		.ascii	"OS_ERR_FLAG_GRP_DEPLETED\000"
 8200      52525F46 
 8200      4C41475F 
 8200      4752505F 
 8200      4445504C 
 8201              	.LASF70:
 8202 07e1 4F535F45 		.ascii	"OS_ERR_MEM_INVALID_BLKS\000"
 8202      52525F4D 
 8202      454D5F49 
 8202      4E56414C 
 8202      49445F42 
 8203              	.LASF283:
 8204 07f9 705F6572 		.ascii	"p_err\000"
 8204      7200
 8205              	.LASF343:
 8206 07ff 4F535275 		.ascii	"OSRunning\000"
 8206      6E6E696E 
 8206      6700
 8207              	.LASF242:
 8208 0809 4D736751 		.ascii	"MsgQPendTimeMax\000"
 8208      50656E64 
 8208      54696D65 
 8208      4D617800 
 8209              	.LASF241:
 8210 0819 4D736751 		.ascii	"MsgQPendTime\000"
 8210      50656E64 
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 198


 8210      54696D65 
 8210      00
 8211              	.LASF200:
 8212 0826 4F535F4D 		.ascii	"OS_MSG\000"
 8212      534700
 8213              	.LASF288:
 8214 082d 705F6E61 		.ascii	"p_name\000"
 8214      6D6500
 8215              	.LASF180:
 8216 0834 4F535F45 		.ascii	"OS_ERR_TMR_INVALID_DEST\000"
 8216      52525F54 
 8216      4D525F49 
 8216      4E56414C 
 8216      49445F44 
 8217              	.LASF346:
 8218 084c 4F535461 		.ascii	"OSTaskCtxSwCtr\000"
 8218      736B4374 
 8218      78537743 
 8218      747200
 8219              	.LASF291:
 8220 085b 7072696F 		.ascii	"prio\000"
 8220      00
 8221              	.LASF119:
 8222 0860 4F535F45 		.ascii	"OS_ERR_SCHED_LOCK_ISR\000"
 8222      52525F53 
 8222      43484544 
 8222      5F4C4F43 
 8222      4B5F4953 
 8223              	.LASF45:
 8224 0876 4F535F45 		.ascii	"OS_ERR_DEL_ISR\000"
 8224      52525F44 
 8224      454C5F49 
 8224      535200
 8225              	.LASF111:
 8226 0885 4F535F45 		.ascii	"OS_ERR_Q_MAX\000"
 8226      52525F51 
 8226      5F4D4158 
 8226      00
 8227              	.LASF219:
 8228 0892 50726576 		.ascii	"PrevPtr\000"
 8228      50747200 
 8229              	.LASF2:
 8230 089a 63686172 		.ascii	"char\000"
 8230      00
 8231              	.LASF29:
 8232 089f 4F535F4F 		.ascii	"OS_OBJ_TYPE\000"
 8232      424A5F54 
 8232      59504500 
 8233              	.LASF300:
 8234 08ab 705F7374 		.ascii	"p_stk_limit\000"
 8234      6B5F6C69 
 8234      6D697400 
 8235              	.LASF162:
 8236 08b7 4F535F45 		.ascii	"OS_ERR_TLS_NOT_EN\000"
 8236      52525F54 
 8236      4C535F4E 
 8236      4F545F45 
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 199


 8236      4E00
 8237              	.LASF90:
 8238 08c9 4F535F45 		.ascii	"OS_ERR_OPT_INVALID\000"
 8238      52525F4F 
 8238      50545F49 
 8238      4E56414C 
 8238      494400
 8239              	.LASF18:
 8240 08dc 4350555F 		.ascii	"CPU_SR\000"
 8240      535200
 8241              	.LASF296:
 8242 08e3 74696D65 		.ascii	"time_quanta\000"
 8242      5F717561 
 8242      6E746100 
 8243              	.LASF118:
 8244 08ef 4F535F45 		.ascii	"OS_ERR_SCHED_INVALID_TIME_SLICE\000"
 8244      52525F53 
 8244      43484544 
 8244      5F494E56 
 8244      414C4944 
 8245              	.LASF315:
 8246 090f 4F535461 		.ascii	"OSTaskRegGetID\000"
 8246      736B5265 
 8246      67476574 
 8246      494400
 8247              	.LASF325:
 8248 091e 66726565 		.ascii	"free_stk\000"
 8248      5F73746B 
 8248      00
 8249              	.LASF240:
 8250 0927 4D736751 		.ascii	"MsgQ\000"
 8250      00
 8251              	.LASF225:
 8252 092c 5461736B 		.ascii	"TaskEntryAddr\000"
 8252      456E7472 
 8252      79416464 
 8252      7200
 8253              	.LASF126:
 8254 093a 4F535F45 		.ascii	"OS_ERR_STAT_PRIO_INVALID\000"
 8254      52525F53 
 8254      5441545F 
 8254      5052494F 
 8254      5F494E56 
 8255              	.LASF175:
 8256 0953 4F535F45 		.ascii	"OS_ERR_TIME_NOT_DLY\000"
 8256      52525F54 
 8256      494D455F 
 8256      4E4F545F 
 8256      444C5900 
 8257              	.LASF313:
 8258 0967 4F535461 		.ascii	"OSTaskRegGet\000"
 8258      736B5265 
 8258      67476574 
 8258      00
 8259              	.LASF223:
 8260 0974 4E616D65 		.ascii	"NamePtr\000"
 8260      50747200 
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 200


 8261              	.LASF229:
 8262 097c 50656E64 		.ascii	"PendStatus\000"
 8262      53746174 
 8262      757300
 8263              	.LASF205:
 8264 0987 4F535F4D 		.ascii	"OS_MSG_Q\000"
 8264      53475F51 
 8264      00
 8265              	.LASF239:
 8266 0990 54696D65 		.ascii	"TimeQuantaCtr\000"
 8266      5175616E 
 8266      74614374 
 8266      7200
 8267              	.LASF293:
 8268 099e 73746B5F 		.ascii	"stk_limit\000"
 8268      6C696D69 
 8268      7400
 8269              	.LASF197:
 8270 09a8 4F535F45 		.ascii	"OS_ERR_YIELD_ISR\000"
 8270      52525F59 
 8270      49454C44 
 8270      5F495352 
 8270      00
 8271              	.LASF87:
 8272 09b9 4F535F45 		.ascii	"OS_ERR_OBJ_DEL\000"
 8272      52525F4F 
 8272      424A5F44 
 8272      454C00
 8273              	.LASF20:
 8274 09c8 4350555F 		.ascii	"CPU_TS\000"
 8274      545300
 8275              	.LASF12:
 8276 09cf 6C6F6E67 		.ascii	"long long int\000"
 8276      206C6F6E 
 8276      6720696E 
 8276      7400
 8277              	.LASF51:
 8278 09dd 4F535F45 		.ascii	"OS_ERR_FLAG_PEND_OPT\000"
 8278      52525F46 
 8278      4C41475F 
 8278      50454E44 
 8278      5F4F5054 
 8279              	.LASF216:
 8280 09f2 53746B50 		.ascii	"StkPtr\000"
 8280      747200
 8281              	.LASF263:
 8282 09f9 6F735F74 		.ascii	"os_tick_spoke\000"
 8282      69636B5F 
 8282      73706F6B 
 8282      6500
 8283              	.LASF281:
 8284 0a07 705F7463 		.ascii	"p_tcb\000"
 8284      6200
 8285              	.LASF299:
 8286 0a0d 705F7370 		.ascii	"p_sp\000"
 8286      00
 8287              	.LASF112:
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 201


 8288 0a12 4F535F45 		.ascii	"OS_ERR_Q_SIZE\000"
 8288      52525F51 
 8288      5F53495A 
 8288      4500
 8289              	.LASF252:
 8290 0a20 4379636C 		.ascii	"CyclesStart\000"
 8290      65735374 
 8290      61727400 
 8291              	.LASF349:
 8292 0a2c 4F535461 		.ascii	"OSTaskRegNextAvailID\000"
 8292      736B5265 
 8292      674E6578 
 8292      74417661 
 8292      696C4944 
 8293              	.LASF348:
 8294 0a41 4F535461 		.ascii	"OSTaskQty\000"
 8294      736B5174 
 8294      7900
 8295              	.LASF267:
 8296 0a4b 54434250 		.ascii	"TCBPtr\000"
 8296      747200
 8297              	.LASF97:
 8298 0a52 4F535F45 		.ascii	"OS_ERR_PEND_ABORT_SELF\000"
 8298      52525F50 
 8298      454E445F 
 8298      41424F52 
 8298      545F5345 
 8299              	.LASF6:
 8300 0a69 4350555F 		.ascii	"CPU_INT16U\000"
 8300      494E5431 
 8300      365500
 8301              	.LASF116:
 8302 0a74 4F535F45 		.ascii	"OS_ERR_ROUND_ROBIN_DISABLED\000"
 8302      52525F52 
 8302      4F554E44 
 8302      5F524F42 
 8302      494E5F44 
 8303              	.LASF71:
 8304 0a90 4F535F45 		.ascii	"OS_ERR_MEM_INVALID_PART\000"
 8304      52525F4D 
 8304      454D5F49 
 8304      4E56414C 
 8304      49445F50 
 8305              	.LASF88:
 8306 0aa8 4F535F45 		.ascii	"OS_ERR_OBJ_PTR_NULL\000"
 8306      52525F4F 
 8306      424A5F50 
 8306      54525F4E 
 8306      554C4C00 
 8307              	.LASF114:
 8308 0abc 4F535F45 		.ascii	"OS_ERR_REG_ID_INVALID\000"
 8308      52525F52 
 8308      45475F49 
 8308      445F494E 
 8308      56414C49 
 8309              	.LASF37:
 8310 0ad2 4F535F54 		.ascii	"OS_TICK\000"
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 202


 8310      49434B00 
 8311              	.LASF68:
 8312 0ada 4F535F45 		.ascii	"OS_ERR_MEM_FULL\000"
 8312      52525F4D 
 8312      454D5F46 
 8312      554C4C00 
 8313              	.LASF142:
 8314 0aea 4F535F45 		.ascii	"OS_ERR_TASK_NO_MORE_TCB\000"
 8314      52525F54 
 8314      41534B5F 
 8314      4E4F5F4D 
 8314      4F52455F 
 8315              	.LASF73:
 8316 0b02 4F535F45 		.ascii	"OS_ERR_MEM_INVALID_P_MEM\000"
 8316      52525F4D 
 8316      454D5F49 
 8316      4E56414C 
 8316      49445F50 
 8317              	.LASF19:
 8318 0b1b 4350555F 		.ascii	"CPU_TS32\000"
 8318      54533332 
 8318      00
 8319              	.LASF247:
 8320 0b24 53757370 		.ascii	"SuspendCtr\000"
 8320      656E6443 
 8320      747200
 8321              	.LASF218:
 8322 0b2f 53746B4C 		.ascii	"StkLimitPtr\000"
 8322      696D6974 
 8322      50747200 
 8323              	.LASF334:
 8324 0b3b 4F535F54 		.ascii	"OS_TaskInitTCB\000"
 8324      61736B49 
 8324      6E697454 
 8324      434200
 8325              	.LASF251:
 8326 0b4a 4379636C 		.ascii	"CyclesDelta\000"
 8326      65734465 
 8326      6C746100 
 8327              	.LASF34:
 8328 0b56 4F535F53 		.ascii	"OS_SEM_CTR\000"
 8328      454D5F43 
 8328      545200
 8329              	.LASF190:
 8330 0b61 4F535F45 		.ascii	"OS_ERR_TMR_STK_SIZE_INVALID\000"
 8330      52525F54 
 8330      4D525F53 
 8330      544B5F53 
 8330      495A455F 
 8331              	.LASF167:
 8332 0b7d 4F535F45 		.ascii	"OS_ERR_TICK_WHEEL_SIZE\000"
 8332      52525F54 
 8332      49434B5F 
 8332      57484545 
 8332      4C5F5349 
 8333              	.LASF220:
 8334 0b94 5469636B 		.ascii	"TickNextPtr\000"
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 203


 8334      4E657874 
 8334      50747200 
 8335              	.LASF144:
 8336 0ba0 4F535F45 		.ascii	"OS_ERR_TASK_NOT_EXIST\000"
 8336      52525F54 
 8336      41534B5F 
 8336      4E4F545F 
 8336      45584953 
 8337              	.LASF351:
 8338 0bb6 4F534366 		.ascii	"OSCfg_StkSizeMin\000"
 8338      675F5374 
 8338      6B53697A 
 8338      654D696E 
 8338      00
 8339              	.LASF345:
 8340 0bc7 4F535363 		.ascii	"OSSchedRoundRobinDfltTimeQuanta\000"
 8340      68656452 
 8340      6F756E64 
 8340      526F6269 
 8340      6E44666C 
 8341              	.LASF141:
 8342 0be7 4F535F45 		.ascii	"OS_ERR_TASK_INVALID\000"
 8342      52525F54 
 8342      41534B5F 
 8342      494E5641 
 8342      4C494400 
 8343              	.LASF188:
 8344 0bfb 4F535F45 		.ascii	"OS_ERR_TMR_PRIO_INVALID\000"
 8344      52525F54 
 8344      4D525F50 
 8344      52494F5F 
 8344      494E5641 
 8345              	.LASF307:
 8346 0c13 705F7473 		.ascii	"p_ts\000"
 8346      00
 8347              	.LASF156:
 8348 0c18 4F535F45 		.ascii	"OS_ERR_TASK_SUSPEND_PRIO\000"
 8348      52525F54 
 8348      41534B5F 
 8348      53555350 
 8348      454E445F 
 8349              	.LASF269:
 8350 0c31 5264794F 		.ascii	"RdyObjPtr\000"
 8350      626A5074 
 8350      7200
 8351              	.LASF61:
 8352 0c3b 4F535F45 		.ascii	"OS_ERR_INT_Q_STK_SIZE_INVALID\000"
 8352      52525F49 
 8352      4E545F51 
 8352      5F53544B 
 8352      5F53495A 
 8353              	.LASF160:
 8354 0c59 4F535F45 		.ascii	"OS_ERR_TLS_ISR\000"
 8354      52525F54 
 8354      4C535F49 
 8354      535200
 8355              	.LASF332:
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 204


 8356 0c68 705F7463 		.ascii	"p_tcb_prev\000"
 8356      625F7072 
 8356      657600
 8357              	.LASF140:
 8358 0c73 4F535F45 		.ascii	"OS_ERR_TASK_DEL_ISR\000"
 8358      52525F54 
 8358      41534B5F 
 8358      44454C5F 
 8358      49535200 
 8359              	.LASF255:
 8360 0c87 53656D50 		.ascii	"SemPendTime\000"
 8360      656E6454 
 8360      696D6500 
 8361              	.LASF107:
 8362 0c93 4F535F45 		.ascii	"OS_ERR_PTR_INVALID\000"
 8362      52525F50 
 8362      54525F49 
 8362      4E56414C 
 8362      494400
 8363              	.LASF129:
 8364 0ca6 4F535F45 		.ascii	"OS_ERR_STATE_INVALID\000"
 8364      52525F53 
 8364      54415445 
 8364      5F494E56 
 8364      414C4944 
 8365              	.LASF201:
 8366 0cbb 4E657874 		.ascii	"NextPtr\000"
 8366      50747200 
 8367              	.LASF91:
 8368 0cc3 4F535F45 		.ascii	"OS_ERR_OS_NOT_RUNNING\000"
 8368      52525F4F 
 8368      535F4E4F 
 8368      545F5255 
 8368      4E4E494E 
 8369              	.LASF279:
 8370 0cd9 54797065 		.ascii	"Type\000"
 8370      00
 8371              	.LASF342:
 8372 0cde 4F53496E 		.ascii	"OSIntNestingCtr\000"
 8372      744E6573 
 8372      74696E67 
 8372      43747200 
 8373              	.LASF176:
 8374 0cee 4F535F45 		.ascii	"OS_ERR_TIME_SET_ISR\000"
 8374      52525F54 
 8374      494D455F 
 8374      5345545F 
 8374      49535200 
 8375              	.LASF115:
 8376 0d02 4F535F45 		.ascii	"OS_ERR_ROUND_ROBIN_1\000"
 8376      52525F52 
 8376      4F554E44 
 8376      5F524F42 
 8376      494E5F31 
 8377              	.LASF72:
 8378 0d17 4F535F45 		.ascii	"OS_ERR_MEM_INVALID_P_BLK\000"
 8378      52525F4D 
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 205


 8378      454D5F49 
 8378      4E56414C 
 8378      49445F50 
 8379              	.LASF69:
 8380 0d30 4F535F45 		.ascii	"OS_ERR_MEM_INVALID_P_ADDR\000"
 8380      52525F4D 
 8380      454D5F49 
 8380      4E56414C 
 8380      49445F50 
 8381              	.LASF272:
 8382 0d4a 52647954 		.ascii	"RdyTS\000"
 8382      5300
 8383              	.LASF294:
 8384 0d50 73746B5F 		.ascii	"stk_size\000"
 8384      73697A65 
 8384      00
 8385              	.LASF65:
 8386 0d59 4F535F45 		.ascii	"OS_ERR_LOCK_NESTING_OVF\000"
 8386      52525F4C 
 8386      4F434B5F 
 8386      4E455354 
 8386      494E475F 
 8387              	.LASF151:
 8388 0d71 4F535F45 		.ascii	"OS_ERR_TASK_STK_CHK_ISR\000"
 8388      52525F54 
 8388      41534B5F 
 8388      53544B5F 
 8388      43484B5F 
 8389              	.LASF340:
 8390 0d89 4F535F54 		.ascii	"OS_TaskSuspend\000"
 8390      61736B53 
 8390      75737065 
 8390      6E6400
 8391              	.LASF8:
 8392 0d98 73686F72 		.ascii	"short int\000"
 8392      7420696E 
 8392      7400
 8393              	.LASF271:
 8394 0da2 5264794D 		.ascii	"RdyMsgSize\000"
 8394      73675369 
 8394      7A6500
 8395              	.LASF77:
 8396 0dad 4F535F45 		.ascii	"OS_ERR_MSG_POOL_EMPTY\000"
 8396      52525F4D 
 8396      53475F50 
 8396      4F4F4C5F 
 8396      454D5054 
 8397              	.LASF319:
 8398 0dc3 4F535461 		.ascii	"OSTaskSemPendAbort\000"
 8398      736B5365 
 8398      6D50656E 
 8398      6441626F 
 8398      727400
 8399              	.LASF311:
 8400 0dd6 4F535461 		.ascii	"OSTaskQPost\000"
 8400      736B5150 
 8400      6F737400 
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 206


 8401              	.LASF297:
 8402 0de2 705F6578 		.ascii	"p_ext\000"
 8402      7400
 8403              	.LASF122:
 8404 0de8 4F535F45 		.ascii	"OS_ERR_SCHED_UNLOCK_ISR\000"
 8404      52525F53 
 8404      43484544 
 8404      5F554E4C 
 8404      4F434B5F 
 8405              	.LASF256:
 8406 0e00 53656D50 		.ascii	"SemPendTimeMax\000"
 8406      656E6454 
 8406      696D654D 
 8406      617800
 8407              	.LASF329:
 8408 0e0f 4F535F54 		.ascii	"OS_TaskDbgListAdd\000"
 8408      61736B44 
 8408      62674C69 
 8408      73744164 
 8408      6400
 8409              	.LASF254:
 8410 0e21 4379636C 		.ascii	"CyclesTotalPrev\000"
 8410      6573546F 
 8410      74616C50 
 8410      72657600 
 8411              	.LASF165:
 8412 0e31 4F535F45 		.ascii	"OS_ERR_TICK_STK_INVALID\000"
 8412      52525F54 
 8412      49434B5F 
 8412      53544B5F 
 8412      494E5641 
 8413              	.LASF78:
 8414 0e49 4F535F45 		.ascii	"OS_ERR_MSG_POOL_NULL_PTR\000"
 8414      52525F4D 
 8414      53475F50 
 8414      4F4F4C5F 
 8414      4E554C4C 
 8415              	.LASF27:
 8416 0e62 4F535F4E 		.ascii	"OS_NESTING_CTR\000"
 8416      45535449 
 8416      4E475F43 
 8416      545200
 8417              	.LASF253:
 8418 0e71 4379636C 		.ascii	"CyclesTotal\000"
 8418      6573546F 
 8418      74616C00 
 8419              	.LASF277:
 8420 0e7d 4F535F50 		.ascii	"OS_PEND_OBJ\000"
 8420      454E445F 
 8420      4F424A00 
 8421              	.LASF149:
 8422 0e89 4F535F45 		.ascii	"OS_ERR_TASK_RESUME_SELF\000"
 8422      52525F54 
 8422      41534B5F 
 8422      52455355 
 8422      4D455F53 
 8423              	.LASF249:
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 207


 8424 0ea1 43505555 		.ascii	"CPUUsageMax\000"
 8424      73616765 
 8424      4D617800 
 8425              	.LASF280:
 8426 0ead 50656E64 		.ascii	"PendList\000"
 8426      4C697374 
 8426      00
 8427              	.LASF89:
 8428 0eb6 4F535F45 		.ascii	"OS_ERR_OBJ_TYPE\000"
 8428      52525F4F 
 8428      424A5F54 
 8428      59504500 
 8429              	.LASF227:
 8430 0ec6 50656E64 		.ascii	"PendDataTblPtr\000"
 8430      44617461 
 8430      54626C50 
 8430      747200
 8431              	.LASF330:
 8432 0ed5 4F535F54 		.ascii	"OS_TaskDbgListRemove\000"
 8432      61736B44 
 8432      62674C69 
 8432      73745265 
 8432      6D6F7665 
 8433              	.LASF234:
 8434 0eea 53656D43 		.ascii	"SemCtr\000"
 8434      747200
 8435              	.LASF208:
 8436 0ef1 496E5074 		.ascii	"InPtr\000"
 8436      7200
 8437              	.LASF282:
 8438 0ef7 7072696F 		.ascii	"prio_new\000"
 8438      5F6E6577 
 8438      00
 8439              	.LASF237:
 8440 0f00 5469636B 		.ascii	"TickRemain\000"
 8440      52656D61 
 8440      696E00
 8441              	.LASF275:
 8442 0f0b 48656164 		.ascii	"HeadPtr\000"
 8442      50747200 
 8443              	.LASF96:
 8444 0f13 4F535F45 		.ascii	"OS_ERR_PEND_ABORT_NONE\000"
 8444      52525F50 
 8444      454E445F 
 8444      41424F52 
 8444      545F4E4F 
 8445              	.LASF333:
 8446 0f2a 4F535F54 		.ascii	"OS_TaskInit\000"
 8446      61736B49 
 8446      6E697400 
 8447              	.LASF10:
 8448 0f36 756E7369 		.ascii	"unsigned int\000"
 8448      676E6564 
 8448      20696E74 
 8448      00
 8449              	.LASF203:
 8450 0f43 4D736753 		.ascii	"MsgSize\000"
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 208


 8450      697A6500 
 8451              	.LASF80:
 8452 0f4b 4F535F45 		.ascii	"OS_ERR_MUTEX_OWNER\000"
 8452      52525F4D 
 8452      55544558 
 8452      5F4F574E 
 8452      455200
 8453              	.LASF264:
 8454 0f5e 46697273 		.ascii	"FirstPtr\000"
 8454      74507472 
 8454      00
 8455              	.LASF128:
 8456 0f67 4F535F45 		.ascii	"OS_ERR_STAT_STK_SIZE_INVALID\000"
 8456      52525F53 
 8456      5441545F 
 8456      53544B5F 
 8456      53495A45 
 8457              	.LASF50:
 8458 0f84 4F535F45 		.ascii	"OS_ERR_FLAG_NOT_RDY\000"
 8458      52525F46 
 8458      4C41475F 
 8458      4E4F545F 
 8458      52445900 
 8459              	.LASF301:
 8460 0f98 4F535461 		.ascii	"OSTaskDel\000"
 8460      736B4465 
 8460      6C00
 8461              	.LASF322:
 8462 0fa2 4F535461 		.ascii	"OSTaskStkChk\000"
 8462      736B5374 
 8462      6B43686B 
 8462      00
 8463              	.LASF290:
 8464 0faf 705F6172 		.ascii	"p_arg\000"
 8464      6700
 8465              	.LASF217:
 8466 0fb5 45787450 		.ascii	"ExtPtr\000"
 8466      747200
 8467              	.LASF353:
 8468 0fbc 433A5C4D 		.ascii	"C:\\Micrium\\Software\\uCOS-III\\Source\\os_task.c\000"
 8468      69637269 
 8468      756D5C53 
 8468      6F667477 
 8468      6172655C 
 8469              	.LASF95:
 8470 0fea 4F535F45 		.ascii	"OS_ERR_PEND_ABORT_ISR\000"
 8470      52525F50 
 8470      454E445F 
 8470      41424F52 
 8470      545F4953 
 8471              	.LASF15:
 8472 1000 4350555F 		.ascii	"CPU_ADDR\000"
 8472      41444452 
 8472      00
 8473              	.LASF103:
 8474 1009 4F535F45 		.ascii	"OS_ERR_POST_ISR\000"
 8474      52525F50 
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 209


 8474      4F53545F 
 8474      49535200 
 8475              	.LASF168:
 8476 1019 4F535F45 		.ascii	"OS_ERR_TIME_DLY_ISR\000"
 8476      52525F54 
 8476      494D455F 
 8476      444C595F 
 8476      49535200 
 8477              	.LASF133:
 8478 102d 4F535F45 		.ascii	"OS_ERR_STK_LIMIT_INVALID\000"
 8478      52525F53 
 8478      544B5F4C 
 8478      494D4954 
 8478      5F494E56 
 8479              	.LASF318:
 8480 1046 4F535461 		.ascii	"OSTaskSemPend\000"
 8480      736B5365 
 8480      6D50656E 
 8480      6400
 8481              	.LASF1:
 8482 1054 4350555F 		.ascii	"CPU_BOOLEAN\000"
 8482      424F4F4C 
 8482      45414E00 
 8483              	.LASF337:
 8484 1060 4F535F54 		.ascii	"OS_TaskResume\000"
 8484      61736B52 
 8484      6573756D 
 8484      6500
 8485              	.LASF310:
 8486 106e 4F535461 		.ascii	"OSTaskQPendAbort\000"
 8486      736B5150 
 8486      656E6441 
 8486      626F7274 
 8486      00
 8487              	.LASF23:
 8488 107f 4F535F43 		.ascii	"OS_CYCLES\000"
 8488      59434C45 
 8488      5300
 8489              	.LASF214:
 8490 1089 4F535F54 		.ascii	"OS_TCB\000"
 8490      434200
 8491              	.LASF289:
 8492 1090 705F7461 		.ascii	"p_task\000"
 8492      736B00
 8493              	.LASF327:
 8494 1097 4F535461 		.ascii	"OSTaskSuspend\000"
 8494      736B5375 
 8494      7370656E 
 8494      6400
 8495              	.LASF132:
 8496 10a5 4F535F45 		.ascii	"OS_ERR_STK_SIZE_INVALID\000"
 8496      52525F53 
 8496      544B5F53 
 8496      495A455F 
 8496      494E5641 
 8497              	.LASF292:
 8498 10bd 705F7374 		.ascii	"p_stk_base\000"
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 210


 8498      6B5F6261 
 8498      736500
 8499              	.LASF191:
 8500 10c8 4F535F45 		.ascii	"OS_ERR_TMR_STOPPED\000"
 8500      52525F54 
 8500      4D525F53 
 8500      544F5050 
 8500      454400
 8501              	.LASF3:
 8502 10db 756E7369 		.ascii	"unsigned char\000"
 8502      676E6564 
 8502      20636861 
 8502      7200
 8503              	.LASF146:
 8504 10e9 4F535F45 		.ascii	"OS_ERR_TASK_OPT\000"
 8504      52525F54 
 8504      41534B5F 
 8504      4F505400 
 8505              	.LASF344:
 8506 10f9 4F535363 		.ascii	"OSSchedLockNestingCtr\000"
 8506      6865644C 
 8506      6F636B4E 
 8506      65737469 
 8506      6E674374 
 8507              	.LASF178:
 8508 110f 4F535F45 		.ascii	"OS_ERR_TIMEOUT\000"
 8508      52525F54 
 8508      494D454F 
 8508      555400
 8509              	.LASF35:
 8510 111e 4F535F53 		.ascii	"OS_STATE\000"
 8510      54415445 
 8510      00
 8511              	.LASF305:
 8512 1127 74696D65 		.ascii	"timeout\000"
 8512      6F757400 
 8513              	.LASF30:
 8514 112f 4F535F4F 		.ascii	"OS_OPT\000"
 8514      505400
 8515              	.LASF213:
 8516 1136 4F535F54 		.ascii	"OS_TASK_PTR\000"
 8516      41534B5F 
 8516      50545200 
 8517              	.LASF67:
 8518 1142 4F535F45 		.ascii	"OS_ERR_MEM_CREATE_ISR\000"
 8518      52525F4D 
 8518      454D5F43 
 8518      52454154 
 8518      455F4953 
 8519              	.LASF130:
 8520 1158 4F535F45 		.ascii	"OS_ERR_STATUS_INVALID\000"
 8520      52525F53 
 8520      54415455 
 8520      535F494E 
 8520      56414C49 
 8521              	.LASF196:
 8522 116e 4F535F45 		.ascii	"OS_ERR_Y\000"
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 211


 8522      52525F59 
 8522      00
 8523              	.LASF99:
 8524 1177 4F535F45 		.ascii	"OS_ERR_PEND_ISR\000"
 8524      52525F50 
 8524      454E445F 
 8524      49535200 
 8525              	.LASF198:
 8526 1187 4F535F45 		.ascii	"OS_ERR_Z\000"
 8526      52525F5A 
 8526      00
 8527              	.LASF222:
 8528 1190 5469636B 		.ascii	"TickSpokePtr\000"
 8528      53706F6B 
 8528      65507472 
 8528      00
 8529              	.LASF261:
 8530 119d 4462674E 		.ascii	"DbgNamePtr\000"
 8530      616D6550 
 8530      747200
 8531              	.LASF209:
 8532 11a8 4F757450 		.ascii	"OutPtr\000"
 8532      747200
 8533              	.LASF226:
 8534 11af 5461736B 		.ascii	"TaskEntryArg\000"
 8534      456E7472 
 8534      79417267 
 8534      00
 8535              	.LASF109:
 8536 11bc 4F535F45 		.ascii	"OS_ERR_Q_FULL\000"
 8536      52525F51 
 8536      5F46554C 
 8536      4C00
 8537              	.LASF286:
 8538 11ca 4F535461 		.ascii	"OSTaskChangePrio\000"
 8538      736B4368 
 8538      616E6765 
 8538      5072696F 
 8538      00
 8539              	.LASF60:
 8540 11db 4F535F45 		.ascii	"OS_ERR_INT_Q_STK_INVALID\000"
 8540      52525F49 
 8540      4E545F51 
 8540      5F53544B 
 8540      5F494E56 
 8541              	.LASF173:
 8542 11f4 4F535F45 		.ascii	"OS_ERR_TIME_INVALID_SECONDS\000"
 8542      52525F54 
 8542      494D455F 
 8542      494E5641 
 8542      4C49445F 
 8543              	.LASF137:
 8544 1210 4F535F45 		.ascii	"OS_ERR_TASK_DEL\000"
 8544      52525F54 
 8544      41534B5F 
 8544      44454C00 
 8545              	.LASF273:
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 212


 8546 1220 4F535F50 		.ascii	"OS_PEND_LIST\000"
 8546      454E445F 
 8546      4C495354 
 8546      00
 8547              	.LASF312:
 8548 122d 6D73675F 		.ascii	"msg_size\000"
 8548      73697A65 
 8548      00
 8549              	.LASF5:
 8550 1236 7369676E 		.ascii	"signed char\000"
 8550      65642063 
 8550      68617200 
 8551              	.LASF204:
 8552 1242 4D736754 		.ascii	"MsgTS\000"
 8552      5300
 8553              	.LASF336:
 8554 1248 4F535F54 		.ascii	"OS_TaskQPost\000"
 8554      61736B51 
 8554      506F7374 
 8554      00
 8555              	.LASF48:
 8556 1255 4F535F45 		.ascii	"OS_ERR_FATAL_RETURN\000"
 8556      52525F46 
 8556      4154414C 
 8556      5F524554 
 8556      55524E00 
 8557              	.LASF7:
 8558 1269 73686F72 		.ascii	"short unsigned int\000"
 8558      7420756E 
 8558      7369676E 
 8558      65642069 
 8558      6E7400
 8559              	.LASF24:
 8560 127c 4F535F46 		.ascii	"OS_FLAGS\000"
 8560      4C414753 
 8560      00
 8561              	.LASF339:
 8562 1285 4F535F54 		.ascii	"OS_TaskSemPost\000"
 8562      61736B53 
 8562      656D506F 
 8562      737400
 8563              	.LASF202:
 8564 1294 4D736750 		.ascii	"MsgPtr\000"
 8564      747200
 8565              	.LASF161:
 8566 129b 4F535F45 		.ascii	"OS_ERR_TLS_NO_MORE_AVAIL\000"
 8566      52525F54 
 8566      4C535F4E 
 8566      4F5F4D4F 
 8566      52455F41 
 8567              	.LASF38:
 8568 12b4 4F535F45 		.ascii	"OS_ERR_NONE\000"
 8568      52525F4E 
 8568      4F4E4500 
 8569              	.LASF302:
 8570 12c0 656E7472 		.ascii	"entries\000"
 8570      69657300 
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 213


 8571              	.LASF266:
 8572 12c8 6F735F70 		.ascii	"os_pend_data\000"
 8572      656E645F 
 8572      64617461 
 8572      00
 8573              	.LASF33:
 8574 12d5 4F535F52 		.ascii	"OS_REG_ID\000"
 8574      45475F49 
 8574      4400
 8575              	.LASF120:
 8576 12df 4F535F45 		.ascii	"OS_ERR_SCHED_LOCKED\000"
 8576      52525F53 
 8576      43484544 
 8576      5F4C4F43 
 8576      4B454400 
 8577              	.LASF52:
 8578 12f3 4F535F45 		.ascii	"OS_ERR_FLUSH_ISR\000"
 8578      52525F46 
 8578      4C555348 
 8578      5F495352 
 8578      00
 8579              	.LASF231:
 8580 1304 5072696F 		.ascii	"Prio\000"
 8580      00
 8581              	.LASF295:
 8582 1309 715F7369 		.ascii	"q_size\000"
 8582      7A6500
 8583              	.LASF14:
 8584 1310 646F7562 		.ascii	"double\000"
 8584      6C6500
 8585              	.LASF94:
 8586 1317 4F535F45 		.ascii	"OS_ERR_PEND_ABORT\000"
 8586      52525F50 
 8586      454E445F 
 8586      41424F52 
 8586      5400
 8587              	.LASF248:
 8588 1329 43505555 		.ascii	"CPUUsage\000"
 8588      73616765 
 8588      00
 8589              	.LASF121:
 8590 1332 4F535F45 		.ascii	"OS_ERR_SCHED_NOT_LOCKED\000"
 8590      52525F53 
 8590      43484544 
 8590      5F4E4F54 
 8590      5F4C4F43 
 8591              	.LASF105:
 8592 134a 4F535F45 		.ascii	"OS_ERR_PRIO\000"
 8592      52525F50 
 8592      52494F00 
 8593              	.LASF98:
 8594 1356 4F535F45 		.ascii	"OS_ERR_PEND_DEL\000"
 8594      52525F50 
 8594      454E445F 
 8594      44454C00 
 8595              	.LASF268:
 8596 1366 50656E64 		.ascii	"PendObjPtr\000"
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 214


 8596      4F626A50 
 8596      747200
 8597              	.LASF354:
 8598 1371 433A5C55 		.ascii	"C:\\Users\\daniel01\\Desktop\\CY8CKIT-050_uCOS-III\\"
 8598      73657273 
 8598      5C64616E 
 8598      69656C30 
 8598      315C4465 
 8599 13a0 43593843 		.ascii	"CY8CKIT-050_uCOS-III\\Micrium\\Software\\EvalBoards"
 8599      4B49542D 
 8599      3035305F 
 8599      75434F53 
 8599      2D494949 
 8600 13d0 5C437970 		.ascii	"\\Cypress\\CY8CKIT-050\\PSoC\\uCOS-III-Probe\\uCOS-"
 8600      72657373 
 8600      5C435938 
 8600      434B4954 
 8600      2D303530 
 8601 13fe 4949492D 		.ascii	"III-Probe.cydsn\000"
 8601      50726F62 
 8601      652E6379 
 8601      64736E00 
 8602              	.LASF212:
 8603 140e 4E627245 		.ascii	"NbrEntriesMax\000"
 8603      6E747269 
 8603      65734D61 
 8603      7800
 8604              	.LASF347:
 8605 141c 4F535461 		.ascii	"OSTaskDbgListPtr\000"
 8605      736B4462 
 8605      674C6973 
 8605      74507472 
 8605      00
 8606              	.LASF274:
 8607 142d 6F735F70 		.ascii	"os_pend_list\000"
 8607      656E645F 
 8607      6C697374 
 8607      00
 8608              	.LASF75:
 8609 143a 4F535F45 		.ascii	"OS_ERR_MEM_INVALID_SIZE\000"
 8609      52525F4D 
 8609      454D5F49 
 8609      4E56414C 
 8609      49445F53 
 8610              	.LASF152:
 8611 1452 4F535F45 		.ascii	"OS_ERR_TASK_SUSPENDED\000"
 8611      52525F54 
 8611      41534B5F 
 8611      53555350 
 8611      454E4445 
 8612              	.LASF124:
 8613 1468 4F535F45 		.ascii	"OS_ERR_SET_ISR\000"
 8613      52525F53 
 8613      45545F49 
 8613      535200
 8614              	.LASF243:
 8615 1477 52656754 		.ascii	"RegTbl\000"
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 215


 8615      626C00
 8616              	.LASF308:
 8617 147e 705F6D73 		.ascii	"p_msg_q\000"
 8617      675F7100 
 8618              	.LASF123:
 8619 1486 4F535F45 		.ascii	"OS_ERR_SEM_OVF\000"
 8619      52525F53 
 8619      454D5F4F 
 8619      564600
 8620              	.LASF138:
 8621 1495 4F535F45 		.ascii	"OS_ERR_TASK_DEL_IDLE\000"
 8621      52525F54 
 8621      41534B5F 
 8621      44454C5F 
 8621      49444C45 
 8622              	.LASF170:
 8623 14aa 4F535F45 		.ascii	"OS_ERR_TIME_GET_ISR\000"
 8623      52525F54 
 8623      494D455F 
 8623      4745545F 
 8623      49535200 
 8624              	.LASF238:
 8625 14be 54696D65 		.ascii	"TimeQuanta\000"
 8625      5175616E 
 8625      746100
 8626              	.LASF169:
 8627 14c9 4F535F45 		.ascii	"OS_ERR_TIME_DLY_RESUME_ISR\000"
 8627      52525F54 
 8627      494D455F 
 8627      444C595F 
 8627      52455355 
 8628              	.LASF164:
 8629 14e4 4F535F45 		.ascii	"OS_ERR_TICK_PRIO_INVALID\000"
 8629      52525F54 
 8629      49434B5F 
 8629      5052494F 
 8629      5F494E56 
 8630              	.LASF328:
 8631 14fd 4F535461 		.ascii	"OSTaskTimeQuantaSet\000"
 8631      736B5469 
 8631      6D655175 
 8631      616E7461 
 8631      53657400 
 8632              	.LASF104:
 8633 1511 4F535F45 		.ascii	"OS_ERR_PRIO_EXIST\000"
 8633      52525F50 
 8633      52494F5F 
 8633      45584953 
 8633      5400
 8634              	.LASF207:
 8635 1523 6F735F6D 		.ascii	"os_msg_q\000"
 8635      73675F71 
 8635      00
 8636              	.LASF76:
 8637 152c 4F535F45 		.ascii	"OS_ERR_MEM_NO_FREE_BLKS\000"
 8637      52525F4D 
 8637      454D5F4E 
ARM GAS  C:\Users\daniel01\AppData\Local\Temp\ccb5Ykxv.s 			page 216


 8637      4F5F4652 
 8637      45455F42 
 8638              	.LASF16:
 8639 1544 4350555F 		.ascii	"CPU_STK\000"
 8639      53544B00 
 8640              		.ident	"GCC: (Sourcery G++ Lite 2010q1-188) 4.4.1"
